RootNode(len children=18,parent=0,current_idx=0)

Registered Datatypes: 
int, float, double, char, short, long, unsigned, signed, void, bool, size_t, ssize_t, 
*, MUJOCO_MJMODEL_H_, mjPI, mjMAXVAL, mjMINMU, mjMINIMP, mjMAXIMP, mjMAXCONPAIR, 
mjMAXTREEDEPTH, mjNEQDATA, mjNDYN, mjNGAIN, mjNBIAS, mjNFLUID, mjNREF, mjNIMP, mjNSOLVER, 
mjNISLAND, mjtDisableBit, mjtEnableBit, mjtJoint, mjtGeom, mjtCamLight, mjtTexture, 
mjtIntegrator, mjtCone, mjtJacobian, mjtSolver, mjtEq, mjtWrap, mjtTrn, mjtDyn, mjtGain, 
mjtBias, mjtObj, mjtConstraint, mjtConstraintState, mjtSensor, mjtStage, mjtDataType, 
mjtSameFrame, mjtLRMode, mjtFlexSelf, mjLROpt, mjVFS, mjOption, mjVisual, mjStatistic, 
mjModel, 

	SingleCommentNode(parent=0,current_idx=1)// Copyright 2021 DeepMind Technologies Limited
	SingleCommentNode(parent=0,current_idx=2)//
	SingleCommentNode(parent=0,current_idx=3)// Licensed under the Apache License ,  Version 2.0 (the "License") ; 
	SingleCommentNode(parent=0,current_idx=4)// you may not use this file except in compliance with the License.
	SingleCommentNode(parent=0,current_idx=5)// You may obtain a copy of the License at
	SingleCommentNode(parent=0,current_idx=6)//
	SingleCommentNode(parent=0,current_idx=7)//     http://www.apache.org/licenses/LICENSE-2.0
	SingleCommentNode(parent=0,current_idx=8)//
	SingleCommentNode(parent=0,current_idx=9)// Unless required by applicable law or agreed to in writing ,  software
	SingleCommentNode(parent=0,current_idx=10)// distributed under the License is distributed on an "AS IS" BASIS , 
	SingleCommentNode(parent=0,current_idx=11)// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND ,  either express or implied.
	SingleCommentNode(parent=0,current_idx=12)// See the License for the specific language governing permissions and
	SingleCommentNode(parent=0,current_idx=13)// limitations under the License.
	WhitespaceNode(parent=0,n_lines=1,current_idx=14)
	MacroIfNDefNode(parent=0,current_idx=15)#ifndef MUJOCO_MJMODEL_H_
		MacroDefineNode(parent=15,current_idx=16)#define MUJOCO_MJMODEL_H_
		WhitespaceNode(parent=15,n_lines=1,current_idx=17)
		IncludeNode(parent=15,current_idx=18)#include <stddef.h>
		IncludeNode(parent=15,current_idx=19)#include <stdint.h>
		WhitespaceNode(parent=15,n_lines=2,current_idx=20) 
		IncludeNode(parent=15,current_idx=21)#include <mujoco/mjtnum.h>
		WhitespaceNode(parent=15,n_lines=1,current_idx=22)
		SingleCommentNode(parent=15,current_idx=23)// global constants
		MacroDefineNode(parent=15,current_idx=24)#define mjPI 3.14159265358979323846
		MacroDefineNode(parent=15,current_idx=25)#define mjMAXVAL 1E+10
		SingleCommentNode(parent=15,current_idx=26)// maximum value in qpos ,  qvel ,  qacc
		MacroDefineNode(parent=15,current_idx=27)#define mjMINMU 1E-5
		SingleCommentNode(parent=15,current_idx=28)// minimum friction coefficient
		MacroDefineNode(parent=15,current_idx=29)#define mjMINIMP 0.0001
		SingleCommentNode(parent=15,current_idx=30)// minimum constraint impedance
		MacroDefineNode(parent=15,current_idx=31)#define mjMAXIMP 0.9999
		SingleCommentNode(parent=15,current_idx=32)// maximum constraint impedance
		MacroDefineNode(parent=15,current_idx=33)#define mjMAXCONPAIR 50
		SingleCommentNode(parent=15,current_idx=34)// maximum number of contacts per geom pair
		MacroDefineNode(parent=15,current_idx=35)#define mjMAXTREEDEPTH 50
		SingleCommentNode(parent=15,current_idx=36)// maximum bounding volume hierarchy depth
		WhitespaceNode(parent=15,n_lines=2,current_idx=37) 
		SingleCommentNode(parent=15,current_idx=38) ---------------------------------- sizes ---------------------------------------------------------
		WhitespaceNode(parent=15,n_lines=1,current_idx=39)
		MacroDefineNode(parent=15,current_idx=40)#define mjNEQDATA 11
		SingleCommentNode(parent=15,current_idx=41)// number of eq_data fields
		MacroDefineNode(parent=15,current_idx=42)#define mjNDYN 10
		SingleCommentNode(parent=15,current_idx=43)// number of actuator dynamics parameters
		MacroDefineNode(parent=15,current_idx=44)#define mjNGAIN 10
		SingleCommentNode(parent=15,current_idx=45)// number of actuator gain parameters
		MacroDefineNode(parent=15,current_idx=46)#define mjNBIAS 10
		SingleCommentNode(parent=15,current_idx=47)// number of actuator bias parameters
		MacroDefineNode(parent=15,current_idx=48)#define mjNFLUID 12
		SingleCommentNode(parent=15,current_idx=49)// number of fluid interaction parameters
		MacroDefineNode(parent=15,current_idx=50)#define mjNREF 2
		SingleCommentNode(parent=15,current_idx=51)// number of solver reference parameters
		MacroDefineNode(parent=15,current_idx=52)#define mjNIMP 5
		SingleCommentNode(parent=15,current_idx=53)// number of solver impedance parameters
		MacroDefineNode(parent=15,current_idx=54)#define mjNSOLVER 200
		SingleCommentNode(parent=15,current_idx=55)// size of one mjData.solver array
		MacroDefineNode(parent=15,current_idx=56)#define mjNISLAND 20
		SingleCommentNode(parent=15,current_idx=57)// number of mjData.solver arrays
		WhitespaceNode(parent=15,n_lines=1,current_idx=58)
		SingleCommentNode(parent=15,current_idx=59) ---------------------------------- enum types (mjt) ----------------------------------------------
		WhitespaceNode(parent=15,n_lines=1,current_idx=60)
		TypedefNode(parent=15,current_idx=61,typename=mjtDisableBit)typedef
			EnumNode(name=mjtDisableBit_,parent=61,current_idx=62)enum mjtDisableBit_
				ScopeNode(parent=62,current_idx=63,scope_type=ENUM){
					WhitespaceNode(parent=63,n_lines=1,current_idx=64)   
					SingleCommentNode(parent=63,current_idx=65)// disable default feature bitflags
					WhitespaceNode(parent=63,n_lines=1,current_idx=66) 
					EnumFieldNode(field_name=mjDSBL_CONSTRAINT,parent=63,current_idx=67)mjDSBL_CONSTRAINT = 1<<0 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=68)    
					SingleCommentNode(parent=63,current_idx=69)// entire constraint solver
					WhitespaceNode(parent=63,n_lines=1,current_idx=70) 
					EnumFieldNode(field_name=mjDSBL_EQUALITY,parent=63,current_idx=71)mjDSBL_EQUALITY = 1<<1 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=72)    
					SingleCommentNode(parent=63,current_idx=73)// equality constraints
					WhitespaceNode(parent=63,n_lines=1,current_idx=74) 
					EnumFieldNode(field_name=mjDSBL_FRICTIONLOSS,parent=63,current_idx=75)mjDSBL_FRICTIONLOSS = 1<<2 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=76)    
					SingleCommentNode(parent=63,current_idx=77)// joint and tendon frictionloss constraints
					WhitespaceNode(parent=63,n_lines=1,current_idx=78) 
					EnumFieldNode(field_name=mjDSBL_LIMIT,parent=63,current_idx=79)mjDSBL_LIMIT = 1<<3 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=80)    
					SingleCommentNode(parent=63,current_idx=81)// joint and tendon limit constraints
					WhitespaceNode(parent=63,n_lines=1,current_idx=82) 
					EnumFieldNode(field_name=mjDSBL_CONTACT,parent=63,current_idx=83)mjDSBL_CONTACT = 1<<4 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=84)    
					SingleCommentNode(parent=63,current_idx=85)// contact constraints
					WhitespaceNode(parent=63,n_lines=1,current_idx=86) 
					EnumFieldNode(field_name=mjDSBL_PASSIVE,parent=63,current_idx=87)mjDSBL_PASSIVE = 1<<5 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=88)    
					SingleCommentNode(parent=63,current_idx=89)// passive forces
					WhitespaceNode(parent=63,n_lines=1,current_idx=90) 
					EnumFieldNode(field_name=mjDSBL_GRAVITY,parent=63,current_idx=91)mjDSBL_GRAVITY = 1<<6 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=92)    
					SingleCommentNode(parent=63,current_idx=93)// gravitational forces
					WhitespaceNode(parent=63,n_lines=1,current_idx=94) 
					EnumFieldNode(field_name=mjDSBL_CLAMPCTRL,parent=63,current_idx=95)mjDSBL_CLAMPCTRL = 1<<7 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=96)    
					SingleCommentNode(parent=63,current_idx=97)// clamp control to specified range
					WhitespaceNode(parent=63,n_lines=1,current_idx=98) 
					EnumFieldNode(field_name=mjDSBL_WARMSTART,parent=63,current_idx=99)mjDSBL_WARMSTART = 1<<8 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=100)    
					SingleCommentNode(parent=63,current_idx=101)// warmstart constraint solver
					WhitespaceNode(parent=63,n_lines=1,current_idx=102) 
					EnumFieldNode(field_name=mjDSBL_FILTERPARENT,parent=63,current_idx=103)mjDSBL_FILTERPARENT = 1<<9 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=104)    
					SingleCommentNode(parent=63,current_idx=105)// remove collisions with parent body
					WhitespaceNode(parent=63,n_lines=1,current_idx=106) 
					EnumFieldNode(field_name=mjDSBL_ACTUATION,parent=63,current_idx=107)mjDSBL_ACTUATION = 1<<10 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=108)   
					SingleCommentNode(parent=63,current_idx=109)// apply actuation forces
					WhitespaceNode(parent=63,n_lines=1,current_idx=110) 
					EnumFieldNode(field_name=mjDSBL_REFSAFE,parent=63,current_idx=111)mjDSBL_REFSAFE = 1<<11 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=112)   
					SingleCommentNode(parent=63,current_idx=113)// integrator safety: make ref[0]>=2*timestep
					WhitespaceNode(parent=63,n_lines=1,current_idx=114) 
					EnumFieldNode(field_name=mjDSBL_SENSOR,parent=63,current_idx=115)mjDSBL_SENSOR = 1<<12 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=116)   
					SingleCommentNode(parent=63,current_idx=117)// sensors
					WhitespaceNode(parent=63,n_lines=1,current_idx=118) 
					EnumFieldNode(field_name=mjDSBL_MIDPHASE,parent=63,current_idx=119)mjDSBL_MIDPHASE = 1<<13 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=120)   
					SingleCommentNode(parent=63,current_idx=121)// mid-phase collision filtering
					WhitespaceNode(parent=63,n_lines=1,current_idx=122) 
					EnumFieldNode(field_name=mjDSBL_EULERDAMP,parent=63,current_idx=123)mjDSBL_EULERDAMP = 1<<14 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=124)   
					SingleCommentNode(parent=63,current_idx=125)// implicit integration of joint damping in Euler integrator
					WhitespaceNode(parent=63,n_lines=1,current_idx=126) 
					EnumFieldNode(field_name=mjDSBL_AUTORESET,parent=63,current_idx=127)mjDSBL_AUTORESET = 1<<15 ,
					WhitespaceNode(parent=63,n_lines=1,current_idx=128)   
					SingleCommentNode(parent=63,current_idx=129)// automatic reset when numerical issues are detected
					WhitespaceNode(parent=63,n_lines=2,current_idx=130)  
					EnumFieldNode(field_name=mjNDISABLE,parent=63,current_idx=131)mjNDISABLE = 16
					WhitespaceNode(parent=63,n_lines=1,current_idx=132)      
					SingleCommentNode(parent=63,current_idx=133)// number of disable flags
				}
			DeletedNode(parent=15,current_idx=0)mjtDisableBit
		mjtDisableBit ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=135)  
		TypedefNode(parent=15,current_idx=136,typename=mjtEnableBit)typedef
			EnumNode(name=mjtEnableBit_,parent=136,current_idx=137)enum mjtEnableBit_
				ScopeNode(parent=137,current_idx=138,scope_type=ENUM){
					WhitespaceNode(parent=138,n_lines=1,current_idx=139)    
					SingleCommentNode(parent=138,current_idx=140)// enable optional feature bitflags
					WhitespaceNode(parent=138,n_lines=1,current_idx=141) 
					EnumFieldNode(field_name=mjENBL_OVERRIDE,parent=138,current_idx=142)mjENBL_OVERRIDE = 1<<0 ,
					WhitespaceNode(parent=138,n_lines=1,current_idx=143)    
					SingleCommentNode(parent=138,current_idx=144)// override contact parameters
					WhitespaceNode(parent=138,n_lines=1,current_idx=145) 
					EnumFieldNode(field_name=mjENBL_ENERGY,parent=138,current_idx=146)mjENBL_ENERGY = 1<<1 ,
					WhitespaceNode(parent=138,n_lines=1,current_idx=147)    
					SingleCommentNode(parent=138,current_idx=148)// energy computation
					WhitespaceNode(parent=138,n_lines=1,current_idx=149) 
					EnumFieldNode(field_name=mjENBL_FWDINV,parent=138,current_idx=150)mjENBL_FWDINV = 1<<2 ,
					WhitespaceNode(parent=138,n_lines=1,current_idx=151)    
					SingleCommentNode(parent=138,current_idx=152)// record solver statistics
					WhitespaceNode(parent=138,n_lines=1,current_idx=153) 
					EnumFieldNode(field_name=mjENBL_INVDISCRETE,parent=138,current_idx=154)mjENBL_INVDISCRETE = 1<<3 ,
					WhitespaceNode(parent=138,n_lines=1,current_idx=155)    
					SingleCommentNode(parent=138,current_idx=156)// discrete-time inverse dynamics
					WhitespaceNode(parent=138,n_lines=1,current_idx=157)                                 
					SingleCommentNode(parent=138,current_idx=158)// experimental features:
					WhitespaceNode(parent=138,n_lines=1,current_idx=159) 
					EnumFieldNode(field_name=mjENBL_MULTICCD,parent=138,current_idx=160)mjENBL_MULTICCD = 1<<4 ,
					WhitespaceNode(parent=138,n_lines=1,current_idx=161)    
					SingleCommentNode(parent=138,current_idx=162)// multi-point convex collision detection
					WhitespaceNode(parent=138,n_lines=1,current_idx=163) 
					EnumFieldNode(field_name=mjENBL_ISLAND,parent=138,current_idx=164)mjENBL_ISLAND = 1<<5 ,
					WhitespaceNode(parent=138,n_lines=1,current_idx=165)    
					SingleCommentNode(parent=138,current_idx=166)// constraint island discovery
					WhitespaceNode(parent=138,n_lines=1,current_idx=167) 
					EnumFieldNode(field_name=mjENBL_NATIVECCD,parent=138,current_idx=168)mjENBL_NATIVECCD = 1<<6 ,
					WhitespaceNode(parent=138,n_lines=1,current_idx=169)    
					SingleCommentNode(parent=138,current_idx=170)// native convex collision detection
					WhitespaceNode(parent=138,n_lines=2,current_idx=171)  
					EnumFieldNode(field_name=mjNENABLE,parent=138,current_idx=172)mjNENABLE = 7
					WhitespaceNode(parent=138,n_lines=1,current_idx=173)       
					SingleCommentNode(parent=138,current_idx=174)// number of enable flags
				}
			DeletedNode(parent=15,current_idx=0)mjtEnableBit
		mjtEnableBit ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=176)  
		TypedefNode(parent=15,current_idx=177,typename=mjtJoint)typedef
			EnumNode(name=mjtJoint_,parent=177,current_idx=178)enum mjtJoint_
				ScopeNode(parent=178,current_idx=179,scope_type=ENUM){
					WhitespaceNode(parent=179,n_lines=1,current_idx=180)        
					SingleCommentNode(parent=179,current_idx=181)// type of degree of freedom
					WhitespaceNode(parent=179,n_lines=1,current_idx=182) 
					EnumFieldNode(field_name=mjJNT_FREE,parent=179,current_idx=183)mjJNT_FREE = 0 ,
					WhitespaceNode(parent=179,n_lines=1,current_idx=184)       
					SingleCommentNode(parent=179,current_idx=185)// global position and orientation (quat)       (7)
					WhitespaceNode(parent=179,n_lines=1,current_idx=186) 
					EnumFieldNode(field_name=mjJNT_BALL,parent=179,current_idx=187)mjJNT_BALL ,
					WhitespaceNode(parent=179,n_lines=1,current_idx=188)                    
					SingleCommentNode(parent=179,current_idx=189)// orientation (quat) relative to parent        (4)
					WhitespaceNode(parent=179,n_lines=1,current_idx=190) 
					EnumFieldNode(field_name=mjJNT_SLIDE,parent=179,current_idx=191)mjJNT_SLIDE ,
					WhitespaceNode(parent=179,n_lines=1,current_idx=192)                   
					SingleCommentNode(parent=179,current_idx=193)// sliding distance along body-fixed axis       (1)
					WhitespaceNode(parent=179,n_lines=1,current_idx=194) 
					EnumFieldNode(field_name=mjJNT_HINGE,parent=179,current_idx=195)mjJNT_HINGE
					SingleCommentNode(parent=179,current_idx=196)// rotation angle (rad) around body-fixed axis  (1)
				}
			DeletedNode(parent=15,current_idx=0)mjtJoint
		mjtJoint ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=198)  
		TypedefNode(parent=15,current_idx=199,typename=mjtGeom)typedef
			EnumNode(name=mjtGeom_,parent=199,current_idx=200)enum mjtGeom_
				ScopeNode(parent=200,current_idx=201,scope_type=ENUM){
					WhitespaceNode(parent=201,n_lines=1,current_idx=202)         
					SingleCommentNode(parent=201,current_idx=203)// type of geometric shape
					WhitespaceNode(parent=201,n_lines=1,current_idx=204) 
					SingleCommentNode(parent=201,current_idx=205)// regular geom types
					WhitespaceNode(parent=201,n_lines=1,current_idx=206) 
					EnumFieldNode(field_name=mjGEOM_PLANE,parent=201,current_idx=207)mjGEOM_PLANE = 0 ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=208)       
					SingleCommentNode(parent=201,current_idx=209)// plane
					WhitespaceNode(parent=201,n_lines=1,current_idx=210) 
					EnumFieldNode(field_name=mjGEOM_HFIELD,parent=201,current_idx=211)mjGEOM_HFIELD ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=212)                 
					SingleCommentNode(parent=201,current_idx=213)// height field
					WhitespaceNode(parent=201,n_lines=1,current_idx=214) 
					EnumFieldNode(field_name=mjGEOM_SPHERE,parent=201,current_idx=215)mjGEOM_SPHERE ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=216)                 
					SingleCommentNode(parent=201,current_idx=217)// sphere
					WhitespaceNode(parent=201,n_lines=1,current_idx=218) 
					EnumFieldNode(field_name=mjGEOM_CAPSULE,parent=201,current_idx=219)mjGEOM_CAPSULE ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=220)                
					SingleCommentNode(parent=201,current_idx=221)// capsule
					WhitespaceNode(parent=201,n_lines=1,current_idx=222) 
					EnumFieldNode(field_name=mjGEOM_ELLIPSOID,parent=201,current_idx=223)mjGEOM_ELLIPSOID ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=224)              
					SingleCommentNode(parent=201,current_idx=225)// ellipsoid
					WhitespaceNode(parent=201,n_lines=1,current_idx=226) 
					EnumFieldNode(field_name=mjGEOM_CYLINDER,parent=201,current_idx=227)mjGEOM_CYLINDER ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=228)               
					SingleCommentNode(parent=201,current_idx=229)// cylinder
					WhitespaceNode(parent=201,n_lines=1,current_idx=230) 
					EnumFieldNode(field_name=mjGEOM_BOX,parent=201,current_idx=231)mjGEOM_BOX ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=232)                    
					SingleCommentNode(parent=201,current_idx=233)// box
					WhitespaceNode(parent=201,n_lines=1,current_idx=234) 
					EnumFieldNode(field_name=mjGEOM_MESH,parent=201,current_idx=235)mjGEOM_MESH ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=236)                   
					SingleCommentNode(parent=201,current_idx=237)// mesh
					WhitespaceNode(parent=201,n_lines=1,current_idx=238) 
					EnumFieldNode(field_name=mjGEOM_SDF,parent=201,current_idx=239)mjGEOM_SDF ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=240)                    
					SingleCommentNode(parent=201,current_idx=241)// signed distance field
					WhitespaceNode(parent=201,n_lines=2,current_idx=242)  
					EnumFieldNode(field_name=mjNGEOMTYPES,parent=201,current_idx=243)mjNGEOMTYPES ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=244)                  
					SingleCommentNode(parent=201,current_idx=245)// number of regular geom types
					WhitespaceNode(parent=201,n_lines=2,current_idx=246)  
					SingleCommentNode(parent=201,current_idx=247)// rendering-only geom types: not used in mjModel ,  not counted in mjNGEOMTYPES
					WhitespaceNode(parent=201,n_lines=1,current_idx=248) 
					EnumFieldNode(field_name=mjGEOM_ARROW,parent=201,current_idx=249)mjGEOM_ARROW = 100 ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=250)     
					SingleCommentNode(parent=201,current_idx=251)// arrow
					WhitespaceNode(parent=201,n_lines=1,current_idx=252) 
					EnumFieldNode(field_name=mjGEOM_ARROW1,parent=201,current_idx=253)mjGEOM_ARROW1 ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=254)                 
					SingleCommentNode(parent=201,current_idx=255)// arrow without wedges
					WhitespaceNode(parent=201,n_lines=1,current_idx=256) 
					EnumFieldNode(field_name=mjGEOM_ARROW2,parent=201,current_idx=257)mjGEOM_ARROW2 ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=258)                 
					SingleCommentNode(parent=201,current_idx=259)// arrow in both directions
					WhitespaceNode(parent=201,n_lines=1,current_idx=260) 
					EnumFieldNode(field_name=mjGEOM_LINE,parent=201,current_idx=261)mjGEOM_LINE ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=262)                   
					SingleCommentNode(parent=201,current_idx=263)// line
					WhitespaceNode(parent=201,n_lines=1,current_idx=264) 
					EnumFieldNode(field_name=mjGEOM_LINEBOX,parent=201,current_idx=265)mjGEOM_LINEBOX ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=266)                
					SingleCommentNode(parent=201,current_idx=267)// box with line edges
					WhitespaceNode(parent=201,n_lines=1,current_idx=268) 
					EnumFieldNode(field_name=mjGEOM_FLEX,parent=201,current_idx=269)mjGEOM_FLEX ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=270)                   
					SingleCommentNode(parent=201,current_idx=271)// flex
					WhitespaceNode(parent=201,n_lines=1,current_idx=272) 
					EnumFieldNode(field_name=mjGEOM_SKIN,parent=201,current_idx=273)mjGEOM_SKIN ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=274)                   
					SingleCommentNode(parent=201,current_idx=275)// skin
					WhitespaceNode(parent=201,n_lines=1,current_idx=276) 
					EnumFieldNode(field_name=mjGEOM_LABEL,parent=201,current_idx=277)mjGEOM_LABEL ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=278)                  
					SingleCommentNode(parent=201,current_idx=279)// text label
					WhitespaceNode(parent=201,n_lines=1,current_idx=280) 
					EnumFieldNode(field_name=mjGEOM_TRIANGLE,parent=201,current_idx=281)mjGEOM_TRIANGLE ,
					WhitespaceNode(parent=201,n_lines=1,current_idx=282)               
					SingleCommentNode(parent=201,current_idx=283)// triangle
					WhitespaceNode(parent=201,n_lines=2,current_idx=284)  
					EnumFieldNode(field_name=mjGEOM_NONE,parent=201,current_idx=285)mjGEOM_NONE = 1001
					WhitespaceNode(parent=201,n_lines=1,current_idx=286)    
					SingleCommentNode(parent=201,current_idx=287)// missing geom type
				}
			DeletedNode(parent=15,current_idx=0)mjtGeom
		mjtGeom ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=289)  
		TypedefNode(parent=15,current_idx=290,typename=mjtCamLight)typedef
			EnumNode(name=mjtCamLight_,parent=290,current_idx=291)enum mjtCamLight_
				ScopeNode(parent=291,current_idx=292,scope_type=ENUM){
					WhitespaceNode(parent=292,n_lines=1,current_idx=293)     
					SingleCommentNode(parent=292,current_idx=294)// tracking mode for camera and light
					WhitespaceNode(parent=292,n_lines=1,current_idx=295) 
					EnumFieldNode(field_name=mjCAMLIGHT_FIXED,parent=292,current_idx=296)mjCAMLIGHT_FIXED = 0 ,
					WhitespaceNode(parent=292,n_lines=1,current_idx=297)       
					SingleCommentNode(parent=292,current_idx=298)// pos and rot fixed in body
					WhitespaceNode(parent=292,n_lines=1,current_idx=299) 
					EnumFieldNode(field_name=mjCAMLIGHT_TRACK,parent=292,current_idx=300)mjCAMLIGHT_TRACK ,
					WhitespaceNode(parent=292,n_lines=1,current_idx=301)              
					SingleCommentNode(parent=292,current_idx=302)// pos tracks body ,  rot fixed in global
					WhitespaceNode(parent=292,n_lines=1,current_idx=303) 
					EnumFieldNode(field_name=mjCAMLIGHT_TRACKCOM,parent=292,current_idx=304)mjCAMLIGHT_TRACKCOM ,
					WhitespaceNode(parent=292,n_lines=1,current_idx=305)           
					SingleCommentNode(parent=292,current_idx=306)// pos tracks subtree com ,  rot fixed in body
					WhitespaceNode(parent=292,n_lines=1,current_idx=307) 
					EnumFieldNode(field_name=mjCAMLIGHT_TARGETBODY,parent=292,current_idx=308)mjCAMLIGHT_TARGETBODY ,
					WhitespaceNode(parent=292,n_lines=1,current_idx=309)         
					SingleCommentNode(parent=292,current_idx=310)// pos fixed in body ,  rot tracks target body
					WhitespaceNode(parent=292,n_lines=1,current_idx=311) 
					EnumFieldNode(field_name=mjCAMLIGHT_TARGETBODYCOM,parent=292,current_idx=312)mjCAMLIGHT_TARGETBODYCOM
					SingleCommentNode(parent=292,current_idx=313)// pos fixed in body ,  rot tracks target subtree com
				}
			DeletedNode(parent=15,current_idx=0)mjtCamLight
		mjtCamLight ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=315)  
		TypedefNode(parent=15,current_idx=316,typename=mjtTexture)typedef
			EnumNode(name=mjtTexture_,parent=316,current_idx=317)enum mjtTexture_
				ScopeNode(parent=317,current_idx=318,scope_type=ENUM){
					WhitespaceNode(parent=318,n_lines=1,current_idx=319)      
					SingleCommentNode(parent=318,current_idx=320)// type of texture
					WhitespaceNode(parent=318,n_lines=1,current_idx=321) 
					EnumFieldNode(field_name=mjTEXTURE_2D,parent=318,current_idx=322)mjTEXTURE_2D = 0 ,
					WhitespaceNode(parent=318,n_lines=1,current_idx=323)       
					SingleCommentNode(parent=318,current_idx=324)// 2d texture ,  suitable for planes and hfields
					WhitespaceNode(parent=318,n_lines=1,current_idx=325) 
					EnumFieldNode(field_name=mjTEXTURE_CUBE,parent=318,current_idx=326)mjTEXTURE_CUBE ,
					WhitespaceNode(parent=318,n_lines=1,current_idx=327)                
					SingleCommentNode(parent=318,current_idx=328)// cube texture ,  suitable for all other geom types
					WhitespaceNode(parent=318,n_lines=1,current_idx=329) 
					EnumFieldNode(field_name=mjTEXTURE_SKYBOX,parent=318,current_idx=330)mjTEXTURE_SKYBOX
					SingleCommentNode(parent=318,current_idx=331)// cube texture used as skybox
				}
			DeletedNode(parent=15,current_idx=0)mjtTexture
		mjtTexture ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=333)  
		TypedefNode(parent=15,current_idx=334,typename=mjtIntegrator)typedef
			EnumNode(name=mjtTextureRole_,parent=334,current_idx=335)enum mjtTextureRole_
				ScopeNode(parent=335,current_idx=336,scope_type=ENUM){
					WhitespaceNode(parent=336,n_lines=1,current_idx=337)  
					SingleCommentNode(parent=336,current_idx=338)// role of texture map in rendering
					WhitespaceNode(parent=336,n_lines=1,current_idx=339) 
					EnumFieldNode(field_name=mjTEXROLE_USER,parent=336,current_idx=340)mjTEXROLE_USER = 0 ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=341)       
					SingleCommentNode(parent=336,current_idx=342)// unspecified
					WhitespaceNode(parent=336,n_lines=1,current_idx=343) 
					EnumFieldNode(field_name=mjTEXROLE_RGB,parent=336,current_idx=344)mjTEXROLE_RGB ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=345)                 
					SingleCommentNode(parent=336,current_idx=346)// base color (albedo)
					WhitespaceNode(parent=336,n_lines=1,current_idx=347) 
					EnumFieldNode(field_name=mjTEXROLE_OCCLUSION,parent=336,current_idx=348)mjTEXROLE_OCCLUSION ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=349)           
					SingleCommentNode(parent=336,current_idx=350)// ambient occlusion
					WhitespaceNode(parent=336,n_lines=1,current_idx=351) 
					EnumFieldNode(field_name=mjTEXROLE_ROUGHNESS,parent=336,current_idx=352)mjTEXROLE_ROUGHNESS ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=353)           
					SingleCommentNode(parent=336,current_idx=354)// roughness
					WhitespaceNode(parent=336,n_lines=1,current_idx=355) 
					EnumFieldNode(field_name=mjTEXROLE_METALLIC,parent=336,current_idx=356)mjTEXROLE_METALLIC ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=357)            
					SingleCommentNode(parent=336,current_idx=358)// metallic
					WhitespaceNode(parent=336,n_lines=1,current_idx=359) 
					EnumFieldNode(field_name=mjTEXROLE_NORMAL,parent=336,current_idx=360)mjTEXROLE_NORMAL ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=361)              
					SingleCommentNode(parent=336,current_idx=362)// normal (bump) map
					WhitespaceNode(parent=336,n_lines=1,current_idx=363) 
					EnumFieldNode(field_name=mjTEXROLE_OPACITY,parent=336,current_idx=364)mjTEXROLE_OPACITY ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=365)             
					SingleCommentNode(parent=336,current_idx=366)// transperancy
					WhitespaceNode(parent=336,n_lines=1,current_idx=367) 
					EnumFieldNode(field_name=mjTEXROLE_EMISSIVE,parent=336,current_idx=368)mjTEXROLE_EMISSIVE ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=369)            
					SingleCommentNode(parent=336,current_idx=370)// light emission
					WhitespaceNode(parent=336,n_lines=1,current_idx=371) 
					EnumFieldNode(field_name=mjTEXROLE_RGBA,parent=336,current_idx=372)mjTEXROLE_RGBA ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=373)                
					SingleCommentNode(parent=336,current_idx=374)// base color ,  opacity
					WhitespaceNode(parent=336,n_lines=1,current_idx=375) 
					EnumFieldNode(field_name=mjTEXROLE_ORM,parent=336,current_idx=376)mjTEXROLE_ORM ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=377)                 
					SingleCommentNode(parent=336,current_idx=378)// occlusion ,  roughness ,  metallic
					WhitespaceNode(parent=336,n_lines=1,current_idx=379) 
					EnumFieldNode(field_name=mjNTEXROLE,parent=336,current_idx=380)mjNTEXROLE } mjtTextureRole ; typedef enum mjtIntegrator_ {
					SingleCommentNode(parent=336,current_idx=381)// integrator mode
					WhitespaceNode(parent=336,n_lines=1,current_idx=382) 
					EnumFieldNode(field_name=mjINT_EULER,parent=336,current_idx=383)mjINT_EULER = 0 ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=384)       
					SingleCommentNode(parent=336,current_idx=385)// semi-implicit Euler
					WhitespaceNode(parent=336,n_lines=1,current_idx=386) 
					EnumFieldNode(field_name=mjINT_RK4,parent=336,current_idx=387)mjINT_RK4 ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=388)                     
					SingleCommentNode(parent=336,current_idx=389)// 4th-order Runge Kutta
					WhitespaceNode(parent=336,n_lines=1,current_idx=390) 
					EnumFieldNode(field_name=mjINT_IMPLICIT,parent=336,current_idx=391)mjINT_IMPLICIT ,
					WhitespaceNode(parent=336,n_lines=1,current_idx=392)                
					SingleCommentNode(parent=336,current_idx=393)// implicit in velocity
					WhitespaceNode(parent=336,n_lines=1,current_idx=394) 
					EnumFieldNode(field_name=mjINT_IMPLICITFAST,parent=336,current_idx=395)mjINT_IMPLICITFAST
					SingleCommentNode(parent=336,current_idx=396)// implicit in velocity ,  no rne derivative
				}
			DeletedNode(parent=15,current_idx=0)mjtIntegrator
		mjtIntegrator ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=398)  
		TypedefNode(parent=15,current_idx=399,typename=mjtCone)typedef
			EnumNode(name=mjtCone_,parent=399,current_idx=400)enum mjtCone_
				ScopeNode(parent=400,current_idx=401,scope_type=ENUM){
					WhitespaceNode(parent=401,n_lines=1,current_idx=402)         
					SingleCommentNode(parent=401,current_idx=403)// type of friction cone
					WhitespaceNode(parent=401,n_lines=1,current_idx=404) 
					EnumFieldNode(field_name=mjCONE_PYRAMIDAL,parent=401,current_idx=405)mjCONE_PYRAMIDAL = 0 ,
					WhitespaceNode(parent=401,n_lines=1,current_idx=406)      
					SingleCommentNode(parent=401,current_idx=407)// pyramidal
					WhitespaceNode(parent=401,n_lines=1,current_idx=408) 
					EnumFieldNode(field_name=mjCONE_ELLIPTIC,parent=401,current_idx=409)mjCONE_ELLIPTIC
					SingleCommentNode(parent=401,current_idx=410)// elliptic
				}
			DeletedNode(parent=15,current_idx=0)mjtCone
		mjtCone ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=412)  
		TypedefNode(parent=15,current_idx=413,typename=mjtJacobian)typedef
			EnumNode(name=mjtJacobian_,parent=413,current_idx=414)enum mjtJacobian_
				ScopeNode(parent=414,current_idx=415,scope_type=ENUM){
					WhitespaceNode(parent=415,n_lines=1,current_idx=416)     
					SingleCommentNode(parent=415,current_idx=417)// type of constraint Jacobian
					WhitespaceNode(parent=415,n_lines=1,current_idx=418) 
					EnumFieldNode(field_name=mjJAC_DENSE,parent=415,current_idx=419)mjJAC_DENSE = 0 ,
					WhitespaceNode(parent=415,n_lines=1,current_idx=420)      
					SingleCommentNode(parent=415,current_idx=421)// dense
					WhitespaceNode(parent=415,n_lines=1,current_idx=422) 
					EnumFieldNode(field_name=mjJAC_SPARSE,parent=415,current_idx=423)mjJAC_SPARSE ,
					WhitespaceNode(parent=415,n_lines=1,current_idx=424)                  
					SingleCommentNode(parent=415,current_idx=425)// sparse
					WhitespaceNode(parent=415,n_lines=1,current_idx=426) 
					EnumFieldNode(field_name=mjJAC_AUTO,parent=415,current_idx=427)mjJAC_AUTO
					SingleCommentNode(parent=415,current_idx=428)// dense if nv<60 ,  sparse otherwise
				}
			DeletedNode(parent=15,current_idx=0)mjtJacobian
		mjtJacobian ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=430)  
		TypedefNode(parent=15,current_idx=431,typename=mjtSolver)typedef
			EnumNode(name=mjtSolver_,parent=431,current_idx=432)enum mjtSolver_
				ScopeNode(parent=432,current_idx=433,scope_type=ENUM){
					WhitespaceNode(parent=433,n_lines=1,current_idx=434)       
					SingleCommentNode(parent=433,current_idx=435)// constraint solver algorithm
					WhitespaceNode(parent=433,n_lines=1,current_idx=436) 
					EnumFieldNode(field_name=mjSOL_PGS,parent=433,current_idx=437)mjSOL_PGS = 0 ,
					WhitespaceNode(parent=433,n_lines=1,current_idx=438)      
					SingleCommentNode(parent=433,current_idx=439)// PGS    (dual)
					WhitespaceNode(parent=433,n_lines=1,current_idx=440) 
					EnumFieldNode(field_name=mjSOL_CG,parent=433,current_idx=441)mjSOL_CG ,
					WhitespaceNode(parent=433,n_lines=1,current_idx=442)                      
					SingleCommentNode(parent=433,current_idx=443)// CG     (primal)
					WhitespaceNode(parent=433,n_lines=1,current_idx=444) 
					EnumFieldNode(field_name=mjSOL_NEWTON,parent=433,current_idx=445)mjSOL_NEWTON
					SingleCommentNode(parent=433,current_idx=446)// Newton (primal)
				}
			DeletedNode(parent=15,current_idx=0)mjtSolver
		mjtSolver ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=448)  
		TypedefNode(parent=15,current_idx=449,typename=mjtEq)typedef
			EnumNode(name=mjtEq_,parent=449,current_idx=450)enum mjtEq_
				ScopeNode(parent=450,current_idx=451,scope_type=ENUM){
					WhitespaceNode(parent=451,n_lines=1,current_idx=452)           
					SingleCommentNode(parent=451,current_idx=453)// type of equality constraint
					WhitespaceNode(parent=451,n_lines=1,current_idx=454) 
					EnumFieldNode(field_name=mjEQ_CONNECT,parent=451,current_idx=455)mjEQ_CONNECT = 0 ,
					WhitespaceNode(parent=451,n_lines=1,current_idx=456)       
					SingleCommentNode(parent=451,current_idx=457)// connect two bodies at a point (ball joint)
					WhitespaceNode(parent=451,n_lines=1,current_idx=458) 
					EnumFieldNode(field_name=mjEQ_WELD,parent=451,current_idx=459)mjEQ_WELD ,
					WhitespaceNode(parent=451,n_lines=1,current_idx=460)                     
					SingleCommentNode(parent=451,current_idx=461)// fix relative position and orientation of two bodies
					WhitespaceNode(parent=451,n_lines=1,current_idx=462) 
					EnumFieldNode(field_name=mjEQ_JOINT,parent=451,current_idx=463)mjEQ_JOINT ,
					WhitespaceNode(parent=451,n_lines=1,current_idx=464)                    
					SingleCommentNode(parent=451,current_idx=465)// couple the values of two scalar joints with cubic
					WhitespaceNode(parent=451,n_lines=1,current_idx=466) 
					EnumFieldNode(field_name=mjEQ_TENDON,parent=451,current_idx=467)mjEQ_TENDON ,
					WhitespaceNode(parent=451,n_lines=1,current_idx=468)                   
					SingleCommentNode(parent=451,current_idx=469)// couple the lengths of two tendons with cubic
					WhitespaceNode(parent=451,n_lines=1,current_idx=470) 
					EnumFieldNode(field_name=mjEQ_FLEX,parent=451,current_idx=471)mjEQ_FLEX ,
					WhitespaceNode(parent=451,n_lines=1,current_idx=472)                     
					SingleCommentNode(parent=451,current_idx=473)// fix all edge lengths of a flex
					WhitespaceNode(parent=451,n_lines=1,current_idx=474) 
					EnumFieldNode(field_name=mjEQ_DISTANCE,parent=451,current_idx=475)mjEQ_DISTANCE
					SingleCommentNode(parent=451,current_idx=476)// unsupported ,  will cause an error if used
				}
			DeletedNode(parent=15,current_idx=0)mjtEq
		mjtEq ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=478)  
		TypedefNode(parent=15,current_idx=479,typename=mjtWrap)typedef
			EnumNode(name=mjtWrap_,parent=479,current_idx=480)enum mjtWrap_
				ScopeNode(parent=480,current_idx=481,scope_type=ENUM){
					WhitespaceNode(parent=481,n_lines=1,current_idx=482)         
					SingleCommentNode(parent=481,current_idx=483)// type of tendon wrap object
					WhitespaceNode(parent=481,n_lines=1,current_idx=484) 
					EnumFieldNode(field_name=mjWRAP_NONE,parent=481,current_idx=485)mjWRAP_NONE = 0 ,
					WhitespaceNode(parent=481,n_lines=1,current_idx=486)       
					SingleCommentNode(parent=481,current_idx=487)// null object
					WhitespaceNode(parent=481,n_lines=1,current_idx=488) 
					EnumFieldNode(field_name=mjWRAP_JOINT,parent=481,current_idx=489)mjWRAP_JOINT ,
					WhitespaceNode(parent=481,n_lines=1,current_idx=490)                  
					SingleCommentNode(parent=481,current_idx=491)// constant moment arm
					WhitespaceNode(parent=481,n_lines=1,current_idx=492) 
					EnumFieldNode(field_name=mjWRAP_PULLEY,parent=481,current_idx=493)mjWRAP_PULLEY ,
					WhitespaceNode(parent=481,n_lines=1,current_idx=494)                 
					SingleCommentNode(parent=481,current_idx=495)// pulley used to split tendon
					WhitespaceNode(parent=481,n_lines=1,current_idx=496) 
					EnumFieldNode(field_name=mjWRAP_SITE,parent=481,current_idx=497)mjWRAP_SITE ,
					WhitespaceNode(parent=481,n_lines=1,current_idx=498)                   
					SingleCommentNode(parent=481,current_idx=499)// pass through site
					WhitespaceNode(parent=481,n_lines=1,current_idx=500) 
					EnumFieldNode(field_name=mjWRAP_SPHERE,parent=481,current_idx=501)mjWRAP_SPHERE ,
					WhitespaceNode(parent=481,n_lines=1,current_idx=502)                 
					SingleCommentNode(parent=481,current_idx=503)// wrap around sphere
					WhitespaceNode(parent=481,n_lines=1,current_idx=504) 
					EnumFieldNode(field_name=mjWRAP_CYLINDER,parent=481,current_idx=505)mjWRAP_CYLINDER
					SingleCommentNode(parent=481,current_idx=506)// wrap around (infinite) cylinder
				}
			DeletedNode(parent=15,current_idx=0)mjtWrap
		mjtWrap ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=508)  
		TypedefNode(parent=15,current_idx=509,typename=mjtTrn)typedef
			EnumNode(name=mjtTrn_,parent=509,current_idx=510)enum mjtTrn_
				ScopeNode(parent=510,current_idx=511,scope_type=ENUM){
					WhitespaceNode(parent=511,n_lines=1,current_idx=512)          
					SingleCommentNode(parent=511,current_idx=513)// type of actuator transmission
					WhitespaceNode(parent=511,n_lines=1,current_idx=514) 
					EnumFieldNode(field_name=mjTRN_JOINT,parent=511,current_idx=515)mjTRN_JOINT = 0 ,
					WhitespaceNode(parent=511,n_lines=1,current_idx=516)       
					SingleCommentNode(parent=511,current_idx=517)// force on joint
					WhitespaceNode(parent=511,n_lines=1,current_idx=518) 
					EnumFieldNode(field_name=mjTRN_JOINTINPARENT,parent=511,current_idx=519)mjTRN_JOINTINPARENT ,
					WhitespaceNode(parent=511,n_lines=1,current_idx=520)           
					SingleCommentNode(parent=511,current_idx=521)// force on joint ,  expressed in parent frame
					WhitespaceNode(parent=511,n_lines=1,current_idx=522) 
					EnumFieldNode(field_name=mjTRN_SLIDERCRANK,parent=511,current_idx=523)mjTRN_SLIDERCRANK ,
					WhitespaceNode(parent=511,n_lines=1,current_idx=524)             
					SingleCommentNode(parent=511,current_idx=525)// force via slider-crank linkage
					WhitespaceNode(parent=511,n_lines=1,current_idx=526) 
					EnumFieldNode(field_name=mjTRN_TENDON,parent=511,current_idx=527)mjTRN_TENDON ,
					WhitespaceNode(parent=511,n_lines=1,current_idx=528)                  
					SingleCommentNode(parent=511,current_idx=529)// force on tendon
					WhitespaceNode(parent=511,n_lines=1,current_idx=530) 
					EnumFieldNode(field_name=mjTRN_SITE,parent=511,current_idx=531)mjTRN_SITE ,
					WhitespaceNode(parent=511,n_lines=1,current_idx=532)                    
					SingleCommentNode(parent=511,current_idx=533)// force on site
					WhitespaceNode(parent=511,n_lines=1,current_idx=534) 
					EnumFieldNode(field_name=mjTRN_BODY,parent=511,current_idx=535)mjTRN_BODY ,
					WhitespaceNode(parent=511,n_lines=1,current_idx=536)                    
					SingleCommentNode(parent=511,current_idx=537)// adhesion force on a body's geoms
					WhitespaceNode(parent=511,n_lines=2,current_idx=538)  
					EnumFieldNode(field_name=mjTRN_UNDEFINED,parent=511,current_idx=539)mjTRN_UNDEFINED = 1000
					WhitespaceNode(parent=511,n_lines=1,current_idx=540)    
					SingleCommentNode(parent=511,current_idx=541)// undefined transmission type
				}
			DeletedNode(parent=15,current_idx=0)mjtTrn
		mjtTrn ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=543)  
		TypedefNode(parent=15,current_idx=544,typename=mjtDyn)typedef
			EnumNode(name=mjtDyn_,parent=544,current_idx=545)enum mjtDyn_
				ScopeNode(parent=545,current_idx=546,scope_type=ENUM){
					WhitespaceNode(parent=546,n_lines=1,current_idx=547)          
					SingleCommentNode(parent=546,current_idx=548)// type of actuator dynamics
					WhitespaceNode(parent=546,n_lines=1,current_idx=549) 
					EnumFieldNode(field_name=mjDYN_NONE,parent=546,current_idx=550)mjDYN_NONE = 0 ,
					WhitespaceNode(parent=546,n_lines=1,current_idx=551)       
					SingleCommentNode(parent=546,current_idx=552)// no internal dynamics ;  ctrl specifies force
					WhitespaceNode(parent=546,n_lines=1,current_idx=553) 
					EnumFieldNode(field_name=mjDYN_INTEGRATOR,parent=546,current_idx=554)mjDYN_INTEGRATOR ,
					WhitespaceNode(parent=546,n_lines=1,current_idx=555)              
					SingleCommentNode(parent=546,current_idx=556)// integrator: da/dt = u
					WhitespaceNode(parent=546,n_lines=1,current_idx=557) 
					EnumFieldNode(field_name=mjDYN_FILTER,parent=546,current_idx=558)mjDYN_FILTER ,
					WhitespaceNode(parent=546,n_lines=1,current_idx=559)                  
					SingleCommentNode(parent=546,current_idx=560)// linear filter: da/dt = (u-a) / tau
					WhitespaceNode(parent=546,n_lines=1,current_idx=561) 
					EnumFieldNode(field_name=mjDYN_FILTEREXACT,parent=546,current_idx=562)mjDYN_FILTEREXACT ,
					WhitespaceNode(parent=546,n_lines=1,current_idx=563)             
					SingleCommentNode(parent=546,current_idx=564)// linear filter: da/dt = (u-a) / tau ,  with exact integration
					WhitespaceNode(parent=546,n_lines=1,current_idx=565) 
					EnumFieldNode(field_name=mjDYN_MUSCLE,parent=546,current_idx=566)mjDYN_MUSCLE ,
					WhitespaceNode(parent=546,n_lines=1,current_idx=567)                  
					SingleCommentNode(parent=546,current_idx=568)// piece-wise linear filter with two time constants
					WhitespaceNode(parent=546,n_lines=1,current_idx=569) 
					EnumFieldNode(field_name=mjDYN_USER,parent=546,current_idx=570)mjDYN_USER
					SingleCommentNode(parent=546,current_idx=571)// user-defined dynamics type
				}
			DeletedNode(parent=15,current_idx=0)mjtDyn
		mjtDyn ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=573)  
		TypedefNode(parent=15,current_idx=574,typename=mjtGain)typedef
			EnumNode(name=mjtGain_,parent=574,current_idx=575)enum mjtGain_
				ScopeNode(parent=575,current_idx=576,scope_type=ENUM){
					WhitespaceNode(parent=576,n_lines=1,current_idx=577)         
					SingleCommentNode(parent=576,current_idx=578)// type of actuator gain
					WhitespaceNode(parent=576,n_lines=1,current_idx=579) 
					EnumFieldNode(field_name=mjGAIN_FIXED,parent=576,current_idx=580)mjGAIN_FIXED = 0 ,
					WhitespaceNode(parent=576,n_lines=1,current_idx=581)       
					SingleCommentNode(parent=576,current_idx=582)// fixed gain
					WhitespaceNode(parent=576,n_lines=1,current_idx=583) 
					EnumFieldNode(field_name=mjGAIN_AFFINE,parent=576,current_idx=584)mjGAIN_AFFINE ,
					WhitespaceNode(parent=576,n_lines=1,current_idx=585)                 
					SingleCommentNode(parent=576,current_idx=586)// const + kp*length + kv*velocity
					WhitespaceNode(parent=576,n_lines=1,current_idx=587) 
					EnumFieldNode(field_name=mjGAIN_MUSCLE,parent=576,current_idx=588)mjGAIN_MUSCLE ,
					WhitespaceNode(parent=576,n_lines=1,current_idx=589)                 
					SingleCommentNode(parent=576,current_idx=590)// muscle FLV curve computed by mju_muscleGain()
					WhitespaceNode(parent=576,n_lines=1,current_idx=591) 
					EnumFieldNode(field_name=mjGAIN_USER,parent=576,current_idx=592)mjGAIN_USER
					SingleCommentNode(parent=576,current_idx=593)// user-defined gain type
				}
			DeletedNode(parent=15,current_idx=0)mjtGain
		mjtGain ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=595)  
		TypedefNode(parent=15,current_idx=596,typename=mjtBias)typedef
			EnumNode(name=mjtBias_,parent=596,current_idx=597)enum mjtBias_
				ScopeNode(parent=597,current_idx=598,scope_type=ENUM){
					WhitespaceNode(parent=598,n_lines=1,current_idx=599)         
					SingleCommentNode(parent=598,current_idx=600)// type of actuator bias
					WhitespaceNode(parent=598,n_lines=1,current_idx=601) 
					EnumFieldNode(field_name=mjBIAS_NONE,parent=598,current_idx=602)mjBIAS_NONE = 0 ,
					WhitespaceNode(parent=598,n_lines=1,current_idx=603)       
					SingleCommentNode(parent=598,current_idx=604)// no bias
					WhitespaceNode(parent=598,n_lines=1,current_idx=605) 
					EnumFieldNode(field_name=mjBIAS_AFFINE,parent=598,current_idx=606)mjBIAS_AFFINE ,
					WhitespaceNode(parent=598,n_lines=1,current_idx=607)                 
					SingleCommentNode(parent=598,current_idx=608)// const + kp*length + kv*velocity
					WhitespaceNode(parent=598,n_lines=1,current_idx=609) 
					EnumFieldNode(field_name=mjBIAS_MUSCLE,parent=598,current_idx=610)mjBIAS_MUSCLE ,
					WhitespaceNode(parent=598,n_lines=1,current_idx=611)                 
					SingleCommentNode(parent=598,current_idx=612)// muscle passive force computed by mju_muscleBias()
					WhitespaceNode(parent=598,n_lines=1,current_idx=613) 
					EnumFieldNode(field_name=mjBIAS_USER,parent=598,current_idx=614)mjBIAS_USER
					SingleCommentNode(parent=598,current_idx=615)// user-defined bias type
				}
			DeletedNode(parent=15,current_idx=0)mjtBias
		mjtBias ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=617)  
		TypedefNode(parent=15,current_idx=618,typename=mjtObj)typedef
			EnumNode(name=mjtObj_,parent=618,current_idx=619)enum mjtObj_
				ScopeNode(parent=619,current_idx=620,scope_type=ENUM){
					WhitespaceNode(parent=620,n_lines=1,current_idx=621)          
					SingleCommentNode(parent=620,current_idx=622)// type of MujoCo object
					WhitespaceNode(parent=620,n_lines=1,current_idx=623) 
					EnumFieldNode(field_name=mjOBJ_UNKNOWN,parent=620,current_idx=624)mjOBJ_UNKNOWN = 0 ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=625)       
					SingleCommentNode(parent=620,current_idx=626)// unknown object type
					WhitespaceNode(parent=620,n_lines=1,current_idx=627) 
					EnumFieldNode(field_name=mjOBJ_BODY,parent=620,current_idx=628)mjOBJ_BODY ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=629)                    
					SingleCommentNode(parent=620,current_idx=630)// body
					WhitespaceNode(parent=620,n_lines=1,current_idx=631) 
					EnumFieldNode(field_name=mjOBJ_XBODY,parent=620,current_idx=632)mjOBJ_XBODY ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=633)                   
					SingleCommentNode(parent=620,current_idx=634)// body ,  used to access regular frame instead of i-frame
					WhitespaceNode(parent=620,n_lines=1,current_idx=635) 
					EnumFieldNode(field_name=mjOBJ_JOINT,parent=620,current_idx=636)mjOBJ_JOINT ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=637)                   
					SingleCommentNode(parent=620,current_idx=638)// joint
					WhitespaceNode(parent=620,n_lines=1,current_idx=639) 
					EnumFieldNode(field_name=mjOBJ_DOF,parent=620,current_idx=640)mjOBJ_DOF ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=641)                     
					SingleCommentNode(parent=620,current_idx=642)// dof
					WhitespaceNode(parent=620,n_lines=1,current_idx=643) 
					EnumFieldNode(field_name=mjOBJ_GEOM,parent=620,current_idx=644)mjOBJ_GEOM ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=645)                    
					SingleCommentNode(parent=620,current_idx=646)// geom
					WhitespaceNode(parent=620,n_lines=1,current_idx=647) 
					EnumFieldNode(field_name=mjOBJ_SITE,parent=620,current_idx=648)mjOBJ_SITE ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=649)                    
					SingleCommentNode(parent=620,current_idx=650)// site
					WhitespaceNode(parent=620,n_lines=1,current_idx=651) 
					EnumFieldNode(field_name=mjOBJ_CAMERA,parent=620,current_idx=652)mjOBJ_CAMERA ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=653)                  
					SingleCommentNode(parent=620,current_idx=654)// camera
					WhitespaceNode(parent=620,n_lines=1,current_idx=655) 
					EnumFieldNode(field_name=mjOBJ_LIGHT,parent=620,current_idx=656)mjOBJ_LIGHT ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=657)                   
					SingleCommentNode(parent=620,current_idx=658)// light
					WhitespaceNode(parent=620,n_lines=1,current_idx=659) 
					EnumFieldNode(field_name=mjOBJ_FLEX,parent=620,current_idx=660)mjOBJ_FLEX ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=661)                    
					SingleCommentNode(parent=620,current_idx=662)// flex
					WhitespaceNode(parent=620,n_lines=1,current_idx=663) 
					EnumFieldNode(field_name=mjOBJ_MESH,parent=620,current_idx=664)mjOBJ_MESH ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=665)                    
					SingleCommentNode(parent=620,current_idx=666)// mesh
					WhitespaceNode(parent=620,n_lines=1,current_idx=667) 
					EnumFieldNode(field_name=mjOBJ_SKIN,parent=620,current_idx=668)mjOBJ_SKIN ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=669)                    
					SingleCommentNode(parent=620,current_idx=670)// skin
					WhitespaceNode(parent=620,n_lines=1,current_idx=671) 
					EnumFieldNode(field_name=mjOBJ_HFIELD,parent=620,current_idx=672)mjOBJ_HFIELD ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=673)                  
					SingleCommentNode(parent=620,current_idx=674)// heightfield
					WhitespaceNode(parent=620,n_lines=1,current_idx=675) 
					EnumFieldNode(field_name=mjOBJ_TEXTURE,parent=620,current_idx=676)mjOBJ_TEXTURE ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=677)                 
					SingleCommentNode(parent=620,current_idx=678)// texture
					WhitespaceNode(parent=620,n_lines=1,current_idx=679) 
					EnumFieldNode(field_name=mjOBJ_MATERIAL,parent=620,current_idx=680)mjOBJ_MATERIAL ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=681)                
					SingleCommentNode(parent=620,current_idx=682)// material for rendering
					WhitespaceNode(parent=620,n_lines=1,current_idx=683) 
					EnumFieldNode(field_name=mjOBJ_PAIR,parent=620,current_idx=684)mjOBJ_PAIR ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=685)                    
					SingleCommentNode(parent=620,current_idx=686)// geom pair to include
					WhitespaceNode(parent=620,n_lines=1,current_idx=687) 
					EnumFieldNode(field_name=mjOBJ_EXCLUDE,parent=620,current_idx=688)mjOBJ_EXCLUDE ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=689)                 
					SingleCommentNode(parent=620,current_idx=690)// body pair to exclude
					WhitespaceNode(parent=620,n_lines=1,current_idx=691) 
					EnumFieldNode(field_name=mjOBJ_EQUALITY,parent=620,current_idx=692)mjOBJ_EQUALITY ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=693)                
					SingleCommentNode(parent=620,current_idx=694)// equality constraint
					WhitespaceNode(parent=620,n_lines=1,current_idx=695) 
					EnumFieldNode(field_name=mjOBJ_TENDON,parent=620,current_idx=696)mjOBJ_TENDON ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=697)                  
					SingleCommentNode(parent=620,current_idx=698)// tendon
					WhitespaceNode(parent=620,n_lines=1,current_idx=699) 
					EnumFieldNode(field_name=mjOBJ_ACTUATOR,parent=620,current_idx=700)mjOBJ_ACTUATOR ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=701)                
					SingleCommentNode(parent=620,current_idx=702)// actuator
					WhitespaceNode(parent=620,n_lines=1,current_idx=703) 
					EnumFieldNode(field_name=mjOBJ_SENSOR,parent=620,current_idx=704)mjOBJ_SENSOR ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=705)                  
					SingleCommentNode(parent=620,current_idx=706)// sensor
					WhitespaceNode(parent=620,n_lines=1,current_idx=707) 
					EnumFieldNode(field_name=mjOBJ_NUMERIC,parent=620,current_idx=708)mjOBJ_NUMERIC ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=709)                 
					SingleCommentNode(parent=620,current_idx=710)// numeric
					WhitespaceNode(parent=620,n_lines=1,current_idx=711) 
					EnumFieldNode(field_name=mjOBJ_TEXT,parent=620,current_idx=712)mjOBJ_TEXT ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=713)                    
					SingleCommentNode(parent=620,current_idx=714)// text
					WhitespaceNode(parent=620,n_lines=1,current_idx=715) 
					EnumFieldNode(field_name=mjOBJ_TUPLE,parent=620,current_idx=716)mjOBJ_TUPLE ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=717)                   
					SingleCommentNode(parent=620,current_idx=718)// tuple
					WhitespaceNode(parent=620,n_lines=1,current_idx=719) 
					EnumFieldNode(field_name=mjOBJ_KEY,parent=620,current_idx=720)mjOBJ_KEY ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=721)                     
					SingleCommentNode(parent=620,current_idx=722)// keyframe
					WhitespaceNode(parent=620,n_lines=1,current_idx=723) 
					EnumFieldNode(field_name=mjOBJ_PLUGIN,parent=620,current_idx=724)mjOBJ_PLUGIN ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=725)                  
					SingleCommentNode(parent=620,current_idx=726)// plugin instance
					WhitespaceNode(parent=620,n_lines=2,current_idx=727)  
					EnumFieldNode(field_name=mjNOBJECT,parent=620,current_idx=728)mjNOBJECT ,
					WhitespaceNode(parent=620,n_lines=1,current_idx=729)                     
					SingleCommentNode(parent=620,current_idx=730)// number of object types
					WhitespaceNode(parent=620,n_lines=2,current_idx=731)  
					SingleCommentNode(parent=620,current_idx=732)// meta elements ,  do not appear in mjModel
					WhitespaceNode(parent=620,n_lines=1,current_idx=733) 
					EnumFieldNode(field_name=mjOBJ_FRAME,parent=620,current_idx=734)mjOBJ_FRAME = 100
					WhitespaceNode(parent=620,n_lines=1,current_idx=735)     
					SingleCommentNode(parent=620,current_idx=736)// frame
				}
			DeletedNode(parent=15,current_idx=0)mjtObj
		mjtObj ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=738)  
		TypedefNode(parent=15,current_idx=739,typename=mjtConstraint)typedef
			EnumNode(name=mjtConstraint_,parent=739,current_idx=740)enum mjtConstraint_
				ScopeNode(parent=740,current_idx=741,scope_type=ENUM){
					WhitespaceNode(parent=741,n_lines=1,current_idx=742)   
					SingleCommentNode(parent=741,current_idx=743)// type of constraint
					WhitespaceNode(parent=741,n_lines=1,current_idx=744) 
					EnumFieldNode(field_name=mjCNSTR_EQUALITY,parent=741,current_idx=745)mjCNSTR_EQUALITY = 0 ,
					WhitespaceNode(parent=741,n_lines=1,current_idx=746)       
					SingleCommentNode(parent=741,current_idx=747)// equality constraint
					WhitespaceNode(parent=741,n_lines=1,current_idx=748) 
					EnumFieldNode(field_name=mjCNSTR_FRICTION_DOF,parent=741,current_idx=749)mjCNSTR_FRICTION_DOF ,
					WhitespaceNode(parent=741,n_lines=1,current_idx=750)          
					SingleCommentNode(parent=741,current_idx=751)// dof friction
					WhitespaceNode(parent=741,n_lines=1,current_idx=752) 
					EnumFieldNode(field_name=mjCNSTR_FRICTION_TENDON,parent=741,current_idx=753)mjCNSTR_FRICTION_TENDON ,
					WhitespaceNode(parent=741,n_lines=1,current_idx=754)       
					SingleCommentNode(parent=741,current_idx=755)// tendon friction
					WhitespaceNode(parent=741,n_lines=1,current_idx=756) 
					EnumFieldNode(field_name=mjCNSTR_LIMIT_JOINT,parent=741,current_idx=757)mjCNSTR_LIMIT_JOINT ,
					WhitespaceNode(parent=741,n_lines=1,current_idx=758)           
					SingleCommentNode(parent=741,current_idx=759)// joint limit
					WhitespaceNode(parent=741,n_lines=1,current_idx=760) 
					EnumFieldNode(field_name=mjCNSTR_LIMIT_TENDON,parent=741,current_idx=761)mjCNSTR_LIMIT_TENDON ,
					WhitespaceNode(parent=741,n_lines=1,current_idx=762)          
					SingleCommentNode(parent=741,current_idx=763)// tendon limit
					WhitespaceNode(parent=741,n_lines=1,current_idx=764) 
					EnumFieldNode(field_name=mjCNSTR_CONTACT_FRICTIONLESS,parent=741,current_idx=765)mjCNSTR_CONTACT_FRICTIONLESS ,
					WhitespaceNode(parent=741,n_lines=1,current_idx=766)  
					SingleCommentNode(parent=741,current_idx=767)// frictionless contact
					WhitespaceNode(parent=741,n_lines=1,current_idx=768) 
					EnumFieldNode(field_name=mjCNSTR_CONTACT_PYRAMIDAL,parent=741,current_idx=769)mjCNSTR_CONTACT_PYRAMIDAL ,
					WhitespaceNode(parent=741,n_lines=1,current_idx=770)     
					SingleCommentNode(parent=741,current_idx=771)// frictional contact ,  pyramidal friction cone
					WhitespaceNode(parent=741,n_lines=1,current_idx=772) 
					EnumFieldNode(field_name=mjCNSTR_CONTACT_ELLIPTIC,parent=741,current_idx=773)mjCNSTR_CONTACT_ELLIPTIC
					SingleCommentNode(parent=741,current_idx=774)// frictional contact ,  elliptic friction cone
				}
			DeletedNode(parent=15,current_idx=0)mjtConstraint
		mjtConstraint ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=776)  
		TypedefNode(parent=15,current_idx=777,typename=mjtConstraintState)typedef
			EnumNode(name=mjtConstraintState_,parent=777,current_idx=778)enum mjtConstraintState_
				ScopeNode(parent=778,current_idx=779,scope_type=ENUM){
					WhitespaceNode(parent=779,n_lines=1,current_idx=780)
					SingleCommentNode(parent=779,current_idx=781)// constraint state
					WhitespaceNode(parent=779,n_lines=1,current_idx=782) 
					EnumFieldNode(field_name=mjCNSTRSTATE_SATISFIED,parent=779,current_idx=783)mjCNSTRSTATE_SATISFIED = 0 ,
					WhitespaceNode(parent=779,n_lines=1,current_idx=784)      
					SingleCommentNode(parent=779,current_idx=785)// constraint satisfied ,  zero cost (limit ,  contact)
					WhitespaceNode(parent=779,n_lines=1,current_idx=786) 
					EnumFieldNode(field_name=mjCNSTRSTATE_QUADRATIC,parent=779,current_idx=787)mjCNSTRSTATE_QUADRATIC ,
					WhitespaceNode(parent=779,n_lines=1,current_idx=788)          
					SingleCommentNode(parent=779,current_idx=789)// quadratic cost (equality ,  friction ,  limit ,  contact)
					WhitespaceNode(parent=779,n_lines=1,current_idx=790) 
					EnumFieldNode(field_name=mjCNSTRSTATE_LINEARNEG,parent=779,current_idx=791)mjCNSTRSTATE_LINEARNEG ,
					WhitespaceNode(parent=779,n_lines=1,current_idx=792)          
					SingleCommentNode(parent=779,current_idx=793)// linear cost ,  negative side (friction)
					WhitespaceNode(parent=779,n_lines=1,current_idx=794) 
					EnumFieldNode(field_name=mjCNSTRSTATE_LINEARPOS,parent=779,current_idx=795)mjCNSTRSTATE_LINEARPOS ,
					WhitespaceNode(parent=779,n_lines=1,current_idx=796)          
					SingleCommentNode(parent=779,current_idx=797)// linear cost ,  positive side (friction)
					WhitespaceNode(parent=779,n_lines=1,current_idx=798) 
					EnumFieldNode(field_name=mjCNSTRSTATE_CONE,parent=779,current_idx=799)mjCNSTRSTATE_CONE
					SingleCommentNode(parent=779,current_idx=800)// squared distance to cone cost (elliptic contact)
				}
			DeletedNode(parent=15,current_idx=0)mjtConstraintState
		mjtConstraintState ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=802)  
		TypedefNode(parent=15,current_idx=803,typename=mjtSensor)typedef
			EnumNode(name=mjtSensor_,parent=803,current_idx=804)enum mjtSensor_
				ScopeNode(parent=804,current_idx=805,scope_type=ENUM){
					WhitespaceNode(parent=805,n_lines=1,current_idx=806)       
					SingleCommentNode(parent=805,current_idx=807)// type of sensor
					WhitespaceNode(parent=805,n_lines=1,current_idx=808) 
					SingleCommentNode(parent=805,current_idx=809)// common robotic sensors ,  attached to a site
					WhitespaceNode(parent=805,n_lines=1,current_idx=810) 
					EnumFieldNode(field_name=mjSENS_TOUCH,parent=805,current_idx=811)mjSENS_TOUCH = 0 ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=812)       
					SingleCommentNode(parent=805,current_idx=813)// scalar contact normal forces summed over sensor zone
					WhitespaceNode(parent=805,n_lines=1,current_idx=814) 
					EnumFieldNode(field_name=mjSENS_ACCELEROMETER,parent=805,current_idx=815)mjSENS_ACCELEROMETER ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=816)          
					SingleCommentNode(parent=805,current_idx=817)// 3D linear acceleration ,  in local frame
					WhitespaceNode(parent=805,n_lines=1,current_idx=818) 
					EnumFieldNode(field_name=mjSENS_VELOCIMETER,parent=805,current_idx=819)mjSENS_VELOCIMETER ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=820)            
					SingleCommentNode(parent=805,current_idx=821)// 3D linear velocity ,  in local frame
					WhitespaceNode(parent=805,n_lines=1,current_idx=822) 
					EnumFieldNode(field_name=mjSENS_GYRO,parent=805,current_idx=823)mjSENS_GYRO ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=824)                   
					SingleCommentNode(parent=805,current_idx=825)// 3D angular velocity ,  in local frame
					WhitespaceNode(parent=805,n_lines=1,current_idx=826) 
					EnumFieldNode(field_name=mjSENS_FORCE,parent=805,current_idx=827)mjSENS_FORCE ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=828)                  
					SingleCommentNode(parent=805,current_idx=829)// 3D force between site's body and its parent body
					WhitespaceNode(parent=805,n_lines=1,current_idx=830) 
					EnumFieldNode(field_name=mjSENS_TORQUE,parent=805,current_idx=831)mjSENS_TORQUE ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=832)                 
					SingleCommentNode(parent=805,current_idx=833)// 3D torque between site's body and its parent body
					WhitespaceNode(parent=805,n_lines=1,current_idx=834) 
					EnumFieldNode(field_name=mjSENS_MAGNETOMETER,parent=805,current_idx=835)mjSENS_MAGNETOMETER ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=836)           
					SingleCommentNode(parent=805,current_idx=837)// 3D magnetometer
					WhitespaceNode(parent=805,n_lines=1,current_idx=838) 
					EnumFieldNode(field_name=mjSENS_RANGEFINDER,parent=805,current_idx=839)mjSENS_RANGEFINDER ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=840)            
					SingleCommentNode(parent=805,current_idx=841)// scalar distance to nearest geom or site along z-axis
					WhitespaceNode(parent=805,n_lines=1,current_idx=842) 
					EnumFieldNode(field_name=mjSENS_CAMPROJECTION,parent=805,current_idx=843)mjSENS_CAMPROJECTION ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=844)          
					SingleCommentNode(parent=805,current_idx=845)// pixel coordinates of a site in the camera image
					WhitespaceNode(parent=805,n_lines=2,current_idx=846)  
					SingleCommentNode(parent=805,current_idx=847)// sensors related to scalar joints ,  tendons ,  actuators
					WhitespaceNode(parent=805,n_lines=1,current_idx=848) 
					EnumFieldNode(field_name=mjSENS_JOINTPOS,parent=805,current_idx=849)mjSENS_JOINTPOS ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=850)               
					SingleCommentNode(parent=805,current_idx=851)// scalar joint position (hinge and slide only)
					WhitespaceNode(parent=805,n_lines=1,current_idx=852) 
					EnumFieldNode(field_name=mjSENS_JOINTVEL,parent=805,current_idx=853)mjSENS_JOINTVEL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=854)               
					SingleCommentNode(parent=805,current_idx=855)// scalar joint velocity (hinge and slide only)
					WhitespaceNode(parent=805,n_lines=1,current_idx=856) 
					EnumFieldNode(field_name=mjSENS_TENDONPOS,parent=805,current_idx=857)mjSENS_TENDONPOS ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=858)              
					SingleCommentNode(parent=805,current_idx=859)// scalar tendon position
					WhitespaceNode(parent=805,n_lines=1,current_idx=860) 
					EnumFieldNode(field_name=mjSENS_TENDONVEL,parent=805,current_idx=861)mjSENS_TENDONVEL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=862)              
					SingleCommentNode(parent=805,current_idx=863)// scalar tendon velocity
					WhitespaceNode(parent=805,n_lines=1,current_idx=864) 
					EnumFieldNode(field_name=mjSENS_ACTUATORPOS,parent=805,current_idx=865)mjSENS_ACTUATORPOS ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=866)            
					SingleCommentNode(parent=805,current_idx=867)// scalar actuator position
					WhitespaceNode(parent=805,n_lines=1,current_idx=868) 
					EnumFieldNode(field_name=mjSENS_ACTUATORVEL,parent=805,current_idx=869)mjSENS_ACTUATORVEL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=870)            
					SingleCommentNode(parent=805,current_idx=871)// scalar actuator velocity
					WhitespaceNode(parent=805,n_lines=1,current_idx=872) 
					EnumFieldNode(field_name=mjSENS_ACTUATORFRC,parent=805,current_idx=873)mjSENS_ACTUATORFRC ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=874)            
					SingleCommentNode(parent=805,current_idx=875)// scalar actuator force
					WhitespaceNode(parent=805,n_lines=1,current_idx=876) 
					EnumFieldNode(field_name=mjSENS_JOINTACTFRC,parent=805,current_idx=877)mjSENS_JOINTACTFRC ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=878)            
					SingleCommentNode(parent=805,current_idx=879)// scalar actuator force ,  measured at the joint
					WhitespaceNode(parent=805,n_lines=2,current_idx=880)  
					SingleCommentNode(parent=805,current_idx=881)// sensors related to ball joints
					WhitespaceNode(parent=805,n_lines=1,current_idx=882) 
					EnumFieldNode(field_name=mjSENS_BALLQUAT,parent=805,current_idx=883)mjSENS_BALLQUAT ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=884)               
					SingleCommentNode(parent=805,current_idx=885)// 4D ball joint quaternion
					WhitespaceNode(parent=805,n_lines=1,current_idx=886) 
					EnumFieldNode(field_name=mjSENS_BALLANGVEL,parent=805,current_idx=887)mjSENS_BALLANGVEL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=888)             
					SingleCommentNode(parent=805,current_idx=889)// 3D ball joint angular velocity
					WhitespaceNode(parent=805,n_lines=2,current_idx=890)  
					SingleCommentNode(parent=805,current_idx=891)// joint and tendon limit sensors ,  in constraint space
					WhitespaceNode(parent=805,n_lines=1,current_idx=892) 
					EnumFieldNode(field_name=mjSENS_JOINTLIMITPOS,parent=805,current_idx=893)mjSENS_JOINTLIMITPOS ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=894)          
					SingleCommentNode(parent=805,current_idx=895)// joint limit distance-margin
					WhitespaceNode(parent=805,n_lines=1,current_idx=896) 
					EnumFieldNode(field_name=mjSENS_JOINTLIMITVEL,parent=805,current_idx=897)mjSENS_JOINTLIMITVEL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=898)          
					SingleCommentNode(parent=805,current_idx=899)// joint limit velocity
					WhitespaceNode(parent=805,n_lines=1,current_idx=900) 
					EnumFieldNode(field_name=mjSENS_JOINTLIMITFRC,parent=805,current_idx=901)mjSENS_JOINTLIMITFRC ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=902)          
					SingleCommentNode(parent=805,current_idx=903)// joint limit force
					WhitespaceNode(parent=805,n_lines=1,current_idx=904) 
					EnumFieldNode(field_name=mjSENS_TENDONLIMITPOS,parent=805,current_idx=905)mjSENS_TENDONLIMITPOS ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=906)         
					SingleCommentNode(parent=805,current_idx=907)// tendon limit distance-margin
					WhitespaceNode(parent=805,n_lines=1,current_idx=908) 
					EnumFieldNode(field_name=mjSENS_TENDONLIMITVEL,parent=805,current_idx=909)mjSENS_TENDONLIMITVEL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=910)         
					SingleCommentNode(parent=805,current_idx=911)// tendon limit velocity
					WhitespaceNode(parent=805,n_lines=1,current_idx=912) 
					EnumFieldNode(field_name=mjSENS_TENDONLIMITFRC,parent=805,current_idx=913)mjSENS_TENDONLIMITFRC ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=914)         
					SingleCommentNode(parent=805,current_idx=915)// tendon limit force
					WhitespaceNode(parent=805,n_lines=2,current_idx=916)  
					SingleCommentNode(parent=805,current_idx=917)// sensors attached to an object with spatial frame: (x)body ,  geom ,  site ,  camera
					WhitespaceNode(parent=805,n_lines=1,current_idx=918) 
					EnumFieldNode(field_name=mjSENS_FRAMEPOS,parent=805,current_idx=919)mjSENS_FRAMEPOS ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=920)               
					SingleCommentNode(parent=805,current_idx=921)// 3D position
					WhitespaceNode(parent=805,n_lines=1,current_idx=922) 
					EnumFieldNode(field_name=mjSENS_FRAMEQUAT,parent=805,current_idx=923)mjSENS_FRAMEQUAT ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=924)              
					SingleCommentNode(parent=805,current_idx=925)// 4D unit quaternion orientation
					WhitespaceNode(parent=805,n_lines=1,current_idx=926) 
					EnumFieldNode(field_name=mjSENS_FRAMEXAXIS,parent=805,current_idx=927)mjSENS_FRAMEXAXIS ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=928)             
					SingleCommentNode(parent=805,current_idx=929)// 3D unit vector: x-axis of object's frame
					WhitespaceNode(parent=805,n_lines=1,current_idx=930) 
					EnumFieldNode(field_name=mjSENS_FRAMEYAXIS,parent=805,current_idx=931)mjSENS_FRAMEYAXIS ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=932)             
					SingleCommentNode(parent=805,current_idx=933)// 3D unit vector: y-axis of object's frame
					WhitespaceNode(parent=805,n_lines=1,current_idx=934) 
					EnumFieldNode(field_name=mjSENS_FRAMEZAXIS,parent=805,current_idx=935)mjSENS_FRAMEZAXIS ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=936)             
					SingleCommentNode(parent=805,current_idx=937)// 3D unit vector: z-axis of object's frame
					WhitespaceNode(parent=805,n_lines=1,current_idx=938) 
					EnumFieldNode(field_name=mjSENS_FRAMELINVEL,parent=805,current_idx=939)mjSENS_FRAMELINVEL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=940)            
					SingleCommentNode(parent=805,current_idx=941)// 3D linear velocity
					WhitespaceNode(parent=805,n_lines=1,current_idx=942) 
					EnumFieldNode(field_name=mjSENS_FRAMEANGVEL,parent=805,current_idx=943)mjSENS_FRAMEANGVEL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=944)            
					SingleCommentNode(parent=805,current_idx=945)// 3D angular velocity
					WhitespaceNode(parent=805,n_lines=1,current_idx=946) 
					EnumFieldNode(field_name=mjSENS_FRAMELINACC,parent=805,current_idx=947)mjSENS_FRAMELINACC ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=948)            
					SingleCommentNode(parent=805,current_idx=949)// 3D linear acceleration
					WhitespaceNode(parent=805,n_lines=1,current_idx=950) 
					EnumFieldNode(field_name=mjSENS_FRAMEANGACC,parent=805,current_idx=951)mjSENS_FRAMEANGACC ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=952)            
					SingleCommentNode(parent=805,current_idx=953)// 3D angular acceleration
					WhitespaceNode(parent=805,n_lines=2,current_idx=954)  
					SingleCommentNode(parent=805,current_idx=955)// sensors related to kinematic subtrees ;  attached to a body (which is the subtree root)
					WhitespaceNode(parent=805,n_lines=1,current_idx=956) 
					EnumFieldNode(field_name=mjSENS_SUBTREECOM,parent=805,current_idx=957)mjSENS_SUBTREECOM ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=958)             
					SingleCommentNode(parent=805,current_idx=959)// 3D center of mass of subtree
					WhitespaceNode(parent=805,n_lines=1,current_idx=960) 
					EnumFieldNode(field_name=mjSENS_SUBTREELINVEL,parent=805,current_idx=961)mjSENS_SUBTREELINVEL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=962)          
					SingleCommentNode(parent=805,current_idx=963)// 3D linear velocity of subtree
					WhitespaceNode(parent=805,n_lines=1,current_idx=964) 
					EnumFieldNode(field_name=mjSENS_SUBTREEANGMOM,parent=805,current_idx=965)mjSENS_SUBTREEANGMOM ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=966)          
					SingleCommentNode(parent=805,current_idx=967)// 3D angular momentum of subtree
					WhitespaceNode(parent=805,n_lines=2,current_idx=968)  
					SingleCommentNode(parent=805,current_idx=969)// sensors for geometric distance ;  attached to geoms or bodies
					WhitespaceNode(parent=805,n_lines=1,current_idx=970) 
					EnumFieldNode(field_name=mjSENS_GEOMDIST,parent=805,current_idx=971)mjSENS_GEOMDIST ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=972)               
					SingleCommentNode(parent=805,current_idx=973)// signed distance between two geoms
					WhitespaceNode(parent=805,n_lines=1,current_idx=974) 
					EnumFieldNode(field_name=mjSENS_GEOMNORMAL,parent=805,current_idx=975)mjSENS_GEOMNORMAL ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=976)             
					SingleCommentNode(parent=805,current_idx=977)// normal direction between two geoms
					WhitespaceNode(parent=805,n_lines=1,current_idx=978) 
					EnumFieldNode(field_name=mjSENS_GEOMFROMTO,parent=805,current_idx=979)mjSENS_GEOMFROMTO ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=980)             
					SingleCommentNode(parent=805,current_idx=981)// segment between two geoms
					WhitespaceNode(parent=805,n_lines=2,current_idx=982)  
					SingleCommentNode(parent=805,current_idx=983)// global sensors
					WhitespaceNode(parent=805,n_lines=1,current_idx=984) 
					EnumFieldNode(field_name=mjSENS_CLOCK,parent=805,current_idx=985)mjSENS_CLOCK ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=986)                  
					SingleCommentNode(parent=805,current_idx=987)// simulation time
					WhitespaceNode(parent=805,n_lines=2,current_idx=988)  
					SingleCommentNode(parent=805,current_idx=989)// plugin-controlled sensors
					WhitespaceNode(parent=805,n_lines=1,current_idx=990) 
					EnumFieldNode(field_name=mjSENS_PLUGIN,parent=805,current_idx=991)mjSENS_PLUGIN ,
					WhitespaceNode(parent=805,n_lines=1,current_idx=992)                 
					SingleCommentNode(parent=805,current_idx=993)// plugin-controlled
					WhitespaceNode(parent=805,n_lines=2,current_idx=994)  
					SingleCommentNode(parent=805,current_idx=995)// user-defined sensor
					WhitespaceNode(parent=805,n_lines=1,current_idx=996) 
					EnumFieldNode(field_name=mjSENS_USER,parent=805,current_idx=997)mjSENS_USER
					SingleCommentNode(parent=805,current_idx=998)// sensor data provided by mjcb_sensor callback
				}
			DeletedNode(parent=15,current_idx=0)mjtSensor
		mjtSensor ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1000)  
		TypedefNode(parent=15,current_idx=1001,typename=mjtStage)typedef
			EnumNode(name=mjtStage_,parent=1001,current_idx=1002)enum mjtStage_
				ScopeNode(parent=1002,current_idx=1003,scope_type=ENUM){
					WhitespaceNode(parent=1003,n_lines=1,current_idx=1004)        
					SingleCommentNode(parent=1003,current_idx=1005)// computation stage
					WhitespaceNode(parent=1003,n_lines=1,current_idx=1006) 
					EnumFieldNode(field_name=mjSTAGE_NONE,parent=1003,current_idx=1007)mjSTAGE_NONE = 0 ,
					WhitespaceNode(parent=1003,n_lines=1,current_idx=1008)       
					SingleCommentNode(parent=1003,current_idx=1009)// no computations
					WhitespaceNode(parent=1003,n_lines=1,current_idx=1010) 
					EnumFieldNode(field_name=mjSTAGE_POS,parent=1003,current_idx=1011)mjSTAGE_POS ,
					WhitespaceNode(parent=1003,n_lines=1,current_idx=1012)                   
					SingleCommentNode(parent=1003,current_idx=1013)// position-dependent computations
					WhitespaceNode(parent=1003,n_lines=1,current_idx=1014) 
					EnumFieldNode(field_name=mjSTAGE_VEL,parent=1003,current_idx=1015)mjSTAGE_VEL ,
					WhitespaceNode(parent=1003,n_lines=1,current_idx=1016)                   
					SingleCommentNode(parent=1003,current_idx=1017)// velocity-dependent computations
					WhitespaceNode(parent=1003,n_lines=1,current_idx=1018) 
					EnumFieldNode(field_name=mjSTAGE_ACC,parent=1003,current_idx=1019)mjSTAGE_ACC
					SingleCommentNode(parent=1003,current_idx=1020)// acceleration/force-dependent computations
				}
			DeletedNode(parent=15,current_idx=0)mjtStage
		mjtStage ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1022)  
		TypedefNode(parent=15,current_idx=1023,typename=mjtDataType)typedef
			EnumNode(name=mjtDataType_,parent=1023,current_idx=1024)enum mjtDataType_
				ScopeNode(parent=1024,current_idx=1025,scope_type=ENUM){
					WhitespaceNode(parent=1025,n_lines=1,current_idx=1026)     
					SingleCommentNode(parent=1025,current_idx=1027)// data type for sensors
					WhitespaceNode(parent=1025,n_lines=1,current_idx=1028) 
					EnumFieldNode(field_name=mjDATATYPE_REAL,parent=1025,current_idx=1029)mjDATATYPE_REAL = 0 ,
					WhitespaceNode(parent=1025,n_lines=1,current_idx=1030)       
					SingleCommentNode(parent=1025,current_idx=1031)// real values ,  no constraints
					WhitespaceNode(parent=1025,n_lines=1,current_idx=1032) 
					EnumFieldNode(field_name=mjDATATYPE_POSITIVE,parent=1025,current_idx=1033)mjDATATYPE_POSITIVE ,
					WhitespaceNode(parent=1025,n_lines=1,current_idx=1034)           
					SingleCommentNode(parent=1025,current_idx=1035)// positive values ;  0 or negative: inactive
					WhitespaceNode(parent=1025,n_lines=1,current_idx=1036) 
					EnumFieldNode(field_name=mjDATATYPE_AXIS,parent=1025,current_idx=1037)mjDATATYPE_AXIS ,
					WhitespaceNode(parent=1025,n_lines=1,current_idx=1038)               
					SingleCommentNode(parent=1025,current_idx=1039)// 3D unit vector
					WhitespaceNode(parent=1025,n_lines=1,current_idx=1040) 
					EnumFieldNode(field_name=mjDATATYPE_QUATERNION,parent=1025,current_idx=1041)mjDATATYPE_QUATERNION
					SingleCommentNode(parent=1025,current_idx=1042)// unit quaternion
				}
			DeletedNode(parent=15,current_idx=0)mjtDataType
		mjtDataType ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1044)  
		TypedefNode(parent=15,current_idx=1045,typename=mjtSameFrame)typedef
			EnumNode(name=mjtSameFrame_,parent=1045,current_idx=1046)enum mjtSameFrame_
				ScopeNode(parent=1046,current_idx=1047,scope_type=ENUM){
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1048)    
					SingleCommentNode(parent=1047,current_idx=1049)// frame alignment of bodies with their children
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1050) 
					EnumFieldNode(field_name=mjSAMEFRAME_NONE,parent=1047,current_idx=1051)mjSAMEFRAME_NONE = 0 ,
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1052)       
					SingleCommentNode(parent=1047,current_idx=1053)// no alignment
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1054) 
					EnumFieldNode(field_name=mjSAMEFRAME_BODY,parent=1047,current_idx=1055)mjSAMEFRAME_BODY ,
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1056)              
					SingleCommentNode(parent=1047,current_idx=1057)// frame is same as body frame
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1058) 
					EnumFieldNode(field_name=mjSAMEFRAME_INERTIA,parent=1047,current_idx=1059)mjSAMEFRAME_INERTIA ,
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1060)           
					SingleCommentNode(parent=1047,current_idx=1061)// frame is same as inertial frame
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1062) 
					EnumFieldNode(field_name=mjSAMEFRAME_BODYROT,parent=1047,current_idx=1063)mjSAMEFRAME_BODYROT ,
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1064)           
					SingleCommentNode(parent=1047,current_idx=1065)// frame orientation is same as body orientation
					WhitespaceNode(parent=1047,n_lines=1,current_idx=1066) 
					EnumFieldNode(field_name=mjSAMEFRAME_INERTIAROT,parent=1047,current_idx=1067)mjSAMEFRAME_INERTIAROT
					SingleCommentNode(parent=1047,current_idx=1068)// frame orientation is same as inertia orientation
				}
			DeletedNode(parent=15,current_idx=0)mjtSameFrame
		mjtSameFrame ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1070)  
		TypedefNode(parent=15,current_idx=1071,typename=mjtLRMode)typedef
			EnumNode(name=mjtLRMode_,parent=1071,current_idx=1072)enum mjtLRMode_
				ScopeNode(parent=1072,current_idx=1073,scope_type=ENUM){
					WhitespaceNode(parent=1073,n_lines=1,current_idx=1074)       
					SingleCommentNode(parent=1073,current_idx=1075)// mode for actuator length range computation
					WhitespaceNode(parent=1073,n_lines=1,current_idx=1076) 
					EnumFieldNode(field_name=mjLRMODE_NONE,parent=1073,current_idx=1077)mjLRMODE_NONE = 0 ,
					WhitespaceNode(parent=1073,n_lines=1,current_idx=1078)           
					SingleCommentNode(parent=1073,current_idx=1079)// do not process any actuators
					WhitespaceNode(parent=1073,n_lines=1,current_idx=1080) 
					EnumFieldNode(field_name=mjLRMODE_MUSCLE,parent=1073,current_idx=1081)mjLRMODE_MUSCLE ,
					WhitespaceNode(parent=1073,n_lines=1,current_idx=1082)               
					SingleCommentNode(parent=1073,current_idx=1083)// process muscle actuators
					WhitespaceNode(parent=1073,n_lines=1,current_idx=1084) 
					EnumFieldNode(field_name=mjLRMODE_MUSCLEUSER,parent=1073,current_idx=1085)mjLRMODE_MUSCLEUSER ,
					WhitespaceNode(parent=1073,n_lines=1,current_idx=1086)           
					SingleCommentNode(parent=1073,current_idx=1087)// process muscle and user actuators
					WhitespaceNode(parent=1073,n_lines=1,current_idx=1088) 
					EnumFieldNode(field_name=mjLRMODE_ALL,parent=1073,current_idx=1089)mjLRMODE_ALL
					SingleCommentNode(parent=1073,current_idx=1090)// process all actuators
				}
			DeletedNode(parent=15,current_idx=0)mjtLRMode
		mjtLRMode ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1092)  
		TypedefNode(parent=15,current_idx=1093,typename=mjtFlexSelf)typedef
			EnumNode(name=mjtFlexSelf_,parent=1093,current_idx=1094)enum mjtFlexSelf_
				ScopeNode(parent=1094,current_idx=1095,scope_type=ENUM){
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1096)     
					SingleCommentNode(parent=1095,current_idx=1097)// mode for flex selfcollide
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1098) 
					EnumFieldNode(field_name=mjFLEXSELF_NONE,parent=1095,current_idx=1099)mjFLEXSELF_NONE = 0 ,
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1100)         
					SingleCommentNode(parent=1095,current_idx=1101)// no self-collisions
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1102) 
					EnumFieldNode(field_name=mjFLEXSELF_NARROW,parent=1095,current_idx=1103)mjFLEXSELF_NARROW ,
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1104)             
					SingleCommentNode(parent=1095,current_idx=1105)// skip midphase ,  go directly to narrowphase
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1106) 
					EnumFieldNode(field_name=mjFLEXSELF_BVH,parent=1095,current_idx=1107)mjFLEXSELF_BVH ,
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1108)                
					SingleCommentNode(parent=1095,current_idx=1109)// use BVH in midphase (if midphase enabled)
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1110) 
					EnumFieldNode(field_name=mjFLEXSELF_SAP,parent=1095,current_idx=1111)mjFLEXSELF_SAP ,
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1112)                
					SingleCommentNode(parent=1095,current_idx=1113)// use SAP in midphase
					WhitespaceNode(parent=1095,n_lines=1,current_idx=1114) 
					EnumFieldNode(field_name=mjFLEXSELF_AUTO,parent=1095,current_idx=1115)mjFLEXSELF_AUTO
					SingleCommentNode(parent=1095,current_idx=1116)// choose between BVH and SAP automatically
				}
			DeletedNode(parent=15,current_idx=0)mjtFlexSelf
		mjtFlexSelf ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1118)  
		SingleCommentNode(parent=15,current_idx=1119) ---------------------------------- mjLROpt -------------------------------------------------------
		WhitespaceNode(parent=15,n_lines=1,current_idx=1120)
		StructNode(name=mjLROpt_,parent=15,current_idx=1121)struct mjLROpt_
			ScopeNode(parent=1121,current_idx=1122,scope_type=STRUCT){
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1123)               
				SingleCommentNode(parent=1122,current_idx=1124)// options for mj_setLengthRange()
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1125) 
				SingleCommentNode(parent=1122,current_idx=1126)// flags
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1127) 
				StructFieldNode(field_name=mode,parent=1122,current_idx=1128)int mode ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1129)                      
				SingleCommentNode(parent=1122,current_idx=1130)// which actuators to process (mjtLRMode)
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1131) 
				StructFieldNode(field_name=useexisting,parent=1122,current_idx=1132)int useexisting ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1133)               
				SingleCommentNode(parent=1122,current_idx=1134)// use existing length range if available
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1135) 
				StructFieldNode(field_name=uselimit,parent=1122,current_idx=1136)int uselimit ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1137)                  
				SingleCommentNode(parent=1122,current_idx=1138)// use joint and tendon limits if available
				WhitespaceNode(parent=1122,n_lines=2,current_idx=1139)  
				SingleCommentNode(parent=1122,current_idx=1140)// algorithm parameters
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1141) 
				StructFieldNode(field_name=accel,parent=1122,current_idx=1142)mjtNum accel ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1143)                  
				SingleCommentNode(parent=1122,current_idx=1144)// target acceleration used to compute force
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1145) 
				StructFieldNode(field_name=maxforce,parent=1122,current_idx=1146)mjtNum maxforce ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1147)               
				SingleCommentNode(parent=1122,current_idx=1148)// maximum force ;  0: no limit
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1149) 
				StructFieldNode(field_name=timeconst,parent=1122,current_idx=1150)mjtNum timeconst ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1151)              
				SingleCommentNode(parent=1122,current_idx=1152)// time constant for velocity reduction ;  min 0.01
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1153) 
				StructFieldNode(field_name=timestep,parent=1122,current_idx=1154)mjtNum timestep ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1155)               
				SingleCommentNode(parent=1122,current_idx=1156)// simulation timestep ;  0: use mjOption.timestep
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1157) 
				StructFieldNode(field_name=inttotal,parent=1122,current_idx=1158)mjtNum inttotal ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1159)               
				SingleCommentNode(parent=1122,current_idx=1160)// total simulation time interval
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1161) 
				StructFieldNode(field_name=interval,parent=1122,current_idx=1162)mjtNum interval ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1163)               
				SingleCommentNode(parent=1122,current_idx=1164)// evaluation time interval (at the end)
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1165) 
				StructFieldNode(field_name=tolrange,parent=1122,current_idx=1166)mjtNum tolrange ;
				WhitespaceNode(parent=1122,n_lines=1,current_idx=1167)               
				SingleCommentNode(parent=1122,current_idx=1168)// convergence tolerance (relative to range)
			}
		;
		WhitespaceNode(parent=15,n_lines=1,current_idx=1169)
		TypedefNode(parent=15,current_idx=1170,typename=mjLROpt)typedef
			StructNode(name=mjLROpt_,parent=1170,current_idx=1171)struct mjLROpt_
			DeletedNode(parent=15,current_idx=0)mjLROpt
		mjLROpt ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1173)  
		SingleCommentNode(parent=15,current_idx=1174) ---------------------------------- mjVFS ---------------------------------------------------------
		WhitespaceNode(parent=15,n_lines=1,current_idx=1175)
		StructNode(name=mjVFS_,parent=15,current_idx=1176)struct mjVFS_
			ScopeNode(parent=1176,current_idx=1177,scope_type=STRUCT){
				WhitespaceNode(parent=1177,n_lines=1,current_idx=1178)                             
				SingleCommentNode(parent=1177,current_idx=1179)// virtual file system for loading from memory
				WhitespaceNode(parent=1177,n_lines=1,current_idx=1180) 
				StructFieldNode(field_name=impl_,parent=1177,current_idx=1181)void* impl_ ;
				WhitespaceNode(parent=1177,n_lines=1,current_idx=1182)                               
				SingleCommentNode(parent=1177,current_idx=1183)// internal pointer to VFS memory
			}
		;
		WhitespaceNode(parent=15,n_lines=1,current_idx=1184)
		TypedefNode(parent=15,current_idx=1185,typename=mjVFS)typedef
			StructNode(name=mjVFS_,parent=1185,current_idx=1186)struct mjVFS_
			DeletedNode(parent=15,current_idx=0)mjVFS
		mjVFS ;
		WhitespaceNode(parent=15,n_lines=2,current_idx=1188) 
		SingleCommentNode(parent=15,current_idx=1189) ---------------------------------- mjOption ------------------------------------------------------
		WhitespaceNode(parent=15,n_lines=1,current_idx=1190)
		StructNode(name=mjOption_,parent=15,current_idx=1191)struct mjOption_
			ScopeNode(parent=1191,current_idx=1192,scope_type=STRUCT){
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1193)              
				SingleCommentNode(parent=1192,current_idx=1194)// physics options
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1195) 
				SingleCommentNode(parent=1192,current_idx=1196)// timing parameters
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1197) 
				StructFieldNode(field_name=timestep,parent=1192,current_idx=1198)mjtNum timestep ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1199)               
				SingleCommentNode(parent=1192,current_idx=1200)// timestep
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1201) 
				StructFieldNode(field_name=apirate,parent=1192,current_idx=1202)mjtNum apirate ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1203)                
				SingleCommentNode(parent=1192,current_idx=1204)// update rate for remote API (Hz)
				WhitespaceNode(parent=1192,n_lines=2,current_idx=1205)  
				SingleCommentNode(parent=1192,current_idx=1206)// solver parameters
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1207) 
				StructFieldNode(field_name=impratio,parent=1192,current_idx=1208)mjtNum impratio ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1209)               
				SingleCommentNode(parent=1192,current_idx=1210)// ratio of friction-to-normal contact impedance
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1211) 
				StructFieldNode(field_name=tolerance,parent=1192,current_idx=1212)mjtNum tolerance ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1213)              
				SingleCommentNode(parent=1192,current_idx=1214)// main solver tolerance
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1215) 
				StructFieldNode(field_name=ls_tolerance,parent=1192,current_idx=1216)mjtNum ls_tolerance ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1217)           
				SingleCommentNode(parent=1192,current_idx=1218)// CG/Newton linesearch tolerance
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1219) 
				StructFieldNode(field_name=noslip_tolerance,parent=1192,current_idx=1220)mjtNum noslip_tolerance ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1221)       
				SingleCommentNode(parent=1192,current_idx=1222)// noslip solver tolerance
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1223) 
				StructFieldNode(field_name=ccd_tolerance,parent=1192,current_idx=1224)mjtNum ccd_tolerance ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1225)          
				SingleCommentNode(parent=1192,current_idx=1226)// convex collision solver tolerance
				WhitespaceNode(parent=1192,n_lines=2,current_idx=1227)  
				SingleCommentNode(parent=1192,current_idx=1228)// physical constants
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1229) 
				StructFieldNode(field_name=gravity[3],parent=1192,current_idx=1230)mjtNum gravity[3] ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1231)             
				SingleCommentNode(parent=1192,current_idx=1232)// gravitational acceleration
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1233) 
				StructFieldNode(field_name=wind[3],parent=1192,current_idx=1234)mjtNum wind[3] ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1235)                
				SingleCommentNode(parent=1192,current_idx=1236)// wind (for lift ,  drag and viscosity)
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1237) 
				StructFieldNode(field_name=magnetic[3],parent=1192,current_idx=1238)mjtNum magnetic[3] ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1239)            
				SingleCommentNode(parent=1192,current_idx=1240)// global magnetic flux
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1241) 
				StructFieldNode(field_name=density,parent=1192,current_idx=1242)mjtNum density ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1243)                
				SingleCommentNode(parent=1192,current_idx=1244)// density of medium
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1245) 
				StructFieldNode(field_name=viscosity,parent=1192,current_idx=1246)mjtNum viscosity ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1247)              
				SingleCommentNode(parent=1192,current_idx=1248)// viscosity of medium
				WhitespaceNode(parent=1192,n_lines=2,current_idx=1249)  
				SingleCommentNode(parent=1192,current_idx=1250)// override contact solver parameters (if enabled)
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1251) 
				StructFieldNode(field_name=o_margin,parent=1192,current_idx=1252)mjtNum o_margin ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1253)               
				SingleCommentNode(parent=1192,current_idx=1254)// margin
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1255) 
				StructFieldNode(field_name=o_solref[mjNREF],parent=1192,current_idx=1256)mjtNum o_solref[mjNREF] ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1257)       
				SingleCommentNode(parent=1192,current_idx=1258)// solref
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1259) 
				StructFieldNode(field_name=o_solimp[mjNIMP],parent=1192,current_idx=1260)mjtNum o_solimp[mjNIMP] ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1261)       
				SingleCommentNode(parent=1192,current_idx=1262)// solimp
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1263) 
				StructFieldNode(field_name=o_friction[5],parent=1192,current_idx=1264)mjtNum o_friction[5] ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1265)          
				SingleCommentNode(parent=1192,current_idx=1266)// friction
				WhitespaceNode(parent=1192,n_lines=2,current_idx=1267)  
				SingleCommentNode(parent=1192,current_idx=1268)// discrete settings
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1269) 
				StructFieldNode(field_name=integrator,parent=1192,current_idx=1270)int integrator ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1271)                
				SingleCommentNode(parent=1192,current_idx=1272)// integration mode (mjtIntegrator)
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1273) 
				StructFieldNode(field_name=cone,parent=1192,current_idx=1274)int cone ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1275)                      
				SingleCommentNode(parent=1192,current_idx=1276)// type of friction cone (mjtCone)
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1277) 
				StructFieldNode(field_name=jacobian,parent=1192,current_idx=1278)int jacobian ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1279)                  
				SingleCommentNode(parent=1192,current_idx=1280)// type of Jacobian (mjtJacobian)
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1281) 
				StructFieldNode(field_name=solver,parent=1192,current_idx=1282)int solver ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1283)                    
				SingleCommentNode(parent=1192,current_idx=1284)// solver algorithm (mjtSolver)
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1285) 
				StructFieldNode(field_name=iterations,parent=1192,current_idx=1286)int iterations ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1287)                
				SingleCommentNode(parent=1192,current_idx=1288)// maximum number of main solver iterations
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1289) 
				StructFieldNode(field_name=ls_iterations,parent=1192,current_idx=1290)int ls_iterations ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1291)             
				SingleCommentNode(parent=1192,current_idx=1292)// maximum number of CG/Newton linesearch iterations
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1293) 
				StructFieldNode(field_name=noslip_iterations,parent=1192,current_idx=1294)int noslip_iterations ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1295)         
				SingleCommentNode(parent=1192,current_idx=1296)// maximum number of noslip solver iterations
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1297) 
				StructFieldNode(field_name=ccd_iterations,parent=1192,current_idx=1298)int ccd_iterations ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1299)            
				SingleCommentNode(parent=1192,current_idx=1300)// maximum number of convex collision solver iterations
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1301) 
				StructFieldNode(field_name=disableflags,parent=1192,current_idx=1302)int disableflags ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1303)              
				SingleCommentNode(parent=1192,current_idx=1304)// bit flags for disabling standard features
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1305) 
				StructFieldNode(field_name=enableflags,parent=1192,current_idx=1306)int enableflags ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1307)               
				SingleCommentNode(parent=1192,current_idx=1308)// bit flags for enabling optional features
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1309) 
				StructFieldNode(field_name=disableactuator,parent=1192,current_idx=1310)int disableactuator ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1311)           
				SingleCommentNode(parent=1192,current_idx=1312)// bit flags for disabling actuators by group id
				WhitespaceNode(parent=1192,n_lines=2,current_idx=1313)  
				SingleCommentNode(parent=1192,current_idx=1314)// sdf collision settings
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1315) 
				StructFieldNode(field_name=sdf_initpoints,parent=1192,current_idx=1316)int sdf_initpoints ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1317)            
				SingleCommentNode(parent=1192,current_idx=1318)// number of starting points for gradient descent
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1319) 
				StructFieldNode(field_name=sdf_iterations,parent=1192,current_idx=1320)int sdf_iterations ;
				WhitespaceNode(parent=1192,n_lines=1,current_idx=1321)            
				SingleCommentNode(parent=1192,current_idx=1322)// max number of iterations for gradient descent
			}
		;
		WhitespaceNode(parent=15,n_lines=1,current_idx=1323)
		TypedefNode(parent=15,current_idx=1324,typename=mjOption)typedef
			StructNode(name=mjOption_,parent=1324,current_idx=1325)struct mjOption_
			DeletedNode(parent=15,current_idx=0)mjOption
		mjOption ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1327)  
		SingleCommentNode(parent=15,current_idx=1328) ---------------------------------- mjVisual ------------------------------------------------------
		WhitespaceNode(parent=15,n_lines=1,current_idx=1329)
		StructNode(name=mjVisual_,parent=15,current_idx=1330)struct mjVisual_
			ScopeNode(parent=1330,current_idx=1331,scope_type=STRUCT){
				WhitespaceNode(parent=1331,n_lines=1,current_idx=1332)              
				SingleCommentNode(parent=1331,current_idx=1333)// visualization options
				WhitespaceNode(parent=1331,n_lines=1,current_idx=1334) 
				StructFieldNode(field_name=global,parent=1331,current_idx=1335)
					StructNode(name=AnonymousStruct,parent=1335,current_idx=1336)struct
						ScopeNode(parent=1336,current_idx=1337,scope_type=STRUCT){
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1338)                      
							SingleCommentNode(parent=1337,current_idx=1339)// global parameters
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1340)   
							StructFieldNode(field_name=orthographic,parent=1337,current_idx=1341)int orthographic ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1342)            
							SingleCommentNode(parent=1337,current_idx=1343)// is the free camera orthographic (0: no ,  1: yes)
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1344)   
							StructFieldNode(field_name=fovy,parent=1337,current_idx=1345)float fovy ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1346)                  
							SingleCommentNode(parent=1337,current_idx=1347)// y field-of-view of free camera (orthographic ? length : degree)
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1348)   
							StructFieldNode(field_name=ipd,parent=1337,current_idx=1349)float ipd ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1350)                   
							SingleCommentNode(parent=1337,current_idx=1351)// inter-pupilary distance for free camera
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1352)   
							StructFieldNode(field_name=azimuth,parent=1337,current_idx=1353)float azimuth ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1354)               
							SingleCommentNode(parent=1337,current_idx=1355)// initial azimuth of free camera (degrees)
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1356)   
							StructFieldNode(field_name=elevation,parent=1337,current_idx=1357)float elevation ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1358)             
							SingleCommentNode(parent=1337,current_idx=1359)// initial elevation of free camera (degrees)
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1360)   
							StructFieldNode(field_name=linewidth,parent=1337,current_idx=1361)float linewidth ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1362)             
							SingleCommentNode(parent=1337,current_idx=1363)// line width for wireframe and ray rendering
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1364)   
							StructFieldNode(field_name=glow,parent=1337,current_idx=1365)float glow ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1366)                  
							SingleCommentNode(parent=1337,current_idx=1367)// glow coefficient for selected body
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1368)   
							StructFieldNode(field_name=realtime,parent=1337,current_idx=1369)float realtime ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1370)              
							SingleCommentNode(parent=1337,current_idx=1371)// initial real-time factor (1: real time)
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1372)   
							StructFieldNode(field_name=offwidth,parent=1337,current_idx=1373)int   offwidth ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1374)              
							SingleCommentNode(parent=1337,current_idx=1375)// width of offscreen buffer
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1376)   
							StructFieldNode(field_name=offheight,parent=1337,current_idx=1377)int   offheight ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1378)             
							SingleCommentNode(parent=1337,current_idx=1379)// height of offscreen buffer
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1380)   
							StructFieldNode(field_name=ellipsoidinertia,parent=1337,current_idx=1381)int   ellipsoidinertia ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1382)      
							SingleCommentNode(parent=1337,current_idx=1383)// geom for inertia visualization (0: box ,  1: ellipsoid)
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1384)   
							StructFieldNode(field_name=bvactive,parent=1337,current_idx=1385)int   bvactive ;
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1386)              
							SingleCommentNode(parent=1337,current_idx=1387)// visualize active bounding volumes (0: no ,  1: yes)
							WhitespaceNode(parent=1337,n_lines=1,current_idx=1388) 
						}
				global ;
				WhitespaceNode(parent=1331,n_lines=3,current_idx=1389)   
				StructFieldNode(field_name=quality,parent=1331,current_idx=1390)
					StructNode(name=AnonymousStruct,parent=1390,current_idx=1391)struct
						ScopeNode(parent=1391,current_idx=1392,scope_type=STRUCT){
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1393)                      
							SingleCommentNode(parent=1392,current_idx=1394)// rendering quality
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1395)   
							StructFieldNode(field_name=shadowsize,parent=1392,current_idx=1396)int   shadowsize ;
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1397)            
							SingleCommentNode(parent=1392,current_idx=1398)// size of shadowmap texture
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1399)   
							StructFieldNode(field_name=offsamples,parent=1392,current_idx=1400)int   offsamples ;
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1401)            
							SingleCommentNode(parent=1392,current_idx=1402)// number of multisamples for offscreen rendering
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1403)   
							StructFieldNode(field_name=numslices,parent=1392,current_idx=1404)int   numslices ;
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1405)             
							SingleCommentNode(parent=1392,current_idx=1406)// number of slices for builtin geom drawing
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1407)   
							StructFieldNode(field_name=numstacks,parent=1392,current_idx=1408)int   numstacks ;
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1409)             
							SingleCommentNode(parent=1392,current_idx=1410)// number of stacks for builtin geom drawing
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1411)   
							StructFieldNode(field_name=numquads,parent=1392,current_idx=1412)int   numquads ;
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1413)              
							SingleCommentNode(parent=1392,current_idx=1414)// number of quads for box rendering
							WhitespaceNode(parent=1392,n_lines=1,current_idx=1415) 
						}
				quality ;
				WhitespaceNode(parent=1331,n_lines=3,current_idx=1416)   
				StructFieldNode(field_name=headlight,parent=1331,current_idx=1417)
					StructNode(name=AnonymousStruct,parent=1417,current_idx=1418)struct
						ScopeNode(parent=1418,current_idx=1419,scope_type=STRUCT){
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1420)                      
							SingleCommentNode(parent=1419,current_idx=1421)// head light
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1422)   
							StructFieldNode(field_name=ambient[3],parent=1419,current_idx=1423)float ambient[3] ;
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1424)            
							SingleCommentNode(parent=1419,current_idx=1425)// ambient rgb (alpha=1)
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1426)   
							StructFieldNode(field_name=diffuse[3],parent=1419,current_idx=1427)float diffuse[3] ;
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1428)            
							SingleCommentNode(parent=1419,current_idx=1429)// diffuse rgb (alpha=1)
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1430)   
							StructFieldNode(field_name=specular[3],parent=1419,current_idx=1431)float specular[3] ;
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1432)           
							SingleCommentNode(parent=1419,current_idx=1433)// specular rgb (alpha=1)
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1434)   
							StructFieldNode(field_name=active,parent=1419,current_idx=1435)int   active ;
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1436)                
							SingleCommentNode(parent=1419,current_idx=1437)// is headlight active
							WhitespaceNode(parent=1419,n_lines=1,current_idx=1438) 
						}
				headlight ;
				WhitespaceNode(parent=1331,n_lines=3,current_idx=1439)   
				StructFieldNode(field_name=map,parent=1331,current_idx=1440)
					StructNode(name=AnonymousStruct,parent=1440,current_idx=1441)struct
						ScopeNode(parent=1441,current_idx=1442,scope_type=STRUCT){
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1443)                      
							SingleCommentNode(parent=1442,current_idx=1444)// mapping
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1445)   
							StructFieldNode(field_name=stiffness,parent=1442,current_idx=1446)float stiffness ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1447)             
							SingleCommentNode(parent=1442,current_idx=1448)// mouse perturbation stiffness (space->force)
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1449)   
							StructFieldNode(field_name=stiffnessrot,parent=1442,current_idx=1450)float stiffnessrot ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1451)          
							SingleCommentNode(parent=1442,current_idx=1452)// mouse perturbation stiffness (space->torque)
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1453)   
							StructFieldNode(field_name=force,parent=1442,current_idx=1454)float force ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1455)                 
							SingleCommentNode(parent=1442,current_idx=1456)// from force units to space units
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1457)   
							StructFieldNode(field_name=torque,parent=1442,current_idx=1458)float torque ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1459)                
							SingleCommentNode(parent=1442,current_idx=1460)// from torque units to space units
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1461)   
							StructFieldNode(field_name=alpha,parent=1442,current_idx=1462)float alpha ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1463)                 
							SingleCommentNode(parent=1442,current_idx=1464)// scale geom alphas when transparency is enabled
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1465)   
							StructFieldNode(field_name=fogstart,parent=1442,current_idx=1466)float fogstart ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1467)              
							SingleCommentNode(parent=1442,current_idx=1468)// OpenGL fog starts at fogstart * mjModel.stat.extent
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1469)   
							StructFieldNode(field_name=fogend,parent=1442,current_idx=1470)float fogend ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1471)                
							SingleCommentNode(parent=1442,current_idx=1472)// OpenGL fog ends at fogend * mjModel.stat.extent
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1473)   
							StructFieldNode(field_name=znear,parent=1442,current_idx=1474)float znear ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1475)                 
							SingleCommentNode(parent=1442,current_idx=1476)// near clipping plane = znear * mjModel.stat.extent
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1477)   
							StructFieldNode(field_name=zfar,parent=1442,current_idx=1478)float zfar ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1479)                  
							SingleCommentNode(parent=1442,current_idx=1480)// far clipping plane = zfar * mjModel.stat.extent
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1481)   
							StructFieldNode(field_name=haze,parent=1442,current_idx=1482)float haze ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1483)                  
							SingleCommentNode(parent=1442,current_idx=1484)// haze ratio
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1485)   
							StructFieldNode(field_name=shadowclip,parent=1442,current_idx=1486)float shadowclip ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1487)            
							SingleCommentNode(parent=1442,current_idx=1488)// directional light: shadowclip * mjModel.stat.extent
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1489)   
							StructFieldNode(field_name=shadowscale,parent=1442,current_idx=1490)float shadowscale ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1491)           
							SingleCommentNode(parent=1442,current_idx=1492)// spot light: shadowscale * light.cutoff
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1493)   
							StructFieldNode(field_name=actuatortendon,parent=1442,current_idx=1494)float actuatortendon ;
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1495)        
							SingleCommentNode(parent=1442,current_idx=1496)// scale tendon width
							WhitespaceNode(parent=1442,n_lines=1,current_idx=1497) 
						}
				map ;
				WhitespaceNode(parent=1331,n_lines=3,current_idx=1498)   
				StructFieldNode(field_name=scale,parent=1331,current_idx=1499)
					StructNode(name=AnonymousStruct,parent=1499,current_idx=1500)struct
						ScopeNode(parent=1500,current_idx=1501,scope_type=STRUCT){
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1502)                      
							SingleCommentNode(parent=1501,current_idx=1503)// scale of decor elements relative to mean body size
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1504)   
							StructFieldNode(field_name=forcewidth,parent=1501,current_idx=1505)float forcewidth ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1506)            
							SingleCommentNode(parent=1501,current_idx=1507)// width of force arrow
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1508)   
							StructFieldNode(field_name=contactwidth,parent=1501,current_idx=1509)float contactwidth ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1510)          
							SingleCommentNode(parent=1501,current_idx=1511)// contact width
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1512)   
							StructFieldNode(field_name=contactheight,parent=1501,current_idx=1513)float contactheight ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1514)         
							SingleCommentNode(parent=1501,current_idx=1515)// contact height
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1516)   
							StructFieldNode(field_name=connect,parent=1501,current_idx=1517)float connect ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1518)               
							SingleCommentNode(parent=1501,current_idx=1519)// autoconnect capsule width
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1520)   
							StructFieldNode(field_name=com,parent=1501,current_idx=1521)float com ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1522)                   
							SingleCommentNode(parent=1501,current_idx=1523)// com radius
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1524)   
							StructFieldNode(field_name=camera,parent=1501,current_idx=1525)float camera ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1526)                
							SingleCommentNode(parent=1501,current_idx=1527)// camera object
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1528)   
							StructFieldNode(field_name=light,parent=1501,current_idx=1529)float light ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1530)                 
							SingleCommentNode(parent=1501,current_idx=1531)// light object
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1532)   
							StructFieldNode(field_name=selectpoint,parent=1501,current_idx=1533)float selectpoint ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1534)           
							SingleCommentNode(parent=1501,current_idx=1535)// selection point
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1536)   
							StructFieldNode(field_name=jointlength,parent=1501,current_idx=1537)float jointlength ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1538)           
							SingleCommentNode(parent=1501,current_idx=1539)// joint length
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1540)   
							StructFieldNode(field_name=jointwidth,parent=1501,current_idx=1541)float jointwidth ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1542)            
							SingleCommentNode(parent=1501,current_idx=1543)// joint width
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1544)   
							StructFieldNode(field_name=actuatorlength,parent=1501,current_idx=1545)float actuatorlength ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1546)        
							SingleCommentNode(parent=1501,current_idx=1547)// actuator length
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1548)   
							StructFieldNode(field_name=actuatorwidth,parent=1501,current_idx=1549)float actuatorwidth ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1550)         
							SingleCommentNode(parent=1501,current_idx=1551)// actuator width
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1552)   
							StructFieldNode(field_name=framelength,parent=1501,current_idx=1553)float framelength ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1554)           
							SingleCommentNode(parent=1501,current_idx=1555)// bodyframe axis length
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1556)   
							StructFieldNode(field_name=framewidth,parent=1501,current_idx=1557)float framewidth ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1558)            
							SingleCommentNode(parent=1501,current_idx=1559)// bodyframe axis width
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1560)   
							StructFieldNode(field_name=constraint,parent=1501,current_idx=1561)float constraint ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1562)            
							SingleCommentNode(parent=1501,current_idx=1563)// constraint width
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1564)   
							StructFieldNode(field_name=slidercrank,parent=1501,current_idx=1565)float slidercrank ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1566)           
							SingleCommentNode(parent=1501,current_idx=1567)// slidercrank width
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1568)   
							StructFieldNode(field_name=frustum,parent=1501,current_idx=1569)float frustum ;
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1570)               
							SingleCommentNode(parent=1501,current_idx=1571)// frustum zfar plane
							WhitespaceNode(parent=1501,n_lines=1,current_idx=1572) 
						}
				scale ;
				WhitespaceNode(parent=1331,n_lines=3,current_idx=1573)   
				StructFieldNode(field_name=rgba,parent=1331,current_idx=1574)
					StructNode(name=AnonymousStruct,parent=1574,current_idx=1575)struct
						ScopeNode(parent=1575,current_idx=1576,scope_type=STRUCT){
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1577)                      
							SingleCommentNode(parent=1576,current_idx=1578)// color of decor elements
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1579)   
							StructFieldNode(field_name=fog[4],parent=1576,current_idx=1580)float fog[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1581)                
							SingleCommentNode(parent=1576,current_idx=1582)// fog
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1583)   
							StructFieldNode(field_name=haze[4],parent=1576,current_idx=1584)float haze[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1585)               
							SingleCommentNode(parent=1576,current_idx=1586)// haze
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1587)   
							StructFieldNode(field_name=force[4],parent=1576,current_idx=1588)float force[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1589)              
							SingleCommentNode(parent=1576,current_idx=1590)// external force
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1591)   
							StructFieldNode(field_name=inertia[4],parent=1576,current_idx=1592)float inertia[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1593)            
							SingleCommentNode(parent=1576,current_idx=1594)// inertia box
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1595)   
							StructFieldNode(field_name=joint[4],parent=1576,current_idx=1596)float joint[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1597)              
							SingleCommentNode(parent=1576,current_idx=1598)// joint
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1599)   
							StructFieldNode(field_name=actuator[4],parent=1576,current_idx=1600)float actuator[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1601)           
							SingleCommentNode(parent=1576,current_idx=1602)// actuator ,  neutral
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1603)   
							StructFieldNode(field_name=actuatornegative[4],parent=1576,current_idx=1604)float actuatornegative[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1605)   
							SingleCommentNode(parent=1576,current_idx=1606)// actuator ,  negative limit
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1607)   
							StructFieldNode(field_name=actuatorpositive[4],parent=1576,current_idx=1608)float actuatorpositive[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1609)   
							SingleCommentNode(parent=1576,current_idx=1610)// actuator ,  positive limit
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1611)   
							StructFieldNode(field_name=com[4],parent=1576,current_idx=1612)float com[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1613)                
							SingleCommentNode(parent=1576,current_idx=1614)// center of mass
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1615)   
							StructFieldNode(field_name=camera[4],parent=1576,current_idx=1616)float camera[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1617)             
							SingleCommentNode(parent=1576,current_idx=1618)// camera object
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1619)   
							StructFieldNode(field_name=light[4],parent=1576,current_idx=1620)float light[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1621)              
							SingleCommentNode(parent=1576,current_idx=1622)// light object
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1623)   
							StructFieldNode(field_name=selectpoint[4],parent=1576,current_idx=1624)float selectpoint[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1625)        
							SingleCommentNode(parent=1576,current_idx=1626)// selection point
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1627)   
							StructFieldNode(field_name=connect[4],parent=1576,current_idx=1628)float connect[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1629)            
							SingleCommentNode(parent=1576,current_idx=1630)// auto connect
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1631)   
							StructFieldNode(field_name=contactpoint[4],parent=1576,current_idx=1632)float contactpoint[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1633)       
							SingleCommentNode(parent=1576,current_idx=1634)// contact point
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1635)   
							StructFieldNode(field_name=contactforce[4],parent=1576,current_idx=1636)float contactforce[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1637)       
							SingleCommentNode(parent=1576,current_idx=1638)// contact force
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1639)   
							StructFieldNode(field_name=contactfriction[4],parent=1576,current_idx=1640)float contactfriction[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1641)    
							SingleCommentNode(parent=1576,current_idx=1642)// contact friction force
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1643)   
							StructFieldNode(field_name=contacttorque[4],parent=1576,current_idx=1644)float contacttorque[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1645)      
							SingleCommentNode(parent=1576,current_idx=1646)// contact torque
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1647)   
							StructFieldNode(field_name=contactgap[4],parent=1576,current_idx=1648)float contactgap[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1649)         
							SingleCommentNode(parent=1576,current_idx=1650)// contact point in gap
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1651)   
							StructFieldNode(field_name=rangefinder[4],parent=1576,current_idx=1652)float rangefinder[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1653)        
							SingleCommentNode(parent=1576,current_idx=1654)// rangefinder ray
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1655)   
							StructFieldNode(field_name=constraint[4],parent=1576,current_idx=1656)float constraint[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1657)         
							SingleCommentNode(parent=1576,current_idx=1658)// constraint
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1659)   
							StructFieldNode(field_name=slidercrank[4],parent=1576,current_idx=1660)float slidercrank[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1661)        
							SingleCommentNode(parent=1576,current_idx=1662)// slidercrank
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1663)   
							StructFieldNode(field_name=crankbroken[4],parent=1576,current_idx=1664)float crankbroken[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1665)        
							SingleCommentNode(parent=1576,current_idx=1666)// used when crank must be stretched/broken
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1667)   
							StructFieldNode(field_name=frustum[4],parent=1576,current_idx=1668)float frustum[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1669)            
							SingleCommentNode(parent=1576,current_idx=1670)// camera frustum
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1671)   
							StructFieldNode(field_name=bv[4],parent=1576,current_idx=1672)float bv[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1673)                 
							SingleCommentNode(parent=1576,current_idx=1674)// bounding volume
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1675)   
							StructFieldNode(field_name=bvactive[4],parent=1576,current_idx=1676)float bvactive[4] ;
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1677)           
							SingleCommentNode(parent=1576,current_idx=1678)// active bounding volume
							WhitespaceNode(parent=1576,n_lines=1,current_idx=1679) 
						}
				rgba ;
				WhitespaceNode(parent=1331,n_lines=1,current_idx=1680)
			}
		;
		WhitespaceNode(parent=15,n_lines=1,current_idx=1681)
		TypedefNode(parent=15,current_idx=1682,typename=mjVisual)typedef
			StructNode(name=mjVisual_,parent=1682,current_idx=1683)struct mjVisual_
			DeletedNode(parent=15,current_idx=0)mjVisual
		mjVisual ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1685)  
		SingleCommentNode(parent=15,current_idx=1686) ---------------------------------- mjStatistic ---------------------------------------------------
		WhitespaceNode(parent=15,n_lines=1,current_idx=1687)
		StructNode(name=mjStatistic_,parent=15,current_idx=1688)struct mjStatistic_
			ScopeNode(parent=1688,current_idx=1689,scope_type=STRUCT){
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1690)           
				SingleCommentNode(parent=1689,current_idx=1691)// model statistics (in qpos0)
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1692) 
				StructFieldNode(field_name=meaninertia,parent=1689,current_idx=1693)mjtNum meaninertia ;
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1694)            
				SingleCommentNode(parent=1689,current_idx=1695)// mean diagonal inertia
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1696) 
				StructFieldNode(field_name=meanmass,parent=1689,current_idx=1697)mjtNum meanmass ;
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1698)               
				SingleCommentNode(parent=1689,current_idx=1699)// mean body mass
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1700) 
				StructFieldNode(field_name=meansize,parent=1689,current_idx=1701)mjtNum meansize ;
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1702)               
				SingleCommentNode(parent=1689,current_idx=1703)// mean body size
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1704) 
				StructFieldNode(field_name=extent,parent=1689,current_idx=1705)mjtNum extent ;
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1706)                 
				SingleCommentNode(parent=1689,current_idx=1707)// spatial extent
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1708) 
				StructFieldNode(field_name=center[3],parent=1689,current_idx=1709)mjtNum center[3] ;
				WhitespaceNode(parent=1689,n_lines=1,current_idx=1710)              
				SingleCommentNode(parent=1689,current_idx=1711)// center of model
			}
		;
		WhitespaceNode(parent=15,n_lines=1,current_idx=1712)
		TypedefNode(parent=15,current_idx=1713,typename=mjStatistic)typedef
			StructNode(name=mjStatistic_,parent=1713,current_idx=1714)struct mjStatistic_
			DeletedNode(parent=15,current_idx=0)mjStatistic
		mjStatistic ;
		WhitespaceNode(parent=15,n_lines=3,current_idx=1716)  
		SingleCommentNode(parent=15,current_idx=1717) ---------------------------------- mjModel -------------------------------------------------------
		WhitespaceNode(parent=15,n_lines=1,current_idx=1718)
		StructNode(name=mjModel_,parent=15,current_idx=1719)struct mjModel_
			ScopeNode(parent=1719,current_idx=1720,scope_type=STRUCT){
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1721) 
				SingleCommentNode(parent=1720,current_idx=1722)// ------------------------------- sizes
				WhitespaceNode(parent=1720,n_lines=2,current_idx=1723)  
				SingleCommentNode(parent=1720,current_idx=1724)// sizes needed at mjModel construction
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1725) 
				StructFieldNode(field_name=nq,parent=1720,current_idx=1726)int nq ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1727)                        
				SingleCommentNode(parent=1720,current_idx=1728)// number of generalized coordinates = dim(qpos)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1729) 
				StructFieldNode(field_name=nv,parent=1720,current_idx=1730)int nv ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1731)                        
				SingleCommentNode(parent=1720,current_idx=1732)// number of degrees of freedom = dim(qvel)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1733) 
				StructFieldNode(field_name=nu,parent=1720,current_idx=1734)int nu ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1735)                        
				SingleCommentNode(parent=1720,current_idx=1736)// number of actuators/controls = dim(ctrl)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1737) 
				StructFieldNode(field_name=na,parent=1720,current_idx=1738)int na ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1739)                        
				SingleCommentNode(parent=1720,current_idx=1740)// number of activation states = dim(act)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1741) 
				StructFieldNode(field_name=nbody,parent=1720,current_idx=1742)int nbody ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1743)                     
				SingleCommentNode(parent=1720,current_idx=1744)// number of bodies
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1745) 
				StructFieldNode(field_name=nbvh,parent=1720,current_idx=1746)int nbvh ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1747)                      
				SingleCommentNode(parent=1720,current_idx=1748)// number of total bounding volumes in all bodies
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1749) 
				StructFieldNode(field_name=nbvhstatic,parent=1720,current_idx=1750)int nbvhstatic ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1751)                
				SingleCommentNode(parent=1720,current_idx=1752)// number of static bounding volumes (aabb stored in mjModel)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1753) 
				StructFieldNode(field_name=nbvhdynamic,parent=1720,current_idx=1754)int nbvhdynamic ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1755)               
				SingleCommentNode(parent=1720,current_idx=1756)// number of dynamic bounding volumes (aabb stored in mjData)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1757) 
				StructFieldNode(field_name=njnt,parent=1720,current_idx=1758)int njnt ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1759)                      
				SingleCommentNode(parent=1720,current_idx=1760)// number of joints
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1761) 
				StructFieldNode(field_name=ngeom,parent=1720,current_idx=1762)int ngeom ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1763)                     
				SingleCommentNode(parent=1720,current_idx=1764)// number of geoms
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1765) 
				StructFieldNode(field_name=nsite,parent=1720,current_idx=1766)int nsite ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1767)                     
				SingleCommentNode(parent=1720,current_idx=1768)// number of sites
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1769) 
				StructFieldNode(field_name=ncam,parent=1720,current_idx=1770)int ncam ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1771)                      
				SingleCommentNode(parent=1720,current_idx=1772)// number of cameras
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1773) 
				StructFieldNode(field_name=nlight,parent=1720,current_idx=1774)int nlight ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1775)                    
				SingleCommentNode(parent=1720,current_idx=1776)// number of lights
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1777) 
				StructFieldNode(field_name=nflex,parent=1720,current_idx=1778)int nflex ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1779)                     
				SingleCommentNode(parent=1720,current_idx=1780)// number of flexes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1781) 
				StructFieldNode(field_name=nflexvert,parent=1720,current_idx=1782)int nflexvert ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1783)                 
				SingleCommentNode(parent=1720,current_idx=1784)// number of vertices in all flexes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1785) 
				StructFieldNode(field_name=nflexedge,parent=1720,current_idx=1786)int nflexedge ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1787)                 
				SingleCommentNode(parent=1720,current_idx=1788)// number of edges in all flexes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1789) 
				StructFieldNode(field_name=nflexelem,parent=1720,current_idx=1790)int nflexelem ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1791)                 
				SingleCommentNode(parent=1720,current_idx=1792)// number of elements in all flexes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1793) 
				StructFieldNode(field_name=nflexelemdata,parent=1720,current_idx=1794)int nflexelemdata ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1795)             
				SingleCommentNode(parent=1720,current_idx=1796)// number of element vertex ids in all flexes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1797) 
				StructFieldNode(field_name=nflexelemedge,parent=1720,current_idx=1798)int nflexelemedge ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1799)             
				SingleCommentNode(parent=1720,current_idx=1800)// number of element edge ids in all flexes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1801) 
				StructFieldNode(field_name=nflexshelldata,parent=1720,current_idx=1802)int nflexshelldata ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1803)            
				SingleCommentNode(parent=1720,current_idx=1804)// number of shell fragment vertex ids in all flexes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1805) 
				StructFieldNode(field_name=nflexevpair,parent=1720,current_idx=1806)int nflexevpair ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1807)               
				SingleCommentNode(parent=1720,current_idx=1808)// number of element-vertex pairs in all flexes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1809) 
				StructFieldNode(field_name=nflextexcoord,parent=1720,current_idx=1810)int nflextexcoord ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1811)             
				SingleCommentNode(parent=1720,current_idx=1812)// number of vertices with texture coordinates
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1813) 
				StructFieldNode(field_name=nmesh,parent=1720,current_idx=1814)int nmesh ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1815)                     
				SingleCommentNode(parent=1720,current_idx=1816)// number of meshes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1817) 
				StructFieldNode(field_name=nmeshvert,parent=1720,current_idx=1818)int nmeshvert ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1819)                 
				SingleCommentNode(parent=1720,current_idx=1820)// number of vertices in all meshes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1821) 
				StructFieldNode(field_name=nmeshnormal,parent=1720,current_idx=1822)int nmeshnormal ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1823)               
				SingleCommentNode(parent=1720,current_idx=1824)// number of normals in all meshes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1825) 
				StructFieldNode(field_name=nmeshtexcoord,parent=1720,current_idx=1826)int nmeshtexcoord ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1827)             
				SingleCommentNode(parent=1720,current_idx=1828)// number of texcoords in all meshes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1829) 
				StructFieldNode(field_name=nmeshface,parent=1720,current_idx=1830)int nmeshface ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1831)                 
				SingleCommentNode(parent=1720,current_idx=1832)// number of triangular faces in all meshes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1833) 
				StructFieldNode(field_name=nmeshgraph,parent=1720,current_idx=1834)int nmeshgraph ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1835)                
				SingleCommentNode(parent=1720,current_idx=1836)// number of ints in mesh auxiliary data
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1837) 
				StructFieldNode(field_name=nskin,parent=1720,current_idx=1838)int nskin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1839)                     
				SingleCommentNode(parent=1720,current_idx=1840)// number of skins
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1841) 
				StructFieldNode(field_name=nskinvert,parent=1720,current_idx=1842)int nskinvert ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1843)                 
				SingleCommentNode(parent=1720,current_idx=1844)// number of vertices in all skins
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1845) 
				StructFieldNode(field_name=nskintexvert,parent=1720,current_idx=1846)int nskintexvert ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1847)              
				SingleCommentNode(parent=1720,current_idx=1848)// number of vertiex with texcoords in all skins
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1849) 
				StructFieldNode(field_name=nskinface,parent=1720,current_idx=1850)int nskinface ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1851)                 
				SingleCommentNode(parent=1720,current_idx=1852)// number of triangular faces in all skins
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1853) 
				StructFieldNode(field_name=nskinbone,parent=1720,current_idx=1854)int nskinbone ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1855)                 
				SingleCommentNode(parent=1720,current_idx=1856)// number of bones in all skins
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1857) 
				StructFieldNode(field_name=nskinbonevert,parent=1720,current_idx=1858)int nskinbonevert ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1859)             
				SingleCommentNode(parent=1720,current_idx=1860)// number of vertices in all skin bones
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1861) 
				StructFieldNode(field_name=nhfield,parent=1720,current_idx=1862)int nhfield ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1863)                   
				SingleCommentNode(parent=1720,current_idx=1864)// number of heightfields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1865) 
				StructFieldNode(field_name=nhfielddata,parent=1720,current_idx=1866)int nhfielddata ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1867)               
				SingleCommentNode(parent=1720,current_idx=1868)// number of data points in all heightfields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1869) 
				StructFieldNode(field_name=ntex,parent=1720,current_idx=1870)int ntex ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1871)                      
				SingleCommentNode(parent=1720,current_idx=1872)// number of textures
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1873) 
				StructFieldNode(field_name=ntexdata,parent=1720,current_idx=1874)int ntexdata ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1875)                  
				SingleCommentNode(parent=1720,current_idx=1876)// number of bytes in texture rgb data
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1877) 
				StructFieldNode(field_name=nmat,parent=1720,current_idx=1878)int nmat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1879)                      
				SingleCommentNode(parent=1720,current_idx=1880)// number of materials
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1881) 
				StructFieldNode(field_name=npair,parent=1720,current_idx=1882)int npair ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1883)                     
				SingleCommentNode(parent=1720,current_idx=1884)// number of predefined geom pairs
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1885) 
				StructFieldNode(field_name=nexclude,parent=1720,current_idx=1886)int nexclude ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1887)                  
				SingleCommentNode(parent=1720,current_idx=1888)// number of excluded geom pairs
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1889) 
				StructFieldNode(field_name=neq,parent=1720,current_idx=1890)int neq ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1891)                       
				SingleCommentNode(parent=1720,current_idx=1892)// number of equality constraints
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1893) 
				StructFieldNode(field_name=ntendon,parent=1720,current_idx=1894)int ntendon ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1895)                   
				SingleCommentNode(parent=1720,current_idx=1896)// number of tendons
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1897) 
				StructFieldNode(field_name=nwrap,parent=1720,current_idx=1898)int nwrap ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1899)                     
				SingleCommentNode(parent=1720,current_idx=1900)// number of wrap objects in all tendon paths
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1901) 
				StructFieldNode(field_name=nsensor,parent=1720,current_idx=1902)int nsensor ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1903)                   
				SingleCommentNode(parent=1720,current_idx=1904)// number of sensors
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1905) 
				StructFieldNode(field_name=nnumeric,parent=1720,current_idx=1906)int nnumeric ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1907)                  
				SingleCommentNode(parent=1720,current_idx=1908)// number of numeric custom fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1909) 
				StructFieldNode(field_name=nnumericdata,parent=1720,current_idx=1910)int nnumericdata ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1911)              
				SingleCommentNode(parent=1720,current_idx=1912)// number of mjtNums in all numeric fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1913) 
				StructFieldNode(field_name=ntext,parent=1720,current_idx=1914)int ntext ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1915)                     
				SingleCommentNode(parent=1720,current_idx=1916)// number of text custom fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1917) 
				StructFieldNode(field_name=ntextdata,parent=1720,current_idx=1918)int ntextdata ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1919)                 
				SingleCommentNode(parent=1720,current_idx=1920)// number of mjtBytes in all text fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1921) 
				StructFieldNode(field_name=ntuple,parent=1720,current_idx=1922)int ntuple ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1923)                    
				SingleCommentNode(parent=1720,current_idx=1924)// number of tuple custom fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1925) 
				StructFieldNode(field_name=ntupledata,parent=1720,current_idx=1926)int ntupledata ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1927)                
				SingleCommentNode(parent=1720,current_idx=1928)// number of objects in all tuple fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1929) 
				StructFieldNode(field_name=nkey,parent=1720,current_idx=1930)int nkey ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1931)                      
				SingleCommentNode(parent=1720,current_idx=1932)// number of keyframes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1933) 
				StructFieldNode(field_name=nmocap,parent=1720,current_idx=1934)int nmocap ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1935)                    
				SingleCommentNode(parent=1720,current_idx=1936)// number of mocap bodies
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1937) 
				StructFieldNode(field_name=nplugin,parent=1720,current_idx=1938)int nplugin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1939)                   
				SingleCommentNode(parent=1720,current_idx=1940)// number of plugin instances
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1941) 
				StructFieldNode(field_name=npluginattr,parent=1720,current_idx=1942)int npluginattr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1943)               
				SingleCommentNode(parent=1720,current_idx=1944)// number of chars in all plugin config attributes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1945) 
				StructFieldNode(field_name=nuser_body,parent=1720,current_idx=1946)int nuser_body ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1947)                
				SingleCommentNode(parent=1720,current_idx=1948)// number of mjtNums in body_user
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1949) 
				StructFieldNode(field_name=nuser_jnt,parent=1720,current_idx=1950)int nuser_jnt ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1951)                 
				SingleCommentNode(parent=1720,current_idx=1952)// number of mjtNums in jnt_user
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1953) 
				StructFieldNode(field_name=nuser_geom,parent=1720,current_idx=1954)int nuser_geom ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1955)                
				SingleCommentNode(parent=1720,current_idx=1956)// number of mjtNums in geom_user
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1957) 
				StructFieldNode(field_name=nuser_site,parent=1720,current_idx=1958)int nuser_site ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1959)                
				SingleCommentNode(parent=1720,current_idx=1960)// number of mjtNums in site_user
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1961) 
				StructFieldNode(field_name=nuser_cam,parent=1720,current_idx=1962)int nuser_cam ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1963)                 
				SingleCommentNode(parent=1720,current_idx=1964)// number of mjtNums in cam_user
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1965) 
				StructFieldNode(field_name=nuser_tendon,parent=1720,current_idx=1966)int nuser_tendon ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1967)              
				SingleCommentNode(parent=1720,current_idx=1968)// number of mjtNums in tendon_user
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1969) 
				StructFieldNode(field_name=nuser_actuator,parent=1720,current_idx=1970)int nuser_actuator ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1971)            
				SingleCommentNode(parent=1720,current_idx=1972)// number of mjtNums in actuator_user
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1973) 
				StructFieldNode(field_name=nuser_sensor,parent=1720,current_idx=1974)int nuser_sensor ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1975)              
				SingleCommentNode(parent=1720,current_idx=1976)// number of mjtNums in sensor_user
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1977) 
				StructFieldNode(field_name=nnames,parent=1720,current_idx=1978)int nnames ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1979)                    
				SingleCommentNode(parent=1720,current_idx=1980)// number of chars in all names
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1981) 
				StructFieldNode(field_name=nnames_map,parent=1720,current_idx=1982)int nnames_map ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1983)                
				SingleCommentNode(parent=1720,current_idx=1984)// number of slots in the names hash map
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1985) 
				StructFieldNode(field_name=npaths,parent=1720,current_idx=1986)int npaths ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1987)                    
				SingleCommentNode(parent=1720,current_idx=1988)// number of chars in all paths
				WhitespaceNode(parent=1720,n_lines=2,current_idx=1989)  
				SingleCommentNode(parent=1720,current_idx=1990)// sizes set after mjModel construction (only affect mjData)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1991) 
				StructFieldNode(field_name=nM,parent=1720,current_idx=1992)int nM ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1993)                        
				SingleCommentNode(parent=1720,current_idx=1994)// number of non-zeros in sparse inertia matrix
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1995) 
				StructFieldNode(field_name=nB,parent=1720,current_idx=1996)int nB ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1997)                        
				SingleCommentNode(parent=1720,current_idx=1998)// number of non-zeros in sparse body-dof matrix
				WhitespaceNode(parent=1720,n_lines=1,current_idx=1999) 
				StructFieldNode(field_name=nC,parent=1720,current_idx=2000)int nC ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2001)                        
				SingleCommentNode(parent=1720,current_idx=2002)// number of non-zeros in sparse reduced dof-dof matrix
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2003) 
				StructFieldNode(field_name=nD,parent=1720,current_idx=2004)int nD ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2005)                        
				SingleCommentNode(parent=1720,current_idx=2006)// number of non-zeros in sparse dof-dof matrix
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2007) 
				StructFieldNode(field_name=ntree,parent=1720,current_idx=2008)int ntree ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2009)                     
				SingleCommentNode(parent=1720,current_idx=2010)// number of kinematic trees under world body
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2011) 
				StructFieldNode(field_name=ngravcomp,parent=1720,current_idx=2012)int ngravcomp ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2013)                 
				SingleCommentNode(parent=1720,current_idx=2014)// number of bodies with nonzero gravcomp
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2015) 
				StructFieldNode(field_name=nemax,parent=1720,current_idx=2016)int nemax ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2017)                     
				SingleCommentNode(parent=1720,current_idx=2018)// number of potential equality-constraint rows
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2019) 
				StructFieldNode(field_name=njmax,parent=1720,current_idx=2020)int njmax ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2021)                     
				SingleCommentNode(parent=1720,current_idx=2022)// number of available rows in constraint Jacobian
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2023) 
				StructFieldNode(field_name=nconmax,parent=1720,current_idx=2024)int nconmax ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2025)                   
				SingleCommentNode(parent=1720,current_idx=2026)// number of potential contacts in contact list
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2027) 
				StructFieldNode(field_name=nuserdata,parent=1720,current_idx=2028)int nuserdata ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2029)                 
				SingleCommentNode(parent=1720,current_idx=2030)// number of mjtNums reserved for the user
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2031) 
				StructFieldNode(field_name=nsensordata,parent=1720,current_idx=2032)int nsensordata ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2033)               
				SingleCommentNode(parent=1720,current_idx=2034)// number of mjtNums in sensor data vector
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2035) 
				StructFieldNode(field_name=npluginstate,parent=1720,current_idx=2036)int npluginstate ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2037)              
				SingleCommentNode(parent=1720,current_idx=2038)// number of mjtNums in plugin state vector
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2039)  
				StructFieldNode(field_name=narena,parent=1720,current_idx=2040)size_t narena ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2041)                 
				SingleCommentNode(parent=1720,current_idx=2042)// number of bytes in the mjData arena (inclusive of stack)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2043) 
				StructFieldNode(field_name=nbuffer,parent=1720,current_idx=2044)size_t nbuffer ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2045)                
				SingleCommentNode(parent=1720,current_idx=2046)// number of bytes in buffer
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2047)  
				SingleCommentNode(parent=1720,current_idx=2048)// ------------------------------- options and statistics
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2049)  
				StructFieldNode(field_name=opt,parent=1720,current_idx=2050)mjOption opt ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2051)                  
				SingleCommentNode(parent=1720,current_idx=2052)// physics options
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2053) 
				StructFieldNode(field_name=vis,parent=1720,current_idx=2054)mjVisual vis ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2055)                  
				SingleCommentNode(parent=1720,current_idx=2056)// visualization options
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2057) 
				StructFieldNode(field_name=stat,parent=1720,current_idx=2058)mjStatistic stat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2059)              
				SingleCommentNode(parent=1720,current_idx=2060)// model statistics
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2061)  
				SingleCommentNode(parent=1720,current_idx=2062)// ------------------------------- buffers
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2063)  
				SingleCommentNode(parent=1720,current_idx=2064)// main buffer
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2065) 
				StructFieldNode(field_name=buffer,parent=1720,current_idx=2066)void*     buffer ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2067)              
				SingleCommentNode(parent=1720,current_idx=2068)// main buffer ;  all pointers point in it    (nbuffer)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2069)  
				SingleCommentNode(parent=1720,current_idx=2070)// default generalized coordinates
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2071) 
				StructFieldNode(field_name=qpos0,parent=1720,current_idx=2072)mjtNum*   qpos0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2073)               
				SingleCommentNode(parent=1720,current_idx=2074)// qpos values at default pose              (nq x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2075) 
				StructFieldNode(field_name=qpos_spring,parent=1720,current_idx=2076)mjtNum*   qpos_spring ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2077)         
				SingleCommentNode(parent=1720,current_idx=2078)// reference pose for springs               (nq x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2079)  
				SingleCommentNode(parent=1720,current_idx=2080)// bodies
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2081) 
				StructFieldNode(field_name=body_parentid,parent=1720,current_idx=2082)int*      body_parentid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2083)       
				SingleCommentNode(parent=1720,current_idx=2084)// id of body's parent                      (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2085) 
				StructFieldNode(field_name=body_rootid,parent=1720,current_idx=2086)int*      body_rootid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2087)         
				SingleCommentNode(parent=1720,current_idx=2088)// id of root above body                    (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2089) 
				StructFieldNode(field_name=body_weldid,parent=1720,current_idx=2090)int*      body_weldid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2091)         
				SingleCommentNode(parent=1720,current_idx=2092)// id of body that this body is welded to   (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2093) 
				StructFieldNode(field_name=body_mocapid,parent=1720,current_idx=2094)int*      body_mocapid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2095)        
				SingleCommentNode(parent=1720,current_idx=2096)// id of mocap data ;  -1: none               (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2097) 
				StructFieldNode(field_name=body_jntnum,parent=1720,current_idx=2098)int*      body_jntnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2099)         
				SingleCommentNode(parent=1720,current_idx=2100)// number of joints for this body           (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2101) 
				StructFieldNode(field_name=body_jntadr,parent=1720,current_idx=2102)int*      body_jntadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2103)         
				SingleCommentNode(parent=1720,current_idx=2104)// start addr of joints ;  -1: no joints      (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2105) 
				StructFieldNode(field_name=body_dofnum,parent=1720,current_idx=2106)int*      body_dofnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2107)         
				SingleCommentNode(parent=1720,current_idx=2108)// number of motion degrees of freedom      (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2109) 
				StructFieldNode(field_name=body_dofadr,parent=1720,current_idx=2110)int*      body_dofadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2111)         
				SingleCommentNode(parent=1720,current_idx=2112)// start addr of dofs ;  -1: no dofs          (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2113) 
				StructFieldNode(field_name=body_treeid,parent=1720,current_idx=2114)int*      body_treeid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2115)         
				SingleCommentNode(parent=1720,current_idx=2116)// id of body's kinematic tree ;  -1: static  (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2117) 
				StructFieldNode(field_name=body_geomnum,parent=1720,current_idx=2118)int*      body_geomnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2119)        
				SingleCommentNode(parent=1720,current_idx=2120)// number of geoms                          (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2121) 
				StructFieldNode(field_name=body_geomadr,parent=1720,current_idx=2122)int*      body_geomadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2123)        
				SingleCommentNode(parent=1720,current_idx=2124)// start addr of geoms ;  -1: no geoms        (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2125) 
				StructFieldNode(field_name=body_simple,parent=1720,current_idx=2126)mjtByte*  body_simple ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2127)         
				SingleCommentNode(parent=1720,current_idx=2128)// 1: diag M ;  2: diag M ,  sliders only       (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2129) 
				StructFieldNode(field_name=body_sameframe,parent=1720,current_idx=2130)mjtByte*  body_sameframe ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2131)      
				SingleCommentNode(parent=1720,current_idx=2132)// same frame as inertia (mjtSameframe)     (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2133) 
				StructFieldNode(field_name=body_pos,parent=1720,current_idx=2134)mjtNum*   body_pos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2135)            
				SingleCommentNode(parent=1720,current_idx=2136)// position offset rel. to parent body      (nbody x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2137) 
				StructFieldNode(field_name=body_quat,parent=1720,current_idx=2138)mjtNum*   body_quat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2139)           
				SingleCommentNode(parent=1720,current_idx=2140)// orientation offset rel. to parent body   (nbody x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2141) 
				StructFieldNode(field_name=body_ipos,parent=1720,current_idx=2142)mjtNum*   body_ipos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2143)           
				SingleCommentNode(parent=1720,current_idx=2144)// local position of center of mass         (nbody x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2145) 
				StructFieldNode(field_name=body_iquat,parent=1720,current_idx=2146)mjtNum*   body_iquat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2147)          
				SingleCommentNode(parent=1720,current_idx=2148)// local orientation of inertia ellipsoid   (nbody x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2149) 
				StructFieldNode(field_name=body_mass,parent=1720,current_idx=2150)mjtNum*   body_mass ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2151)           
				SingleCommentNode(parent=1720,current_idx=2152)// mass                                     (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2153) 
				StructFieldNode(field_name=body_subtreemass,parent=1720,current_idx=2154)mjtNum*   body_subtreemass ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2155)    
				SingleCommentNode(parent=1720,current_idx=2156)// mass of subtree starting at this body    (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2157) 
				StructFieldNode(field_name=body_inertia,parent=1720,current_idx=2158)mjtNum*   body_inertia ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2159)        
				SingleCommentNode(parent=1720,current_idx=2160)// diagonal inertia in ipos/iquat frame     (nbody x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2161) 
				StructFieldNode(field_name=body_invweight0,parent=1720,current_idx=2162)mjtNum*   body_invweight0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2163)     
				SingleCommentNode(parent=1720,current_idx=2164)// mean inv inert in qpos0 (trn ,  rot)       (nbody x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2165) 
				StructFieldNode(field_name=body_gravcomp,parent=1720,current_idx=2166)mjtNum*   body_gravcomp ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2167)       
				SingleCommentNode(parent=1720,current_idx=2168)// antigravity force ,  units of body weight  (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2169) 
				StructFieldNode(field_name=body_margin,parent=1720,current_idx=2170)mjtNum*   body_margin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2171)         
				SingleCommentNode(parent=1720,current_idx=2172)// MAX over all geom margins                (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2173) 
				StructFieldNode(field_name=body_user,parent=1720,current_idx=2174)mjtNum*   body_user ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2175)           
				SingleCommentNode(parent=1720,current_idx=2176)// user data                                (nbody x nuser_body)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2177) 
				StructFieldNode(field_name=body_plugin,parent=1720,current_idx=2178)int*      body_plugin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2179)         
				SingleCommentNode(parent=1720,current_idx=2180)// plugin instance id ;  -1: not in use       (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2181) 
				StructFieldNode(field_name=body_contype,parent=1720,current_idx=2182)int*      body_contype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2183)        
				SingleCommentNode(parent=1720,current_idx=2184)// OR over all geom contypes                (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2185) 
				StructFieldNode(field_name=body_conaffinity,parent=1720,current_idx=2186)int*      body_conaffinity ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2187)    
				SingleCommentNode(parent=1720,current_idx=2188)// OR over all geom conaffinities           (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2189) 
				StructFieldNode(field_name=body_bvhadr,parent=1720,current_idx=2190)int*      body_bvhadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2191)         
				SingleCommentNode(parent=1720,current_idx=2192)// address of bvh root                      (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2193) 
				StructFieldNode(field_name=body_bvhnum,parent=1720,current_idx=2194)int*      body_bvhnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2195)         
				SingleCommentNode(parent=1720,current_idx=2196)// number of bounding volumes               (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2197)  
				SingleCommentNode(parent=1720,current_idx=2198)// bounding volume hierarchy
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2199) 
				StructFieldNode(field_name=bvh_depth,parent=1720,current_idx=2200)int*      bvh_depth ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2201)           
				SingleCommentNode(parent=1720,current_idx=2202)// depth in the bounding volume hierarchy   (nbvh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2203) 
				StructFieldNode(field_name=bvh_child,parent=1720,current_idx=2204)int*      bvh_child ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2205)           
				SingleCommentNode(parent=1720,current_idx=2206)// left and right children in tree          (nbvh x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2207) 
				StructFieldNode(field_name=bvh_nodeid,parent=1720,current_idx=2208)int*      bvh_nodeid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2209)          
				SingleCommentNode(parent=1720,current_idx=2210)// geom or elem id of node ;  -1: non-leaf    (nbvh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2211) 
				StructFieldNode(field_name=bvh_aabb,parent=1720,current_idx=2212)mjtNum*   bvh_aabb ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2213)            
				SingleCommentNode(parent=1720,current_idx=2214)// local bounding box (center ,  size)        (nbvhstatic x 6)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2215)  
				SingleCommentNode(parent=1720,current_idx=2216)// joints
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2217) 
				StructFieldNode(field_name=jnt_type,parent=1720,current_idx=2218)int*      jnt_type ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2219)            
				SingleCommentNode(parent=1720,current_idx=2220)// type of joint (mjtJoint)                 (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2221) 
				StructFieldNode(field_name=jnt_qposadr,parent=1720,current_idx=2222)int*      jnt_qposadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2223)         
				SingleCommentNode(parent=1720,current_idx=2224)// start addr in 'qpos' for joint's data    (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2225) 
				StructFieldNode(field_name=jnt_dofadr,parent=1720,current_idx=2226)int*      jnt_dofadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2227)          
				SingleCommentNode(parent=1720,current_idx=2228)// start addr in 'qvel' for joint's data    (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2229) 
				StructFieldNode(field_name=jnt_bodyid,parent=1720,current_idx=2230)int*      jnt_bodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2231)          
				SingleCommentNode(parent=1720,current_idx=2232)// id of joint's body                       (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2233) 
				StructFieldNode(field_name=jnt_group,parent=1720,current_idx=2234)int*      jnt_group ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2235)           
				SingleCommentNode(parent=1720,current_idx=2236)// group for visibility                     (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2237) 
				StructFieldNode(field_name=jnt_limited,parent=1720,current_idx=2238)mjtByte*  jnt_limited ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2239)         
				SingleCommentNode(parent=1720,current_idx=2240)// does joint have limits                   (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2241) 
				StructFieldNode(field_name=jnt_actfrclimited,parent=1720,current_idx=2242)mjtByte*  jnt_actfrclimited ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2243)   
				SingleCommentNode(parent=1720,current_idx=2244)// does joint have actuator force limits    (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2245) 
				StructFieldNode(field_name=jnt_actgravcomp,parent=1720,current_idx=2246)mjtByte*  jnt_actgravcomp ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2247)     
				SingleCommentNode(parent=1720,current_idx=2248)// is gravcomp force applied via actuators  (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2249) 
				StructFieldNode(field_name=jnt_solref,parent=1720,current_idx=2250)mjtNum*   jnt_solref ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2251)          
				SingleCommentNode(parent=1720,current_idx=2252)// constraint solver reference: limit       (njnt x mjNREF)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2253) 
				StructFieldNode(field_name=jnt_solimp,parent=1720,current_idx=2254)mjtNum*   jnt_solimp ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2255)          
				SingleCommentNode(parent=1720,current_idx=2256)// constraint solver impedance: limit       (njnt x mjNIMP)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2257) 
				StructFieldNode(field_name=jnt_pos,parent=1720,current_idx=2258)mjtNum*   jnt_pos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2259)             
				SingleCommentNode(parent=1720,current_idx=2260)// local anchor position                    (njnt x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2261) 
				StructFieldNode(field_name=jnt_axis,parent=1720,current_idx=2262)mjtNum*   jnt_axis ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2263)            
				SingleCommentNode(parent=1720,current_idx=2264)// local joint axis                         (njnt x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2265) 
				StructFieldNode(field_name=jnt_stiffness,parent=1720,current_idx=2266)mjtNum*   jnt_stiffness ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2267)       
				SingleCommentNode(parent=1720,current_idx=2268)// stiffness coefficient                    (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2269) 
				StructFieldNode(field_name=jnt_range,parent=1720,current_idx=2270)mjtNum*   jnt_range ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2271)           
				SingleCommentNode(parent=1720,current_idx=2272)// joint limits                             (njnt x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2273) 
				StructFieldNode(field_name=jnt_actfrcrange,parent=1720,current_idx=2274)mjtNum*   jnt_actfrcrange ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2275)     
				SingleCommentNode(parent=1720,current_idx=2276)// range of total actuator force            (njnt x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2277) 
				StructFieldNode(field_name=jnt_margin,parent=1720,current_idx=2278)mjtNum*   jnt_margin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2279)          
				SingleCommentNode(parent=1720,current_idx=2280)// min distance for limit detection         (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2281) 
				StructFieldNode(field_name=jnt_user,parent=1720,current_idx=2282)mjtNum*   jnt_user ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2283)            
				SingleCommentNode(parent=1720,current_idx=2284)// user data                                (njnt x nuser_jnt)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2285)  
				SingleCommentNode(parent=1720,current_idx=2286)// dofs
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2287) 
				StructFieldNode(field_name=dof_bodyid,parent=1720,current_idx=2288)int*      dof_bodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2289)          
				SingleCommentNode(parent=1720,current_idx=2290)// id of dof's body                         (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2291) 
				StructFieldNode(field_name=dof_jntid,parent=1720,current_idx=2292)int*      dof_jntid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2293)           
				SingleCommentNode(parent=1720,current_idx=2294)// id of dof's joint                        (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2295) 
				StructFieldNode(field_name=dof_parentid,parent=1720,current_idx=2296)int*      dof_parentid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2297)        
				SingleCommentNode(parent=1720,current_idx=2298)// id of dof's parent ;  -1: none             (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2299) 
				StructFieldNode(field_name=dof_treeid,parent=1720,current_idx=2300)int*      dof_treeid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2301)          
				SingleCommentNode(parent=1720,current_idx=2302)// id of dof's kinematic tree               (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2303) 
				StructFieldNode(field_name=dof_Madr,parent=1720,current_idx=2304)int*      dof_Madr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2305)            
				SingleCommentNode(parent=1720,current_idx=2306)// dof address in M-diagonal                (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2307) 
				StructFieldNode(field_name=dof_simplenum,parent=1720,current_idx=2308)int*      dof_simplenum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2309)       
				SingleCommentNode(parent=1720,current_idx=2310)// number of consecutive simple dofs        (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2311) 
				StructFieldNode(field_name=dof_solref,parent=1720,current_idx=2312)mjtNum*   dof_solref ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2313)          
				SingleCommentNode(parent=1720,current_idx=2314)// constraint solver reference:frictionloss (nv x mjNREF)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2315) 
				StructFieldNode(field_name=dof_solimp,parent=1720,current_idx=2316)mjtNum*   dof_solimp ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2317)          
				SingleCommentNode(parent=1720,current_idx=2318)// constraint solver impedance:frictionloss (nv x mjNIMP)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2319) 
				StructFieldNode(field_name=dof_frictionloss,parent=1720,current_idx=2320)mjtNum*   dof_frictionloss ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2321)    
				SingleCommentNode(parent=1720,current_idx=2322)// dof friction loss                        (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2323) 
				StructFieldNode(field_name=dof_armature,parent=1720,current_idx=2324)mjtNum*   dof_armature ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2325)        
				SingleCommentNode(parent=1720,current_idx=2326)// dof armature inertia/mass                (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2327) 
				StructFieldNode(field_name=dof_damping,parent=1720,current_idx=2328)mjtNum*   dof_damping ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2329)         
				SingleCommentNode(parent=1720,current_idx=2330)// damping coefficient                      (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2331) 
				StructFieldNode(field_name=dof_invweight0,parent=1720,current_idx=2332)mjtNum*   dof_invweight0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2333)      
				SingleCommentNode(parent=1720,current_idx=2334)// diag. inverse inertia in qpos0           (nv x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2335) 
				StructFieldNode(field_name=dof_M0,parent=1720,current_idx=2336)mjtNum*   dof_M0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2337)              
				SingleCommentNode(parent=1720,current_idx=2338)// diag. inertia in qpos0                   (nv x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2339)  
				SingleCommentNode(parent=1720,current_idx=2340)// geoms
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2341) 
				StructFieldNode(field_name=geom_type,parent=1720,current_idx=2342)int*      geom_type ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2343)           
				SingleCommentNode(parent=1720,current_idx=2344)// geometric type (mjtGeom)                 (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2345) 
				StructFieldNode(field_name=geom_contype,parent=1720,current_idx=2346)int*      geom_contype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2347)        
				SingleCommentNode(parent=1720,current_idx=2348)// geom contact type                        (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2349) 
				StructFieldNode(field_name=geom_conaffinity,parent=1720,current_idx=2350)int*      geom_conaffinity ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2351)    
				SingleCommentNode(parent=1720,current_idx=2352)// geom contact affinity                    (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2353) 
				StructFieldNode(field_name=geom_condim,parent=1720,current_idx=2354)int*      geom_condim ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2355)         
				SingleCommentNode(parent=1720,current_idx=2356)// contact dimensionality (1 ,  3 ,  4 ,  6)      (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2357) 
				StructFieldNode(field_name=geom_bodyid,parent=1720,current_idx=2358)int*      geom_bodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2359)         
				SingleCommentNode(parent=1720,current_idx=2360)// id of geom's body                        (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2361) 
				StructFieldNode(field_name=geom_dataid,parent=1720,current_idx=2362)int*      geom_dataid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2363)         
				SingleCommentNode(parent=1720,current_idx=2364)// id of geom's mesh/hfield ;  -1: none       (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2365) 
				StructFieldNode(field_name=geom_matid,parent=1720,current_idx=2366)int*      geom_matid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2367)          
				SingleCommentNode(parent=1720,current_idx=2368)// material id for rendering ;  -1: none      (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2369) 
				StructFieldNode(field_name=geom_group,parent=1720,current_idx=2370)int*      geom_group ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2371)          
				SingleCommentNode(parent=1720,current_idx=2372)// group for visibility                     (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2373) 
				StructFieldNode(field_name=geom_priority,parent=1720,current_idx=2374)int*      geom_priority ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2375)       
				SingleCommentNode(parent=1720,current_idx=2376)// geom contact priority                    (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2377) 
				StructFieldNode(field_name=geom_plugin,parent=1720,current_idx=2378)int*      geom_plugin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2379)         
				SingleCommentNode(parent=1720,current_idx=2380)// plugin instance id ;  -1: not in use       (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2381) 
				StructFieldNode(field_name=geom_sameframe,parent=1720,current_idx=2382)mjtByte*  geom_sameframe ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2383)      
				SingleCommentNode(parent=1720,current_idx=2384)// same frame as body (mjtSameframe)        (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2385) 
				StructFieldNode(field_name=geom_solmix,parent=1720,current_idx=2386)mjtNum*   geom_solmix ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2387)         
				SingleCommentNode(parent=1720,current_idx=2388)// mixing coef for solref/imp in geom pair  (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2389) 
				StructFieldNode(field_name=geom_solref,parent=1720,current_idx=2390)mjtNum*   geom_solref ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2391)         
				SingleCommentNode(parent=1720,current_idx=2392)// constraint solver reference: contact     (ngeom x mjNREF)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2393) 
				StructFieldNode(field_name=geom_solimp,parent=1720,current_idx=2394)mjtNum*   geom_solimp ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2395)         
				SingleCommentNode(parent=1720,current_idx=2396)// constraint solver impedance: contact     (ngeom x mjNIMP)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2397) 
				StructFieldNode(field_name=geom_size,parent=1720,current_idx=2398)mjtNum*   geom_size ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2399)           
				SingleCommentNode(parent=1720,current_idx=2400)// geom-specific size parameters            (ngeom x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2401) 
				StructFieldNode(field_name=geom_aabb,parent=1720,current_idx=2402)mjtNum*   geom_aabb ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2403)           
				SingleCommentNode(parent=1720,current_idx=2404)// bounding box ,  (center ,  size)             (ngeom x 6)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2405) 
				StructFieldNode(field_name=geom_rbound,parent=1720,current_idx=2406)mjtNum*   geom_rbound ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2407)         
				SingleCommentNode(parent=1720,current_idx=2408)// radius of bounding sphere                (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2409) 
				StructFieldNode(field_name=geom_pos,parent=1720,current_idx=2410)mjtNum*   geom_pos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2411)            
				SingleCommentNode(parent=1720,current_idx=2412)// local position offset rel. to body       (ngeom x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2413) 
				StructFieldNode(field_name=geom_quat,parent=1720,current_idx=2414)mjtNum*   geom_quat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2415)           
				SingleCommentNode(parent=1720,current_idx=2416)// local orientation offset rel. to body    (ngeom x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2417) 
				StructFieldNode(field_name=geom_friction,parent=1720,current_idx=2418)mjtNum*   geom_friction ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2419)       
				SingleCommentNode(parent=1720,current_idx=2420)// friction for (slide ,  spin ,  roll)         (ngeom x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2421) 
				StructFieldNode(field_name=geom_margin,parent=1720,current_idx=2422)mjtNum*   geom_margin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2423)         
				SingleCommentNode(parent=1720,current_idx=2424)// detect contact if dist<margin            (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2425) 
				StructFieldNode(field_name=geom_gap,parent=1720,current_idx=2426)mjtNum*   geom_gap ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2427)            
				SingleCommentNode(parent=1720,current_idx=2428)// include in solver if dist<margin-gap     (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2429) 
				StructFieldNode(field_name=geom_fluid,parent=1720,current_idx=2430)mjtNum*   geom_fluid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2431)          
				SingleCommentNode(parent=1720,current_idx=2432)// fluid interaction parameters             (ngeom x mjNFLUID)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2433) 
				StructFieldNode(field_name=geom_user,parent=1720,current_idx=2434)mjtNum*   geom_user ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2435)           
				SingleCommentNode(parent=1720,current_idx=2436)// user data                                (ngeom x nuser_geom)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2437) 
				StructFieldNode(field_name=geom_rgba,parent=1720,current_idx=2438)float*    geom_rgba ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2439)           
				SingleCommentNode(parent=1720,current_idx=2440)// rgba when material is omitted            (ngeom x 4)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2441)  
				SingleCommentNode(parent=1720,current_idx=2442)// sites
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2443) 
				StructFieldNode(field_name=site_type,parent=1720,current_idx=2444)int*      site_type ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2445)           
				SingleCommentNode(parent=1720,current_idx=2446)// geom type for rendering (mjtGeom)        (nsite x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2447) 
				StructFieldNode(field_name=site_bodyid,parent=1720,current_idx=2448)int*      site_bodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2449)         
				SingleCommentNode(parent=1720,current_idx=2450)// id of site's body                        (nsite x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2451) 
				StructFieldNode(field_name=site_matid,parent=1720,current_idx=2452)int*      site_matid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2453)          
				SingleCommentNode(parent=1720,current_idx=2454)// material id for rendering ;  -1: none      (nsite x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2455) 
				StructFieldNode(field_name=site_group,parent=1720,current_idx=2456)int*      site_group ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2457)          
				SingleCommentNode(parent=1720,current_idx=2458)// group for visibility                     (nsite x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2459) 
				StructFieldNode(field_name=site_sameframe,parent=1720,current_idx=2460)mjtByte*  site_sameframe ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2461)      
				SingleCommentNode(parent=1720,current_idx=2462)// same frame as body (mjtSameframe)        (nsite x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2463) 
				StructFieldNode(field_name=site_size,parent=1720,current_idx=2464)mjtNum*   site_size ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2465)           
				SingleCommentNode(parent=1720,current_idx=2466)// geom size for rendering                  (nsite x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2467) 
				StructFieldNode(field_name=site_pos,parent=1720,current_idx=2468)mjtNum*   site_pos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2469)            
				SingleCommentNode(parent=1720,current_idx=2470)// local position offset rel. to body       (nsite x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2471) 
				StructFieldNode(field_name=site_quat,parent=1720,current_idx=2472)mjtNum*   site_quat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2473)           
				SingleCommentNode(parent=1720,current_idx=2474)// local orientation offset rel. to body    (nsite x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2475) 
				StructFieldNode(field_name=site_user,parent=1720,current_idx=2476)mjtNum*   site_user ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2477)           
				SingleCommentNode(parent=1720,current_idx=2478)// user data                                (nsite x nuser_site)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2479) 
				StructFieldNode(field_name=site_rgba,parent=1720,current_idx=2480)float*    site_rgba ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2481)           
				SingleCommentNode(parent=1720,current_idx=2482)// rgba when material is omitted            (nsite x 4)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2483)  
				SingleCommentNode(parent=1720,current_idx=2484)// cameras
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2485) 
				StructFieldNode(field_name=cam_mode,parent=1720,current_idx=2486)int*      cam_mode ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2487)            
				SingleCommentNode(parent=1720,current_idx=2488)// camera tracking mode (mjtCamLight)       (ncam x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2489) 
				StructFieldNode(field_name=cam_bodyid,parent=1720,current_idx=2490)int*      cam_bodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2491)          
				SingleCommentNode(parent=1720,current_idx=2492)// id of camera's body                      (ncam x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2493) 
				StructFieldNode(field_name=cam_targetbodyid,parent=1720,current_idx=2494)int*      cam_targetbodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2495)    
				SingleCommentNode(parent=1720,current_idx=2496)// id of targeted body ;  -1: none            (ncam x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2497) 
				StructFieldNode(field_name=cam_pos,parent=1720,current_idx=2498)mjtNum*   cam_pos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2499)             
				SingleCommentNode(parent=1720,current_idx=2500)// position rel. to body frame              (ncam x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2501) 
				StructFieldNode(field_name=cam_quat,parent=1720,current_idx=2502)mjtNum*   cam_quat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2503)            
				SingleCommentNode(parent=1720,current_idx=2504)// orientation rel. to body frame           (ncam x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2505) 
				StructFieldNode(field_name=cam_poscom0,parent=1720,current_idx=2506)mjtNum*   cam_poscom0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2507)         
				SingleCommentNode(parent=1720,current_idx=2508)// global position rel. to sub-com in qpos0 (ncam x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2509) 
				StructFieldNode(field_name=cam_pos0,parent=1720,current_idx=2510)mjtNum*   cam_pos0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2511)            
				SingleCommentNode(parent=1720,current_idx=2512)// global position rel. to body in qpos0    (ncam x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2513) 
				StructFieldNode(field_name=cam_mat0,parent=1720,current_idx=2514)mjtNum*   cam_mat0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2515)            
				SingleCommentNode(parent=1720,current_idx=2516)// global orientation in qpos0              (ncam x 9)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2517) 
				StructFieldNode(field_name=cam_orthographic,parent=1720,current_idx=2518)int*      cam_orthographic ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2519)    
				SingleCommentNode(parent=1720,current_idx=2520)// orthographic camera ;  0: no ,  1: yes       (ncam x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2521) 
				StructFieldNode(field_name=cam_fovy,parent=1720,current_idx=2522)mjtNum*   cam_fovy ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2523)            
				SingleCommentNode(parent=1720,current_idx=2524)// y field-of-view (ortho ? len : deg)      (ncam x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2525) 
				StructFieldNode(field_name=cam_ipd,parent=1720,current_idx=2526)mjtNum*   cam_ipd ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2527)             
				SingleCommentNode(parent=1720,current_idx=2528)// inter-pupilary distance                  (ncam x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2529) 
				StructFieldNode(field_name=cam_resolution,parent=1720,current_idx=2530)int*      cam_resolution ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2531)      
				SingleCommentNode(parent=1720,current_idx=2532)// resolution: pixels [width ,  height]       (ncam x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2533) 
				StructFieldNode(field_name=cam_sensorsize,parent=1720,current_idx=2534)float*    cam_sensorsize ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2535)      
				SingleCommentNode(parent=1720,current_idx=2536)// sensor size: length [width ,  height]      (ncam x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2537) 
				StructFieldNode(field_name=cam_intrinsic,parent=1720,current_idx=2538)float*    cam_intrinsic ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2539)       
				SingleCommentNode(parent=1720,current_idx=2540)// [focal length ;  principal point]          (ncam x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2541) 
				StructFieldNode(field_name=cam_user,parent=1720,current_idx=2542)mjtNum*   cam_user ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2543)            
				SingleCommentNode(parent=1720,current_idx=2544)// user data                                (ncam x nuser_cam)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2545)  
				SingleCommentNode(parent=1720,current_idx=2546)// lights
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2547) 
				StructFieldNode(field_name=light_mode,parent=1720,current_idx=2548)int*      light_mode ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2549)          
				SingleCommentNode(parent=1720,current_idx=2550)// light tracking mode (mjtCamLight)        (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2551) 
				StructFieldNode(field_name=light_bodyid,parent=1720,current_idx=2552)int*      light_bodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2553)        
				SingleCommentNode(parent=1720,current_idx=2554)// id of light's body                       (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2555) 
				StructFieldNode(field_name=light_targetbodyid,parent=1720,current_idx=2556)int*      light_targetbodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2557)  
				SingleCommentNode(parent=1720,current_idx=2558)// id of targeted body ;  -1: none            (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2559) 
				StructFieldNode(field_name=light_directional,parent=1720,current_idx=2560)mjtByte*  light_directional ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2561)   
				SingleCommentNode(parent=1720,current_idx=2562)// directional light                        (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2563) 
				StructFieldNode(field_name=light_castshadow,parent=1720,current_idx=2564)mjtByte*  light_castshadow ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2565)    
				SingleCommentNode(parent=1720,current_idx=2566)// does light cast shadows                  (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2567) 
				StructFieldNode(field_name=light_bulbradius,parent=1720,current_idx=2568)float*    light_bulbradius ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2569)    
				SingleCommentNode(parent=1720,current_idx=2570)// light radius for soft shadows            (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2571) 
				StructFieldNode(field_name=light_active,parent=1720,current_idx=2572)mjtByte*  light_active ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2573)        
				SingleCommentNode(parent=1720,current_idx=2574)// is light on                              (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2575) 
				StructFieldNode(field_name=light_pos,parent=1720,current_idx=2576)mjtNum*   light_pos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2577)           
				SingleCommentNode(parent=1720,current_idx=2578)// position rel. to body frame              (nlight x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2579) 
				StructFieldNode(field_name=light_dir,parent=1720,current_idx=2580)mjtNum*   light_dir ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2581)           
				SingleCommentNode(parent=1720,current_idx=2582)// direction rel. to body frame             (nlight x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2583) 
				StructFieldNode(field_name=light_poscom0,parent=1720,current_idx=2584)mjtNum*   light_poscom0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2585)       
				SingleCommentNode(parent=1720,current_idx=2586)// global position rel. to sub-com in qpos0 (nlight x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2587) 
				StructFieldNode(field_name=light_pos0,parent=1720,current_idx=2588)mjtNum*   light_pos0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2589)          
				SingleCommentNode(parent=1720,current_idx=2590)// global position rel. to body in qpos0    (nlight x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2591) 
				StructFieldNode(field_name=light_dir0,parent=1720,current_idx=2592)mjtNum*   light_dir0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2593)          
				SingleCommentNode(parent=1720,current_idx=2594)// global direction in qpos0                (nlight x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2595) 
				StructFieldNode(field_name=light_attenuation,parent=1720,current_idx=2596)float*    light_attenuation ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2597)   
				SingleCommentNode(parent=1720,current_idx=2598)// OpenGL attenuation (quadratic model)     (nlight x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2599) 
				StructFieldNode(field_name=light_cutoff,parent=1720,current_idx=2600)float*    light_cutoff ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2601)        
				SingleCommentNode(parent=1720,current_idx=2602)// OpenGL cutoff                            (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2603) 
				StructFieldNode(field_name=light_exponent,parent=1720,current_idx=2604)float*    light_exponent ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2605)      
				SingleCommentNode(parent=1720,current_idx=2606)// OpenGL exponent                          (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2607) 
				StructFieldNode(field_name=light_ambient,parent=1720,current_idx=2608)float*    light_ambient ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2609)       
				SingleCommentNode(parent=1720,current_idx=2610)// ambient rgb (alpha=1)                    (nlight x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2611) 
				StructFieldNode(field_name=light_diffuse,parent=1720,current_idx=2612)float*    light_diffuse ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2613)       
				SingleCommentNode(parent=1720,current_idx=2614)// diffuse rgb (alpha=1)                    (nlight x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2615) 
				StructFieldNode(field_name=light_specular,parent=1720,current_idx=2616)float*    light_specular ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2617)      
				SingleCommentNode(parent=1720,current_idx=2618)// specular rgb (alpha=1)                   (nlight x 3)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2619)  
				SingleCommentNode(parent=1720,current_idx=2620)// flexes: contact properties
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2621) 
				StructFieldNode(field_name=flex_contype,parent=1720,current_idx=2622)int*      flex_contype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2623)        
				SingleCommentNode(parent=1720,current_idx=2624)// flex contact type                        (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2625) 
				StructFieldNode(field_name=flex_conaffinity,parent=1720,current_idx=2626)int*      flex_conaffinity ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2627)    
				SingleCommentNode(parent=1720,current_idx=2628)// flex contact affinity                    (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2629) 
				StructFieldNode(field_name=flex_condim,parent=1720,current_idx=2630)int*      flex_condim ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2631)         
				SingleCommentNode(parent=1720,current_idx=2632)// contact dimensionality (1 ,  3 ,  4 ,  6)      (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2633) 
				StructFieldNode(field_name=flex_priority,parent=1720,current_idx=2634)int*      flex_priority ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2635)       
				SingleCommentNode(parent=1720,current_idx=2636)// flex contact priority                    (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2637) 
				StructFieldNode(field_name=flex_solmix,parent=1720,current_idx=2638)mjtNum*   flex_solmix ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2639)         
				SingleCommentNode(parent=1720,current_idx=2640)// mix coef for solref/imp in contact pair  (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2641) 
				StructFieldNode(field_name=flex_solref,parent=1720,current_idx=2642)mjtNum*   flex_solref ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2643)         
				SingleCommentNode(parent=1720,current_idx=2644)// constraint solver reference: contact     (nflex x mjNREF)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2645) 
				StructFieldNode(field_name=flex_solimp,parent=1720,current_idx=2646)mjtNum*   flex_solimp ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2647)         
				SingleCommentNode(parent=1720,current_idx=2648)// constraint solver impedance: contact     (nflex x mjNIMP)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2649) 
				StructFieldNode(field_name=flex_friction,parent=1720,current_idx=2650)mjtNum*   flex_friction ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2651)       
				SingleCommentNode(parent=1720,current_idx=2652)// friction for (slide ,  spin ,  roll)         (nflex x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2653) 
				StructFieldNode(field_name=flex_margin,parent=1720,current_idx=2654)mjtNum*   flex_margin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2655)         
				SingleCommentNode(parent=1720,current_idx=2656)// detect contact if dist<margin            (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2657) 
				StructFieldNode(field_name=flex_gap,parent=1720,current_idx=2658)mjtNum*   flex_gap ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2659)            
				SingleCommentNode(parent=1720,current_idx=2660)// include in solver if dist<margin-gap     (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2661) 
				StructFieldNode(field_name=flex_internal,parent=1720,current_idx=2662)mjtByte*  flex_internal ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2663)       
				SingleCommentNode(parent=1720,current_idx=2664)// internal flex collision enabled          (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2665) 
				StructFieldNode(field_name=flex_selfcollide,parent=1720,current_idx=2666)int*      flex_selfcollide ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2667)    
				SingleCommentNode(parent=1720,current_idx=2668)// self collision mode (mjtFlexSelf)        (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2669) 
				StructFieldNode(field_name=flex_activelayers,parent=1720,current_idx=2670)int*      flex_activelayers ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2671)   
				SingleCommentNode(parent=1720,current_idx=2672)// number of active element layers ,  3D only (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2673)  
				SingleCommentNode(parent=1720,current_idx=2674)// flexes: other properties
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2675) 
				StructFieldNode(field_name=flex_dim,parent=1720,current_idx=2676)int*      flex_dim ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2677)            
				SingleCommentNode(parent=1720,current_idx=2678)// 1: lines ,  2: triangles ,  3: tetrahedra    (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2679) 
				StructFieldNode(field_name=flex_matid,parent=1720,current_idx=2680)int*      flex_matid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2681)          
				SingleCommentNode(parent=1720,current_idx=2682)// material id for rendering                (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2683) 
				StructFieldNode(field_name=flex_group,parent=1720,current_idx=2684)int*      flex_group ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2685)          
				SingleCommentNode(parent=1720,current_idx=2686)// group for visibility                     (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2687) 
				StructFieldNode(field_name=flex_vertadr,parent=1720,current_idx=2688)int*      flex_vertadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2689)        
				SingleCommentNode(parent=1720,current_idx=2690)// first vertex address                     (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2691) 
				StructFieldNode(field_name=flex_vertnum,parent=1720,current_idx=2692)int*      flex_vertnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2693)        
				SingleCommentNode(parent=1720,current_idx=2694)// number of vertices                       (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2695) 
				StructFieldNode(field_name=flex_edgeadr,parent=1720,current_idx=2696)int*      flex_edgeadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2697)        
				SingleCommentNode(parent=1720,current_idx=2698)// first edge address                       (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2699) 
				StructFieldNode(field_name=flex_edgenum,parent=1720,current_idx=2700)int*      flex_edgenum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2701)        
				SingleCommentNode(parent=1720,current_idx=2702)// number of edges                          (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2703) 
				StructFieldNode(field_name=flex_elemadr,parent=1720,current_idx=2704)int*      flex_elemadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2705)        
				SingleCommentNode(parent=1720,current_idx=2706)// first element address                    (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2707) 
				StructFieldNode(field_name=flex_elemnum,parent=1720,current_idx=2708)int*      flex_elemnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2709)        
				SingleCommentNode(parent=1720,current_idx=2710)// number of elements                       (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2711) 
				StructFieldNode(field_name=flex_elemdataadr,parent=1720,current_idx=2712)int*      flex_elemdataadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2713)    
				SingleCommentNode(parent=1720,current_idx=2714)// first element vertex id address          (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2715) 
				StructFieldNode(field_name=flex_elemedgeadr,parent=1720,current_idx=2716)int*      flex_elemedgeadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2717)    
				SingleCommentNode(parent=1720,current_idx=2718)// first element edge id address            (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2719) 
				StructFieldNode(field_name=flex_shellnum,parent=1720,current_idx=2720)int*      flex_shellnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2721)       
				SingleCommentNode(parent=1720,current_idx=2722)// number of shells                         (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2723) 
				StructFieldNode(field_name=flex_shelldataadr,parent=1720,current_idx=2724)int*      flex_shelldataadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2725)   
				SingleCommentNode(parent=1720,current_idx=2726)// first shell data address                 (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2727) 
				StructFieldNode(field_name=flex_evpairadr,parent=1720,current_idx=2728)int*      flex_evpairadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2729)      
				SingleCommentNode(parent=1720,current_idx=2730)// first evpair address                     (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2731) 
				StructFieldNode(field_name=flex_evpairnum,parent=1720,current_idx=2732)int*      flex_evpairnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2733)      
				SingleCommentNode(parent=1720,current_idx=2734)// number of evpairs                        (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2735) 
				StructFieldNode(field_name=flex_texcoordadr,parent=1720,current_idx=2736)int*      flex_texcoordadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2737)    
				SingleCommentNode(parent=1720,current_idx=2738)// address in flex_texcoord ;  -1: none       (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2739) 
				StructFieldNode(field_name=flex_vertbodyid,parent=1720,current_idx=2740)int*      flex_vertbodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2741)     
				SingleCommentNode(parent=1720,current_idx=2742)// vertex body ids                          (nflexvert x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2743) 
				StructFieldNode(field_name=flex_edge,parent=1720,current_idx=2744)int*      flex_edge ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2745)           
				SingleCommentNode(parent=1720,current_idx=2746)// edge vertex ids (2 per edge)             (nflexedge x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2747) 
				StructFieldNode(field_name=flex_elem,parent=1720,current_idx=2748)int*      flex_elem ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2749)           
				SingleCommentNode(parent=1720,current_idx=2750)// element vertex ids (dim+1 per elem)      (nflexelemdata x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2751) 
				StructFieldNode(field_name=flex_elemedge,parent=1720,current_idx=2752)int*      flex_elemedge ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2753)       
				SingleCommentNode(parent=1720,current_idx=2754)// element edge ids                         (nflexelemedge x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2755) 
				StructFieldNode(field_name=flex_elemlayer,parent=1720,current_idx=2756)int*      flex_elemlayer ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2757)      
				SingleCommentNode(parent=1720,current_idx=2758)// element distance from surface ,  3D only   (nflexelem x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2759) 
				StructFieldNode(field_name=flex_shell,parent=1720,current_idx=2760)int*      flex_shell ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2761)          
				SingleCommentNode(parent=1720,current_idx=2762)// shell fragment vertex ids (dim per frag) (nflexshelldata x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2763) 
				StructFieldNode(field_name=flex_evpair,parent=1720,current_idx=2764)int*      flex_evpair ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2765)         
				SingleCommentNode(parent=1720,current_idx=2766)// (element ,  vertex) collision pairs        (nflexevpair x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2767) 
				StructFieldNode(field_name=flex_vert,parent=1720,current_idx=2768)mjtNum*   flex_vert ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2769)           
				SingleCommentNode(parent=1720,current_idx=2770)// vertex positions in local body frames    (nflexvert x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2771) 
				StructFieldNode(field_name=flex_xvert0,parent=1720,current_idx=2772)mjtNum*   flex_xvert0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2773)         
				SingleCommentNode(parent=1720,current_idx=2774)// Cartesian vertex positions in qpos0      (nflexvert x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2775) 
				StructFieldNode(field_name=flexedge_length0,parent=1720,current_idx=2776)mjtNum*   flexedge_length0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2777)    
				SingleCommentNode(parent=1720,current_idx=2778)// edge lengths in qpos0                    (nflexedge x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2779) 
				StructFieldNode(field_name=flexedge_invweight0,parent=1720,current_idx=2780)mjtNum*   flexedge_invweight0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2781) 
				SingleCommentNode(parent=1720,current_idx=2782)// edge inv. weight in qpos0                (nflexedge x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2783) 
				StructFieldNode(field_name=flex_radius,parent=1720,current_idx=2784)mjtNum*   flex_radius ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2785)         
				SingleCommentNode(parent=1720,current_idx=2786)// radius around primitive element          (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2787) 
				StructFieldNode(field_name=flex_stiffness,parent=1720,current_idx=2788)mjtNum*   flex_stiffness ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2789)      
				SingleCommentNode(parent=1720,current_idx=2790)// finite element stiffness matrix          (nflexelem x 21)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2791) 
				StructFieldNode(field_name=flex_damping,parent=1720,current_idx=2792)mjtNum*   flex_damping ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2793)        
				SingleCommentNode(parent=1720,current_idx=2794)// Rayleigh's damping coefficient           (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2795) 
				StructFieldNode(field_name=flex_edgestiffness,parent=1720,current_idx=2796)mjtNum*   flex_edgestiffness ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2797)  
				SingleCommentNode(parent=1720,current_idx=2798)// edge stiffness                           (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2799) 
				StructFieldNode(field_name=flex_edgedamping,parent=1720,current_idx=2800)mjtNum*   flex_edgedamping ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2801)    
				SingleCommentNode(parent=1720,current_idx=2802)// edge damping                             (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2803) 
				StructFieldNode(field_name=flex_edgeequality,parent=1720,current_idx=2804)mjtByte*  flex_edgeequality ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2805)   
				SingleCommentNode(parent=1720,current_idx=2806)// is edge equality constraint defined      (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2807) 
				StructFieldNode(field_name=flex_rigid,parent=1720,current_idx=2808)mjtByte*  flex_rigid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2809)          
				SingleCommentNode(parent=1720,current_idx=2810)// are all verices in the same body         (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2811) 
				StructFieldNode(field_name=flexedge_rigid,parent=1720,current_idx=2812)mjtByte*  flexedge_rigid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2813)      
				SingleCommentNode(parent=1720,current_idx=2814)// are both edge vertices in same body      (nflexedge x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2815) 
				StructFieldNode(field_name=flex_centered,parent=1720,current_idx=2816)mjtByte*  flex_centered ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2817)       
				SingleCommentNode(parent=1720,current_idx=2818)// are all vertex coordinates (0 , 0 , 0)       (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2819) 
				StructFieldNode(field_name=flex_flatskin,parent=1720,current_idx=2820)mjtByte*  flex_flatskin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2821)       
				SingleCommentNode(parent=1720,current_idx=2822)// render flex skin with flat shading       (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2823) 
				StructFieldNode(field_name=flex_bvhadr,parent=1720,current_idx=2824)int*      flex_bvhadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2825)         
				SingleCommentNode(parent=1720,current_idx=2826)// address of bvh root ;  -1: no bvh          (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2827) 
				StructFieldNode(field_name=flex_bvhnum,parent=1720,current_idx=2828)int*      flex_bvhnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2829)         
				SingleCommentNode(parent=1720,current_idx=2830)// number of bounding volumes               (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2831) 
				StructFieldNode(field_name=flex_rgba,parent=1720,current_idx=2832)float*    flex_rgba ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2833)           
				SingleCommentNode(parent=1720,current_idx=2834)// rgba when material is omitted            (nflex x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2835) 
				StructFieldNode(field_name=flex_texcoord,parent=1720,current_idx=2836)float*    flex_texcoord ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2837)       
				SingleCommentNode(parent=1720,current_idx=2838)// vertex texture coordinates               (nflextexcoord x 2)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2839)  
				SingleCommentNode(parent=1720,current_idx=2840)// meshes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2841) 
				StructFieldNode(field_name=mesh_vertadr,parent=1720,current_idx=2842)int*      mesh_vertadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2843)        
				SingleCommentNode(parent=1720,current_idx=2844)// first vertex address                     (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2845) 
				StructFieldNode(field_name=mesh_vertnum,parent=1720,current_idx=2846)int*      mesh_vertnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2847)        
				SingleCommentNode(parent=1720,current_idx=2848)// number of vertices                       (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2849) 
				StructFieldNode(field_name=mesh_faceadr,parent=1720,current_idx=2850)int*      mesh_faceadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2851)        
				SingleCommentNode(parent=1720,current_idx=2852)// first face address                       (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2853) 
				StructFieldNode(field_name=mesh_facenum,parent=1720,current_idx=2854)int*      mesh_facenum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2855)        
				SingleCommentNode(parent=1720,current_idx=2856)// number of faces                          (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2857) 
				StructFieldNode(field_name=mesh_bvhadr,parent=1720,current_idx=2858)int*      mesh_bvhadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2859)         
				SingleCommentNode(parent=1720,current_idx=2860)// address of bvh root                      (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2861) 
				StructFieldNode(field_name=mesh_bvhnum,parent=1720,current_idx=2862)int*      mesh_bvhnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2863)         
				SingleCommentNode(parent=1720,current_idx=2864)// number of bvh                            (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2865) 
				StructFieldNode(field_name=mesh_normaladr,parent=1720,current_idx=2866)int*      mesh_normaladr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2867)      
				SingleCommentNode(parent=1720,current_idx=2868)// first normal address                     (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2869) 
				StructFieldNode(field_name=mesh_normalnum,parent=1720,current_idx=2870)int*      mesh_normalnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2871)      
				SingleCommentNode(parent=1720,current_idx=2872)// number of normals                        (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2873) 
				StructFieldNode(field_name=mesh_texcoordadr,parent=1720,current_idx=2874)int*      mesh_texcoordadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2875)    
				SingleCommentNode(parent=1720,current_idx=2876)// texcoord data address ;  -1: no texcoord   (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2877) 
				StructFieldNode(field_name=mesh_texcoordnum,parent=1720,current_idx=2878)int*      mesh_texcoordnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2879)    
				SingleCommentNode(parent=1720,current_idx=2880)// number of texcoord                       (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2881) 
				StructFieldNode(field_name=mesh_graphadr,parent=1720,current_idx=2882)int*      mesh_graphadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2883)       
				SingleCommentNode(parent=1720,current_idx=2884)// graph data address ;  -1: no graph         (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2885) 
				StructFieldNode(field_name=mesh_vert,parent=1720,current_idx=2886)float*    mesh_vert ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2887)           
				SingleCommentNode(parent=1720,current_idx=2888)// vertex positions for all meshes          (nmeshvert x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2889) 
				StructFieldNode(field_name=mesh_normal,parent=1720,current_idx=2890)float*    mesh_normal ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2891)         
				SingleCommentNode(parent=1720,current_idx=2892)// normals for all meshes                   (nmeshnormal x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2893) 
				StructFieldNode(field_name=mesh_texcoord,parent=1720,current_idx=2894)float*    mesh_texcoord ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2895)       
				SingleCommentNode(parent=1720,current_idx=2896)// vertex texcoords for all meshes          (nmeshtexcoord x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2897) 
				StructFieldNode(field_name=mesh_face,parent=1720,current_idx=2898)int*      mesh_face ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2899)           
				SingleCommentNode(parent=1720,current_idx=2900)// vertex face data                         (nmeshface x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2901) 
				StructFieldNode(field_name=mesh_facenormal,parent=1720,current_idx=2902)int*      mesh_facenormal ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2903)     
				SingleCommentNode(parent=1720,current_idx=2904)// normal face data                         (nmeshface x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2905) 
				StructFieldNode(field_name=mesh_facetexcoord,parent=1720,current_idx=2906)int*      mesh_facetexcoord ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2907)   
				SingleCommentNode(parent=1720,current_idx=2908)// texture face data                        (nmeshface x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2909) 
				StructFieldNode(field_name=mesh_graph,parent=1720,current_idx=2910)int*      mesh_graph ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2911)          
				SingleCommentNode(parent=1720,current_idx=2912)// convex graph data                        (nmeshgraph x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2913) 
				StructFieldNode(field_name=mesh_scale,parent=1720,current_idx=2914)mjtNum*   mesh_scale ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2915)          
				SingleCommentNode(parent=1720,current_idx=2916)// scaling applied to asset vertices        (nmesh x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2917) 
				StructFieldNode(field_name=mesh_pos,parent=1720,current_idx=2918)mjtNum*   mesh_pos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2919)            
				SingleCommentNode(parent=1720,current_idx=2920)// translation applied to asset vertices    (nmesh x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2921) 
				StructFieldNode(field_name=mesh_quat,parent=1720,current_idx=2922)mjtNum*   mesh_quat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2923)           
				SingleCommentNode(parent=1720,current_idx=2924)// rotation applied to asset vertices       (nmesh x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2925) 
				StructFieldNode(field_name=mesh_pathadr,parent=1720,current_idx=2926)int*      mesh_pathadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2927)        
				SingleCommentNode(parent=1720,current_idx=2928)// address of asset path for mesh ;  -1: none (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=2929)  
				SingleCommentNode(parent=1720,current_idx=2930)// skins
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2931) 
				StructFieldNode(field_name=skin_matid,parent=1720,current_idx=2932)int*      skin_matid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2933)          
				SingleCommentNode(parent=1720,current_idx=2934)// skin material id ;  -1: none               (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2935) 
				StructFieldNode(field_name=skin_group,parent=1720,current_idx=2936)int*      skin_group ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2937)          
				SingleCommentNode(parent=1720,current_idx=2938)// group for visibility                     (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2939) 
				StructFieldNode(field_name=skin_rgba,parent=1720,current_idx=2940)float*    skin_rgba ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2941)           
				SingleCommentNode(parent=1720,current_idx=2942)// skin rgba                                (nskin x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2943) 
				StructFieldNode(field_name=skin_inflate,parent=1720,current_idx=2944)float*    skin_inflate ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2945)        
				SingleCommentNode(parent=1720,current_idx=2946)// inflate skin in normal direction         (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2947) 
				StructFieldNode(field_name=skin_vertadr,parent=1720,current_idx=2948)int*      skin_vertadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2949)        
				SingleCommentNode(parent=1720,current_idx=2950)// first vertex address                     (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2951) 
				StructFieldNode(field_name=skin_vertnum,parent=1720,current_idx=2952)int*      skin_vertnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2953)        
				SingleCommentNode(parent=1720,current_idx=2954)// number of vertices                       (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2955) 
				StructFieldNode(field_name=skin_texcoordadr,parent=1720,current_idx=2956)int*      skin_texcoordadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2957)    
				SingleCommentNode(parent=1720,current_idx=2958)// texcoord data address ;  -1: no texcoord   (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2959) 
				StructFieldNode(field_name=skin_faceadr,parent=1720,current_idx=2960)int*      skin_faceadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2961)        
				SingleCommentNode(parent=1720,current_idx=2962)// first face address                       (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2963) 
				StructFieldNode(field_name=skin_facenum,parent=1720,current_idx=2964)int*      skin_facenum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2965)        
				SingleCommentNode(parent=1720,current_idx=2966)// number of faces                          (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2967) 
				StructFieldNode(field_name=skin_boneadr,parent=1720,current_idx=2968)int*      skin_boneadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2969)        
				SingleCommentNode(parent=1720,current_idx=2970)// first bone in skin                       (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2971) 
				StructFieldNode(field_name=skin_bonenum,parent=1720,current_idx=2972)int*      skin_bonenum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2973)        
				SingleCommentNode(parent=1720,current_idx=2974)// number of bones in skin                  (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2975) 
				StructFieldNode(field_name=skin_vert,parent=1720,current_idx=2976)float*    skin_vert ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2977)           
				SingleCommentNode(parent=1720,current_idx=2978)// vertex positions for all skin meshes     (nskinvert x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2979) 
				StructFieldNode(field_name=skin_texcoord,parent=1720,current_idx=2980)float*    skin_texcoord ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2981)       
				SingleCommentNode(parent=1720,current_idx=2982)// vertex texcoords for all skin meshes     (nskintexvert x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2983) 
				StructFieldNode(field_name=skin_face,parent=1720,current_idx=2984)int*      skin_face ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2985)           
				SingleCommentNode(parent=1720,current_idx=2986)// triangle faces for all skin meshes       (nskinface x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2987) 
				StructFieldNode(field_name=skin_bonevertadr,parent=1720,current_idx=2988)int*      skin_bonevertadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2989)    
				SingleCommentNode(parent=1720,current_idx=2990)// first vertex in each bone                (nskinbone x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2991) 
				StructFieldNode(field_name=skin_bonevertnum,parent=1720,current_idx=2992)int*      skin_bonevertnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2993)    
				SingleCommentNode(parent=1720,current_idx=2994)// number of vertices in each bone          (nskinbone x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2995) 
				StructFieldNode(field_name=skin_bonebindpos,parent=1720,current_idx=2996)float*    skin_bonebindpos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2997)    
				SingleCommentNode(parent=1720,current_idx=2998)// bind pos of each bone                    (nskinbone x 3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=2999) 
				StructFieldNode(field_name=skin_bonebindquat,parent=1720,current_idx=3000)float*    skin_bonebindquat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3001)   
				SingleCommentNode(parent=1720,current_idx=3002)// bind quat of each bone                   (nskinbone x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3003) 
				StructFieldNode(field_name=skin_bonebodyid,parent=1720,current_idx=3004)int*      skin_bonebodyid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3005)     
				SingleCommentNode(parent=1720,current_idx=3006)// body id of each bone                     (nskinbone x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3007) 
				StructFieldNode(field_name=skin_bonevertid,parent=1720,current_idx=3008)int*      skin_bonevertid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3009)     
				SingleCommentNode(parent=1720,current_idx=3010)// mesh ids of vertices in each bone        (nskinbonevert x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3011) 
				StructFieldNode(field_name=skin_bonevertweight,parent=1720,current_idx=3012)float*    skin_bonevertweight ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3013) 
				SingleCommentNode(parent=1720,current_idx=3014)// weights of vertices in each bone         (nskinbonevert x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3015) 
				StructFieldNode(field_name=skin_pathadr,parent=1720,current_idx=3016)int*      skin_pathadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3017)        
				SingleCommentNode(parent=1720,current_idx=3018)// address of asset path for skin ;  -1: none (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3019)  
				SingleCommentNode(parent=1720,current_idx=3020)// height fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3021) 
				StructFieldNode(field_name=hfield_size,parent=1720,current_idx=3022)mjtNum*   hfield_size ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3023)         
				SingleCommentNode(parent=1720,current_idx=3024)// (x ,  y ,  z_top ,  z_bottom)                  (nhfield x 4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3025) 
				StructFieldNode(field_name=hfield_nrow,parent=1720,current_idx=3026)int*      hfield_nrow ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3027)         
				SingleCommentNode(parent=1720,current_idx=3028)// number of rows in grid                   (nhfield x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3029) 
				StructFieldNode(field_name=hfield_ncol,parent=1720,current_idx=3030)int*      hfield_ncol ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3031)         
				SingleCommentNode(parent=1720,current_idx=3032)// number of columns in grid                (nhfield x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3033) 
				StructFieldNode(field_name=hfield_adr,parent=1720,current_idx=3034)int*      hfield_adr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3035)          
				SingleCommentNode(parent=1720,current_idx=3036)// address in hfield_data                   (nhfield x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3037) 
				StructFieldNode(field_name=hfield_data,parent=1720,current_idx=3038)float*    hfield_data ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3039)         
				SingleCommentNode(parent=1720,current_idx=3040)// elevation data                           (nhfielddata x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3041) 
				StructFieldNode(field_name=hfield_pathadr,parent=1720,current_idx=3042)int*      hfield_pathadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3043)      
				SingleCommentNode(parent=1720,current_idx=3044)// address of hfield asset path ;  -1: none   (nhfield x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3045)  
				SingleCommentNode(parent=1720,current_idx=3046)// textures
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3047) 
				StructFieldNode(field_name=tex_type,parent=1720,current_idx=3048)int*      tex_type ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3049)            
				SingleCommentNode(parent=1720,current_idx=3050)// texture type (mjtTexture)                (ntex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3051) 
				StructFieldNode(field_name=tex_height,parent=1720,current_idx=3052)int*      tex_height ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3053)          
				SingleCommentNode(parent=1720,current_idx=3054)// number of rows in texture image          (ntex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3055) 
				StructFieldNode(field_name=tex_width,parent=1720,current_idx=3056)int*      tex_width ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3057)           
				SingleCommentNode(parent=1720,current_idx=3058)// number of columns in texture image       (ntex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3059) 
				StructFieldNode(field_name=tex_nchannel,parent=1720,current_idx=3060)int*      tex_nchannel ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3061)        
				SingleCommentNode(parent=1720,current_idx=3062)// number of channels in texture image      (ntex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3063) 
				StructFieldNode(field_name=tex_adr,parent=1720,current_idx=3064)int*      tex_adr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3065)             
				SingleCommentNode(parent=1720,current_idx=3066)// start address in tex_data                (ntex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3067) 
				StructFieldNode(field_name=tex_data,parent=1720,current_idx=3068)mjtByte*  tex_data ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3069)            
				SingleCommentNode(parent=1720,current_idx=3070)// pixel values                             (ntexdata x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3071) 
				StructFieldNode(field_name=tex_pathadr,parent=1720,current_idx=3072)int*      tex_pathadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3073)         
				SingleCommentNode(parent=1720,current_idx=3074)// address of texture asset path ;  -1: none  (ntex x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3075)  
				SingleCommentNode(parent=1720,current_idx=3076)// materials
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3077) 
				StructFieldNode(field_name=mat_texid,parent=1720,current_idx=3078)int*      mat_texid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3079)           
				SingleCommentNode(parent=1720,current_idx=3080)// indices of textures ;  -1: none            (nmat x mjNTEXROLE)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3081) 
				StructFieldNode(field_name=mat_texuniform,parent=1720,current_idx=3082)mjtByte*  mat_texuniform ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3083)      
				SingleCommentNode(parent=1720,current_idx=3084)// make texture cube uniform                (nmat x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3085) 
				StructFieldNode(field_name=mat_texrepeat,parent=1720,current_idx=3086)float*    mat_texrepeat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3087)       
				SingleCommentNode(parent=1720,current_idx=3088)// texture repetition for 2d mapping        (nmat x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3089) 
				StructFieldNode(field_name=mat_emission,parent=1720,current_idx=3090)float*    mat_emission ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3091)        
				SingleCommentNode(parent=1720,current_idx=3092)// emission (x rgb)                         (nmat x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3093) 
				StructFieldNode(field_name=mat_specular,parent=1720,current_idx=3094)float*    mat_specular ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3095)        
				SingleCommentNode(parent=1720,current_idx=3096)// specular (x white)                       (nmat x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3097) 
				StructFieldNode(field_name=mat_shininess,parent=1720,current_idx=3098)float*    mat_shininess ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3099)       
				SingleCommentNode(parent=1720,current_idx=3100)// shininess coef                           (nmat x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3101) 
				StructFieldNode(field_name=mat_reflectance,parent=1720,current_idx=3102)float*    mat_reflectance ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3103)     
				SingleCommentNode(parent=1720,current_idx=3104)// reflectance (0: disable)                 (nmat x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3105) 
				StructFieldNode(field_name=mat_metallic,parent=1720,current_idx=3106)float*    mat_metallic ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3107)        
				SingleCommentNode(parent=1720,current_idx=3108)// metallic coef                            (nmat x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3109) 
				StructFieldNode(field_name=mat_roughness,parent=1720,current_idx=3110)float*    mat_roughness ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3111)       
				SingleCommentNode(parent=1720,current_idx=3112)// roughness coef                           (nmat x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3113) 
				StructFieldNode(field_name=mat_rgba,parent=1720,current_idx=3114)float*    mat_rgba ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3115)            
				SingleCommentNode(parent=1720,current_idx=3116)// rgba                                     (nmat x 4)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3117)  
				SingleCommentNode(parent=1720,current_idx=3118)// predefined geom pairs for collision detection ;  has precedence over exclude
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3119) 
				StructFieldNode(field_name=pair_dim,parent=1720,current_idx=3120)int*      pair_dim ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3121)            
				SingleCommentNode(parent=1720,current_idx=3122)// contact dimensionality                   (npair x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3123) 
				StructFieldNode(field_name=pair_geom1,parent=1720,current_idx=3124)int*      pair_geom1 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3125)          
				SingleCommentNode(parent=1720,current_idx=3126)// id of geom1                              (npair x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3127) 
				StructFieldNode(field_name=pair_geom2,parent=1720,current_idx=3128)int*      pair_geom2 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3129)          
				SingleCommentNode(parent=1720,current_idx=3130)// id of geom2                              (npair x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3131) 
				StructFieldNode(field_name=pair_signature,parent=1720,current_idx=3132)int*      pair_signature ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3133)      
				SingleCommentNode(parent=1720,current_idx=3134)// body1 << 16 + body2                      (npair x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3135) 
				StructFieldNode(field_name=pair_solref,parent=1720,current_idx=3136)mjtNum*   pair_solref ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3137)         
				SingleCommentNode(parent=1720,current_idx=3138)// solver reference: contact normal         (npair x mjNREF)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3139) 
				StructFieldNode(field_name=pair_solreffriction,parent=1720,current_idx=3140)mjtNum*   pair_solreffriction ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3141) 
				SingleCommentNode(parent=1720,current_idx=3142)// solver reference: contact friction       (npair x mjNREF)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3143) 
				StructFieldNode(field_name=pair_solimp,parent=1720,current_idx=3144)mjtNum*   pair_solimp ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3145)         
				SingleCommentNode(parent=1720,current_idx=3146)// solver impedance: contact                (npair x mjNIMP)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3147) 
				StructFieldNode(field_name=pair_margin,parent=1720,current_idx=3148)mjtNum*   pair_margin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3149)         
				SingleCommentNode(parent=1720,current_idx=3150)// detect contact if dist<margin            (npair x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3151) 
				StructFieldNode(field_name=pair_gap,parent=1720,current_idx=3152)mjtNum*   pair_gap ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3153)            
				SingleCommentNode(parent=1720,current_idx=3154)// include in solver if dist<margin-gap     (npair x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3155) 
				StructFieldNode(field_name=pair_friction,parent=1720,current_idx=3156)mjtNum*   pair_friction ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3157)       
				SingleCommentNode(parent=1720,current_idx=3158)// tangent1 ,  2 ,  spin ,  roll1 ,  2              (npair x 5)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3159)  
				SingleCommentNode(parent=1720,current_idx=3160)// excluded body pairs for collision detection
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3161) 
				StructFieldNode(field_name=exclude_signature,parent=1720,current_idx=3162)int*      exclude_signature ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3163)   
				SingleCommentNode(parent=1720,current_idx=3164)// body1 << 16 + body2                      (nexclude x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3165)  
				SingleCommentNode(parent=1720,current_idx=3166)// equality constraints
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3167) 
				StructFieldNode(field_name=eq_type,parent=1720,current_idx=3168)int*      eq_type ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3169)             
				SingleCommentNode(parent=1720,current_idx=3170)// constraint type (mjtEq)                  (neq x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3171) 
				StructFieldNode(field_name=eq_obj1id,parent=1720,current_idx=3172)int*      eq_obj1id ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3173)           
				SingleCommentNode(parent=1720,current_idx=3174)// id of object 1                           (neq x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3175) 
				StructFieldNode(field_name=eq_obj2id,parent=1720,current_idx=3176)int*      eq_obj2id ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3177)           
				SingleCommentNode(parent=1720,current_idx=3178)// id of object 2                           (neq x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3179) 
				StructFieldNode(field_name=eq_objtype,parent=1720,current_idx=3180)int*      eq_objtype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3181)          
				SingleCommentNode(parent=1720,current_idx=3182)// type of both objects (mjtObj)            (neq x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3183) 
				StructFieldNode(field_name=eq_active0,parent=1720,current_idx=3184)mjtByte*  eq_active0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3185)          
				SingleCommentNode(parent=1720,current_idx=3186)// initial enable/disable constraint state  (neq x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3187) 
				StructFieldNode(field_name=eq_solref,parent=1720,current_idx=3188)mjtNum*   eq_solref ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3189)           
				SingleCommentNode(parent=1720,current_idx=3190)// constraint solver reference              (neq x mjNREF)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3191) 
				StructFieldNode(field_name=eq_solimp,parent=1720,current_idx=3192)mjtNum*   eq_solimp ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3193)           
				SingleCommentNode(parent=1720,current_idx=3194)// constraint solver impedance              (neq x mjNIMP)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3195) 
				StructFieldNode(field_name=eq_data,parent=1720,current_idx=3196)mjtNum*   eq_data ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3197)             
				SingleCommentNode(parent=1720,current_idx=3198)// numeric data for constraint              (neq x mjNEQDATA)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3199)  
				SingleCommentNode(parent=1720,current_idx=3200)// tendons
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3201) 
				StructFieldNode(field_name=tendon_adr,parent=1720,current_idx=3202)int*      tendon_adr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3203)          
				SingleCommentNode(parent=1720,current_idx=3204)// address of first object in tendon's path (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3205) 
				StructFieldNode(field_name=tendon_num,parent=1720,current_idx=3206)int*      tendon_num ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3207)          
				SingleCommentNode(parent=1720,current_idx=3208)// number of objects in tendon's path       (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3209) 
				StructFieldNode(field_name=tendon_matid,parent=1720,current_idx=3210)int*      tendon_matid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3211)        
				SingleCommentNode(parent=1720,current_idx=3212)// material id for rendering                (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3213) 
				StructFieldNode(field_name=tendon_group,parent=1720,current_idx=3214)int*      tendon_group ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3215)        
				SingleCommentNode(parent=1720,current_idx=3216)// group for visibility                     (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3217) 
				StructFieldNode(field_name=tendon_limited,parent=1720,current_idx=3218)mjtByte*  tendon_limited ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3219)      
				SingleCommentNode(parent=1720,current_idx=3220)// does tendon have length limits           (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3221) 
				StructFieldNode(field_name=tendon_width,parent=1720,current_idx=3222)mjtNum*   tendon_width ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3223)        
				SingleCommentNode(parent=1720,current_idx=3224)// width for rendering                      (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3225) 
				StructFieldNode(field_name=tendon_solref_lim,parent=1720,current_idx=3226)mjtNum*   tendon_solref_lim ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3227)   
				SingleCommentNode(parent=1720,current_idx=3228)// constraint solver reference: limit       (ntendon x mjNREF)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3229) 
				StructFieldNode(field_name=tendon_solimp_lim,parent=1720,current_idx=3230)mjtNum*   tendon_solimp_lim ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3231)   
				SingleCommentNode(parent=1720,current_idx=3232)// constraint solver impedance: limit       (ntendon x mjNIMP)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3233) 
				StructFieldNode(field_name=tendon_solref_fri,parent=1720,current_idx=3234)mjtNum*   tendon_solref_fri ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3235)   
				SingleCommentNode(parent=1720,current_idx=3236)// constraint solver reference: friction    (ntendon x mjNREF)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3237) 
				StructFieldNode(field_name=tendon_solimp_fri,parent=1720,current_idx=3238)mjtNum*   tendon_solimp_fri ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3239)   
				SingleCommentNode(parent=1720,current_idx=3240)// constraint solver impedance: friction    (ntendon x mjNIMP)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3241) 
				StructFieldNode(field_name=tendon_range,parent=1720,current_idx=3242)mjtNum*   tendon_range ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3243)        
				SingleCommentNode(parent=1720,current_idx=3244)// tendon length limits                     (ntendon x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3245) 
				StructFieldNode(field_name=tendon_margin,parent=1720,current_idx=3246)mjtNum*   tendon_margin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3247)       
				SingleCommentNode(parent=1720,current_idx=3248)// min distance for limit detection         (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3249) 
				StructFieldNode(field_name=tendon_stiffness,parent=1720,current_idx=3250)mjtNum*   tendon_stiffness ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3251)    
				SingleCommentNode(parent=1720,current_idx=3252)// stiffness coefficient                    (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3253) 
				StructFieldNode(field_name=tendon_damping,parent=1720,current_idx=3254)mjtNum*   tendon_damping ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3255)      
				SingleCommentNode(parent=1720,current_idx=3256)// damping coefficient                      (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3257) 
				StructFieldNode(field_name=tendon_frictionloss,parent=1720,current_idx=3258)mjtNum*   tendon_frictionloss ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3259) 
				SingleCommentNode(parent=1720,current_idx=3260)// loss due to friction                     (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3261) 
				StructFieldNode(field_name=tendon_lengthspring,parent=1720,current_idx=3262)mjtNum*   tendon_lengthspring ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3263) 
				SingleCommentNode(parent=1720,current_idx=3264)// spring resting length range              (ntendon x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3265) 
				StructFieldNode(field_name=tendon_length0,parent=1720,current_idx=3266)mjtNum*   tendon_length0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3267)      
				SingleCommentNode(parent=1720,current_idx=3268)// tendon length in qpos0                   (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3269) 
				StructFieldNode(field_name=tendon_invweight0,parent=1720,current_idx=3270)mjtNum*   tendon_invweight0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3271)   
				SingleCommentNode(parent=1720,current_idx=3272)// inv. weight in qpos0                     (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3273) 
				StructFieldNode(field_name=tendon_user,parent=1720,current_idx=3274)mjtNum*   tendon_user ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3275)         
				SingleCommentNode(parent=1720,current_idx=3276)// user data                                (ntendon x nuser_tendon)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3277) 
				StructFieldNode(field_name=tendon_rgba,parent=1720,current_idx=3278)float*    tendon_rgba ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3279)         
				SingleCommentNode(parent=1720,current_idx=3280)// rgba when material is omitted            (ntendon x 4)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3281)  
				SingleCommentNode(parent=1720,current_idx=3282)// list of all wrap objects in tendon paths
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3283) 
				StructFieldNode(field_name=wrap_type,parent=1720,current_idx=3284)int*      wrap_type ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3285)           
				SingleCommentNode(parent=1720,current_idx=3286)// wrap object type (mjtWrap)               (nwrap x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3287) 
				StructFieldNode(field_name=wrap_objid,parent=1720,current_idx=3288)int*      wrap_objid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3289)          
				SingleCommentNode(parent=1720,current_idx=3290)// object id: geom ,  site ,  joint             (nwrap x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3291) 
				StructFieldNode(field_name=wrap_prm,parent=1720,current_idx=3292)mjtNum*   wrap_prm ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3293)            
				SingleCommentNode(parent=1720,current_idx=3294)// divisor ,  joint coef ,  or site id          (nwrap x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3295)  
				SingleCommentNode(parent=1720,current_idx=3296)// actuators
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3297) 
				StructFieldNode(field_name=actuator_trntype,parent=1720,current_idx=3298)int*      actuator_trntype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3299)    
				SingleCommentNode(parent=1720,current_idx=3300)// transmission type (mjtTrn)               (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3301) 
				StructFieldNode(field_name=actuator_dyntype,parent=1720,current_idx=3302)int*      actuator_dyntype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3303)    
				SingleCommentNode(parent=1720,current_idx=3304)// dynamics type (mjtDyn)                   (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3305) 
				StructFieldNode(field_name=actuator_gaintype,parent=1720,current_idx=3306)int*      actuator_gaintype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3307)   
				SingleCommentNode(parent=1720,current_idx=3308)// gain type (mjtGain)                      (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3309) 
				StructFieldNode(field_name=actuator_biastype,parent=1720,current_idx=3310)int*      actuator_biastype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3311)   
				SingleCommentNode(parent=1720,current_idx=3312)// bias type (mjtBias)                      (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3313) 
				StructFieldNode(field_name=actuator_trnid,parent=1720,current_idx=3314)int*      actuator_trnid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3315)      
				SingleCommentNode(parent=1720,current_idx=3316)// transmission id: joint ,  tendon ,  site     (nu x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3317) 
				StructFieldNode(field_name=actuator_actadr,parent=1720,current_idx=3318)int*      actuator_actadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3319)     
				SingleCommentNode(parent=1720,current_idx=3320)// first activation address ;  -1: stateless  (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3321) 
				StructFieldNode(field_name=actuator_actnum,parent=1720,current_idx=3322)int*      actuator_actnum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3323)     
				SingleCommentNode(parent=1720,current_idx=3324)// number of activation variables           (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3325) 
				StructFieldNode(field_name=actuator_group,parent=1720,current_idx=3326)int*      actuator_group ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3327)      
				SingleCommentNode(parent=1720,current_idx=3328)// group for visibility                     (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3329) 
				StructFieldNode(field_name=actuator_ctrllimited,parent=1720,current_idx=3330)mjtByte*  actuator_ctrllimited ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3331)
				SingleCommentNode(parent=1720,current_idx=3332)// is control limited                       (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3333) 
				StructFieldNode(field_name=actuator_forcelimited,parent=1720,current_idx=3334)mjtByte*  actuator_forcelimited ;
				SingleCommentNode(parent=1720,current_idx=3335)// is force limited                         (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3336) 
				StructFieldNode(field_name=actuator_actlimited,parent=1720,current_idx=3337)mjtByte*  actuator_actlimited ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3338) 
				SingleCommentNode(parent=1720,current_idx=3339)// is activation limited                    (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3340) 
				StructFieldNode(field_name=actuator_dynprm,parent=1720,current_idx=3341)mjtNum*   actuator_dynprm ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3342)     
				SingleCommentNode(parent=1720,current_idx=3343)// dynamics parameters                      (nu x mjNDYN)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3344) 
				StructFieldNode(field_name=actuator_gainprm,parent=1720,current_idx=3345)mjtNum*   actuator_gainprm ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3346)    
				SingleCommentNode(parent=1720,current_idx=3347)// gain parameters                          (nu x mjNGAIN)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3348) 
				StructFieldNode(field_name=actuator_biasprm,parent=1720,current_idx=3349)mjtNum*   actuator_biasprm ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3350)    
				SingleCommentNode(parent=1720,current_idx=3351)// bias parameters                          (nu x mjNBIAS)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3352) 
				StructFieldNode(field_name=actuator_actearly,parent=1720,current_idx=3353)mjtByte*  actuator_actearly ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3354)   
				SingleCommentNode(parent=1720,current_idx=3355)// step activation before force             (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3356) 
				StructFieldNode(field_name=actuator_ctrlrange,parent=1720,current_idx=3357)mjtNum*   actuator_ctrlrange ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3358)  
				SingleCommentNode(parent=1720,current_idx=3359)// range of controls                        (nu x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3360) 
				StructFieldNode(field_name=actuator_forcerange,parent=1720,current_idx=3361)mjtNum*   actuator_forcerange ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3362) 
				SingleCommentNode(parent=1720,current_idx=3363)// range of forces                          (nu x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3364) 
				StructFieldNode(field_name=actuator_actrange,parent=1720,current_idx=3365)mjtNum*   actuator_actrange ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3366)   
				SingleCommentNode(parent=1720,current_idx=3367)// range of activations                     (nu x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3368) 
				StructFieldNode(field_name=actuator_gear,parent=1720,current_idx=3369)mjtNum*   actuator_gear ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3370)       
				SingleCommentNode(parent=1720,current_idx=3371)// scale length and transmitted force       (nu x 6)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3372) 
				StructFieldNode(field_name=actuator_cranklength,parent=1720,current_idx=3373)mjtNum*   actuator_cranklength ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3374)
				SingleCommentNode(parent=1720,current_idx=3375)// crank length for slider-crank            (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3376) 
				StructFieldNode(field_name=actuator_acc0,parent=1720,current_idx=3377)mjtNum*   actuator_acc0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3378)       
				SingleCommentNode(parent=1720,current_idx=3379)// acceleration from unit force in qpos0    (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3380) 
				StructFieldNode(field_name=actuator_length0,parent=1720,current_idx=3381)mjtNum*   actuator_length0 ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3382)    
				SingleCommentNode(parent=1720,current_idx=3383)// actuator length in qpos0                 (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3384) 
				StructFieldNode(field_name=actuator_lengthrange,parent=1720,current_idx=3385)mjtNum*   actuator_lengthrange ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3386)
				SingleCommentNode(parent=1720,current_idx=3387)// feasible actuator length range           (nu x 2)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3388) 
				StructFieldNode(field_name=actuator_user,parent=1720,current_idx=3389)mjtNum*   actuator_user ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3390)       
				SingleCommentNode(parent=1720,current_idx=3391)// user data                                (nu x nuser_actuator)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3392) 
				StructFieldNode(field_name=actuator_plugin,parent=1720,current_idx=3393)int*      actuator_plugin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3394)     
				SingleCommentNode(parent=1720,current_idx=3395)// plugin instance id ;  -1: not a plugin     (nu x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3396)  
				SingleCommentNode(parent=1720,current_idx=3397)// sensors
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3398) 
				StructFieldNode(field_name=sensor_type,parent=1720,current_idx=3399)int*      sensor_type ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3400)         
				SingleCommentNode(parent=1720,current_idx=3401)// sensor type (mjtSensor)                  (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3402) 
				StructFieldNode(field_name=sensor_datatype,parent=1720,current_idx=3403)int*      sensor_datatype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3404)     
				SingleCommentNode(parent=1720,current_idx=3405)// numeric data type (mjtDataType)          (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3406) 
				StructFieldNode(field_name=sensor_needstage,parent=1720,current_idx=3407)int*      sensor_needstage ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3408)    
				SingleCommentNode(parent=1720,current_idx=3409)// required compute stage (mjtStage)        (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3410) 
				StructFieldNode(field_name=sensor_objtype,parent=1720,current_idx=3411)int*      sensor_objtype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3412)      
				SingleCommentNode(parent=1720,current_idx=3413)// type of sensorized object (mjtObj)       (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3414) 
				StructFieldNode(field_name=sensor_objid,parent=1720,current_idx=3415)int*      sensor_objid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3416)        
				SingleCommentNode(parent=1720,current_idx=3417)// id of sensorized object                  (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3418) 
				StructFieldNode(field_name=sensor_reftype,parent=1720,current_idx=3419)int*      sensor_reftype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3420)      
				SingleCommentNode(parent=1720,current_idx=3421)// type of reference frame (mjtObj)         (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3422) 
				StructFieldNode(field_name=sensor_refid,parent=1720,current_idx=3423)int*      sensor_refid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3424)        
				SingleCommentNode(parent=1720,current_idx=3425)// id of reference frame ;  -1: global frame  (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3426) 
				StructFieldNode(field_name=sensor_dim,parent=1720,current_idx=3427)int*      sensor_dim ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3428)          
				SingleCommentNode(parent=1720,current_idx=3429)// number of scalar outputs                 (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3430) 
				StructFieldNode(field_name=sensor_adr,parent=1720,current_idx=3431)int*      sensor_adr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3432)          
				SingleCommentNode(parent=1720,current_idx=3433)// address in sensor array                  (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3434) 
				StructFieldNode(field_name=sensor_cutoff,parent=1720,current_idx=3435)mjtNum*   sensor_cutoff ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3436)       
				SingleCommentNode(parent=1720,current_idx=3437)// cutoff for real and positive ;  0: ignore  (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3438) 
				StructFieldNode(field_name=sensor_noise,parent=1720,current_idx=3439)mjtNum*   sensor_noise ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3440)        
				SingleCommentNode(parent=1720,current_idx=3441)// noise standard deviation                 (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3442) 
				StructFieldNode(field_name=sensor_user,parent=1720,current_idx=3443)mjtNum*   sensor_user ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3444)         
				SingleCommentNode(parent=1720,current_idx=3445)// user data                                (nsensor x nuser_sensor)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3446) 
				StructFieldNode(field_name=sensor_plugin,parent=1720,current_idx=3447)int*      sensor_plugin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3448)       
				SingleCommentNode(parent=1720,current_idx=3449)// plugin instance id ;  -1: not a plugin     (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3450)  
				SingleCommentNode(parent=1720,current_idx=3451)// plugin instances
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3452) 
				StructFieldNode(field_name=plugin,parent=1720,current_idx=3453)int*      plugin ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3454)              
				SingleCommentNode(parent=1720,current_idx=3455)// globally registered plugin slot number   (nplugin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3456) 
				StructFieldNode(field_name=plugin_stateadr,parent=1720,current_idx=3457)int*      plugin_stateadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3458)     
				SingleCommentNode(parent=1720,current_idx=3459)// address in the plugin state array        (nplugin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3460) 
				StructFieldNode(field_name=plugin_statenum,parent=1720,current_idx=3461)int*      plugin_statenum ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3462)     
				SingleCommentNode(parent=1720,current_idx=3463)// number of states in the plugin instance  (nplugin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3464) 
				StructFieldNode(field_name=plugin_attr,parent=1720,current_idx=3465)char*     plugin_attr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3466)         
				SingleCommentNode(parent=1720,current_idx=3467)// config attributes of plugin instances    (npluginattr x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3468) 
				StructFieldNode(field_name=plugin_attradr,parent=1720,current_idx=3469)int*      plugin_attradr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3470)      
				SingleCommentNode(parent=1720,current_idx=3471)// address to each instance's config attrib (nplugin x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3472)  
				SingleCommentNode(parent=1720,current_idx=3473)// custom numeric fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3474) 
				StructFieldNode(field_name=numeric_adr,parent=1720,current_idx=3475)int*      numeric_adr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3476)         
				SingleCommentNode(parent=1720,current_idx=3477)// address of field in numeric_data         (nnumeric x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3478) 
				StructFieldNode(field_name=numeric_size,parent=1720,current_idx=3479)int*      numeric_size ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3480)        
				SingleCommentNode(parent=1720,current_idx=3481)// size of numeric field                    (nnumeric x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3482) 
				StructFieldNode(field_name=numeric_data,parent=1720,current_idx=3483)mjtNum*   numeric_data ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3484)        
				SingleCommentNode(parent=1720,current_idx=3485)// array of all numeric fields              (nnumericdata x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3486)  
				SingleCommentNode(parent=1720,current_idx=3487)// custom text fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3488) 
				StructFieldNode(field_name=text_adr,parent=1720,current_idx=3489)int*      text_adr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3490)            
				SingleCommentNode(parent=1720,current_idx=3491)// address of text in text_data             (ntext x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3492) 
				StructFieldNode(field_name=text_size,parent=1720,current_idx=3493)int*      text_size ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3494)           
				SingleCommentNode(parent=1720,current_idx=3495)// size of text field (strlen+1)            (ntext x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3496) 
				StructFieldNode(field_name=text_data,parent=1720,current_idx=3497)char*     text_data ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3498)           
				SingleCommentNode(parent=1720,current_idx=3499)// array of all text fields (0-terminated)  (ntextdata x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3500)  
				SingleCommentNode(parent=1720,current_idx=3501)// custom tuple fields
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3502) 
				StructFieldNode(field_name=tuple_adr,parent=1720,current_idx=3503)int*      tuple_adr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3504)           
				SingleCommentNode(parent=1720,current_idx=3505)// address of text in text_data             (ntuple x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3506) 
				StructFieldNode(field_name=tuple_size,parent=1720,current_idx=3507)int*      tuple_size ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3508)          
				SingleCommentNode(parent=1720,current_idx=3509)// number of objects in tuple               (ntuple x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3510) 
				StructFieldNode(field_name=tuple_objtype,parent=1720,current_idx=3511)int*      tuple_objtype ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3512)       
				SingleCommentNode(parent=1720,current_idx=3513)// array of object types in all tuples      (ntupledata x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3514) 
				StructFieldNode(field_name=tuple_objid,parent=1720,current_idx=3515)int*      tuple_objid ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3516)         
				SingleCommentNode(parent=1720,current_idx=3517)// array of object ids in all tuples        (ntupledata x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3518) 
				StructFieldNode(field_name=tuple_objprm,parent=1720,current_idx=3519)mjtNum*   tuple_objprm ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3520)        
				SingleCommentNode(parent=1720,current_idx=3521)// array of object params in all tuples     (ntupledata x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3522)  
				SingleCommentNode(parent=1720,current_idx=3523)// keyframes
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3524) 
				StructFieldNode(field_name=key_time,parent=1720,current_idx=3525)mjtNum*   key_time ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3526)            
				SingleCommentNode(parent=1720,current_idx=3527)// key time                                 (nkey x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3528) 
				StructFieldNode(field_name=key_qpos,parent=1720,current_idx=3529)mjtNum*   key_qpos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3530)            
				SingleCommentNode(parent=1720,current_idx=3531)// key position                             (nkey x nq)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3532) 
				StructFieldNode(field_name=key_qvel,parent=1720,current_idx=3533)mjtNum*   key_qvel ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3534)            
				SingleCommentNode(parent=1720,current_idx=3535)// key velocity                             (nkey x nv)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3536) 
				StructFieldNode(field_name=key_act,parent=1720,current_idx=3537)mjtNum*   key_act ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3538)             
				SingleCommentNode(parent=1720,current_idx=3539)// key activation                           (nkey x na)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3540) 
				StructFieldNode(field_name=key_mpos,parent=1720,current_idx=3541)mjtNum*   key_mpos ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3542)            
				SingleCommentNode(parent=1720,current_idx=3543)// key mocap position                       (nkey x nmocap*3)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3544) 
				StructFieldNode(field_name=key_mquat,parent=1720,current_idx=3545)mjtNum*   key_mquat ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3546)           
				SingleCommentNode(parent=1720,current_idx=3547)// key mocap quaternion                     (nkey x nmocap*4)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3548) 
				StructFieldNode(field_name=key_ctrl,parent=1720,current_idx=3549)mjtNum*   key_ctrl ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3550)            
				SingleCommentNode(parent=1720,current_idx=3551)// key control                              (nkey x nu)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3552)  
				SingleCommentNode(parent=1720,current_idx=3553)// names
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3554) 
				StructFieldNode(field_name=name_bodyadr,parent=1720,current_idx=3555)int*      name_bodyadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3556)        
				SingleCommentNode(parent=1720,current_idx=3557)// body name pointers                       (nbody x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3558) 
				StructFieldNode(field_name=name_jntadr,parent=1720,current_idx=3559)int*      name_jntadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3560)         
				SingleCommentNode(parent=1720,current_idx=3561)// joint name pointers                      (njnt x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3562) 
				StructFieldNode(field_name=name_geomadr,parent=1720,current_idx=3563)int*      name_geomadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3564)        
				SingleCommentNode(parent=1720,current_idx=3565)// geom name pointers                       (ngeom x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3566) 
				StructFieldNode(field_name=name_siteadr,parent=1720,current_idx=3567)int*      name_siteadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3568)        
				SingleCommentNode(parent=1720,current_idx=3569)// site name pointers                       (nsite x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3570) 
				StructFieldNode(field_name=name_camadr,parent=1720,current_idx=3571)int*      name_camadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3572)         
				SingleCommentNode(parent=1720,current_idx=3573)// camera name pointers                     (ncam x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3574) 
				StructFieldNode(field_name=name_lightadr,parent=1720,current_idx=3575)int*      name_lightadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3576)       
				SingleCommentNode(parent=1720,current_idx=3577)// light name pointers                      (nlight x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3578) 
				StructFieldNode(field_name=name_flexadr,parent=1720,current_idx=3579)int*      name_flexadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3580)        
				SingleCommentNode(parent=1720,current_idx=3581)// flex name pointers                       (nflex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3582) 
				StructFieldNode(field_name=name_meshadr,parent=1720,current_idx=3583)int*      name_meshadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3584)        
				SingleCommentNode(parent=1720,current_idx=3585)// mesh name pointers                       (nmesh x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3586) 
				StructFieldNode(field_name=name_skinadr,parent=1720,current_idx=3587)int*      name_skinadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3588)        
				SingleCommentNode(parent=1720,current_idx=3589)// skin name pointers                       (nskin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3590) 
				StructFieldNode(field_name=name_hfieldadr,parent=1720,current_idx=3591)int*      name_hfieldadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3592)      
				SingleCommentNode(parent=1720,current_idx=3593)// hfield name pointers                     (nhfield x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3594) 
				StructFieldNode(field_name=name_texadr,parent=1720,current_idx=3595)int*      name_texadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3596)         
				SingleCommentNode(parent=1720,current_idx=3597)// texture name pointers                    (ntex x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3598) 
				StructFieldNode(field_name=name_matadr,parent=1720,current_idx=3599)int*      name_matadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3600)         
				SingleCommentNode(parent=1720,current_idx=3601)// material name pointers                   (nmat x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3602) 
				StructFieldNode(field_name=name_pairadr,parent=1720,current_idx=3603)int*      name_pairadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3604)        
				SingleCommentNode(parent=1720,current_idx=3605)// geom pair name pointers                  (npair x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3606) 
				StructFieldNode(field_name=name_excludeadr,parent=1720,current_idx=3607)int*      name_excludeadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3608)     
				SingleCommentNode(parent=1720,current_idx=3609)// exclude name pointers                    (nexclude x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3610) 
				StructFieldNode(field_name=name_eqadr,parent=1720,current_idx=3611)int*      name_eqadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3612)          
				SingleCommentNode(parent=1720,current_idx=3613)// equality constraint name pointers        (neq x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3614) 
				StructFieldNode(field_name=name_tendonadr,parent=1720,current_idx=3615)int*      name_tendonadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3616)      
				SingleCommentNode(parent=1720,current_idx=3617)// tendon name pointers                     (ntendon x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3618) 
				StructFieldNode(field_name=name_actuatoradr,parent=1720,current_idx=3619)int*      name_actuatoradr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3620)    
				SingleCommentNode(parent=1720,current_idx=3621)// actuator name pointers                   (nu x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3622) 
				StructFieldNode(field_name=name_sensoradr,parent=1720,current_idx=3623)int*      name_sensoradr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3624)      
				SingleCommentNode(parent=1720,current_idx=3625)// sensor name pointers                     (nsensor x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3626) 
				StructFieldNode(field_name=name_numericadr,parent=1720,current_idx=3627)int*      name_numericadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3628)     
				SingleCommentNode(parent=1720,current_idx=3629)// numeric name pointers                    (nnumeric x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3630) 
				StructFieldNode(field_name=name_textadr,parent=1720,current_idx=3631)int*      name_textadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3632)        
				SingleCommentNode(parent=1720,current_idx=3633)// text name pointers                       (ntext x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3634) 
				StructFieldNode(field_name=name_tupleadr,parent=1720,current_idx=3635)int*      name_tupleadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3636)       
				SingleCommentNode(parent=1720,current_idx=3637)// tuple name pointers                      (ntuple x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3638) 
				StructFieldNode(field_name=name_keyadr,parent=1720,current_idx=3639)int*      name_keyadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3640)         
				SingleCommentNode(parent=1720,current_idx=3641)// keyframe name pointers                   (nkey x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3642) 
				StructFieldNode(field_name=name_pluginadr,parent=1720,current_idx=3643)int*      name_pluginadr ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3644)      
				SingleCommentNode(parent=1720,current_idx=3645)// plugin instance name pointers            (nplugin x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3646) 
				StructFieldNode(field_name=names,parent=1720,current_idx=3647)char*     names ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3648)               
				SingleCommentNode(parent=1720,current_idx=3649)// names of all objects ,  0-terminated       (nnames x 1)
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3650) 
				StructFieldNode(field_name=names_map,parent=1720,current_idx=3651)int*      names_map ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3652)           
				SingleCommentNode(parent=1720,current_idx=3653)// internal hash map of names               (nnames_map x 1)
				WhitespaceNode(parent=1720,n_lines=2,current_idx=3654)  
				SingleCommentNode(parent=1720,current_idx=3655)// paths
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3656) 
				StructFieldNode(field_name=paths,parent=1720,current_idx=3657)char*     paths ;
				WhitespaceNode(parent=1720,n_lines=1,current_idx=3658)               
				SingleCommentNode(parent=1720,current_idx=3659)// paths to assets ,  0-terminated            (npaths x 1)
			}
		;
		WhitespaceNode(parent=15,n_lines=1,current_idx=3660)
		TypedefNode(parent=15,current_idx=3661,typename=mjModel)typedef
			StructNode(name=mjModel_,parent=3661,current_idx=3662)struct mjModel_
			DeletedNode(parent=15,current_idx=0)mjModel
		mjModel ;
		WhitespaceNode(parent=15,n_lines=2,current_idx=3664) 
	#endif
	WhitespaceNode(parent=0,n_lines=1,current_idx=3665)
	SingleCommentNode(parent=0,current_idx=3666)// MUJOCO_MJMODEL_H_
	WhitespaceNode(parent=0,n_lines=1,current_idx=3667)