RootNode(c_current_idx=0, c_child_idxs=(1, 2, 3, 4, 5, ...) len=31)
SingleLineCommentNode(c_parent_idx=0, c_current_idx=1)
// Copyright 2021 DeepMind Technologies LimitedWhitespaceNode(c_parent_idx=0, c_current_idx=2, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=3)
//WhitespaceNode(c_parent_idx=0, c_current_idx=4, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=5)
// Licensed under the Apache License ,  Version 2.0  ( the "License" )  ; WhitespaceNode(c_parent_idx=0, c_current_idx=6, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=7)
// you may not use this file except in compliance with the License.WhitespaceNode(c_parent_idx=0, c_current_idx=8, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=9)
// You may obtain a copy of the License atWhitespaceNode(c_parent_idx=0, c_current_idx=10, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=11)
//WhitespaceNode(c_parent_idx=0, c_current_idx=12, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=13)
//     http://www.apache.org/licenses/LICENSE-2.0WhitespaceNode(c_parent_idx=0, c_current_idx=14, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=15)
//WhitespaceNode(c_parent_idx=0, c_current_idx=16, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=17)
// Unless required by applicable law or agreed to in writing ,  softwareWhitespaceNode(c_parent_idx=0, c_current_idx=18, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=19)
// distributed under the License is distributed on an "AS IS" BASIS , WhitespaceNode(c_parent_idx=0, c_current_idx=20, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=21)
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND ,  either express or implied.WhitespaceNode(c_parent_idx=0, c_current_idx=22, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=23)
// See the License for the specific language governing permissions andWhitespaceNode(c_parent_idx=0, c_current_idx=24, n_tokens=1)
C_BINDER_MOJO_NEWLINESingleLineCommentNode(c_parent_idx=0, c_current_idx=25)
// limitations under the License.WhitespaceNode(c_parent_idx=0, c_current_idx=26, n_tokens=3)
C_BINDER_MOJO_NEWLINE C_BINDER_MOJO_NEWLINEMacroIfNDefNode(c_parent_idx=0, c_current_idx=27, c_child_idxs=(28, 29, 30, 31, 32, ...) len=97, node_state=4 (COMPLETED))
#ifndef MUJOCO_MJMODEL_H_	WhitespaceNode(c_parent_idx=27, c_current_idx=28, n_tokens=1)
C_BINDER_MOJO_NEWLINE		MacroDefineNode(c_parent_idx=27, c_current_idx=29, node_state=4 (COMPLETED), macro='MUJOCO_MJMODEL_H_')
#define MUJOCO_MJMODEL_H_	WhitespaceNode(c_parent_idx=27, c_current_idx=30, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		IncludeNode(c_parent_idx=27, c_current_idx=31, node_state=4 (COMPLETED), path='stddef.h', system=True)
#include <stddef.h>	WhitespaceNode(c_parent_idx=27, c_current_idx=32, n_tokens=1)
C_BINDER_MOJO_NEWLINE		IncludeNode(c_parent_idx=27, c_current_idx=33, node_state=4 (COMPLETED), path='stdint.h', system=True)
#include <stdint.h>	WhitespaceNode(c_parent_idx=27, c_current_idx=34, n_tokens=5)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		IncludeNode(c_parent_idx=27, c_current_idx=35, node_state=4 (COMPLETED), path='mujoco/mjtnum.h', system=True)
#include <mujoco/mjtnum.h>	WhitespaceNode(c_parent_idx=27, c_current_idx=36, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		SingleLineCommentNode(c_parent_idx=27, c_current_idx=37)
// global constants	WhitespaceNode(c_parent_idx=27, c_current_idx=38, n_tokens=1)
C_BINDER_MOJO_NEWLINE		MacroDefineNode(c_parent_idx=27, c_current_idx=39, c_child_idxs=(40, 41, 42), node_state=4 (COMPLETED), macro='mjPI')
#define mjPI			WhitespaceNode(c_parent_idx=39, c_current_idx=40, n_tokens=11)
		MacroDefineValueNode(c_parent_idx=39, c_current_idx=41, node_state=4 (COMPLETED), is_function_like=False)
3.14159265358979323846 C_BINDER_MOJO_NEWLINE				MacroDefineNode(c_parent_idx=39, c_current_idx=42, c_child_idxs=(43, 44, 45), node_state=4 (COMPLETED), macro='mjMAXVAL')
#define mjMAXVAL					WhitespaceNode(c_parent_idx=42, c_current_idx=43, n_tokens=7)
			MacroDefineValueNode(c_parent_idx=42, c_current_idx=44, node_state=4 (COMPLETED), is_function_like=False)
1E+10     // maximum value in qpos ,  qvel ,  qacc C_BINDER_MOJO_NEWLINE						MacroDefineNode(c_parent_idx=42, c_current_idx=45, c_child_idxs=(46, 47, 48), node_state=4 (COMPLETED), macro='mjMINMU')
#define mjMINMU							WhitespaceNode(c_parent_idx=45, c_current_idx=46, n_tokens=8)
				MacroDefineValueNode(c_parent_idx=45, c_current_idx=47, node_state=4 (COMPLETED), is_function_like=False)
1E-5      // minimum friction coefficient C_BINDER_MOJO_NEWLINE								MacroDefineNode(c_parent_idx=45, c_current_idx=48, c_child_idxs=(49, 50, 51), node_state=4 (COMPLETED), macro='mjMINIMP')
#define mjMINIMP									WhitespaceNode(c_parent_idx=48, c_current_idx=49, n_tokens=7)
					MacroDefineValueNode(c_parent_idx=48, c_current_idx=50, node_state=4 (COMPLETED), is_function_like=False)
0.0001    // minimum constraint impedance C_BINDER_MOJO_NEWLINE										MacroDefineNode(c_parent_idx=48, c_current_idx=51, c_child_idxs=(52, 53, 54), node_state=4 (COMPLETED), macro='mjMAXIMP')
#define mjMAXIMP											WhitespaceNode(c_parent_idx=51, c_current_idx=52, n_tokens=7)
						MacroDefineValueNode(c_parent_idx=51, c_current_idx=53, node_state=4 (COMPLETED), is_function_like=False)
0.9999    // maximum constraint impedance C_BINDER_MOJO_NEWLINE												MacroDefineNode(c_parent_idx=51, c_current_idx=54, c_child_idxs=(55, 56, 57), node_state=4 (COMPLETED), macro='mjMAXCONPAIR')
#define mjMAXCONPAIR													WhitespaceNode(c_parent_idx=54, c_current_idx=55, n_tokens=3)
							MacroDefineValueNode(c_parent_idx=54, c_current_idx=56, node_state=4 (COMPLETED), is_function_like=False)
50        // maximum number of contacts per geom pair C_BINDER_MOJO_NEWLINE														MacroDefineNode(c_parent_idx=54, c_current_idx=57, c_child_idxs=(58, 59, 60, 61), node_state=4 (COMPLETED), macro='mjMAXTREEDEPTH')
#define mjMAXTREEDEPTH															WhitespaceNode(c_parent_idx=57, c_current_idx=58, n_tokens=1)
								MacroDefineValueNode(c_parent_idx=57, c_current_idx=59, node_state=4 (COMPLETED), is_function_like=False)
50        // maximum bounding volume hierarchy depth C_BINDER_MOJO_NEWLINE																WhitespaceNode(c_parent_idx=57, c_current_idx=60, n_tokens=4)
C_BINDER_MOJO_NEWLINE								 C_BINDER_MOJO_NEWLINE																SingleLineCommentNode(c_parent_idx=57, c_current_idx=61)
//---------------------------------- sizes ---------------------------------------------------------	WhitespaceNode(c_parent_idx=27, c_current_idx=62, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		MacroDefineNode(c_parent_idx=27, c_current_idx=63, c_child_idxs=(64, 65, 66), node_state=4 (COMPLETED), macro='mjNEQDATA')
#define mjNEQDATA			WhitespaceNode(c_parent_idx=63, c_current_idx=64, n_tokens=6)
		MacroDefineValueNode(c_parent_idx=63, c_current_idx=65, node_state=4 (COMPLETED), is_function_like=False)
11        // number of eq_data fields C_BINDER_MOJO_NEWLINE				MacroDefineNode(c_parent_idx=63, c_current_idx=66, c_child_idxs=(67, 68, 69), node_state=4 (COMPLETED), macro='mjNDYN')
#define mjNDYN					WhitespaceNode(c_parent_idx=66, c_current_idx=67, n_tokens=9)
			MacroDefineValueNode(c_parent_idx=66, c_current_idx=68, node_state=4 (COMPLETED), is_function_like=False)
10        // number of actuator dynamics parameters C_BINDER_MOJO_NEWLINE						MacroDefineNode(c_parent_idx=66, c_current_idx=69, c_child_idxs=(70, 71, 72), node_state=4 (COMPLETED), macro='mjNGAIN')
#define mjNGAIN							WhitespaceNode(c_parent_idx=69, c_current_idx=70, n_tokens=8)
				MacroDefineValueNode(c_parent_idx=69, c_current_idx=71, node_state=4 (COMPLETED), is_function_like=False)
10        // number of actuator gain parameters C_BINDER_MOJO_NEWLINE								MacroDefineNode(c_parent_idx=69, c_current_idx=72, c_child_idxs=(73, 74, 75), node_state=4 (COMPLETED), macro='mjNBIAS')
#define mjNBIAS									WhitespaceNode(c_parent_idx=72, c_current_idx=73, n_tokens=8)
					MacroDefineValueNode(c_parent_idx=72, c_current_idx=74, node_state=4 (COMPLETED), is_function_like=False)
10        // number of actuator bias parameters C_BINDER_MOJO_NEWLINE										MacroDefineNode(c_parent_idx=72, c_current_idx=75, c_child_idxs=(76, 77, 78), node_state=4 (COMPLETED), macro='mjNFLUID')
#define mjNFLUID											WhitespaceNode(c_parent_idx=75, c_current_idx=76, n_tokens=7)
						MacroDefineValueNode(c_parent_idx=75, c_current_idx=77, node_state=4 (COMPLETED), is_function_like=False)
12        // number of fluid interaction parameters C_BINDER_MOJO_NEWLINE												MacroDefineNode(c_parent_idx=75, c_current_idx=78, c_child_idxs=(79, 80, 81), node_state=4 (COMPLETED), macro='mjNREF')
#define mjNREF													WhitespaceNode(c_parent_idx=78, c_current_idx=79, n_tokens=9)
							MacroDefineValueNode(c_parent_idx=78, c_current_idx=80, node_state=4 (COMPLETED), is_function_like=False)
2         // number of solver reference parameters C_BINDER_MOJO_NEWLINE														MacroDefineNode(c_parent_idx=78, c_current_idx=81, c_child_idxs=(82, 83, 84), node_state=4 (COMPLETED), macro='mjNIMP')
#define mjNIMP															WhitespaceNode(c_parent_idx=81, c_current_idx=82, n_tokens=9)
								MacroDefineValueNode(c_parent_idx=81, c_current_idx=83, node_state=4 (COMPLETED), is_function_like=False)
5         // number of solver impedance parameters C_BINDER_MOJO_NEWLINE																MacroDefineNode(c_parent_idx=81, c_current_idx=84, c_child_idxs=(85, 86, 87), node_state=4 (COMPLETED), macro='mjNSOLVER')
#define mjNSOLVER																	WhitespaceNode(c_parent_idx=84, c_current_idx=85, n_tokens=6)
									MacroDefineValueNode(c_parent_idx=84, c_current_idx=86, node_state=4 (COMPLETED), is_function_like=False)
200       // size of one mjData.solver array C_BINDER_MOJO_NEWLINE																		MacroDefineNode(c_parent_idx=84, c_current_idx=87, c_child_idxs=(88, 89, 90, 91), node_state=4 (COMPLETED), macro='mjNISLAND')
#define mjNISLAND																			WhitespaceNode(c_parent_idx=87, c_current_idx=88, n_tokens=6)
										MacroDefineValueNode(c_parent_idx=87, c_current_idx=89, node_state=4 (COMPLETED), is_function_like=False)
20        // number of mjData.solver arrays C_BINDER_MOJO_NEWLINE																				WhitespaceNode(c_parent_idx=87, c_current_idx=90, n_tokens=2)
C_BINDER_MOJO_NEWLINE																				SingleLineCommentNode(c_parent_idx=87, c_current_idx=91)
//---------------------------------- enum types  ( mjt )  ----------------------------------------------	WhitespaceNode(c_parent_idx=27, c_current_idx=92, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=93, c_child_idxs=(94), node_state=4 (COMPLETED), type='mjtDisableBit')
typedef		EnumNode(c_parent_idx=93, c_current_idx=94, c_child_idxs=(95), node_state=4 (COMPLETED), name='mjtDisableBit_')
enum mjtDisableBit_		ScopeNode(c_parent_idx=94, c_current_idx=95, c_child_idxs=(96, 97, 98, 99, 100, ...) len=35, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=95, c_current_idx=96)
// disable default feature bitflags		EnumFieldNode(c_parent_idx=95, c_current_idx=97, node_state=4 (COMPLETED), field_name='mjDSBL_CONSTRAINT', value='1<<0')
mjDSBL_CONSTRAINT    =  1<<0 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=98)
// entire constraint solver		EnumFieldNode(c_parent_idx=95, c_current_idx=99, node_state=4 (COMPLETED), field_name='mjDSBL_EQUALITY', value='1<<1')
mjDSBL_EQUALITY      =  1<<1 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=100)
// equality constraints		EnumFieldNode(c_parent_idx=95, c_current_idx=101, node_state=4 (COMPLETED), field_name='mjDSBL_FRICTIONLOSS', value='1<<2')
mjDSBL_FRICTIONLOSS  =  1<<2 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=102)
// joint and tendon frictionloss constraints		EnumFieldNode(c_parent_idx=95, c_current_idx=103, node_state=4 (COMPLETED), field_name='mjDSBL_LIMIT', value='1<<3')
mjDSBL_LIMIT         =  1<<3 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=104)
// joint and tendon limit constraints		EnumFieldNode(c_parent_idx=95, c_current_idx=105, node_state=4 (COMPLETED), field_name='mjDSBL_CONTACT', value='1<<4')
mjDSBL_CONTACT       =  1<<4 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=106)
// contact constraints		EnumFieldNode(c_parent_idx=95, c_current_idx=107, node_state=4 (COMPLETED), field_name='mjDSBL_PASSIVE', value='1<<5')
mjDSBL_PASSIVE       =  1<<5 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=108)
// passive forces		EnumFieldNode(c_parent_idx=95, c_current_idx=109, node_state=4 (COMPLETED), field_name='mjDSBL_GRAVITY', value='1<<6')
mjDSBL_GRAVITY       =  1<<6 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=110)
// gravitational forces		EnumFieldNode(c_parent_idx=95, c_current_idx=111, node_state=4 (COMPLETED), field_name='mjDSBL_CLAMPCTRL', value='1<<7')
mjDSBL_CLAMPCTRL     =  1<<7 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=112)
// clamp control to specified range		EnumFieldNode(c_parent_idx=95, c_current_idx=113, node_state=4 (COMPLETED), field_name='mjDSBL_WARMSTART', value='1<<8')
mjDSBL_WARMSTART     =  1<<8 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=114)
// warmstart constraint solver		EnumFieldNode(c_parent_idx=95, c_current_idx=115, node_state=4 (COMPLETED), field_name='mjDSBL_FILTERPARENT', value='1<<9')
mjDSBL_FILTERPARENT  =  1<<9 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=116)
// remove collisions with parent body		EnumFieldNode(c_parent_idx=95, c_current_idx=117, node_state=4 (COMPLETED), field_name='mjDSBL_ACTUATION', value='1<<10')
mjDSBL_ACTUATION     =  1<<10 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=118)
// apply actuation forces		EnumFieldNode(c_parent_idx=95, c_current_idx=119, node_state=4 (COMPLETED), field_name='mjDSBL_REFSAFE', value='1<<11')
mjDSBL_REFSAFE       =  1<<11 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=120)
// integrator safety: make ref[0]> = 2*timestep		EnumFieldNode(c_parent_idx=95, c_current_idx=121, node_state=4 (COMPLETED), field_name='mjDSBL_SENSOR', value='1<<12')
mjDSBL_SENSOR        =  1<<12 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=122)
// sensors		EnumFieldNode(c_parent_idx=95, c_current_idx=123, node_state=4 (COMPLETED), field_name='mjDSBL_MIDPHASE', value='1<<13')
mjDSBL_MIDPHASE      =  1<<13 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=124)
// mid-phase collision filtering		EnumFieldNode(c_parent_idx=95, c_current_idx=125, node_state=4 (COMPLETED), field_name='mjDSBL_EULERDAMP', value='1<<14')
mjDSBL_EULERDAMP     =  1<<14 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=126)
// implicit integration of joint damping in Euler integrator		EnumFieldNode(c_parent_idx=95, c_current_idx=127, node_state=4 (COMPLETED), field_name='mjDSBL_AUTORESET', value='1<<15')
mjDSBL_AUTORESET     =  1<<15 ,		SingleLineCommentNode(c_parent_idx=95, c_current_idx=128)
// automatic reset when numerical issues are detected		EnumFieldNode(c_parent_idx=95, c_current_idx=129, node_state=4 (COMPLETED), field_name='mjNDISABLE', value='16')
mjNDISABLE           =  16       		SingleLineCommentNode(c_parent_idx=95, c_current_idx=130)
// number of disable flagsC_BINDER_MOJO_NEWLINE	}mjtDisableBit	WhitespaceNode(c_parent_idx=27, c_current_idx=131, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=132, c_child_idxs=(133), node_state=4 (COMPLETED), type='mjtEnableBit')
typedef		EnumNode(c_parent_idx=132, c_current_idx=133, c_child_idxs=(134), node_state=4 (COMPLETED), name='mjtEnableBit_')
enum mjtEnableBit_		ScopeNode(c_parent_idx=133, c_current_idx=134, c_child_idxs=(135, 136, 137, 138, 139, ...) len=18, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=134, c_current_idx=135)
// enable optional feature bitflags		EnumFieldNode(c_parent_idx=134, c_current_idx=136, node_state=4 (COMPLETED), field_name='mjENBL_OVERRIDE', value='1<<0')
mjENBL_OVERRIDE      =  1<<0 ,		SingleLineCommentNode(c_parent_idx=134, c_current_idx=137)
// override contact parameters		EnumFieldNode(c_parent_idx=134, c_current_idx=138, node_state=4 (COMPLETED), field_name='mjENBL_ENERGY', value='1<<1')
mjENBL_ENERGY        =  1<<1 ,		SingleLineCommentNode(c_parent_idx=134, c_current_idx=139)
// energy computation		EnumFieldNode(c_parent_idx=134, c_current_idx=140, node_state=4 (COMPLETED), field_name='mjENBL_FWDINV', value='1<<2')
mjENBL_FWDINV        =  1<<2 ,		SingleLineCommentNode(c_parent_idx=134, c_current_idx=141)
// record solver statistics		EnumFieldNode(c_parent_idx=134, c_current_idx=142, node_state=4 (COMPLETED), field_name='mjENBL_INVDISCRETE', value='1<<3')
mjENBL_INVDISCRETE   =  1<<3 ,		SingleLineCommentNode(c_parent_idx=134, c_current_idx=143)
// discrete-time inverse dynamics		SingleLineCommentNode(c_parent_idx=134, c_current_idx=144)
// experimental features:		EnumFieldNode(c_parent_idx=134, c_current_idx=145, node_state=4 (COMPLETED), field_name='mjENBL_MULTICCD', value='1<<4')
mjENBL_MULTICCD      =  1<<4 ,		SingleLineCommentNode(c_parent_idx=134, c_current_idx=146)
// multi-point convex collision detection		EnumFieldNode(c_parent_idx=134, c_current_idx=147, node_state=4 (COMPLETED), field_name='mjENBL_ISLAND', value='1<<5')
mjENBL_ISLAND        =  1<<5 ,		SingleLineCommentNode(c_parent_idx=134, c_current_idx=148)
// constraint island discovery		EnumFieldNode(c_parent_idx=134, c_current_idx=149, node_state=4 (COMPLETED), field_name='mjENBL_NATIVECCD', value='1<<6')
mjENBL_NATIVECCD     =  1<<6 ,		SingleLineCommentNode(c_parent_idx=134, c_current_idx=150)
// native convex collision detection		EnumFieldNode(c_parent_idx=134, c_current_idx=151, node_state=4 (COMPLETED), field_name='mjNENABLE', value='7')
mjNENABLE            =  7        		SingleLineCommentNode(c_parent_idx=134, c_current_idx=152)
// number of enable flagsC_BINDER_MOJO_NEWLINE	}mjtEnableBit	WhitespaceNode(c_parent_idx=27, c_current_idx=153, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=154, c_child_idxs=(155), node_state=4 (COMPLETED), type='mjtJoint')
typedef		EnumNode(c_parent_idx=154, c_current_idx=155, c_child_idxs=(156), node_state=4 (COMPLETED), name='mjtJoint_')
enum mjtJoint_		ScopeNode(c_parent_idx=155, c_current_idx=156, c_child_idxs=(157, 158, 159, 160, 161, ...) len=9, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=156, c_current_idx=157)
// type of degree of freedom		EnumFieldNode(c_parent_idx=156, c_current_idx=158, node_state=4 (COMPLETED), field_name='mjJNT_FREE', value='0')
mjJNT_FREE           =  0 ,		SingleLineCommentNode(c_parent_idx=156, c_current_idx=159)
// global position and orientation  ( quat )         ( 7 ) 		EnumFieldNode(c_parent_idx=156, c_current_idx=160, node_state=4 (COMPLETED), field_name='mjJNT_BALL')
mjJNT_BALL ,		SingleLineCommentNode(c_parent_idx=156, c_current_idx=161)
// orientation  ( quat )  relative to parent         ( 4 ) 		EnumFieldNode(c_parent_idx=156, c_current_idx=162, node_state=4 (COMPLETED), field_name='mjJNT_SLIDE')
mjJNT_SLIDE ,		SingleLineCommentNode(c_parent_idx=156, c_current_idx=163)
// sliding distance along body-fixed axis        ( 1 ) 		EnumFieldNode(c_parent_idx=156, c_current_idx=164, node_state=4 (COMPLETED), field_name='mjJNT_HINGE')
mjJNT_HINGE                    		SingleLineCommentNode(c_parent_idx=156, c_current_idx=165)
// rotation angle  ( rad )  around body-fixed axis   ( 1 ) C_BINDER_MOJO_NEWLINE	}mjtJoint	WhitespaceNode(c_parent_idx=27, c_current_idx=166, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=167, c_child_idxs=(168), node_state=4 (COMPLETED), type='mjtGeom')
typedef		EnumNode(c_parent_idx=167, c_current_idx=168, c_child_idxs=(169), node_state=4 (COMPLETED), name='mjtGeom_')
enum mjtGeom_		ScopeNode(c_parent_idx=168, c_current_idx=169, c_child_idxs=(170, 171, 172, 173, 174, ...) len=43, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=169, c_current_idx=170)
// type of geometric shape		SingleLineCommentNode(c_parent_idx=169, c_current_idx=171)
// regular geom types		EnumFieldNode(c_parent_idx=169, c_current_idx=172, node_state=4 (COMPLETED), field_name='mjGEOM_PLANE', value='0')
mjGEOM_PLANE         =  0 ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=173)
// plane		EnumFieldNode(c_parent_idx=169, c_current_idx=174, node_state=4 (COMPLETED), field_name='mjGEOM_HFIELD')
mjGEOM_HFIELD ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=175)
// height field		EnumFieldNode(c_parent_idx=169, c_current_idx=176, node_state=4 (COMPLETED), field_name='mjGEOM_SPHERE')
mjGEOM_SPHERE ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=177)
// sphere		EnumFieldNode(c_parent_idx=169, c_current_idx=178, node_state=4 (COMPLETED), field_name='mjGEOM_CAPSULE')
mjGEOM_CAPSULE ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=179)
// capsule		EnumFieldNode(c_parent_idx=169, c_current_idx=180, node_state=4 (COMPLETED), field_name='mjGEOM_ELLIPSOID')
mjGEOM_ELLIPSOID ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=181)
// ellipsoid		EnumFieldNode(c_parent_idx=169, c_current_idx=182, node_state=4 (COMPLETED), field_name='mjGEOM_CYLINDER')
mjGEOM_CYLINDER ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=183)
// cylinder		EnumFieldNode(c_parent_idx=169, c_current_idx=184, node_state=4 (COMPLETED), field_name='mjGEOM_BOX')
mjGEOM_BOX ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=185)
// box		EnumFieldNode(c_parent_idx=169, c_current_idx=186, node_state=4 (COMPLETED), field_name='mjGEOM_MESH')
mjGEOM_MESH ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=187)
// mesh		EnumFieldNode(c_parent_idx=169, c_current_idx=188, node_state=4 (COMPLETED), field_name='mjGEOM_SDF')
mjGEOM_SDF ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=189)
// signed distance field		EnumFieldNode(c_parent_idx=169, c_current_idx=190, node_state=4 (COMPLETED), field_name='mjNGEOMTYPES')
mjNGEOMTYPES ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=191)
// number of regular geom types		SingleLineCommentNode(c_parent_idx=169, c_current_idx=192)
// rendering-only geom types: not used in mjModel ,  not counted in mjNGEOMTYPES		EnumFieldNode(c_parent_idx=169, c_current_idx=193, node_state=4 (COMPLETED), field_name='mjGEOM_ARROW', value='100')
mjGEOM_ARROW         =  100 ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=194)
// arrow		EnumFieldNode(c_parent_idx=169, c_current_idx=195, node_state=4 (COMPLETED), field_name='mjGEOM_ARROW1')
mjGEOM_ARROW1 ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=196)
// arrow without wedges		EnumFieldNode(c_parent_idx=169, c_current_idx=197, node_state=4 (COMPLETED), field_name='mjGEOM_ARROW2')
mjGEOM_ARROW2 ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=198)
// arrow in both directions		EnumFieldNode(c_parent_idx=169, c_current_idx=199, node_state=4 (COMPLETED), field_name='mjGEOM_LINE')
mjGEOM_LINE ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=200)
// line		EnumFieldNode(c_parent_idx=169, c_current_idx=201, node_state=4 (COMPLETED), field_name='mjGEOM_LINEBOX')
mjGEOM_LINEBOX ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=202)
// box with line edges		EnumFieldNode(c_parent_idx=169, c_current_idx=203, node_state=4 (COMPLETED), field_name='mjGEOM_FLEX')
mjGEOM_FLEX ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=204)
// flex		EnumFieldNode(c_parent_idx=169, c_current_idx=205, node_state=4 (COMPLETED), field_name='mjGEOM_SKIN')
mjGEOM_SKIN ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=206)
// skin		EnumFieldNode(c_parent_idx=169, c_current_idx=207, node_state=4 (COMPLETED), field_name='mjGEOM_LABEL')
mjGEOM_LABEL ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=208)
// text label		EnumFieldNode(c_parent_idx=169, c_current_idx=209, node_state=4 (COMPLETED), field_name='mjGEOM_TRIANGLE')
mjGEOM_TRIANGLE ,		SingleLineCommentNode(c_parent_idx=169, c_current_idx=210)
// triangle		EnumFieldNode(c_parent_idx=169, c_current_idx=211, node_state=4 (COMPLETED), field_name='mjGEOM_NONE', value='1001')
mjGEOM_NONE          =  1001     		SingleLineCommentNode(c_parent_idx=169, c_current_idx=212)
// missing geom typeC_BINDER_MOJO_NEWLINE	}mjtGeom	WhitespaceNode(c_parent_idx=27, c_current_idx=213, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=214, c_child_idxs=(215), node_state=4 (COMPLETED), type='mjtCamLight')
typedef		EnumNode(c_parent_idx=214, c_current_idx=215, c_child_idxs=(216), node_state=4 (COMPLETED), name='mjtCamLight_')
enum mjtCamLight_		ScopeNode(c_parent_idx=215, c_current_idx=216, c_child_idxs=(217, 218, 219, 220, 221, ...) len=11, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=216, c_current_idx=217)
// tracking mode for camera and light		EnumFieldNode(c_parent_idx=216, c_current_idx=218, node_state=4 (COMPLETED), field_name='mjCAMLIGHT_FIXED', value='0')
mjCAMLIGHT_FIXED     =  0 ,		SingleLineCommentNode(c_parent_idx=216, c_current_idx=219)
// pos and rot fixed in body		EnumFieldNode(c_parent_idx=216, c_current_idx=220, node_state=4 (COMPLETED), field_name='mjCAMLIGHT_TRACK')
mjCAMLIGHT_TRACK ,		SingleLineCommentNode(c_parent_idx=216, c_current_idx=221)
// pos tracks body ,  rot fixed in global		EnumFieldNode(c_parent_idx=216, c_current_idx=222, node_state=4 (COMPLETED), field_name='mjCAMLIGHT_TRACKCOM')
mjCAMLIGHT_TRACKCOM ,		SingleLineCommentNode(c_parent_idx=216, c_current_idx=223)
// pos tracks subtree com ,  rot fixed in body		EnumFieldNode(c_parent_idx=216, c_current_idx=224, node_state=4 (COMPLETED), field_name='mjCAMLIGHT_TARGETBODY')
mjCAMLIGHT_TARGETBODY ,		SingleLineCommentNode(c_parent_idx=216, c_current_idx=225)
// pos fixed in body ,  rot tracks target body		EnumFieldNode(c_parent_idx=216, c_current_idx=226, node_state=4 (COMPLETED), field_name='mjCAMLIGHT_TARGETBODYCOM')
mjCAMLIGHT_TARGETBODYCOM       		SingleLineCommentNode(c_parent_idx=216, c_current_idx=227)
// pos fixed in body ,  rot tracks target subtree comC_BINDER_MOJO_NEWLINE	}mjtCamLight	WhitespaceNode(c_parent_idx=27, c_current_idx=228, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=229, c_child_idxs=(230), node_state=4 (COMPLETED), type='mjtTexture')
typedef		EnumNode(c_parent_idx=229, c_current_idx=230, c_child_idxs=(231), node_state=4 (COMPLETED), name='mjtTexture_')
enum mjtTexture_		ScopeNode(c_parent_idx=230, c_current_idx=231, c_child_idxs=(232, 233, 234, 235, 236, ...) len=7, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=231, c_current_idx=232)
// type of texture		EnumFieldNode(c_parent_idx=231, c_current_idx=233, node_state=4 (COMPLETED), field_name='mjTEXTURE_2D', value='0')
mjTEXTURE_2D         =  0 ,		SingleLineCommentNode(c_parent_idx=231, c_current_idx=234)
// 2d texture ,  suitable for planes and hfields		EnumFieldNode(c_parent_idx=231, c_current_idx=235, node_state=4 (COMPLETED), field_name='mjTEXTURE_CUBE')
mjTEXTURE_CUBE ,		SingleLineCommentNode(c_parent_idx=231, c_current_idx=236)
// cube texture ,  suitable for all other geom types		EnumFieldNode(c_parent_idx=231, c_current_idx=237, node_state=4 (COMPLETED), field_name='mjTEXTURE_SKYBOX')
mjTEXTURE_SKYBOX               		SingleLineCommentNode(c_parent_idx=231, c_current_idx=238)
// cube texture used as skyboxC_BINDER_MOJO_NEWLINE	}mjtTexture	WhitespaceNode(c_parent_idx=27, c_current_idx=239, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=240, c_child_idxs=(241), node_state=4 (COMPLETED), type='mjtTextureRole')
typedef		EnumNode(c_parent_idx=240, c_current_idx=241, c_child_idxs=(242), node_state=4 (COMPLETED), name='mjtTextureRole_')
enum mjtTextureRole_		ScopeNode(c_parent_idx=241, c_current_idx=242, c_child_idxs=(243, 244, 245, 246, 247, ...) len=22, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=242, c_current_idx=243)
// role of texture map in rendering		EnumFieldNode(c_parent_idx=242, c_current_idx=244, node_state=4 (COMPLETED), field_name='mjTEXROLE_USER', value='0')
mjTEXROLE_USER       =  0 ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=245)
// unspecified		EnumFieldNode(c_parent_idx=242, c_current_idx=246, node_state=4 (COMPLETED), field_name='mjTEXROLE_RGB')
mjTEXROLE_RGB ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=247)
// base color  ( albedo ) 		EnumFieldNode(c_parent_idx=242, c_current_idx=248, node_state=4 (COMPLETED), field_name='mjTEXROLE_OCCLUSION')
mjTEXROLE_OCCLUSION ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=249)
// ambient occlusion		EnumFieldNode(c_parent_idx=242, c_current_idx=250, node_state=4 (COMPLETED), field_name='mjTEXROLE_ROUGHNESS')
mjTEXROLE_ROUGHNESS ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=251)
// roughness		EnumFieldNode(c_parent_idx=242, c_current_idx=252, node_state=4 (COMPLETED), field_name='mjTEXROLE_METALLIC')
mjTEXROLE_METALLIC ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=253)
// metallic		EnumFieldNode(c_parent_idx=242, c_current_idx=254, node_state=4 (COMPLETED), field_name='mjTEXROLE_NORMAL')
mjTEXROLE_NORMAL ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=255)
// normal  ( bump )  map		EnumFieldNode(c_parent_idx=242, c_current_idx=256, node_state=4 (COMPLETED), field_name='mjTEXROLE_OPACITY')
mjTEXROLE_OPACITY ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=257)
// transperancy		EnumFieldNode(c_parent_idx=242, c_current_idx=258, node_state=4 (COMPLETED), field_name='mjTEXROLE_EMISSIVE')
mjTEXROLE_EMISSIVE ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=259)
// light emission		EnumFieldNode(c_parent_idx=242, c_current_idx=260, node_state=4 (COMPLETED), field_name='mjTEXROLE_RGBA')
mjTEXROLE_RGBA ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=261)
// base color ,  opacity		EnumFieldNode(c_parent_idx=242, c_current_idx=262, node_state=4 (COMPLETED), field_name='mjTEXROLE_ORM')
mjTEXROLE_ORM ,		SingleLineCommentNode(c_parent_idx=242, c_current_idx=263)
// occlusion ,  roughness ,  metallic		EnumFieldNode(c_parent_idx=242, c_current_idx=264, node_state=4 (COMPLETED), field_name='mjNTEXROLE')
mjNTEXROLE C_BINDER_MOJO_NEWLINE		C_BINDER_MOJO_NEWLINE	}mjtTextureRole	WhitespaceNode(c_parent_idx=27, c_current_idx=265, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=266, c_child_idxs=(267), node_state=4 (COMPLETED), type='mjtIntegrator')
typedef		EnumNode(c_parent_idx=266, c_current_idx=267, c_child_idxs=(268), node_state=4 (COMPLETED), name='mjtIntegrator_')
enum mjtIntegrator_		ScopeNode(c_parent_idx=267, c_current_idx=268, c_child_idxs=(269, 270, 271, 272, 273, ...) len=9, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=268, c_current_idx=269)
// integrator mode		EnumFieldNode(c_parent_idx=268, c_current_idx=270, node_state=4 (COMPLETED), field_name='mjINT_EULER', value='0')
mjINT_EULER          =  0 ,		SingleLineCommentNode(c_parent_idx=268, c_current_idx=271)
// semi-implicit Euler		EnumFieldNode(c_parent_idx=268, c_current_idx=272, node_state=4 (COMPLETED), field_name='mjINT_RK4')
mjINT_RK4 ,		SingleLineCommentNode(c_parent_idx=268, c_current_idx=273)
// 4th-order Runge Kutta		EnumFieldNode(c_parent_idx=268, c_current_idx=274, node_state=4 (COMPLETED), field_name='mjINT_IMPLICIT')
mjINT_IMPLICIT ,		SingleLineCommentNode(c_parent_idx=268, c_current_idx=275)
// implicit in velocity		EnumFieldNode(c_parent_idx=268, c_current_idx=276, node_state=4 (COMPLETED), field_name='mjINT_IMPLICITFAST')
mjINT_IMPLICITFAST             		SingleLineCommentNode(c_parent_idx=268, c_current_idx=277)
// implicit in velocity ,  no rne derivativeC_BINDER_MOJO_NEWLINE	}mjtIntegrator	WhitespaceNode(c_parent_idx=27, c_current_idx=278, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=279, c_child_idxs=(280), node_state=4 (COMPLETED), type='mjtCone')
typedef		EnumNode(c_parent_idx=279, c_current_idx=280, c_child_idxs=(281), node_state=4 (COMPLETED), name='mjtCone_')
enum mjtCone_		ScopeNode(c_parent_idx=280, c_current_idx=281, c_child_idxs=(282, 283, 284, 285, 286), node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=281, c_current_idx=282)
// type of friction cone		EnumFieldNode(c_parent_idx=281, c_current_idx=283, node_state=4 (COMPLETED), field_name='mjCONE_PYRAMIDAL', value='0')
mjCONE_PYRAMIDAL      =  0 ,		SingleLineCommentNode(c_parent_idx=281, c_current_idx=284)
// pyramidal		EnumFieldNode(c_parent_idx=281, c_current_idx=285, node_state=4 (COMPLETED), field_name='mjCONE_ELLIPTIC')
mjCONE_ELLIPTIC                		SingleLineCommentNode(c_parent_idx=281, c_current_idx=286)
// ellipticC_BINDER_MOJO_NEWLINE	}mjtCone	WhitespaceNode(c_parent_idx=27, c_current_idx=287, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=288, c_child_idxs=(289), node_state=4 (COMPLETED), type='mjtJacobian')
typedef		EnumNode(c_parent_idx=288, c_current_idx=289, c_child_idxs=(290), node_state=4 (COMPLETED), name='mjtJacobian_')
enum mjtJacobian_		ScopeNode(c_parent_idx=289, c_current_idx=290, c_child_idxs=(291, 292, 293, 294, 295, ...) len=7, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=290, c_current_idx=291)
// type of constraint Jacobian		EnumFieldNode(c_parent_idx=290, c_current_idx=292, node_state=4 (COMPLETED), field_name='mjJAC_DENSE', value='0')
mjJAC_DENSE           =  0 ,		SingleLineCommentNode(c_parent_idx=290, c_current_idx=293)
// dense		EnumFieldNode(c_parent_idx=290, c_current_idx=294, node_state=4 (COMPLETED), field_name='mjJAC_SPARSE')
mjJAC_SPARSE ,		SingleLineCommentNode(c_parent_idx=290, c_current_idx=295)
// sparse		EnumFieldNode(c_parent_idx=290, c_current_idx=296, node_state=4 (COMPLETED), field_name='mjJAC_AUTO')
mjJAC_AUTO                     		SingleLineCommentNode(c_parent_idx=290, c_current_idx=297)
// dense if nv<60 ,  sparse otherwiseC_BINDER_MOJO_NEWLINE	}mjtJacobian	WhitespaceNode(c_parent_idx=27, c_current_idx=298, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=299, c_child_idxs=(300), node_state=4 (COMPLETED), type='mjtSolver')
typedef		EnumNode(c_parent_idx=299, c_current_idx=300, c_child_idxs=(301), node_state=4 (COMPLETED), name='mjtSolver_')
enum mjtSolver_		ScopeNode(c_parent_idx=300, c_current_idx=301, c_child_idxs=(302, 303, 304, 305, 306, ...) len=7, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=301, c_current_idx=302)
// constraint solver algorithm		EnumFieldNode(c_parent_idx=301, c_current_idx=303, node_state=4 (COMPLETED), field_name='mjSOL_PGS', value='0')
mjSOL_PGS             =  0 ,		SingleLineCommentNode(c_parent_idx=301, c_current_idx=304)
// PGS     ( dual ) 		EnumFieldNode(c_parent_idx=301, c_current_idx=305, node_state=4 (COMPLETED), field_name='mjSOL_CG')
mjSOL_CG ,		SingleLineCommentNode(c_parent_idx=301, c_current_idx=306)
// CG      ( primal ) 		EnumFieldNode(c_parent_idx=301, c_current_idx=307, node_state=4 (COMPLETED), field_name='mjSOL_NEWTON')
mjSOL_NEWTON                   		SingleLineCommentNode(c_parent_idx=301, c_current_idx=308)
// Newton  ( primal ) C_BINDER_MOJO_NEWLINE	}mjtSolver	WhitespaceNode(c_parent_idx=27, c_current_idx=309, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=310, c_child_idxs=(311), node_state=4 (COMPLETED), type='mjtEq')
typedef		EnumNode(c_parent_idx=310, c_current_idx=311, c_child_idxs=(312), node_state=4 (COMPLETED), name='mjtEq_')
enum mjtEq_		ScopeNode(c_parent_idx=311, c_current_idx=312, c_child_idxs=(313, 314, 315, 316, 317, ...) len=13, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=312, c_current_idx=313)
// type of equality constraint		EnumFieldNode(c_parent_idx=312, c_current_idx=314, node_state=4 (COMPLETED), field_name='mjEQ_CONNECT', value='0')
mjEQ_CONNECT         =  0 ,		SingleLineCommentNode(c_parent_idx=312, c_current_idx=315)
// connect two bodies at a point  ( ball joint ) 		EnumFieldNode(c_parent_idx=312, c_current_idx=316, node_state=4 (COMPLETED), field_name='mjEQ_WELD')
mjEQ_WELD ,		SingleLineCommentNode(c_parent_idx=312, c_current_idx=317)
// fix relative position and orientation of two bodies		EnumFieldNode(c_parent_idx=312, c_current_idx=318, node_state=4 (COMPLETED), field_name='mjEQ_JOINT')
mjEQ_JOINT ,		SingleLineCommentNode(c_parent_idx=312, c_current_idx=319)
// couple the values of two scalar joints with cubic		EnumFieldNode(c_parent_idx=312, c_current_idx=320, node_state=4 (COMPLETED), field_name='mjEQ_TENDON')
mjEQ_TENDON ,		SingleLineCommentNode(c_parent_idx=312, c_current_idx=321)
// couple the lengths of two tendons with cubic		EnumFieldNode(c_parent_idx=312, c_current_idx=322, node_state=4 (COMPLETED), field_name='mjEQ_FLEX')
mjEQ_FLEX ,		SingleLineCommentNode(c_parent_idx=312, c_current_idx=323)
// fix all edge lengths of a flex		EnumFieldNode(c_parent_idx=312, c_current_idx=324, node_state=4 (COMPLETED), field_name='mjEQ_DISTANCE')
mjEQ_DISTANCE                  		SingleLineCommentNode(c_parent_idx=312, c_current_idx=325)
// unsupported ,  will cause an error if usedC_BINDER_MOJO_NEWLINE	}mjtEq	WhitespaceNode(c_parent_idx=27, c_current_idx=326, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=327, c_child_idxs=(328), node_state=4 (COMPLETED), type='mjtWrap')
typedef		EnumNode(c_parent_idx=327, c_current_idx=328, c_child_idxs=(329), node_state=4 (COMPLETED), name='mjtWrap_')
enum mjtWrap_		ScopeNode(c_parent_idx=328, c_current_idx=329, c_child_idxs=(330, 331, 332, 333, 334, ...) len=13, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=329, c_current_idx=330)
// type of tendon wrap object		EnumFieldNode(c_parent_idx=329, c_current_idx=331, node_state=4 (COMPLETED), field_name='mjWRAP_NONE', value='0')
mjWRAP_NONE          =  0 ,		SingleLineCommentNode(c_parent_idx=329, c_current_idx=332)
// null object		EnumFieldNode(c_parent_idx=329, c_current_idx=333, node_state=4 (COMPLETED), field_name='mjWRAP_JOINT')
mjWRAP_JOINT ,		SingleLineCommentNode(c_parent_idx=329, c_current_idx=334)
// constant moment arm		EnumFieldNode(c_parent_idx=329, c_current_idx=335, node_state=4 (COMPLETED), field_name='mjWRAP_PULLEY')
mjWRAP_PULLEY ,		SingleLineCommentNode(c_parent_idx=329, c_current_idx=336)
// pulley used to split tendon		EnumFieldNode(c_parent_idx=329, c_current_idx=337, node_state=4 (COMPLETED), field_name='mjWRAP_SITE')
mjWRAP_SITE ,		SingleLineCommentNode(c_parent_idx=329, c_current_idx=338)
// pass through site		EnumFieldNode(c_parent_idx=329, c_current_idx=339, node_state=4 (COMPLETED), field_name='mjWRAP_SPHERE')
mjWRAP_SPHERE ,		SingleLineCommentNode(c_parent_idx=329, c_current_idx=340)
// wrap around sphere		EnumFieldNode(c_parent_idx=329, c_current_idx=341, node_state=4 (COMPLETED), field_name='mjWRAP_CYLINDER')
mjWRAP_CYLINDER                		SingleLineCommentNode(c_parent_idx=329, c_current_idx=342)
// wrap around  ( infinite )  cylinderC_BINDER_MOJO_NEWLINE	}mjtWrap	WhitespaceNode(c_parent_idx=27, c_current_idx=343, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=344, c_child_idxs=(345), node_state=4 (COMPLETED), type='mjtTrn')
typedef		EnumNode(c_parent_idx=344, c_current_idx=345, c_child_idxs=(346), node_state=4 (COMPLETED), name='mjtTrn_')
enum mjtTrn_		ScopeNode(c_parent_idx=345, c_current_idx=346, c_child_idxs=(347, 348, 349, 350, 351, ...) len=15, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=346, c_current_idx=347)
// type of actuator transmission		EnumFieldNode(c_parent_idx=346, c_current_idx=348, node_state=4 (COMPLETED), field_name='mjTRN_JOINT', value='0')
mjTRN_JOINT          =  0 ,		SingleLineCommentNode(c_parent_idx=346, c_current_idx=349)
// force on joint		EnumFieldNode(c_parent_idx=346, c_current_idx=350, node_state=4 (COMPLETED), field_name='mjTRN_JOINTINPARENT')
mjTRN_JOINTINPARENT ,		SingleLineCommentNode(c_parent_idx=346, c_current_idx=351)
// force on joint ,  expressed in parent frame		EnumFieldNode(c_parent_idx=346, c_current_idx=352, node_state=4 (COMPLETED), field_name='mjTRN_SLIDERCRANK')
mjTRN_SLIDERCRANK ,		SingleLineCommentNode(c_parent_idx=346, c_current_idx=353)
// force via slider-crank linkage		EnumFieldNode(c_parent_idx=346, c_current_idx=354, node_state=4 (COMPLETED), field_name='mjTRN_TENDON')
mjTRN_TENDON ,		SingleLineCommentNode(c_parent_idx=346, c_current_idx=355)
// force on tendon		EnumFieldNode(c_parent_idx=346, c_current_idx=356, node_state=4 (COMPLETED), field_name='mjTRN_SITE')
mjTRN_SITE ,		SingleLineCommentNode(c_parent_idx=346, c_current_idx=357)
// force on site		EnumFieldNode(c_parent_idx=346, c_current_idx=358, node_state=4 (COMPLETED), field_name='mjTRN_BODY')
mjTRN_BODY ,		SingleLineCommentNode(c_parent_idx=346, c_current_idx=359)
// adhesion force on a body's geoms		EnumFieldNode(c_parent_idx=346, c_current_idx=360, node_state=4 (COMPLETED), field_name='mjTRN_UNDEFINED', value='1000')
mjTRN_UNDEFINED      =  1000     		SingleLineCommentNode(c_parent_idx=346, c_current_idx=361)
// undefined transmission typeC_BINDER_MOJO_NEWLINE	}mjtTrn	WhitespaceNode(c_parent_idx=27, c_current_idx=362, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=363, c_child_idxs=(364), node_state=4 (COMPLETED), type='mjtDyn')
typedef		EnumNode(c_parent_idx=363, c_current_idx=364, c_child_idxs=(365), node_state=4 (COMPLETED), name='mjtDyn_')
enum mjtDyn_		ScopeNode(c_parent_idx=364, c_current_idx=365, c_child_idxs=(366, 367, 368, 369, 370, ...) len=13, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=365, c_current_idx=366)
// type of actuator dynamics		EnumFieldNode(c_parent_idx=365, c_current_idx=367, node_state=4 (COMPLETED), field_name='mjDYN_NONE', value='0')
mjDYN_NONE           =  0 ,		SingleLineCommentNode(c_parent_idx=365, c_current_idx=368)
// no internal dynamics ;  ctrl specifies force		EnumFieldNode(c_parent_idx=365, c_current_idx=369, node_state=4 (COMPLETED), field_name='mjDYN_INTEGRATOR')
mjDYN_INTEGRATOR ,		SingleLineCommentNode(c_parent_idx=365, c_current_idx=370)
// integrator: da/dt  =  u		EnumFieldNode(c_parent_idx=365, c_current_idx=371, node_state=4 (COMPLETED), field_name='mjDYN_FILTER')
mjDYN_FILTER ,		SingleLineCommentNode(c_parent_idx=365, c_current_idx=372)
// linear filter: da/dt  =   ( u-a )  / tau		EnumFieldNode(c_parent_idx=365, c_current_idx=373, node_state=4 (COMPLETED), field_name='mjDYN_FILTEREXACT')
mjDYN_FILTEREXACT ,		SingleLineCommentNode(c_parent_idx=365, c_current_idx=374)
// linear filter: da/dt  =   ( u-a )  / tau ,  with exact integration		EnumFieldNode(c_parent_idx=365, c_current_idx=375, node_state=4 (COMPLETED), field_name='mjDYN_MUSCLE')
mjDYN_MUSCLE ,		SingleLineCommentNode(c_parent_idx=365, c_current_idx=376)
// piece-wise linear filter with two time constants		EnumFieldNode(c_parent_idx=365, c_current_idx=377, node_state=4 (COMPLETED), field_name='mjDYN_USER')
mjDYN_USER                     		SingleLineCommentNode(c_parent_idx=365, c_current_idx=378)
// user-defined dynamics typeC_BINDER_MOJO_NEWLINE	}mjtDyn	WhitespaceNode(c_parent_idx=27, c_current_idx=379, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=380, c_child_idxs=(381), node_state=4 (COMPLETED), type='mjtGain')
typedef		EnumNode(c_parent_idx=380, c_current_idx=381, c_child_idxs=(382), node_state=4 (COMPLETED), name='mjtGain_')
enum mjtGain_		ScopeNode(c_parent_idx=381, c_current_idx=382, c_child_idxs=(383, 384, 385, 386, 387, ...) len=9, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=382, c_current_idx=383)
// type of actuator gain		EnumFieldNode(c_parent_idx=382, c_current_idx=384, node_state=4 (COMPLETED), field_name='mjGAIN_FIXED', value='0')
mjGAIN_FIXED         =  0 ,		SingleLineCommentNode(c_parent_idx=382, c_current_idx=385)
// fixed gain		EnumFieldNode(c_parent_idx=382, c_current_idx=386, node_state=4 (COMPLETED), field_name='mjGAIN_AFFINE')
mjGAIN_AFFINE ,		SingleLineCommentNode(c_parent_idx=382, c_current_idx=387)
// const + kp*length + kv*velocity		EnumFieldNode(c_parent_idx=382, c_current_idx=388, node_state=4 (COMPLETED), field_name='mjGAIN_MUSCLE')
mjGAIN_MUSCLE ,		SingleLineCommentNode(c_parent_idx=382, c_current_idx=389)
// muscle FLV curve computed by mju_muscleGain (  ) 		EnumFieldNode(c_parent_idx=382, c_current_idx=390, node_state=4 (COMPLETED), field_name='mjGAIN_USER')
mjGAIN_USER                    		SingleLineCommentNode(c_parent_idx=382, c_current_idx=391)
// user-defined gain typeC_BINDER_MOJO_NEWLINE	}mjtGain	WhitespaceNode(c_parent_idx=27, c_current_idx=392, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=393, c_child_idxs=(394), node_state=4 (COMPLETED), type='mjtBias')
typedef		EnumNode(c_parent_idx=393, c_current_idx=394, c_child_idxs=(395), node_state=4 (COMPLETED), name='mjtBias_')
enum mjtBias_		ScopeNode(c_parent_idx=394, c_current_idx=395, c_child_idxs=(396, 397, 398, 399, 400, ...) len=9, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=395, c_current_idx=396)
// type of actuator bias		EnumFieldNode(c_parent_idx=395, c_current_idx=397, node_state=4 (COMPLETED), field_name='mjBIAS_NONE', value='0')
mjBIAS_NONE          =  0 ,		SingleLineCommentNode(c_parent_idx=395, c_current_idx=398)
// no bias		EnumFieldNode(c_parent_idx=395, c_current_idx=399, node_state=4 (COMPLETED), field_name='mjBIAS_AFFINE')
mjBIAS_AFFINE ,		SingleLineCommentNode(c_parent_idx=395, c_current_idx=400)
// const + kp*length + kv*velocity		EnumFieldNode(c_parent_idx=395, c_current_idx=401, node_state=4 (COMPLETED), field_name='mjBIAS_MUSCLE')
mjBIAS_MUSCLE ,		SingleLineCommentNode(c_parent_idx=395, c_current_idx=402)
// muscle passive force computed by mju_muscleBias (  ) 		EnumFieldNode(c_parent_idx=395, c_current_idx=403, node_state=4 (COMPLETED), field_name='mjBIAS_USER')
mjBIAS_USER                    		SingleLineCommentNode(c_parent_idx=395, c_current_idx=404)
// user-defined bias typeC_BINDER_MOJO_NEWLINE	}mjtBias	WhitespaceNode(c_parent_idx=27, c_current_idx=405, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=406, c_child_idxs=(407), node_state=4 (COMPLETED), type='mjtObj')
typedef		EnumNode(c_parent_idx=406, c_current_idx=407, c_child_idxs=(408), node_state=4 (COMPLETED), name='mjtObj_')
enum mjtObj_		ScopeNode(c_parent_idx=407, c_current_idx=408, c_child_idxs=(409, 410, 411, 412, 413, ...) len=58, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=408, c_current_idx=409)
// type of MujoCo object		EnumFieldNode(c_parent_idx=408, c_current_idx=410, node_state=4 (COMPLETED), field_name='mjOBJ_UNKNOWN', value='0')
mjOBJ_UNKNOWN        =  0 ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=411)
// unknown object type		EnumFieldNode(c_parent_idx=408, c_current_idx=412, node_state=4 (COMPLETED), field_name='mjOBJ_BODY')
mjOBJ_BODY ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=413)
// body		EnumFieldNode(c_parent_idx=408, c_current_idx=414, node_state=4 (COMPLETED), field_name='mjOBJ_XBODY')
mjOBJ_XBODY ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=415)
// body ,  used to access regular frame instead of i-frame		EnumFieldNode(c_parent_idx=408, c_current_idx=416, node_state=4 (COMPLETED), field_name='mjOBJ_JOINT')
mjOBJ_JOINT ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=417)
// joint		EnumFieldNode(c_parent_idx=408, c_current_idx=418, node_state=4 (COMPLETED), field_name='mjOBJ_DOF')
mjOBJ_DOF ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=419)
// dof		EnumFieldNode(c_parent_idx=408, c_current_idx=420, node_state=4 (COMPLETED), field_name='mjOBJ_GEOM')
mjOBJ_GEOM ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=421)
// geom		EnumFieldNode(c_parent_idx=408, c_current_idx=422, node_state=4 (COMPLETED), field_name='mjOBJ_SITE')
mjOBJ_SITE ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=423)
// site		EnumFieldNode(c_parent_idx=408, c_current_idx=424, node_state=4 (COMPLETED), field_name='mjOBJ_CAMERA')
mjOBJ_CAMERA ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=425)
// camera		EnumFieldNode(c_parent_idx=408, c_current_idx=426, node_state=4 (COMPLETED), field_name='mjOBJ_LIGHT')
mjOBJ_LIGHT ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=427)
// light		EnumFieldNode(c_parent_idx=408, c_current_idx=428, node_state=4 (COMPLETED), field_name='mjOBJ_FLEX')
mjOBJ_FLEX ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=429)
// flex		EnumFieldNode(c_parent_idx=408, c_current_idx=430, node_state=4 (COMPLETED), field_name='mjOBJ_MESH')
mjOBJ_MESH ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=431)
// mesh		EnumFieldNode(c_parent_idx=408, c_current_idx=432, node_state=4 (COMPLETED), field_name='mjOBJ_SKIN')
mjOBJ_SKIN ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=433)
// skin		EnumFieldNode(c_parent_idx=408, c_current_idx=434, node_state=4 (COMPLETED), field_name='mjOBJ_HFIELD')
mjOBJ_HFIELD ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=435)
// heightfield		EnumFieldNode(c_parent_idx=408, c_current_idx=436, node_state=4 (COMPLETED), field_name='mjOBJ_TEXTURE')
mjOBJ_TEXTURE ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=437)
// texture		EnumFieldNode(c_parent_idx=408, c_current_idx=438, node_state=4 (COMPLETED), field_name='mjOBJ_MATERIAL')
mjOBJ_MATERIAL ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=439)
// material for rendering		EnumFieldNode(c_parent_idx=408, c_current_idx=440, node_state=4 (COMPLETED), field_name='mjOBJ_PAIR')
mjOBJ_PAIR ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=441)
// geom pair to include		EnumFieldNode(c_parent_idx=408, c_current_idx=442, node_state=4 (COMPLETED), field_name='mjOBJ_EXCLUDE')
mjOBJ_EXCLUDE ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=443)
// body pair to exclude		EnumFieldNode(c_parent_idx=408, c_current_idx=444, node_state=4 (COMPLETED), field_name='mjOBJ_EQUALITY')
mjOBJ_EQUALITY ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=445)
// equality constraint		EnumFieldNode(c_parent_idx=408, c_current_idx=446, node_state=4 (COMPLETED), field_name='mjOBJ_TENDON')
mjOBJ_TENDON ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=447)
// tendon		EnumFieldNode(c_parent_idx=408, c_current_idx=448, node_state=4 (COMPLETED), field_name='mjOBJ_ACTUATOR')
mjOBJ_ACTUATOR ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=449)
// actuator		EnumFieldNode(c_parent_idx=408, c_current_idx=450, node_state=4 (COMPLETED), field_name='mjOBJ_SENSOR')
mjOBJ_SENSOR ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=451)
// sensor		EnumFieldNode(c_parent_idx=408, c_current_idx=452, node_state=4 (COMPLETED), field_name='mjOBJ_NUMERIC')
mjOBJ_NUMERIC ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=453)
// numeric		EnumFieldNode(c_parent_idx=408, c_current_idx=454, node_state=4 (COMPLETED), field_name='mjOBJ_TEXT')
mjOBJ_TEXT ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=455)
// text		EnumFieldNode(c_parent_idx=408, c_current_idx=456, node_state=4 (COMPLETED), field_name='mjOBJ_TUPLE')
mjOBJ_TUPLE ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=457)
// tuple		EnumFieldNode(c_parent_idx=408, c_current_idx=458, node_state=4 (COMPLETED), field_name='mjOBJ_KEY')
mjOBJ_KEY ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=459)
// keyframe		EnumFieldNode(c_parent_idx=408, c_current_idx=460, node_state=4 (COMPLETED), field_name='mjOBJ_PLUGIN')
mjOBJ_PLUGIN ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=461)
// plugin instance		EnumFieldNode(c_parent_idx=408, c_current_idx=462, node_state=4 (COMPLETED), field_name='mjNOBJECT')
mjNOBJECT ,		SingleLineCommentNode(c_parent_idx=408, c_current_idx=463)
// number of object types		SingleLineCommentNode(c_parent_idx=408, c_current_idx=464)
// meta elements ,  do not appear in mjModel		EnumFieldNode(c_parent_idx=408, c_current_idx=465, node_state=4 (COMPLETED), field_name='mjOBJ_FRAME', value='100')
mjOBJ_FRAME          =  100      		SingleLineCommentNode(c_parent_idx=408, c_current_idx=466)
// frameC_BINDER_MOJO_NEWLINE	}mjtObj	WhitespaceNode(c_parent_idx=27, c_current_idx=467, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=468, c_child_idxs=(469), node_state=4 (COMPLETED), type='mjtConstraint')
typedef		EnumNode(c_parent_idx=468, c_current_idx=469, c_child_idxs=(470), node_state=4 (COMPLETED), name='mjtConstraint_')
enum mjtConstraint_		ScopeNode(c_parent_idx=469, c_current_idx=470, c_child_idxs=(471, 472, 473, 474, 475, ...) len=17, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=470, c_current_idx=471)
// type of constraint		EnumFieldNode(c_parent_idx=470, c_current_idx=472, node_state=4 (COMPLETED), field_name='mjCNSTR_EQUALITY', value='0')
mjCNSTR_EQUALITY     =  0 ,		SingleLineCommentNode(c_parent_idx=470, c_current_idx=473)
// equality constraint		EnumFieldNode(c_parent_idx=470, c_current_idx=474, node_state=4 (COMPLETED), field_name='mjCNSTR_FRICTION_DOF')
mjCNSTR_FRICTION_DOF ,		SingleLineCommentNode(c_parent_idx=470, c_current_idx=475)
// dof friction		EnumFieldNode(c_parent_idx=470, c_current_idx=476, node_state=4 (COMPLETED), field_name='mjCNSTR_FRICTION_TENDON')
mjCNSTR_FRICTION_TENDON ,		SingleLineCommentNode(c_parent_idx=470, c_current_idx=477)
// tendon friction		EnumFieldNode(c_parent_idx=470, c_current_idx=478, node_state=4 (COMPLETED), field_name='mjCNSTR_LIMIT_JOINT')
mjCNSTR_LIMIT_JOINT ,		SingleLineCommentNode(c_parent_idx=470, c_current_idx=479)
// joint limit		EnumFieldNode(c_parent_idx=470, c_current_idx=480, node_state=4 (COMPLETED), field_name='mjCNSTR_LIMIT_TENDON')
mjCNSTR_LIMIT_TENDON ,		SingleLineCommentNode(c_parent_idx=470, c_current_idx=481)
// tendon limit		EnumFieldNode(c_parent_idx=470, c_current_idx=482, node_state=4 (COMPLETED), field_name='mjCNSTR_CONTACT_FRICTIONLESS')
mjCNSTR_CONTACT_FRICTIONLESS ,		SingleLineCommentNode(c_parent_idx=470, c_current_idx=483)
// frictionless contact		EnumFieldNode(c_parent_idx=470, c_current_idx=484, node_state=4 (COMPLETED), field_name='mjCNSTR_CONTACT_PYRAMIDAL')
mjCNSTR_CONTACT_PYRAMIDAL ,		SingleLineCommentNode(c_parent_idx=470, c_current_idx=485)
// frictional contact ,  pyramidal friction cone		EnumFieldNode(c_parent_idx=470, c_current_idx=486, node_state=4 (COMPLETED), field_name='mjCNSTR_CONTACT_ELLIPTIC')
mjCNSTR_CONTACT_ELLIPTIC       		SingleLineCommentNode(c_parent_idx=470, c_current_idx=487)
// frictional contact ,  elliptic friction coneC_BINDER_MOJO_NEWLINE	}mjtConstraint	WhitespaceNode(c_parent_idx=27, c_current_idx=488, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=489, c_child_idxs=(490), node_state=4 (COMPLETED), type='mjtConstraintState')
typedef		EnumNode(c_parent_idx=489, c_current_idx=490, c_child_idxs=(491), node_state=4 (COMPLETED), name='mjtConstraintState_')
enum mjtConstraintState_		ScopeNode(c_parent_idx=490, c_current_idx=491, c_child_idxs=(492, 493, 494, 495, 496, ...) len=11, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=491, c_current_idx=492)
// constraint state		EnumFieldNode(c_parent_idx=491, c_current_idx=493, node_state=4 (COMPLETED), field_name='mjCNSTRSTATE_SATISFIED', value='0')
mjCNSTRSTATE_SATISFIED  =  0 ,		SingleLineCommentNode(c_parent_idx=491, c_current_idx=494)
// constraint satisfied ,  zero cost  ( limit ,  contact ) 		EnumFieldNode(c_parent_idx=491, c_current_idx=495, node_state=4 (COMPLETED), field_name='mjCNSTRSTATE_QUADRATIC')
mjCNSTRSTATE_QUADRATIC ,		SingleLineCommentNode(c_parent_idx=491, c_current_idx=496)
// quadratic cost  ( equality ,  friction ,  limit ,  contact ) 		EnumFieldNode(c_parent_idx=491, c_current_idx=497, node_state=4 (COMPLETED), field_name='mjCNSTRSTATE_LINEARNEG')
mjCNSTRSTATE_LINEARNEG ,		SingleLineCommentNode(c_parent_idx=491, c_current_idx=498)
// linear cost ,  negative side  ( friction ) 		EnumFieldNode(c_parent_idx=491, c_current_idx=499, node_state=4 (COMPLETED), field_name='mjCNSTRSTATE_LINEARPOS')
mjCNSTRSTATE_LINEARPOS ,		SingleLineCommentNode(c_parent_idx=491, c_current_idx=500)
// linear cost ,  positive side  ( friction ) 		EnumFieldNode(c_parent_idx=491, c_current_idx=501, node_state=4 (COMPLETED), field_name='mjCNSTRSTATE_CONE')
mjCNSTRSTATE_CONE                		SingleLineCommentNode(c_parent_idx=491, c_current_idx=502)
// squared distance to cone cost  ( elliptic contact ) C_BINDER_MOJO_NEWLINE	}mjtConstraintState	WhitespaceNode(c_parent_idx=27, c_current_idx=503, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=504, c_child_idxs=(505), node_state=4 (COMPLETED), type='mjtSensor')
typedef		EnumNode(c_parent_idx=504, c_current_idx=505, c_child_idxs=(506), node_state=4 (COMPLETED), name='mjtSensor_')
enum mjtSensor_		ScopeNode(c_parent_idx=505, c_current_idx=506, c_child_idxs=(507, 508, 509, 510, 511, ...) len=97, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=506, c_current_idx=507)
// type of sensor		SingleLineCommentNode(c_parent_idx=506, c_current_idx=508)
// common robotic sensors ,  attached to a site		EnumFieldNode(c_parent_idx=506, c_current_idx=509, node_state=4 (COMPLETED), field_name='mjSENS_TOUCH', value='0')
mjSENS_TOUCH         =  0 ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=510)
// scalar contact normal forces summed over sensor zone		EnumFieldNode(c_parent_idx=506, c_current_idx=511, node_state=4 (COMPLETED), field_name='mjSENS_ACCELEROMETER')
mjSENS_ACCELEROMETER ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=512)
// 3D linear acceleration ,  in local frame		EnumFieldNode(c_parent_idx=506, c_current_idx=513, node_state=4 (COMPLETED), field_name='mjSENS_VELOCIMETER')
mjSENS_VELOCIMETER ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=514)
// 3D linear velocity ,  in local frame		EnumFieldNode(c_parent_idx=506, c_current_idx=515, node_state=4 (COMPLETED), field_name='mjSENS_GYRO')
mjSENS_GYRO ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=516)
// 3D angular velocity ,  in local frame		EnumFieldNode(c_parent_idx=506, c_current_idx=517, node_state=4 (COMPLETED), field_name='mjSENS_FORCE')
mjSENS_FORCE ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=518)
// 3D force between site's body and its parent body		EnumFieldNode(c_parent_idx=506, c_current_idx=519, node_state=4 (COMPLETED), field_name='mjSENS_TORQUE')
mjSENS_TORQUE ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=520)
// 3D torque between site's body and its parent body		EnumFieldNode(c_parent_idx=506, c_current_idx=521, node_state=4 (COMPLETED), field_name='mjSENS_MAGNETOMETER')
mjSENS_MAGNETOMETER ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=522)
// 3D magnetometer		EnumFieldNode(c_parent_idx=506, c_current_idx=523, node_state=4 (COMPLETED), field_name='mjSENS_RANGEFINDER')
mjSENS_RANGEFINDER ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=524)
// scalar distance to nearest geom or site along z-axis		EnumFieldNode(c_parent_idx=506, c_current_idx=525, node_state=4 (COMPLETED), field_name='mjSENS_CAMPROJECTION')
mjSENS_CAMPROJECTION ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=526)
// pixel coordinates of a site in the camera image		SingleLineCommentNode(c_parent_idx=506, c_current_idx=527)
// sensors related to scalar joints ,  tendons ,  actuators		EnumFieldNode(c_parent_idx=506, c_current_idx=528, node_state=4 (COMPLETED), field_name='mjSENS_JOINTPOS')
mjSENS_JOINTPOS ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=529)
// scalar joint position  ( hinge and slide only ) 		EnumFieldNode(c_parent_idx=506, c_current_idx=530, node_state=4 (COMPLETED), field_name='mjSENS_JOINTVEL')
mjSENS_JOINTVEL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=531)
// scalar joint velocity  ( hinge and slide only ) 		EnumFieldNode(c_parent_idx=506, c_current_idx=532, node_state=4 (COMPLETED), field_name='mjSENS_TENDONPOS')
mjSENS_TENDONPOS ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=533)
// scalar tendon position		EnumFieldNode(c_parent_idx=506, c_current_idx=534, node_state=4 (COMPLETED), field_name='mjSENS_TENDONVEL')
mjSENS_TENDONVEL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=535)
// scalar tendon velocity		EnumFieldNode(c_parent_idx=506, c_current_idx=536, node_state=4 (COMPLETED), field_name='mjSENS_ACTUATORPOS')
mjSENS_ACTUATORPOS ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=537)
// scalar actuator position		EnumFieldNode(c_parent_idx=506, c_current_idx=538, node_state=4 (COMPLETED), field_name='mjSENS_ACTUATORVEL')
mjSENS_ACTUATORVEL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=539)
// scalar actuator velocity		EnumFieldNode(c_parent_idx=506, c_current_idx=540, node_state=4 (COMPLETED), field_name='mjSENS_ACTUATORFRC')
mjSENS_ACTUATORFRC ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=541)
// scalar actuator force		EnumFieldNode(c_parent_idx=506, c_current_idx=542, node_state=4 (COMPLETED), field_name='mjSENS_JOINTACTFRC')
mjSENS_JOINTACTFRC ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=543)
// scalar actuator force ,  measured at the joint		SingleLineCommentNode(c_parent_idx=506, c_current_idx=544)
// sensors related to ball joints		EnumFieldNode(c_parent_idx=506, c_current_idx=545, node_state=4 (COMPLETED), field_name='mjSENS_BALLQUAT')
mjSENS_BALLQUAT ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=546)
// 4D ball joint quaternion		EnumFieldNode(c_parent_idx=506, c_current_idx=547, node_state=4 (COMPLETED), field_name='mjSENS_BALLANGVEL')
mjSENS_BALLANGVEL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=548)
// 3D ball joint angular velocity		SingleLineCommentNode(c_parent_idx=506, c_current_idx=549)
// joint and tendon limit sensors ,  in constraint space		EnumFieldNode(c_parent_idx=506, c_current_idx=550, node_state=4 (COMPLETED), field_name='mjSENS_JOINTLIMITPOS')
mjSENS_JOINTLIMITPOS ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=551)
// joint limit distance-margin		EnumFieldNode(c_parent_idx=506, c_current_idx=552, node_state=4 (COMPLETED), field_name='mjSENS_JOINTLIMITVEL')
mjSENS_JOINTLIMITVEL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=553)
// joint limit velocity		EnumFieldNode(c_parent_idx=506, c_current_idx=554, node_state=4 (COMPLETED), field_name='mjSENS_JOINTLIMITFRC')
mjSENS_JOINTLIMITFRC ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=555)
// joint limit force		EnumFieldNode(c_parent_idx=506, c_current_idx=556, node_state=4 (COMPLETED), field_name='mjSENS_TENDONLIMITPOS')
mjSENS_TENDONLIMITPOS ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=557)
// tendon limit distance-margin		EnumFieldNode(c_parent_idx=506, c_current_idx=558, node_state=4 (COMPLETED), field_name='mjSENS_TENDONLIMITVEL')
mjSENS_TENDONLIMITVEL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=559)
// tendon limit velocity		EnumFieldNode(c_parent_idx=506, c_current_idx=560, node_state=4 (COMPLETED), field_name='mjSENS_TENDONLIMITFRC')
mjSENS_TENDONLIMITFRC ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=561)
// tendon limit force		SingleLineCommentNode(c_parent_idx=506, c_current_idx=562)
// sensors attached to an object with spatial frame:  ( x ) body ,  geom ,  site ,  camera		EnumFieldNode(c_parent_idx=506, c_current_idx=563, node_state=4 (COMPLETED), field_name='mjSENS_FRAMEPOS')
mjSENS_FRAMEPOS ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=564)
// 3D position		EnumFieldNode(c_parent_idx=506, c_current_idx=565, node_state=4 (COMPLETED), field_name='mjSENS_FRAMEQUAT')
mjSENS_FRAMEQUAT ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=566)
// 4D unit quaternion orientation		EnumFieldNode(c_parent_idx=506, c_current_idx=567, node_state=4 (COMPLETED), field_name='mjSENS_FRAMEXAXIS')
mjSENS_FRAMEXAXIS ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=568)
// 3D unit vector: x-axis of object's frame		EnumFieldNode(c_parent_idx=506, c_current_idx=569, node_state=4 (COMPLETED), field_name='mjSENS_FRAMEYAXIS')
mjSENS_FRAMEYAXIS ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=570)
// 3D unit vector: y-axis of object's frame		EnumFieldNode(c_parent_idx=506, c_current_idx=571, node_state=4 (COMPLETED), field_name='mjSENS_FRAMEZAXIS')
mjSENS_FRAMEZAXIS ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=572)
// 3D unit vector: z-axis of object's frame		EnumFieldNode(c_parent_idx=506, c_current_idx=573, node_state=4 (COMPLETED), field_name='mjSENS_FRAMELINVEL')
mjSENS_FRAMELINVEL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=574)
// 3D linear velocity		EnumFieldNode(c_parent_idx=506, c_current_idx=575, node_state=4 (COMPLETED), field_name='mjSENS_FRAMEANGVEL')
mjSENS_FRAMEANGVEL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=576)
// 3D angular velocity		EnumFieldNode(c_parent_idx=506, c_current_idx=577, node_state=4 (COMPLETED), field_name='mjSENS_FRAMELINACC')
mjSENS_FRAMELINACC ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=578)
// 3D linear acceleration		EnumFieldNode(c_parent_idx=506, c_current_idx=579, node_state=4 (COMPLETED), field_name='mjSENS_FRAMEANGACC')
mjSENS_FRAMEANGACC ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=580)
// 3D angular acceleration		SingleLineCommentNode(c_parent_idx=506, c_current_idx=581)
// sensors related to kinematic subtrees ;  attached to a body  ( which is the subtree root ) 		EnumFieldNode(c_parent_idx=506, c_current_idx=582, node_state=4 (COMPLETED), field_name='mjSENS_SUBTREECOM')
mjSENS_SUBTREECOM ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=583)
// 3D center of mass of subtree		EnumFieldNode(c_parent_idx=506, c_current_idx=584, node_state=4 (COMPLETED), field_name='mjSENS_SUBTREELINVEL')
mjSENS_SUBTREELINVEL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=585)
// 3D linear velocity of subtree		EnumFieldNode(c_parent_idx=506, c_current_idx=586, node_state=4 (COMPLETED), field_name='mjSENS_SUBTREEANGMOM')
mjSENS_SUBTREEANGMOM ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=587)
// 3D angular momentum of subtree		SingleLineCommentNode(c_parent_idx=506, c_current_idx=588)
// sensors for geometric distance ;  attached to geoms or bodies		EnumFieldNode(c_parent_idx=506, c_current_idx=589, node_state=4 (COMPLETED), field_name='mjSENS_GEOMDIST')
mjSENS_GEOMDIST ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=590)
// signed distance between two geoms		EnumFieldNode(c_parent_idx=506, c_current_idx=591, node_state=4 (COMPLETED), field_name='mjSENS_GEOMNORMAL')
mjSENS_GEOMNORMAL ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=592)
// normal direction between two geoms		EnumFieldNode(c_parent_idx=506, c_current_idx=593, node_state=4 (COMPLETED), field_name='mjSENS_GEOMFROMTO')
mjSENS_GEOMFROMTO ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=594)
// segment between two geoms		SingleLineCommentNode(c_parent_idx=506, c_current_idx=595)
// global sensors		EnumFieldNode(c_parent_idx=506, c_current_idx=596, node_state=4 (COMPLETED), field_name='mjSENS_CLOCK')
mjSENS_CLOCK ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=597)
// simulation time		SingleLineCommentNode(c_parent_idx=506, c_current_idx=598)
// plugin-controlled sensors		EnumFieldNode(c_parent_idx=506, c_current_idx=599, node_state=4 (COMPLETED), field_name='mjSENS_PLUGIN')
mjSENS_PLUGIN ,		SingleLineCommentNode(c_parent_idx=506, c_current_idx=600)
// plugin-controlled		SingleLineCommentNode(c_parent_idx=506, c_current_idx=601)
// user-defined sensor		EnumFieldNode(c_parent_idx=506, c_current_idx=602, node_state=4 (COMPLETED), field_name='mjSENS_USER')
mjSENS_USER                    		SingleLineCommentNode(c_parent_idx=506, c_current_idx=603)
// sensor data provided by mjcb_sensor callbackC_BINDER_MOJO_NEWLINE	}mjtSensor	WhitespaceNode(c_parent_idx=27, c_current_idx=604, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=605, c_child_idxs=(606), node_state=4 (COMPLETED), type='mjtStage')
typedef		EnumNode(c_parent_idx=605, c_current_idx=606, c_child_idxs=(607), node_state=4 (COMPLETED), name='mjtStage_')
enum mjtStage_		ScopeNode(c_parent_idx=606, c_current_idx=607, c_child_idxs=(608, 609, 610, 611, 612, ...) len=9, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=607, c_current_idx=608)
// computation stage		EnumFieldNode(c_parent_idx=607, c_current_idx=609, node_state=4 (COMPLETED), field_name='mjSTAGE_NONE', value='0')
mjSTAGE_NONE         =  0 ,		SingleLineCommentNode(c_parent_idx=607, c_current_idx=610)
// no computations		EnumFieldNode(c_parent_idx=607, c_current_idx=611, node_state=4 (COMPLETED), field_name='mjSTAGE_POS')
mjSTAGE_POS ,		SingleLineCommentNode(c_parent_idx=607, c_current_idx=612)
// position-dependent computations		EnumFieldNode(c_parent_idx=607, c_current_idx=613, node_state=4 (COMPLETED), field_name='mjSTAGE_VEL')
mjSTAGE_VEL ,		SingleLineCommentNode(c_parent_idx=607, c_current_idx=614)
// velocity-dependent computations		EnumFieldNode(c_parent_idx=607, c_current_idx=615, node_state=4 (COMPLETED), field_name='mjSTAGE_ACC')
mjSTAGE_ACC                    		SingleLineCommentNode(c_parent_idx=607, c_current_idx=616)
// acceleration/force-dependent computationsC_BINDER_MOJO_NEWLINE	}mjtStage	WhitespaceNode(c_parent_idx=27, c_current_idx=617, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=618, c_child_idxs=(619), node_state=4 (COMPLETED), type='mjtDataType')
typedef		EnumNode(c_parent_idx=618, c_current_idx=619, c_child_idxs=(620), node_state=4 (COMPLETED), name='mjtDataType_')
enum mjtDataType_		ScopeNode(c_parent_idx=619, c_current_idx=620, c_child_idxs=(621, 622, 623, 624, 625, ...) len=9, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=620, c_current_idx=621)
// data type for sensors		EnumFieldNode(c_parent_idx=620, c_current_idx=622, node_state=4 (COMPLETED), field_name='mjDATATYPE_REAL', value='0')
mjDATATYPE_REAL      =  0 ,		SingleLineCommentNode(c_parent_idx=620, c_current_idx=623)
// real values ,  no constraints		EnumFieldNode(c_parent_idx=620, c_current_idx=624, node_state=4 (COMPLETED), field_name='mjDATATYPE_POSITIVE')
mjDATATYPE_POSITIVE ,		SingleLineCommentNode(c_parent_idx=620, c_current_idx=625)
// positive values ;  0 or negative: inactive		EnumFieldNode(c_parent_idx=620, c_current_idx=626, node_state=4 (COMPLETED), field_name='mjDATATYPE_AXIS')
mjDATATYPE_AXIS ,		SingleLineCommentNode(c_parent_idx=620, c_current_idx=627)
// 3D unit vector		EnumFieldNode(c_parent_idx=620, c_current_idx=628, node_state=4 (COMPLETED), field_name='mjDATATYPE_QUATERNION')
mjDATATYPE_QUATERNION          		SingleLineCommentNode(c_parent_idx=620, c_current_idx=629)
// unit quaternionC_BINDER_MOJO_NEWLINE	}mjtDataType	WhitespaceNode(c_parent_idx=27, c_current_idx=630, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=631, c_child_idxs=(632), node_state=4 (COMPLETED), type='mjtSameFrame')
typedef		EnumNode(c_parent_idx=631, c_current_idx=632, c_child_idxs=(633), node_state=4 (COMPLETED), name='mjtSameFrame_')
enum mjtSameFrame_		ScopeNode(c_parent_idx=632, c_current_idx=633, c_child_idxs=(634, 635, 636, 637, 638, ...) len=11, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=633, c_current_idx=634)
// frame alignment of bodies with their children		EnumFieldNode(c_parent_idx=633, c_current_idx=635, node_state=4 (COMPLETED), field_name='mjSAMEFRAME_NONE', value='0')
mjSAMEFRAME_NONE     =  0 ,		SingleLineCommentNode(c_parent_idx=633, c_current_idx=636)
// no alignment		EnumFieldNode(c_parent_idx=633, c_current_idx=637, node_state=4 (COMPLETED), field_name='mjSAMEFRAME_BODY')
mjSAMEFRAME_BODY ,		SingleLineCommentNode(c_parent_idx=633, c_current_idx=638)
// frame is same as body frame		EnumFieldNode(c_parent_idx=633, c_current_idx=639, node_state=4 (COMPLETED), field_name='mjSAMEFRAME_INERTIA')
mjSAMEFRAME_INERTIA ,		SingleLineCommentNode(c_parent_idx=633, c_current_idx=640)
// frame is same as inertial frame		EnumFieldNode(c_parent_idx=633, c_current_idx=641, node_state=4 (COMPLETED), field_name='mjSAMEFRAME_BODYROT')
mjSAMEFRAME_BODYROT ,		SingleLineCommentNode(c_parent_idx=633, c_current_idx=642)
// frame orientation is same as body orientation		EnumFieldNode(c_parent_idx=633, c_current_idx=643, node_state=4 (COMPLETED), field_name='mjSAMEFRAME_INERTIAROT')
mjSAMEFRAME_INERTIAROT         		SingleLineCommentNode(c_parent_idx=633, c_current_idx=644)
// frame orientation is same as inertia orientationC_BINDER_MOJO_NEWLINE	}mjtSameFrame	WhitespaceNode(c_parent_idx=27, c_current_idx=645, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=646, c_child_idxs=(647), node_state=4 (COMPLETED), type='mjtLRMode')
typedef		EnumNode(c_parent_idx=646, c_current_idx=647, c_child_idxs=(648), node_state=4 (COMPLETED), name='mjtLRMode_')
enum mjtLRMode_		ScopeNode(c_parent_idx=647, c_current_idx=648, c_child_idxs=(649, 650, 651, 652, 653, ...) len=9, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=648, c_current_idx=649)
// mode for actuator length range computation		EnumFieldNode(c_parent_idx=648, c_current_idx=650, node_state=4 (COMPLETED), field_name='mjLRMODE_NONE', value='0')
mjLRMODE_NONE    =  0 ,		SingleLineCommentNode(c_parent_idx=648, c_current_idx=651)
// do not process any actuators		EnumFieldNode(c_parent_idx=648, c_current_idx=652, node_state=4 (COMPLETED), field_name='mjLRMODE_MUSCLE')
mjLRMODE_MUSCLE ,		SingleLineCommentNode(c_parent_idx=648, c_current_idx=653)
// process muscle actuators		EnumFieldNode(c_parent_idx=648, c_current_idx=654, node_state=4 (COMPLETED), field_name='mjLRMODE_MUSCLEUSER')
mjLRMODE_MUSCLEUSER ,		SingleLineCommentNode(c_parent_idx=648, c_current_idx=655)
// process muscle and user actuators		EnumFieldNode(c_parent_idx=648, c_current_idx=656, node_state=4 (COMPLETED), field_name='mjLRMODE_ALL')
mjLRMODE_ALL                   		SingleLineCommentNode(c_parent_idx=648, c_current_idx=657)
// process all actuatorsC_BINDER_MOJO_NEWLINE	}mjtLRMode	WhitespaceNode(c_parent_idx=27, c_current_idx=658, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=659, c_child_idxs=(660), node_state=4 (COMPLETED), type='mjtFlexSelf')
typedef		EnumNode(c_parent_idx=659, c_current_idx=660, c_child_idxs=(661), node_state=4 (COMPLETED), name='mjtFlexSelf_')
enum mjtFlexSelf_		ScopeNode(c_parent_idx=660, c_current_idx=661, c_child_idxs=(662, 663, 664, 665, 666, ...) len=11, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='EnumNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=661, c_current_idx=662)
// mode for flex selfcollide		EnumFieldNode(c_parent_idx=661, c_current_idx=663, node_state=4 (COMPLETED), field_name='mjFLEXSELF_NONE', value='0')
mjFLEXSELF_NONE    =  0 ,		SingleLineCommentNode(c_parent_idx=661, c_current_idx=664)
// no self-collisions		EnumFieldNode(c_parent_idx=661, c_current_idx=665, node_state=4 (COMPLETED), field_name='mjFLEXSELF_NARROW')
mjFLEXSELF_NARROW ,		SingleLineCommentNode(c_parent_idx=661, c_current_idx=666)
// skip midphase ,  go directly to narrowphase		EnumFieldNode(c_parent_idx=661, c_current_idx=667, node_state=4 (COMPLETED), field_name='mjFLEXSELF_BVH')
mjFLEXSELF_BVH ,		SingleLineCommentNode(c_parent_idx=661, c_current_idx=668)
// use BVH in midphase  ( if midphase enabled ) 		EnumFieldNode(c_parent_idx=661, c_current_idx=669, node_state=4 (COMPLETED), field_name='mjFLEXSELF_SAP')
mjFLEXSELF_SAP ,		SingleLineCommentNode(c_parent_idx=661, c_current_idx=670)
// use SAP in midphase		EnumFieldNode(c_parent_idx=661, c_current_idx=671, node_state=4 (COMPLETED), field_name='mjFLEXSELF_AUTO')
mjFLEXSELF_AUTO                		SingleLineCommentNode(c_parent_idx=661, c_current_idx=672)
// choose between BVH and SAP automaticallyC_BINDER_MOJO_NEWLINE	}mjtFlexSelf	WhitespaceNode(c_parent_idx=27, c_current_idx=673, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		SingleLineCommentNode(c_parent_idx=27, c_current_idx=674)
//---------------------------------- mjLROpt -------------------------------------------------------	WhitespaceNode(c_parent_idx=27, c_current_idx=675, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		StructNode(c_parent_idx=27, c_current_idx=676, c_child_idxs=(677), node_state=4 (COMPLETED), name='mjLROpt_')
struct mjLROpt_		ScopeNode(c_parent_idx=676, c_current_idx=677, c_child_idxs=(678, 679, 680, 681, 682, ...) len=23, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=678)
// options for mj_setLengthRange (  ) 		SingleLineCommentNode(c_parent_idx=677, c_current_idx=679)
// flags		StructFieldNode(c_parent_idx=677, c_current_idx=680, node_state=4 (COMPLETED), field_type='int', field_name='mode')
int mode ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=681)
// which actuators to process  ( mjtLRMode ) 		StructFieldNode(c_parent_idx=677, c_current_idx=682, node_state=4 (COMPLETED), field_type='int', field_name='useexisting')
int useexisting ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=683)
// use existing length range if available		StructFieldNode(c_parent_idx=677, c_current_idx=684, node_state=4 (COMPLETED), field_type='int', field_name='uselimit')
int uselimit ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=685)
// use joint and tendon limits if available		SingleLineCommentNode(c_parent_idx=677, c_current_idx=686)
// algorithm parameters		StructFieldNode(c_parent_idx=677, c_current_idx=687, node_state=4 (COMPLETED), field_type='mjtNum', field_name='accel')
mjtNum accel ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=688)
// target acceleration used to compute force		StructFieldNode(c_parent_idx=677, c_current_idx=689, node_state=4 (COMPLETED), field_type='mjtNum', field_name='maxforce')
mjtNum maxforce ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=690)
// maximum force ;  0: no limit		StructFieldNode(c_parent_idx=677, c_current_idx=691, node_state=4 (COMPLETED), field_type='mjtNum', field_name='timeconst')
mjtNum timeconst ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=692)
// time constant for velocity reduction ;  min 0.01		StructFieldNode(c_parent_idx=677, c_current_idx=693, node_state=4 (COMPLETED), field_type='mjtNum', field_name='timestep')
mjtNum timestep ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=694)
// simulation timestep ;  0: use mjOption.timestep		StructFieldNode(c_parent_idx=677, c_current_idx=695, node_state=4 (COMPLETED), field_type='mjtNum', field_name='inttotal')
mjtNum inttotal ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=696)
// total simulation time interval		StructFieldNode(c_parent_idx=677, c_current_idx=697, node_state=4 (COMPLETED), field_type='mjtNum', field_name='interval')
mjtNum interval ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=698)
// evaluation time interval  ( at the end ) 		StructFieldNode(c_parent_idx=677, c_current_idx=699, node_state=4 (COMPLETED), field_type='mjtNum', field_name='tolrange')
mjtNum tolrange ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=677, c_current_idx=700)
// convergence tolerance  ( relative to range ) C_BINDER_MOJO_NEWLINE	}; C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=701, c_child_idxs=(702), node_state=4 (COMPLETED), type='mjLROpt')
typedef		StructNode(c_parent_idx=701, c_current_idx=702, node_state=4 (COMPLETED), name='mjLROpt_')
struct mjLROpt_mjLROpt	WhitespaceNode(c_parent_idx=27, c_current_idx=703, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		SingleLineCommentNode(c_parent_idx=27, c_current_idx=704)
//---------------------------------- mjVFS ---------------------------------------------------------	WhitespaceNode(c_parent_idx=27, c_current_idx=705, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		StructNode(c_parent_idx=27, c_current_idx=706, c_child_idxs=(707), node_state=4 (COMPLETED), name='mjVFS_')
struct mjVFS_		ScopeNode(c_parent_idx=706, c_current_idx=707, c_child_idxs=(708, 709, 710), node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=707, c_current_idx=708)
// virtual file system for loading from memory		StructFieldNode(c_parent_idx=707, c_current_idx=709, node_state=4 (COMPLETED), field_type='void*', field_name='impl_')
void* impl_ ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=707, c_current_idx=710)
// internal pointer to VFS memoryC_BINDER_MOJO_NEWLINE	}; C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=711, c_child_idxs=(712), node_state=4 (COMPLETED), type='mjVFS')
typedef		StructNode(c_parent_idx=711, c_current_idx=712, node_state=4 (COMPLETED), name='mjVFS_')
struct mjVFS_mjVFS	WhitespaceNode(c_parent_idx=27, c_current_idx=713, n_tokens=4)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		SingleLineCommentNode(c_parent_idx=27, c_current_idx=714)
//---------------------------------- mjOption ------------------------------------------------------	WhitespaceNode(c_parent_idx=27, c_current_idx=715, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		StructNode(c_parent_idx=27, c_current_idx=716, c_child_idxs=(717), node_state=4 (COMPLETED), name='mjOption_')
struct mjOption_		ScopeNode(c_parent_idx=716, c_current_idx=717, c_child_idxs=(718, 719, 720, 721, 722, ...) len=65, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=718)
// physics options		SingleLineCommentNode(c_parent_idx=717, c_current_idx=719)
// timing parameters		StructFieldNode(c_parent_idx=717, c_current_idx=720, node_state=4 (COMPLETED), field_type='mjtNum', field_name='timestep')
mjtNum timestep ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=721)
// timestep		StructFieldNode(c_parent_idx=717, c_current_idx=722, node_state=4 (COMPLETED), field_type='mjtNum', field_name='apirate')
mjtNum apirate ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=723)
// update rate for remote API  ( Hz ) 		SingleLineCommentNode(c_parent_idx=717, c_current_idx=724)
// solver parameters		StructFieldNode(c_parent_idx=717, c_current_idx=725, node_state=4 (COMPLETED), field_type='mjtNum', field_name='impratio')
mjtNum impratio ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=726)
// ratio of friction-to-normal contact impedance		StructFieldNode(c_parent_idx=717, c_current_idx=727, node_state=4 (COMPLETED), field_type='mjtNum', field_name='tolerance')
mjtNum tolerance ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=728)
// main solver tolerance		StructFieldNode(c_parent_idx=717, c_current_idx=729, node_state=4 (COMPLETED), field_type='mjtNum', field_name='ls_tolerance')
mjtNum ls_tolerance ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=730)
// CG/Newton linesearch tolerance		StructFieldNode(c_parent_idx=717, c_current_idx=731, node_state=4 (COMPLETED), field_type='mjtNum', field_name='noslip_tolerance')
mjtNum noslip_tolerance ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=732)
// noslip solver tolerance		StructFieldNode(c_parent_idx=717, c_current_idx=733, node_state=4 (COMPLETED), field_type='mjtNum', field_name='ccd_tolerance')
mjtNum ccd_tolerance ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=734)
// convex collision solver tolerance		SingleLineCommentNode(c_parent_idx=717, c_current_idx=735)
// physical constants		StructFieldNode(c_parent_idx=717, c_current_idx=736, node_state=4 (COMPLETED), field_type='mjtNum', field_name='gravity[3]')
mjtNum gravity[3] ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=737)
// gravitational acceleration		StructFieldNode(c_parent_idx=717, c_current_idx=738, node_state=4 (COMPLETED), field_type='mjtNum', field_name='wind[3]')
mjtNum wind[3] ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=739)
// wind  ( for lift ,  drag and viscosity ) 		StructFieldNode(c_parent_idx=717, c_current_idx=740, node_state=4 (COMPLETED), field_type='mjtNum', field_name='magnetic[3]')
mjtNum magnetic[3] ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=741)
// global magnetic flux		StructFieldNode(c_parent_idx=717, c_current_idx=742, node_state=4 (COMPLETED), field_type='mjtNum', field_name='density')
mjtNum density ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=743)
// density of medium		StructFieldNode(c_parent_idx=717, c_current_idx=744, node_state=4 (COMPLETED), field_type='mjtNum', field_name='viscosity')
mjtNum viscosity ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=745)
// viscosity of medium		SingleLineCommentNode(c_parent_idx=717, c_current_idx=746)
// override contact solver parameters  ( if enabled ) 		StructFieldNode(c_parent_idx=717, c_current_idx=747, node_state=4 (COMPLETED), field_type='mjtNum', field_name='o_margin')
mjtNum o_margin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=748)
// margin		StructFieldNode(c_parent_idx=717, c_current_idx=749, node_state=4 (COMPLETED), field_type='mjtNum', field_name='o_solref[mjNREF]')
mjtNum o_solref[mjNREF] ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=750)
// solref		StructFieldNode(c_parent_idx=717, c_current_idx=751, node_state=4 (COMPLETED), field_type='mjtNum', field_name='o_solimp[mjNIMP]')
mjtNum o_solimp[mjNIMP] ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=752)
// solimp		StructFieldNode(c_parent_idx=717, c_current_idx=753, node_state=4 (COMPLETED), field_type='mjtNum', field_name='o_friction[5]')
mjtNum o_friction[5] ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=754)
// friction		SingleLineCommentNode(c_parent_idx=717, c_current_idx=755)
// discrete settings		StructFieldNode(c_parent_idx=717, c_current_idx=756, node_state=4 (COMPLETED), field_type='int', field_name='integrator')
int integrator ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=757)
// integration mode  ( mjtIntegrator ) 		StructFieldNode(c_parent_idx=717, c_current_idx=758, node_state=4 (COMPLETED), field_type='int', field_name='cone')
int cone ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=759)
// type of friction cone  ( mjtCone ) 		StructFieldNode(c_parent_idx=717, c_current_idx=760, node_state=4 (COMPLETED), field_type='int', field_name='jacobian')
int jacobian ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=761)
// type of Jacobian  ( mjtJacobian ) 		StructFieldNode(c_parent_idx=717, c_current_idx=762, node_state=4 (COMPLETED), field_type='int', field_name='solver')
int solver ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=763)
// solver algorithm  ( mjtSolver ) 		StructFieldNode(c_parent_idx=717, c_current_idx=764, node_state=4 (COMPLETED), field_type='int', field_name='iterations')
int iterations ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=765)
// maximum number of main solver iterations		StructFieldNode(c_parent_idx=717, c_current_idx=766, node_state=4 (COMPLETED), field_type='int', field_name='ls_iterations')
int ls_iterations ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=767)
// maximum number of CG/Newton linesearch iterations		StructFieldNode(c_parent_idx=717, c_current_idx=768, node_state=4 (COMPLETED), field_type='int', field_name='noslip_iterations')
int noslip_iterations ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=769)
// maximum number of noslip solver iterations		StructFieldNode(c_parent_idx=717, c_current_idx=770, node_state=4 (COMPLETED), field_type='int', field_name='ccd_iterations')
int ccd_iterations ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=771)
// maximum number of convex collision solver iterations		StructFieldNode(c_parent_idx=717, c_current_idx=772, node_state=4 (COMPLETED), field_type='int', field_name='disableflags')
int disableflags ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=773)
// bit flags for disabling standard features		StructFieldNode(c_parent_idx=717, c_current_idx=774, node_state=4 (COMPLETED), field_type='int', field_name='enableflags')
int enableflags ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=775)
// bit flags for enabling optional features		StructFieldNode(c_parent_idx=717, c_current_idx=776, node_state=4 (COMPLETED), field_type='int', field_name='disableactuator')
int disableactuator ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=777)
// bit flags for disabling actuators by group id		SingleLineCommentNode(c_parent_idx=717, c_current_idx=778)
// sdf collision settings		StructFieldNode(c_parent_idx=717, c_current_idx=779, node_state=4 (COMPLETED), field_type='int', field_name='sdf_initpoints')
int sdf_initpoints ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=780)
// number of starting points for gradient descent		StructFieldNode(c_parent_idx=717, c_current_idx=781, node_state=4 (COMPLETED), field_type='int', field_name='sdf_iterations')
int sdf_iterations ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=717, c_current_idx=782)
// max number of iterations for gradient descentC_BINDER_MOJO_NEWLINE	}; C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=783, c_child_idxs=(784), node_state=4 (COMPLETED), type='mjOption')
typedef		StructNode(c_parent_idx=783, c_current_idx=784, node_state=4 (COMPLETED), name='mjOption_')
struct mjOption_mjOption	WhitespaceNode(c_parent_idx=27, c_current_idx=785, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		SingleLineCommentNode(c_parent_idx=27, c_current_idx=786)
//---------------------------------- mjVisual ------------------------------------------------------	WhitespaceNode(c_parent_idx=27, c_current_idx=787, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		StructNode(c_parent_idx=27, c_current_idx=788, c_child_idxs=(789), node_state=4 (COMPLETED), name='mjVisual_')
struct mjVisual_		ScopeNode(c_parent_idx=788, c_current_idx=789, c_child_idxs=(790, 791, 819, 833, 845, ...) len=7, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=789, c_current_idx=790)
// visualization options		StructFieldNode(c_parent_idx=789, c_current_idx=791, c_child_idxs=(792, 793), node_state=4 (COMPLETED), field_type='struct', field_name='global')
					WhitespaceNode(c_parent_idx=791, c_current_idx=792, n_tokens=1)
			ScopeNode(c_parent_idx=791, c_current_idx=793, c_child_idxs=(794, 795, 796, 797, 798, ...) len=25, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructFieldNode')
{ C_BINDER_MOJO_NEWLINE										SingleLineCommentNode(c_parent_idx=793, c_current_idx=794)
// global parameters				VariableNode(c_parent_idx=793, c_current_idx=795, node_state=4 (COMPLETED))
int orthographic ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=796)
// is the free camera orthographic  ( 0: no ,  1: yes ) 				VariableNode(c_parent_idx=793, c_current_idx=797, node_state=4 (COMPLETED))
float fovy ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=798)
// y field-of-view of free camera  ( orthographic ? length : degree ) 				VariableNode(c_parent_idx=793, c_current_idx=799, node_state=4 (COMPLETED))
float ipd ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=800)
// inter-pupilary distance for free camera				VariableNode(c_parent_idx=793, c_current_idx=801, node_state=4 (COMPLETED))
float azimuth ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=802)
// initial azimuth of free camera  ( degrees ) 				VariableNode(c_parent_idx=793, c_current_idx=803, node_state=4 (COMPLETED))
float elevation ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=804)
// initial elevation of free camera  ( degrees ) 				VariableNode(c_parent_idx=793, c_current_idx=805, node_state=4 (COMPLETED))
float linewidth ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=806)
// line width for wireframe and ray rendering				VariableNode(c_parent_idx=793, c_current_idx=807, node_state=4 (COMPLETED))
float glow ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=808)
// glow coefficient for selected body				VariableNode(c_parent_idx=793, c_current_idx=809, node_state=4 (COMPLETED))
float realtime ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=810)
// initial real-time factor  ( 1: real time ) 				VariableNode(c_parent_idx=793, c_current_idx=811, node_state=4 (COMPLETED))
int   offwidth ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=812)
// width of offscreen buffer				VariableNode(c_parent_idx=793, c_current_idx=813, node_state=4 (COMPLETED))
int   offheight ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=814)
// height of offscreen buffer				VariableNode(c_parent_idx=793, c_current_idx=815, node_state=4 (COMPLETED))
int   ellipsoidinertia ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=816)
// geom for inertia visualization  ( 0: box ,  1: ellipsoid ) 				VariableNode(c_parent_idx=793, c_current_idx=817, node_state=4 (COMPLETED))
int   bvactive ;				SingleLineCommentNode(c_parent_idx=793, c_current_idx=818)
// visualize active bounding volumes  ( 0: no ,  1: yes ) C_BINDER_MOJO_NEWLINE			}global ; C_BINDER_MOJO_NEWLINE				StructFieldNode(c_parent_idx=789, c_current_idx=819, c_child_idxs=(820, 821), node_state=4 (COMPLETED), field_type='struct', field_name='quality')
					WhitespaceNode(c_parent_idx=819, c_current_idx=820, n_tokens=1)
			ScopeNode(c_parent_idx=819, c_current_idx=821, c_child_idxs=(822, 823, 824, 825, 826, ...) len=11, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructFieldNode')
{ C_BINDER_MOJO_NEWLINE										SingleLineCommentNode(c_parent_idx=821, c_current_idx=822)
// rendering quality				VariableNode(c_parent_idx=821, c_current_idx=823, node_state=4 (COMPLETED))
int   shadowsize ;				SingleLineCommentNode(c_parent_idx=821, c_current_idx=824)
// size of shadowmap texture				VariableNode(c_parent_idx=821, c_current_idx=825, node_state=4 (COMPLETED))
int   offsamples ;				SingleLineCommentNode(c_parent_idx=821, c_current_idx=826)
// number of multisamples for offscreen rendering				VariableNode(c_parent_idx=821, c_current_idx=827, node_state=4 (COMPLETED))
int   numslices ;				SingleLineCommentNode(c_parent_idx=821, c_current_idx=828)
// number of slices for builtin geom drawing				VariableNode(c_parent_idx=821, c_current_idx=829, node_state=4 (COMPLETED))
int   numstacks ;				SingleLineCommentNode(c_parent_idx=821, c_current_idx=830)
// number of stacks for builtin geom drawing				VariableNode(c_parent_idx=821, c_current_idx=831, node_state=4 (COMPLETED))
int   numquads ;				SingleLineCommentNode(c_parent_idx=821, c_current_idx=832)
// number of quads for box renderingC_BINDER_MOJO_NEWLINE			}quality ; C_BINDER_MOJO_NEWLINE				StructFieldNode(c_parent_idx=789, c_current_idx=833, c_child_idxs=(834, 835), node_state=4 (COMPLETED), field_type='struct', field_name='headlight')
					WhitespaceNode(c_parent_idx=833, c_current_idx=834, n_tokens=1)
			ScopeNode(c_parent_idx=833, c_current_idx=835, c_child_idxs=(836, 837, 838, 839, 840, ...) len=9, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructFieldNode')
{ C_BINDER_MOJO_NEWLINE										SingleLineCommentNode(c_parent_idx=835, c_current_idx=836)
// head light				VariableNode(c_parent_idx=835, c_current_idx=837, node_state=4 (COMPLETED))
float ambient[3] ;				SingleLineCommentNode(c_parent_idx=835, c_current_idx=838)
// ambient rgb  ( alpha = 1 ) 				VariableNode(c_parent_idx=835, c_current_idx=839, node_state=4 (COMPLETED))
float diffuse[3] ;				SingleLineCommentNode(c_parent_idx=835, c_current_idx=840)
// diffuse rgb  ( alpha = 1 ) 				VariableNode(c_parent_idx=835, c_current_idx=841, node_state=4 (COMPLETED))
float specular[3] ;				SingleLineCommentNode(c_parent_idx=835, c_current_idx=842)
// specular rgb  ( alpha = 1 ) 				VariableNode(c_parent_idx=835, c_current_idx=843, node_state=4 (COMPLETED))
int   active ;				SingleLineCommentNode(c_parent_idx=835, c_current_idx=844)
// is headlight activeC_BINDER_MOJO_NEWLINE			}headlight ; C_BINDER_MOJO_NEWLINE				StructFieldNode(c_parent_idx=789, c_current_idx=845, c_child_idxs=(846, 847), node_state=4 (COMPLETED), field_type='struct', field_name='map')
					WhitespaceNode(c_parent_idx=845, c_current_idx=846, n_tokens=1)
			ScopeNode(c_parent_idx=845, c_current_idx=847, c_child_idxs=(848, 849, 850, 851, 852, ...) len=27, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructFieldNode')
{ C_BINDER_MOJO_NEWLINE										SingleLineCommentNode(c_parent_idx=847, c_current_idx=848)
// mapping				VariableNode(c_parent_idx=847, c_current_idx=849, node_state=4 (COMPLETED))
float stiffness ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=850)
// mouse perturbation stiffness  ( space->force ) 				VariableNode(c_parent_idx=847, c_current_idx=851, node_state=4 (COMPLETED))
float stiffnessrot ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=852)
// mouse perturbation stiffness  ( space->torque ) 				VariableNode(c_parent_idx=847, c_current_idx=853, node_state=4 (COMPLETED))
float force ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=854)
// from force units to space units				VariableNode(c_parent_idx=847, c_current_idx=855, node_state=4 (COMPLETED))
float torque ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=856)
// from torque units to space units				VariableNode(c_parent_idx=847, c_current_idx=857, node_state=4 (COMPLETED))
float alpha ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=858)
// scale geom alphas when transparency is enabled				VariableNode(c_parent_idx=847, c_current_idx=859, node_state=4 (COMPLETED))
float fogstart ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=860)
// OpenGL fog starts at fogstart * mjModel.stat.extent				VariableNode(c_parent_idx=847, c_current_idx=861, node_state=4 (COMPLETED))
float fogend ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=862)
// OpenGL fog ends at fogend * mjModel.stat.extent				VariableNode(c_parent_idx=847, c_current_idx=863, node_state=4 (COMPLETED))
float znear ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=864)
// near clipping plane  =  znear * mjModel.stat.extent				VariableNode(c_parent_idx=847, c_current_idx=865, node_state=4 (COMPLETED))
float zfar ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=866)
// far clipping plane  =  zfar * mjModel.stat.extent				VariableNode(c_parent_idx=847, c_current_idx=867, node_state=4 (COMPLETED))
float haze ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=868)
// haze ratio				VariableNode(c_parent_idx=847, c_current_idx=869, node_state=4 (COMPLETED))
float shadowclip ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=870)
// directional light: shadowclip * mjModel.stat.extent				VariableNode(c_parent_idx=847, c_current_idx=871, node_state=4 (COMPLETED))
float shadowscale ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=872)
// spot light: shadowscale * light.cutoff				VariableNode(c_parent_idx=847, c_current_idx=873, node_state=4 (COMPLETED))
float actuatortendon ;				SingleLineCommentNode(c_parent_idx=847, c_current_idx=874)
// scale tendon widthC_BINDER_MOJO_NEWLINE			}map ; C_BINDER_MOJO_NEWLINE				StructFieldNode(c_parent_idx=789, c_current_idx=875, c_child_idxs=(876, 877), node_state=4 (COMPLETED), field_type='struct', field_name='scale')
					WhitespaceNode(c_parent_idx=875, c_current_idx=876, n_tokens=1)
			ScopeNode(c_parent_idx=875, c_current_idx=877, c_child_idxs=(878, 879, 880, 881, 882, ...) len=35, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructFieldNode')
{ C_BINDER_MOJO_NEWLINE										SingleLineCommentNode(c_parent_idx=877, c_current_idx=878)
// scale of decor elements relative to mean body size				VariableNode(c_parent_idx=877, c_current_idx=879, node_state=4 (COMPLETED))
float forcewidth ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=880)
// width of force arrow				VariableNode(c_parent_idx=877, c_current_idx=881, node_state=4 (COMPLETED))
float contactwidth ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=882)
// contact width				VariableNode(c_parent_idx=877, c_current_idx=883, node_state=4 (COMPLETED))
float contactheight ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=884)
// contact height				VariableNode(c_parent_idx=877, c_current_idx=885, node_state=4 (COMPLETED))
float connect ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=886)
// autoconnect capsule width				VariableNode(c_parent_idx=877, c_current_idx=887, node_state=4 (COMPLETED))
float com ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=888)
// com radius				VariableNode(c_parent_idx=877, c_current_idx=889, node_state=4 (COMPLETED))
float camera ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=890)
// camera object				VariableNode(c_parent_idx=877, c_current_idx=891, node_state=4 (COMPLETED))
float light ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=892)
// light object				VariableNode(c_parent_idx=877, c_current_idx=893, node_state=4 (COMPLETED))
float selectpoint ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=894)
// selection point				VariableNode(c_parent_idx=877, c_current_idx=895, node_state=4 (COMPLETED))
float jointlength ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=896)
// joint length				VariableNode(c_parent_idx=877, c_current_idx=897, node_state=4 (COMPLETED))
float jointwidth ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=898)
// joint width				VariableNode(c_parent_idx=877, c_current_idx=899, node_state=4 (COMPLETED))
float actuatorlength ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=900)
// actuator length				VariableNode(c_parent_idx=877, c_current_idx=901, node_state=4 (COMPLETED))
float actuatorwidth ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=902)
// actuator width				VariableNode(c_parent_idx=877, c_current_idx=903, node_state=4 (COMPLETED))
float framelength ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=904)
// bodyframe axis length				VariableNode(c_parent_idx=877, c_current_idx=905, node_state=4 (COMPLETED))
float framewidth ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=906)
// bodyframe axis width				VariableNode(c_parent_idx=877, c_current_idx=907, node_state=4 (COMPLETED))
float constraint ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=908)
// constraint width				VariableNode(c_parent_idx=877, c_current_idx=909, node_state=4 (COMPLETED))
float slidercrank ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=910)
// slidercrank width				VariableNode(c_parent_idx=877, c_current_idx=911, node_state=4 (COMPLETED))
float frustum ;				SingleLineCommentNode(c_parent_idx=877, c_current_idx=912)
// frustum zfar planeC_BINDER_MOJO_NEWLINE			}scale ; C_BINDER_MOJO_NEWLINE				StructFieldNode(c_parent_idx=789, c_current_idx=913, c_child_idxs=(914, 915), node_state=4 (COMPLETED), field_type='struct', field_name='rgba')
					WhitespaceNode(c_parent_idx=913, c_current_idx=914, n_tokens=1)
			ScopeNode(c_parent_idx=913, c_current_idx=915, c_child_idxs=(916, 917, 918, 919, 920, ...) len=51, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructFieldNode')
{ C_BINDER_MOJO_NEWLINE										SingleLineCommentNode(c_parent_idx=915, c_current_idx=916)
// color of decor elements				VariableNode(c_parent_idx=915, c_current_idx=917, node_state=4 (COMPLETED))
float fog[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=918)
// fog				VariableNode(c_parent_idx=915, c_current_idx=919, node_state=4 (COMPLETED))
float haze[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=920)
// haze				VariableNode(c_parent_idx=915, c_current_idx=921, node_state=4 (COMPLETED))
float force[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=922)
// external force				VariableNode(c_parent_idx=915, c_current_idx=923, node_state=4 (COMPLETED))
float inertia[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=924)
// inertia box				VariableNode(c_parent_idx=915, c_current_idx=925, node_state=4 (COMPLETED))
float joint[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=926)
// joint				VariableNode(c_parent_idx=915, c_current_idx=927, node_state=4 (COMPLETED))
float actuator[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=928)
// actuator ,  neutral				VariableNode(c_parent_idx=915, c_current_idx=929, node_state=4 (COMPLETED))
float actuatornegative[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=930)
// actuator ,  negative limit				VariableNode(c_parent_idx=915, c_current_idx=931, node_state=4 (COMPLETED))
float actuatorpositive[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=932)
// actuator ,  positive limit				VariableNode(c_parent_idx=915, c_current_idx=933, node_state=4 (COMPLETED))
float com[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=934)
// center of mass				VariableNode(c_parent_idx=915, c_current_idx=935, node_state=4 (COMPLETED))
float camera[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=936)
// camera object				VariableNode(c_parent_idx=915, c_current_idx=937, node_state=4 (COMPLETED))
float light[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=938)
// light object				VariableNode(c_parent_idx=915, c_current_idx=939, node_state=4 (COMPLETED))
float selectpoint[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=940)
// selection point				VariableNode(c_parent_idx=915, c_current_idx=941, node_state=4 (COMPLETED))
float connect[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=942)
// auto connect				VariableNode(c_parent_idx=915, c_current_idx=943, node_state=4 (COMPLETED))
float contactpoint[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=944)
// contact point				VariableNode(c_parent_idx=915, c_current_idx=945, node_state=4 (COMPLETED))
float contactforce[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=946)
// contact force				VariableNode(c_parent_idx=915, c_current_idx=947, node_state=4 (COMPLETED))
float contactfriction[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=948)
// contact friction force				VariableNode(c_parent_idx=915, c_current_idx=949, node_state=4 (COMPLETED))
float contacttorque[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=950)
// contact torque				VariableNode(c_parent_idx=915, c_current_idx=951, node_state=4 (COMPLETED))
float contactgap[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=952)
// contact point in gap				VariableNode(c_parent_idx=915, c_current_idx=953, node_state=4 (COMPLETED))
float rangefinder[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=954)
// rangefinder ray				VariableNode(c_parent_idx=915, c_current_idx=955, node_state=4 (COMPLETED))
float constraint[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=956)
// constraint				VariableNode(c_parent_idx=915, c_current_idx=957, node_state=4 (COMPLETED))
float slidercrank[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=958)
// slidercrank				VariableNode(c_parent_idx=915, c_current_idx=959, node_state=4 (COMPLETED))
float crankbroken[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=960)
// used when crank must be stretched/broken				VariableNode(c_parent_idx=915, c_current_idx=961, node_state=4 (COMPLETED))
float frustum[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=962)
// camera frustum				VariableNode(c_parent_idx=915, c_current_idx=963, node_state=4 (COMPLETED))
float bv[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=964)
// bounding volume				VariableNode(c_parent_idx=915, c_current_idx=965, node_state=4 (COMPLETED))
float bvactive[4] ;				SingleLineCommentNode(c_parent_idx=915, c_current_idx=966)
// active bounding volumeC_BINDER_MOJO_NEWLINE			}rgba ; C_BINDER_MOJO_NEWLINE		C_BINDER_MOJO_NEWLINE	}; C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=967, c_child_idxs=(968), node_state=4 (COMPLETED), type='mjVisual')
typedef		StructNode(c_parent_idx=967, c_current_idx=968, node_state=4 (COMPLETED), name='mjVisual_')
struct mjVisual_mjVisual	WhitespaceNode(c_parent_idx=27, c_current_idx=969, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		SingleLineCommentNode(c_parent_idx=27, c_current_idx=970)
//---------------------------------- mjStatistic ---------------------------------------------------	WhitespaceNode(c_parent_idx=27, c_current_idx=971, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		StructNode(c_parent_idx=27, c_current_idx=972, c_child_idxs=(973), node_state=4 (COMPLETED), name='mjStatistic_')
struct mjStatistic_		ScopeNode(c_parent_idx=972, c_current_idx=973, c_child_idxs=(974, 975, 976, 977, 978, ...) len=11, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=973, c_current_idx=974)
// model statistics  ( in qpos0 ) 		StructFieldNode(c_parent_idx=973, c_current_idx=975, node_state=4 (COMPLETED), field_type='mjtNum', field_name='meaninertia')
mjtNum meaninertia ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=973, c_current_idx=976)
// mean diagonal inertia		StructFieldNode(c_parent_idx=973, c_current_idx=977, node_state=4 (COMPLETED), field_type='mjtNum', field_name='meanmass')
mjtNum meanmass ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=973, c_current_idx=978)
// mean body mass		StructFieldNode(c_parent_idx=973, c_current_idx=979, node_state=4 (COMPLETED), field_type='mjtNum', field_name='meansize')
mjtNum meansize ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=973, c_current_idx=980)
// mean body size		StructFieldNode(c_parent_idx=973, c_current_idx=981, node_state=4 (COMPLETED), field_type='mjtNum', field_name='extent')
mjtNum extent ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=973, c_current_idx=982)
// spatial extent		StructFieldNode(c_parent_idx=973, c_current_idx=983, node_state=4 (COMPLETED), field_type='mjtNum', field_name='center[3]')
mjtNum center[3] ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=973, c_current_idx=984)
// center of modelC_BINDER_MOJO_NEWLINE	}; C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=985, c_child_idxs=(986), node_state=4 (COMPLETED), type='mjStatistic')
typedef		StructNode(c_parent_idx=985, c_current_idx=986, node_state=4 (COMPLETED), name='mjStatistic_')
struct mjStatistic_mjStatistic	WhitespaceNode(c_parent_idx=27, c_current_idx=987, n_tokens=6)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		SingleLineCommentNode(c_parent_idx=27, c_current_idx=988)
//---------------------------------- mjModel -------------------------------------------------------	WhitespaceNode(c_parent_idx=27, c_current_idx=989, n_tokens=3)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE		StructNode(c_parent_idx=27, c_current_idx=990, c_child_idxs=(991), node_state=4 (COMPLETED), name='mjModel_')
struct mjModel_		ScopeNode(c_parent_idx=990, c_current_idx=991, c_child_idxs=(992, 993, 994, 995, 996, ...) len=970, node_state=4 (COMPLETED), n_tokens=2, n_tokens_tail=2, parent_type='StructNode')
{ C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=992)
// ------------------------------- sizes		SingleLineCommentNode(c_parent_idx=991, c_current_idx=993)
// sizes needed at mjModel construction		StructFieldNode(c_parent_idx=991, c_current_idx=994, node_state=4 (COMPLETED), field_type='int', field_name='nq')
int nq ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=995)
// number of generalized coordinates  =  dim ( qpos ) 		StructFieldNode(c_parent_idx=991, c_current_idx=996, node_state=4 (COMPLETED), field_type='int', field_name='nv')
int nv ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=997)
// number of degrees of freedom  =  dim ( qvel ) 		StructFieldNode(c_parent_idx=991, c_current_idx=998, node_state=4 (COMPLETED), field_type='int', field_name='nu')
int nu ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=999)
// number of actuators/controls  =  dim ( ctrl ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1000, node_state=4 (COMPLETED), field_type='int', field_name='na')
int na ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1001)
// number of activation states  =  dim ( act ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1002, node_state=4 (COMPLETED), field_type='int', field_name='nbody')
int nbody ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1003)
// number of bodies		StructFieldNode(c_parent_idx=991, c_current_idx=1004, node_state=4 (COMPLETED), field_type='int', field_name='nbvh')
int nbvh ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1005)
// number of total bounding volumes in all bodies		StructFieldNode(c_parent_idx=991, c_current_idx=1006, node_state=4 (COMPLETED), field_type='int', field_name='nbvhstatic')
int nbvhstatic ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1007)
// number of static bounding volumes  ( aabb stored in mjModel ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1008, node_state=4 (COMPLETED), field_type='int', field_name='nbvhdynamic')
int nbvhdynamic ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1009)
// number of dynamic bounding volumes  ( aabb stored in mjData ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1010, node_state=4 (COMPLETED), field_type='int', field_name='njnt')
int njnt ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1011)
// number of joints		StructFieldNode(c_parent_idx=991, c_current_idx=1012, node_state=4 (COMPLETED), field_type='int', field_name='ngeom')
int ngeom ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1013)
// number of geoms		StructFieldNode(c_parent_idx=991, c_current_idx=1014, node_state=4 (COMPLETED), field_type='int', field_name='nsite')
int nsite ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1015)
// number of sites		StructFieldNode(c_parent_idx=991, c_current_idx=1016, node_state=4 (COMPLETED), field_type='int', field_name='ncam')
int ncam ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1017)
// number of cameras		StructFieldNode(c_parent_idx=991, c_current_idx=1018, node_state=4 (COMPLETED), field_type='int', field_name='nlight')
int nlight ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1019)
// number of lights		StructFieldNode(c_parent_idx=991, c_current_idx=1020, node_state=4 (COMPLETED), field_type='int', field_name='nflex')
int nflex ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1021)
// number of flexes		StructFieldNode(c_parent_idx=991, c_current_idx=1022, node_state=4 (COMPLETED), field_type='int', field_name='nflexvert')
int nflexvert ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1023)
// number of vertices in all flexes		StructFieldNode(c_parent_idx=991, c_current_idx=1024, node_state=4 (COMPLETED), field_type='int', field_name='nflexedge')
int nflexedge ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1025)
// number of edges in all flexes		StructFieldNode(c_parent_idx=991, c_current_idx=1026, node_state=4 (COMPLETED), field_type='int', field_name='nflexelem')
int nflexelem ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1027)
// number of elements in all flexes		StructFieldNode(c_parent_idx=991, c_current_idx=1028, node_state=4 (COMPLETED), field_type='int', field_name='nflexelemdata')
int nflexelemdata ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1029)
// number of element vertex ids in all flexes		StructFieldNode(c_parent_idx=991, c_current_idx=1030, node_state=4 (COMPLETED), field_type='int', field_name='nflexelemedge')
int nflexelemedge ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1031)
// number of element edge ids in all flexes		StructFieldNode(c_parent_idx=991, c_current_idx=1032, node_state=4 (COMPLETED), field_type='int', field_name='nflexshelldata')
int nflexshelldata ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1033)
// number of shell fragment vertex ids in all flexes		StructFieldNode(c_parent_idx=991, c_current_idx=1034, node_state=4 (COMPLETED), field_type='int', field_name='nflexevpair')
int nflexevpair ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1035)
// number of element-vertex pairs in all flexes		StructFieldNode(c_parent_idx=991, c_current_idx=1036, node_state=4 (COMPLETED), field_type='int', field_name='nflextexcoord')
int nflextexcoord ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1037)
// number of vertices with texture coordinates		StructFieldNode(c_parent_idx=991, c_current_idx=1038, node_state=4 (COMPLETED), field_type='int', field_name='nmesh')
int nmesh ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1039)
// number of meshes		StructFieldNode(c_parent_idx=991, c_current_idx=1040, node_state=4 (COMPLETED), field_type='int', field_name='nmeshvert')
int nmeshvert ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1041)
// number of vertices in all meshes		StructFieldNode(c_parent_idx=991, c_current_idx=1042, node_state=4 (COMPLETED), field_type='int', field_name='nmeshnormal')
int nmeshnormal ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1043)
// number of normals in all meshes		StructFieldNode(c_parent_idx=991, c_current_idx=1044, node_state=4 (COMPLETED), field_type='int', field_name='nmeshtexcoord')
int nmeshtexcoord ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1045)
// number of texcoords in all meshes		StructFieldNode(c_parent_idx=991, c_current_idx=1046, node_state=4 (COMPLETED), field_type='int', field_name='nmeshface')
int nmeshface ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1047)
// number of triangular faces in all meshes		StructFieldNode(c_parent_idx=991, c_current_idx=1048, node_state=4 (COMPLETED), field_type='int', field_name='nmeshgraph')
int nmeshgraph ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1049)
// number of ints in mesh auxiliary data		StructFieldNode(c_parent_idx=991, c_current_idx=1050, node_state=4 (COMPLETED), field_type='int', field_name='nskin')
int nskin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1051)
// number of skins		StructFieldNode(c_parent_idx=991, c_current_idx=1052, node_state=4 (COMPLETED), field_type='int', field_name='nskinvert')
int nskinvert ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1053)
// number of vertices in all skins		StructFieldNode(c_parent_idx=991, c_current_idx=1054, node_state=4 (COMPLETED), field_type='int', field_name='nskintexvert')
int nskintexvert ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1055)
// number of vertiex with texcoords in all skins		StructFieldNode(c_parent_idx=991, c_current_idx=1056, node_state=4 (COMPLETED), field_type='int', field_name='nskinface')
int nskinface ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1057)
// number of triangular faces in all skins		StructFieldNode(c_parent_idx=991, c_current_idx=1058, node_state=4 (COMPLETED), field_type='int', field_name='nskinbone')
int nskinbone ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1059)
// number of bones in all skins		StructFieldNode(c_parent_idx=991, c_current_idx=1060, node_state=4 (COMPLETED), field_type='int', field_name='nskinbonevert')
int nskinbonevert ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1061)
// number of vertices in all skin bones		StructFieldNode(c_parent_idx=991, c_current_idx=1062, node_state=4 (COMPLETED), field_type='int', field_name='nhfield')
int nhfield ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1063)
// number of heightfields		StructFieldNode(c_parent_idx=991, c_current_idx=1064, node_state=4 (COMPLETED), field_type='int', field_name='nhfielddata')
int nhfielddata ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1065)
// number of data points in all heightfields		StructFieldNode(c_parent_idx=991, c_current_idx=1066, node_state=4 (COMPLETED), field_type='int', field_name='ntex')
int ntex ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1067)
// number of textures		StructFieldNode(c_parent_idx=991, c_current_idx=1068, node_state=4 (COMPLETED), field_type='int', field_name='ntexdata')
int ntexdata ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1069)
// number of bytes in texture rgb data		StructFieldNode(c_parent_idx=991, c_current_idx=1070, node_state=4 (COMPLETED), field_type='int', field_name='nmat')
int nmat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1071)
// number of materials		StructFieldNode(c_parent_idx=991, c_current_idx=1072, node_state=4 (COMPLETED), field_type='int', field_name='npair')
int npair ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1073)
// number of predefined geom pairs		StructFieldNode(c_parent_idx=991, c_current_idx=1074, node_state=4 (COMPLETED), field_type='int', field_name='nexclude')
int nexclude ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1075)
// number of excluded geom pairs		StructFieldNode(c_parent_idx=991, c_current_idx=1076, node_state=4 (COMPLETED), field_type='int', field_name='neq')
int neq ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1077)
// number of equality constraints		StructFieldNode(c_parent_idx=991, c_current_idx=1078, node_state=4 (COMPLETED), field_type='int', field_name='ntendon')
int ntendon ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1079)
// number of tendons		StructFieldNode(c_parent_idx=991, c_current_idx=1080, node_state=4 (COMPLETED), field_type='int', field_name='nwrap')
int nwrap ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1081)
// number of wrap objects in all tendon paths		StructFieldNode(c_parent_idx=991, c_current_idx=1082, node_state=4 (COMPLETED), field_type='int', field_name='nsensor')
int nsensor ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1083)
// number of sensors		StructFieldNode(c_parent_idx=991, c_current_idx=1084, node_state=4 (COMPLETED), field_type='int', field_name='nnumeric')
int nnumeric ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1085)
// number of numeric custom fields		StructFieldNode(c_parent_idx=991, c_current_idx=1086, node_state=4 (COMPLETED), field_type='int', field_name='nnumericdata')
int nnumericdata ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1087)
// number of mjtNums in all numeric fields		StructFieldNode(c_parent_idx=991, c_current_idx=1088, node_state=4 (COMPLETED), field_type='int', field_name='ntext')
int ntext ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1089)
// number of text custom fields		StructFieldNode(c_parent_idx=991, c_current_idx=1090, node_state=4 (COMPLETED), field_type='int', field_name='ntextdata')
int ntextdata ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1091)
// number of mjtBytes in all text fields		StructFieldNode(c_parent_idx=991, c_current_idx=1092, node_state=4 (COMPLETED), field_type='int', field_name='ntuple')
int ntuple ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1093)
// number of tuple custom fields		StructFieldNode(c_parent_idx=991, c_current_idx=1094, node_state=4 (COMPLETED), field_type='int', field_name='ntupledata')
int ntupledata ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1095)
// number of objects in all tuple fields		StructFieldNode(c_parent_idx=991, c_current_idx=1096, node_state=4 (COMPLETED), field_type='int', field_name='nkey')
int nkey ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1097)
// number of keyframes		StructFieldNode(c_parent_idx=991, c_current_idx=1098, node_state=4 (COMPLETED), field_type='int', field_name='nmocap')
int nmocap ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1099)
// number of mocap bodies		StructFieldNode(c_parent_idx=991, c_current_idx=1100, node_state=4 (COMPLETED), field_type='int', field_name='nplugin')
int nplugin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1101)
// number of plugin instances		StructFieldNode(c_parent_idx=991, c_current_idx=1102, node_state=4 (COMPLETED), field_type='int', field_name='npluginattr')
int npluginattr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1103)
// number of chars in all plugin config attributes		StructFieldNode(c_parent_idx=991, c_current_idx=1104, node_state=4 (COMPLETED), field_type='int', field_name='nuser_body')
int nuser_body ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1105)
// number of mjtNums in body_user		StructFieldNode(c_parent_idx=991, c_current_idx=1106, node_state=4 (COMPLETED), field_type='int', field_name='nuser_jnt')
int nuser_jnt ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1107)
// number of mjtNums in jnt_user		StructFieldNode(c_parent_idx=991, c_current_idx=1108, node_state=4 (COMPLETED), field_type='int', field_name='nuser_geom')
int nuser_geom ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1109)
// number of mjtNums in geom_user		StructFieldNode(c_parent_idx=991, c_current_idx=1110, node_state=4 (COMPLETED), field_type='int', field_name='nuser_site')
int nuser_site ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1111)
// number of mjtNums in site_user		StructFieldNode(c_parent_idx=991, c_current_idx=1112, node_state=4 (COMPLETED), field_type='int', field_name='nuser_cam')
int nuser_cam ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1113)
// number of mjtNums in cam_user		StructFieldNode(c_parent_idx=991, c_current_idx=1114, node_state=4 (COMPLETED), field_type='int', field_name='nuser_tendon')
int nuser_tendon ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1115)
// number of mjtNums in tendon_user		StructFieldNode(c_parent_idx=991, c_current_idx=1116, node_state=4 (COMPLETED), field_type='int', field_name='nuser_actuator')
int nuser_actuator ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1117)
// number of mjtNums in actuator_user		StructFieldNode(c_parent_idx=991, c_current_idx=1118, node_state=4 (COMPLETED), field_type='int', field_name='nuser_sensor')
int nuser_sensor ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1119)
// number of mjtNums in sensor_user		StructFieldNode(c_parent_idx=991, c_current_idx=1120, node_state=4 (COMPLETED), field_type='int', field_name='nnames')
int nnames ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1121)
// number of chars in all names		StructFieldNode(c_parent_idx=991, c_current_idx=1122, node_state=4 (COMPLETED), field_type='int', field_name='nnames_map')
int nnames_map ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1123)
// number of slots in the names hash map		StructFieldNode(c_parent_idx=991, c_current_idx=1124, node_state=4 (COMPLETED), field_type='int', field_name='npaths')
int npaths ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1125)
// number of chars in all paths		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1126)
// sizes set after mjModel construction  ( only affect mjData ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1127, node_state=4 (COMPLETED), field_type='int', field_name='nM')
int nM ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1128)
// number of non-zeros in sparse inertia matrix		StructFieldNode(c_parent_idx=991, c_current_idx=1129, node_state=4 (COMPLETED), field_type='int', field_name='nB')
int nB ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1130)
// number of non-zeros in sparse body-dof matrix		StructFieldNode(c_parent_idx=991, c_current_idx=1131, node_state=4 (COMPLETED), field_type='int', field_name='nC')
int nC ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1132)
// number of non-zeros in sparse reduced dof-dof matrix		StructFieldNode(c_parent_idx=991, c_current_idx=1133, node_state=4 (COMPLETED), field_type='int', field_name='nD')
int nD ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1134)
// number of non-zeros in sparse dof-dof matrix		StructFieldNode(c_parent_idx=991, c_current_idx=1135, node_state=4 (COMPLETED), field_type='int', field_name='ntree')
int ntree ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1136)
// number of kinematic trees under world body		StructFieldNode(c_parent_idx=991, c_current_idx=1137, node_state=4 (COMPLETED), field_type='int', field_name='ngravcomp')
int ngravcomp ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1138)
// number of bodies with nonzero gravcomp		StructFieldNode(c_parent_idx=991, c_current_idx=1139, node_state=4 (COMPLETED), field_type='int', field_name='nemax')
int nemax ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1140)
// number of potential equality-constraint rows		StructFieldNode(c_parent_idx=991, c_current_idx=1141, node_state=4 (COMPLETED), field_type='int', field_name='njmax')
int njmax ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1142)
// number of available rows in constraint Jacobian		StructFieldNode(c_parent_idx=991, c_current_idx=1143, node_state=4 (COMPLETED), field_type='int', field_name='nconmax')
int nconmax ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1144)
// number of potential contacts in contact list		StructFieldNode(c_parent_idx=991, c_current_idx=1145, node_state=4 (COMPLETED), field_type='int', field_name='nuserdata')
int nuserdata ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1146)
// number of mjtNums reserved for the user		StructFieldNode(c_parent_idx=991, c_current_idx=1147, node_state=4 (COMPLETED), field_type='int', field_name='nsensordata')
int nsensordata ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1148)
// number of mjtNums in sensor data vector		StructFieldNode(c_parent_idx=991, c_current_idx=1149, node_state=4 (COMPLETED), field_type='int', field_name='npluginstate')
int npluginstate ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1150)
// number of mjtNums in plugin state vector		StructFieldNode(c_parent_idx=991, c_current_idx=1151, node_state=4 (COMPLETED), field_type='size_t', field_name='narena')
size_t narena ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1152)
// number of bytes in the mjData arena  ( inclusive of stack ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1153, node_state=4 (COMPLETED), field_type='size_t', field_name='nbuffer')
size_t nbuffer ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1154)
// number of bytes in buffer		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1155)
// ------------------------------- options and statistics		StructFieldNode(c_parent_idx=991, c_current_idx=1156, node_state=4 (COMPLETED), field_type='mjOption', field_name='opt')
mjOption opt ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1157)
// physics options		StructFieldNode(c_parent_idx=991, c_current_idx=1158, node_state=4 (COMPLETED), field_type='mjVisual', field_name='vis')
mjVisual vis ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1159)
// visualization options		StructFieldNode(c_parent_idx=991, c_current_idx=1160, node_state=4 (COMPLETED), field_type='mjStatistic', field_name='stat')
mjStatistic stat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1161)
// model statistics		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1162)
// ------------------------------- buffers		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1163)
// main buffer		StructFieldNode(c_parent_idx=991, c_current_idx=1164, node_state=4 (COMPLETED), field_type='void*', field_name='buffer')
void*     buffer ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1165)
// main buffer ;  all pointers point in it     ( nbuffer ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1166)
// default generalized coordinates		StructFieldNode(c_parent_idx=991, c_current_idx=1167, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='qpos0')
mjtNum*   qpos0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1168)
// qpos values at default pose               ( nq x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1169, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='qpos_spring')
mjtNum*   qpos_spring ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1170)
// reference pose for springs                ( nq x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1171)
// bodies		StructFieldNode(c_parent_idx=991, c_current_idx=1172, node_state=4 (COMPLETED), field_type='int*', field_name='body_parentid')
int*      body_parentid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1173)
// id of body's parent                       ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1174, node_state=4 (COMPLETED), field_type='int*', field_name='body_rootid')
int*      body_rootid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1175)
// id of root above body                     ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1176, node_state=4 (COMPLETED), field_type='int*', field_name='body_weldid')
int*      body_weldid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1177)
// id of body that this body is welded to    ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1178, node_state=4 (COMPLETED), field_type='int*', field_name='body_mocapid')
int*      body_mocapid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1179)
// id of mocap data ;  -1: none                ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1180, node_state=4 (COMPLETED), field_type='int*', field_name='body_jntnum')
int*      body_jntnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1181)
// number of joints for this body            ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1182, node_state=4 (COMPLETED), field_type='int*', field_name='body_jntadr')
int*      body_jntadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1183)
// start addr of joints ;  -1: no joints       ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1184, node_state=4 (COMPLETED), field_type='int*', field_name='body_dofnum')
int*      body_dofnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1185)
// number of motion degrees of freedom       ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1186, node_state=4 (COMPLETED), field_type='int*', field_name='body_dofadr')
int*      body_dofadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1187)
// start addr of dofs ;  -1: no dofs           ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1188, node_state=4 (COMPLETED), field_type='int*', field_name='body_treeid')
int*      body_treeid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1189)
// id of body's kinematic tree ;  -1: static   ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1190, node_state=4 (COMPLETED), field_type='int*', field_name='body_geomnum')
int*      body_geomnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1191)
// number of geoms                           ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1192, node_state=4 (COMPLETED), field_type='int*', field_name='body_geomadr')
int*      body_geomadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1193)
// start addr of geoms ;  -1: no geoms         ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1194, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='body_simple')
mjtByte*  body_simple ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1195)
// 1: diag M ;  2: diag M ,  sliders only        ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1196, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='body_sameframe')
mjtByte*  body_sameframe ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1197)
// same frame as inertia  ( mjtSameframe )       ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1198, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_pos')
mjtNum*   body_pos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1199)
// position offset rel. to parent body       ( nbody x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1200, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_quat')
mjtNum*   body_quat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1201)
// orientation offset rel. to parent body    ( nbody x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1202, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_ipos')
mjtNum*   body_ipos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1203)
// local position of center of mass          ( nbody x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1204, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_iquat')
mjtNum*   body_iquat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1205)
// local orientation of inertia ellipsoid    ( nbody x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1206, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_mass')
mjtNum*   body_mass ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1207)
// mass                                      ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1208, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_subtreemass')
mjtNum*   body_subtreemass ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1209)
// mass of subtree starting at this body     ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1210, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_inertia')
mjtNum*   body_inertia ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1211)
// diagonal inertia in ipos/iquat frame      ( nbody x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1212, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_invweight0')
mjtNum*   body_invweight0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1213)
// mean inv inert in qpos0  ( trn ,  rot )         ( nbody x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1214, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_gravcomp')
mjtNum*   body_gravcomp ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1215)
// antigravity force ,  units of body weight   ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1216, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_margin')
mjtNum*   body_margin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1217)
// MAX over all geom margins                 ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1218, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='body_user')
mjtNum*   body_user ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1219)
// user data                                 ( nbody x nuser_body ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1220, node_state=4 (COMPLETED), field_type='int*', field_name='body_plugin')
int*      body_plugin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1221)
// plugin instance id ;  -1: not in use        ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1222, node_state=4 (COMPLETED), field_type='int*', field_name='body_contype')
int*      body_contype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1223)
// OR over all geom contypes                 ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1224, node_state=4 (COMPLETED), field_type='int*', field_name='body_conaffinity')
int*      body_conaffinity ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1225)
// OR over all geom conaffinities            ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1226, node_state=4 (COMPLETED), field_type='int*', field_name='body_bvhadr')
int*      body_bvhadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1227)
// address of bvh root                       ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1228, node_state=4 (COMPLETED), field_type='int*', field_name='body_bvhnum')
int*      body_bvhnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1229)
// number of bounding volumes                ( nbody x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1230)
// bounding volume hierarchy		StructFieldNode(c_parent_idx=991, c_current_idx=1231, node_state=4 (COMPLETED), field_type='int*', field_name='bvh_depth')
int*      bvh_depth ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1232)
// depth in the bounding volume hierarchy    ( nbvh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1233, node_state=4 (COMPLETED), field_type='int*', field_name='bvh_child')
int*      bvh_child ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1234)
// left and right children in tree           ( nbvh x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1235, node_state=4 (COMPLETED), field_type='int*', field_name='bvh_nodeid')
int*      bvh_nodeid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1236)
// geom or elem id of node ;  -1: non-leaf     ( nbvh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1237, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='bvh_aabb')
mjtNum*   bvh_aabb ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1238)
// local bounding box  ( center ,  size )          ( nbvhstatic x 6 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1239)
// joints		StructFieldNode(c_parent_idx=991, c_current_idx=1240, node_state=4 (COMPLETED), field_type='int*', field_name='jnt_type')
int*      jnt_type ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1241)
// type of joint  ( mjtJoint )                   ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1242, node_state=4 (COMPLETED), field_type='int*', field_name='jnt_qposadr')
int*      jnt_qposadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1243)
// start addr in 'qpos' for joint's data     ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1244, node_state=4 (COMPLETED), field_type='int*', field_name='jnt_dofadr')
int*      jnt_dofadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1245)
// start addr in 'qvel' for joint's data     ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1246, node_state=4 (COMPLETED), field_type='int*', field_name='jnt_bodyid')
int*      jnt_bodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1247)
// id of joint's body                        ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1248, node_state=4 (COMPLETED), field_type='int*', field_name='jnt_group')
int*      jnt_group ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1249)
// group for visibility                      ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1250, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='jnt_limited')
mjtByte*  jnt_limited ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1251)
// does joint have limits                    ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1252, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='jnt_actfrclimited')
mjtByte*  jnt_actfrclimited ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1253)
// does joint have actuator force limits     ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1254, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='jnt_actgravcomp')
mjtByte*  jnt_actgravcomp ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1255)
// is gravcomp force applied via actuators   ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1256, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='jnt_solref')
mjtNum*   jnt_solref ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1257)
// constraint solver reference: limit        ( njnt x mjNREF ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1258, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='jnt_solimp')
mjtNum*   jnt_solimp ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1259)
// constraint solver impedance: limit        ( njnt x mjNIMP ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1260, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='jnt_pos')
mjtNum*   jnt_pos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1261)
// local anchor position                     ( njnt x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1262, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='jnt_axis')
mjtNum*   jnt_axis ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1263)
// local joint axis                          ( njnt x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1264, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='jnt_stiffness')
mjtNum*   jnt_stiffness ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1265)
// stiffness coefficient                     ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1266, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='jnt_range')
mjtNum*   jnt_range ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1267)
// joint limits                              ( njnt x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1268, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='jnt_actfrcrange')
mjtNum*   jnt_actfrcrange ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1269)
// range of total actuator force             ( njnt x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1270, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='jnt_margin')
mjtNum*   jnt_margin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1271)
// min distance for limit detection          ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1272, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='jnt_user')
mjtNum*   jnt_user ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1273)
// user data                                 ( njnt x nuser_jnt ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1274)
// dofs		StructFieldNode(c_parent_idx=991, c_current_idx=1275, node_state=4 (COMPLETED), field_type='int*', field_name='dof_bodyid')
int*      dof_bodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1276)
// id of dof's body                          ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1277, node_state=4 (COMPLETED), field_type='int*', field_name='dof_jntid')
int*      dof_jntid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1278)
// id of dof's joint                         ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1279, node_state=4 (COMPLETED), field_type='int*', field_name='dof_parentid')
int*      dof_parentid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1280)
// id of dof's parent ;  -1: none              ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1281, node_state=4 (COMPLETED), field_type='int*', field_name='dof_treeid')
int*      dof_treeid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1282)
// id of dof's kinematic tree                ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1283, node_state=4 (COMPLETED), field_type='int*', field_name='dof_Madr')
int*      dof_Madr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1284)
// dof address in M-diagonal                 ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1285, node_state=4 (COMPLETED), field_type='int*', field_name='dof_simplenum')
int*      dof_simplenum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1286)
// number of consecutive simple dofs         ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1287, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='dof_solref')
mjtNum*   dof_solref ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1288)
// constraint solver reference:frictionloss  ( nv x mjNREF ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1289, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='dof_solimp')
mjtNum*   dof_solimp ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1290)
// constraint solver impedance:frictionloss  ( nv x mjNIMP ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1291, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='dof_frictionloss')
mjtNum*   dof_frictionloss ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1292)
// dof friction loss                         ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1293, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='dof_armature')
mjtNum*   dof_armature ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1294)
// dof armature inertia/mass                 ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1295, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='dof_damping')
mjtNum*   dof_damping ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1296)
// damping coefficient                       ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1297, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='dof_invweight0')
mjtNum*   dof_invweight0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1298)
// diag. inverse inertia in qpos0            ( nv x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1299, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='dof_M0')
mjtNum*   dof_M0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1300)
// diag. inertia in qpos0                    ( nv x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1301)
// geoms		StructFieldNode(c_parent_idx=991, c_current_idx=1302, node_state=4 (COMPLETED), field_type='int*', field_name='geom_type')
int*      geom_type ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1303)
// geometric type  ( mjtGeom )                   ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1304, node_state=4 (COMPLETED), field_type='int*', field_name='geom_contype')
int*      geom_contype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1305)
// geom contact type                         ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1306, node_state=4 (COMPLETED), field_type='int*', field_name='geom_conaffinity')
int*      geom_conaffinity ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1307)
// geom contact affinity                     ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1308, node_state=4 (COMPLETED), field_type='int*', field_name='geom_condim')
int*      geom_condim ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1309)
// contact dimensionality  ( 1 ,  3 ,  4 ,  6 )        ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1310, node_state=4 (COMPLETED), field_type='int*', field_name='geom_bodyid')
int*      geom_bodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1311)
// id of geom's body                         ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1312, node_state=4 (COMPLETED), field_type='int*', field_name='geom_dataid')
int*      geom_dataid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1313)
// id of geom's mesh/hfield ;  -1: none        ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1314, node_state=4 (COMPLETED), field_type='int*', field_name='geom_matid')
int*      geom_matid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1315)
// material id for rendering ;  -1: none       ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1316, node_state=4 (COMPLETED), field_type='int*', field_name='geom_group')
int*      geom_group ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1317)
// group for visibility                      ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1318, node_state=4 (COMPLETED), field_type='int*', field_name='geom_priority')
int*      geom_priority ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1319)
// geom contact priority                     ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1320, node_state=4 (COMPLETED), field_type='int*', field_name='geom_plugin')
int*      geom_plugin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1321)
// plugin instance id ;  -1: not in use        ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1322, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='geom_sameframe')
mjtByte*  geom_sameframe ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1323)
// same frame as body  ( mjtSameframe )          ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1324, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_solmix')
mjtNum*   geom_solmix ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1325)
// mixing coef for solref/imp in geom pair   ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1326, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_solref')
mjtNum*   geom_solref ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1327)
// constraint solver reference: contact      ( ngeom x mjNREF ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1328, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_solimp')
mjtNum*   geom_solimp ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1329)
// constraint solver impedance: contact      ( ngeom x mjNIMP ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1330, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_size')
mjtNum*   geom_size ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1331)
// geom-specific size parameters             ( ngeom x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1332, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_aabb')
mjtNum*   geom_aabb ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1333)
// bounding box ,   ( center ,  size )               ( ngeom x 6 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1334, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_rbound')
mjtNum*   geom_rbound ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1335)
// radius of bounding sphere                 ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1336, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_pos')
mjtNum*   geom_pos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1337)
// local position offset rel. to body        ( ngeom x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1338, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_quat')
mjtNum*   geom_quat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1339)
// local orientation offset rel. to body     ( ngeom x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1340, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_friction')
mjtNum*   geom_friction ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1341)
// friction for  ( slide ,  spin ,  roll )           ( ngeom x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1342, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_margin')
mjtNum*   geom_margin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1343)
// detect contact if dist<margin             ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1344, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_gap')
mjtNum*   geom_gap ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1345)
// include in solver if dist<margin-gap      ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1346, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_fluid')
mjtNum*   geom_fluid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1347)
// fluid interaction parameters              ( ngeom x mjNFLUID ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1348, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='geom_user')
mjtNum*   geom_user ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1349)
// user data                                 ( ngeom x nuser_geom ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1350, node_state=4 (COMPLETED), field_type='float*', field_name='geom_rgba')
float*    geom_rgba ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1351)
// rgba when material is omitted             ( ngeom x 4 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1352)
// sites		StructFieldNode(c_parent_idx=991, c_current_idx=1353, node_state=4 (COMPLETED), field_type='int*', field_name='site_type')
int*      site_type ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1354)
// geom type for rendering  ( mjtGeom )          ( nsite x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1355, node_state=4 (COMPLETED), field_type='int*', field_name='site_bodyid')
int*      site_bodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1356)
// id of site's body                         ( nsite x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1357, node_state=4 (COMPLETED), field_type='int*', field_name='site_matid')
int*      site_matid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1358)
// material id for rendering ;  -1: none       ( nsite x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1359, node_state=4 (COMPLETED), field_type='int*', field_name='site_group')
int*      site_group ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1360)
// group for visibility                      ( nsite x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1361, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='site_sameframe')
mjtByte*  site_sameframe ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1362)
// same frame as body  ( mjtSameframe )          ( nsite x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1363, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='site_size')
mjtNum*   site_size ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1364)
// geom size for rendering                   ( nsite x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1365, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='site_pos')
mjtNum*   site_pos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1366)
// local position offset rel. to body        ( nsite x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1367, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='site_quat')
mjtNum*   site_quat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1368)
// local orientation offset rel. to body     ( nsite x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1369, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='site_user')
mjtNum*   site_user ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1370)
// user data                                 ( nsite x nuser_site ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1371, node_state=4 (COMPLETED), field_type='float*', field_name='site_rgba')
float*    site_rgba ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1372)
// rgba when material is omitted             ( nsite x 4 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1373)
// cameras		StructFieldNode(c_parent_idx=991, c_current_idx=1374, node_state=4 (COMPLETED), field_type='int*', field_name='cam_mode')
int*      cam_mode ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1375)
// camera tracking mode  ( mjtCamLight )         ( ncam x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1376, node_state=4 (COMPLETED), field_type='int*', field_name='cam_bodyid')
int*      cam_bodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1377)
// id of camera's body                       ( ncam x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1378, node_state=4 (COMPLETED), field_type='int*', field_name='cam_targetbodyid')
int*      cam_targetbodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1379)
// id of targeted body ;  -1: none             ( ncam x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1380, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='cam_pos')
mjtNum*   cam_pos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1381)
// position rel. to body frame               ( ncam x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1382, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='cam_quat')
mjtNum*   cam_quat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1383)
// orientation rel. to body frame            ( ncam x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1384, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='cam_poscom0')
mjtNum*   cam_poscom0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1385)
// global position rel. to sub-com in qpos0  ( ncam x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1386, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='cam_pos0')
mjtNum*   cam_pos0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1387)
// global position rel. to body in qpos0     ( ncam x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1388, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='cam_mat0')
mjtNum*   cam_mat0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1389)
// global orientation in qpos0               ( ncam x 9 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1390, node_state=4 (COMPLETED), field_type='int*', field_name='cam_orthographic')
int*      cam_orthographic ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1391)
// orthographic camera ;  0: no ,  1: yes        ( ncam x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1392, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='cam_fovy')
mjtNum*   cam_fovy ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1393)
// y field-of-view  ( ortho ? len : deg )        ( ncam x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1394, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='cam_ipd')
mjtNum*   cam_ipd ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1395)
// inter-pupilary distance                   ( ncam x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1396, node_state=4 (COMPLETED), field_type='int*', field_name='cam_resolution')
int*      cam_resolution ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1397)
// resolution: pixels [width ,  height]        ( ncam x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1398, node_state=4 (COMPLETED), field_type='float*', field_name='cam_sensorsize')
float*    cam_sensorsize ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1399)
// sensor size: length [width ,  height]       ( ncam x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1400, node_state=4 (COMPLETED), field_type='float*', field_name='cam_intrinsic')
float*    cam_intrinsic ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1401)
// [focal length ;  principal point]           ( ncam x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1402, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='cam_user')
mjtNum*   cam_user ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1403)
// user data                                 ( ncam x nuser_cam ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1404)
// lights		StructFieldNode(c_parent_idx=991, c_current_idx=1405, node_state=4 (COMPLETED), field_type='int*', field_name='light_mode')
int*      light_mode ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1406)
// light tracking mode  ( mjtCamLight )          ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1407, node_state=4 (COMPLETED), field_type='int*', field_name='light_bodyid')
int*      light_bodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1408)
// id of light's body                        ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1409, node_state=4 (COMPLETED), field_type='int*', field_name='light_targetbodyid')
int*      light_targetbodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1410)
// id of targeted body ;  -1: none             ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1411, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='light_directional')
mjtByte*  light_directional ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1412)
// directional light                         ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1413, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='light_castshadow')
mjtByte*  light_castshadow ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1414)
// does light cast shadows                   ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1415, node_state=4 (COMPLETED), field_type='float*', field_name='light_bulbradius')
float*    light_bulbradius ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1416)
// light radius for soft shadows             ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1417, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='light_active')
mjtByte*  light_active ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1418)
// is light on                               ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1419, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='light_pos')
mjtNum*   light_pos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1420)
// position rel. to body frame               ( nlight x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1421, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='light_dir')
mjtNum*   light_dir ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1422)
// direction rel. to body frame              ( nlight x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1423, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='light_poscom0')
mjtNum*   light_poscom0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1424)
// global position rel. to sub-com in qpos0  ( nlight x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1425, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='light_pos0')
mjtNum*   light_pos0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1426)
// global position rel. to body in qpos0     ( nlight x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1427, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='light_dir0')
mjtNum*   light_dir0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1428)
// global direction in qpos0                 ( nlight x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1429, node_state=4 (COMPLETED), field_type='float*', field_name='light_attenuation')
float*    light_attenuation ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1430)
// OpenGL attenuation  ( quadratic model )       ( nlight x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1431, node_state=4 (COMPLETED), field_type='float*', field_name='light_cutoff')
float*    light_cutoff ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1432)
// OpenGL cutoff                             ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1433, node_state=4 (COMPLETED), field_type='float*', field_name='light_exponent')
float*    light_exponent ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1434)
// OpenGL exponent                           ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1435, node_state=4 (COMPLETED), field_type='float*', field_name='light_ambient')
float*    light_ambient ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1436)
// ambient rgb  ( alpha = 1 )                      ( nlight x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1437, node_state=4 (COMPLETED), field_type='float*', field_name='light_diffuse')
float*    light_diffuse ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1438)
// diffuse rgb  ( alpha = 1 )                      ( nlight x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1439, node_state=4 (COMPLETED), field_type='float*', field_name='light_specular')
float*    light_specular ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1440)
// specular rgb  ( alpha = 1 )                     ( nlight x 3 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1441)
// flexes: contact properties		StructFieldNode(c_parent_idx=991, c_current_idx=1442, node_state=4 (COMPLETED), field_type='int*', field_name='flex_contype')
int*      flex_contype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1443)
// flex contact type                         ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1444, node_state=4 (COMPLETED), field_type='int*', field_name='flex_conaffinity')
int*      flex_conaffinity ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1445)
// flex contact affinity                     ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1446, node_state=4 (COMPLETED), field_type='int*', field_name='flex_condim')
int*      flex_condim ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1447)
// contact dimensionality  ( 1 ,  3 ,  4 ,  6 )        ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1448, node_state=4 (COMPLETED), field_type='int*', field_name='flex_priority')
int*      flex_priority ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1449)
// flex contact priority                     ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1450, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_solmix')
mjtNum*   flex_solmix ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1451)
// mix coef for solref/imp in contact pair   ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1452, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_solref')
mjtNum*   flex_solref ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1453)
// constraint solver reference: contact      ( nflex x mjNREF ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1454, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_solimp')
mjtNum*   flex_solimp ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1455)
// constraint solver impedance: contact      ( nflex x mjNIMP ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1456, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_friction')
mjtNum*   flex_friction ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1457)
// friction for  ( slide ,  spin ,  roll )           ( nflex x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1458, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_margin')
mjtNum*   flex_margin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1459)
// detect contact if dist<margin             ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1460, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_gap')
mjtNum*   flex_gap ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1461)
// include in solver if dist<margin-gap      ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1462, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='flex_internal')
mjtByte*  flex_internal ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1463)
// internal flex collision enabled           ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1464, node_state=4 (COMPLETED), field_type='int*', field_name='flex_selfcollide')
int*      flex_selfcollide ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1465)
// self collision mode  ( mjtFlexSelf )          ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1466, node_state=4 (COMPLETED), field_type='int*', field_name='flex_activelayers')
int*      flex_activelayers ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1467)
// number of active element layers ,  3D only  ( nflex x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1468)
// flexes: other properties		StructFieldNode(c_parent_idx=991, c_current_idx=1469, node_state=4 (COMPLETED), field_type='int*', field_name='flex_dim')
int*      flex_dim ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1470)
// 1: lines ,  2: triangles ,  3: tetrahedra     ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1471, node_state=4 (COMPLETED), field_type='int*', field_name='flex_matid')
int*      flex_matid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1472)
// material id for rendering                 ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1473, node_state=4 (COMPLETED), field_type='int*', field_name='flex_group')
int*      flex_group ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1474)
// group for visibility                      ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1475, node_state=4 (COMPLETED), field_type='int*', field_name='flex_vertadr')
int*      flex_vertadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1476)
// first vertex address                      ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1477, node_state=4 (COMPLETED), field_type='int*', field_name='flex_vertnum')
int*      flex_vertnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1478)
// number of vertices                        ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1479, node_state=4 (COMPLETED), field_type='int*', field_name='flex_edgeadr')
int*      flex_edgeadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1480)
// first edge address                        ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1481, node_state=4 (COMPLETED), field_type='int*', field_name='flex_edgenum')
int*      flex_edgenum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1482)
// number of edges                           ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1483, node_state=4 (COMPLETED), field_type='int*', field_name='flex_elemadr')
int*      flex_elemadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1484)
// first element address                     ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1485, node_state=4 (COMPLETED), field_type='int*', field_name='flex_elemnum')
int*      flex_elemnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1486)
// number of elements                        ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1487, node_state=4 (COMPLETED), field_type='int*', field_name='flex_elemdataadr')
int*      flex_elemdataadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1488)
// first element vertex id address           ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1489, node_state=4 (COMPLETED), field_type='int*', field_name='flex_elemedgeadr')
int*      flex_elemedgeadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1490)
// first element edge id address             ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1491, node_state=4 (COMPLETED), field_type='int*', field_name='flex_shellnum')
int*      flex_shellnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1492)
// number of shells                          ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1493, node_state=4 (COMPLETED), field_type='int*', field_name='flex_shelldataadr')
int*      flex_shelldataadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1494)
// first shell data address                  ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1495, node_state=4 (COMPLETED), field_type='int*', field_name='flex_evpairadr')
int*      flex_evpairadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1496)
// first evpair address                      ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1497, node_state=4 (COMPLETED), field_type='int*', field_name='flex_evpairnum')
int*      flex_evpairnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1498)
// number of evpairs                         ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1499, node_state=4 (COMPLETED), field_type='int*', field_name='flex_texcoordadr')
int*      flex_texcoordadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1500)
// address in flex_texcoord ;  -1: none        ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1501, node_state=4 (COMPLETED), field_type='int*', field_name='flex_vertbodyid')
int*      flex_vertbodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1502)
// vertex body ids                           ( nflexvert x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1503, node_state=4 (COMPLETED), field_type='int*', field_name='flex_edge')
int*      flex_edge ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1504)
// edge vertex ids  ( 2 per edge )               ( nflexedge x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1505, node_state=4 (COMPLETED), field_type='int*', field_name='flex_elem')
int*      flex_elem ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1506)
// element vertex ids  ( dim+1 per elem )        ( nflexelemdata x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1507, node_state=4 (COMPLETED), field_type='int*', field_name='flex_elemedge')
int*      flex_elemedge ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1508)
// element edge ids                          ( nflexelemedge x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1509, node_state=4 (COMPLETED), field_type='int*', field_name='flex_elemlayer')
int*      flex_elemlayer ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1510)
// element distance from surface ,  3D only    ( nflexelem x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1511, node_state=4 (COMPLETED), field_type='int*', field_name='flex_shell')
int*      flex_shell ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1512)
// shell fragment vertex ids  ( dim per frag )   ( nflexshelldata x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1513, node_state=4 (COMPLETED), field_type='int*', field_name='flex_evpair')
int*      flex_evpair ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1514)
//  ( element ,  vertex )  collision pairs         ( nflexevpair x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1515, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_vert')
mjtNum*   flex_vert ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1516)
// vertex positions in local body frames     ( nflexvert x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1517, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_xvert0')
mjtNum*   flex_xvert0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1518)
// Cartesian vertex positions in qpos0       ( nflexvert x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1519, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flexedge_length0')
mjtNum*   flexedge_length0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1520)
// edge lengths in qpos0                     ( nflexedge x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1521, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flexedge_invweight0')
mjtNum*   flexedge_invweight0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1522)
// edge inv. weight in qpos0                 ( nflexedge x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1523, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_radius')
mjtNum*   flex_radius ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1524)
// radius around primitive element           ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1525, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_stiffness')
mjtNum*   flex_stiffness ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1526)
// finite element stiffness matrix           ( nflexelem x 21 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1527, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_damping')
mjtNum*   flex_damping ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1528)
// Rayleigh's damping coefficient            ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1529, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_edgestiffness')
mjtNum*   flex_edgestiffness ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1530)
// edge stiffness                            ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1531, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='flex_edgedamping')
mjtNum*   flex_edgedamping ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1532)
// edge damping                              ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1533, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='flex_edgeequality')
mjtByte*  flex_edgeequality ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1534)
// is edge equality constraint defined       ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1535, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='flex_rigid')
mjtByte*  flex_rigid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1536)
// are all verices in the same body          ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1537, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='flexedge_rigid')
mjtByte*  flexedge_rigid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1538)
// are both edge vertices in same body       ( nflexedge x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1539, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='flex_centered')
mjtByte*  flex_centered ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1540)
// are all vertex coordinates  ( 0 , 0 , 0 )         ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1541, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='flex_flatskin')
mjtByte*  flex_flatskin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1542)
// render flex skin with flat shading        ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1543, node_state=4 (COMPLETED), field_type='int*', field_name='flex_bvhadr')
int*      flex_bvhadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1544)
// address of bvh root ;  -1: no bvh           ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1545, node_state=4 (COMPLETED), field_type='int*', field_name='flex_bvhnum')
int*      flex_bvhnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1546)
// number of bounding volumes                ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1547, node_state=4 (COMPLETED), field_type='float*', field_name='flex_rgba')
float*    flex_rgba ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1548)
// rgba when material is omitted             ( nflex x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1549, node_state=4 (COMPLETED), field_type='float*', field_name='flex_texcoord')
float*    flex_texcoord ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1550)
// vertex texture coordinates                ( nflextexcoord x 2 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1551)
// meshes		StructFieldNode(c_parent_idx=991, c_current_idx=1552, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_vertadr')
int*      mesh_vertadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1553)
// first vertex address                      ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1554, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_vertnum')
int*      mesh_vertnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1555)
// number of vertices                        ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1556, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_faceadr')
int*      mesh_faceadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1557)
// first face address                        ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1558, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_facenum')
int*      mesh_facenum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1559)
// number of faces                           ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1560, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_bvhadr')
int*      mesh_bvhadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1561)
// address of bvh root                       ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1562, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_bvhnum')
int*      mesh_bvhnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1563)
// number of bvh                             ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1564, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_normaladr')
int*      mesh_normaladr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1565)
// first normal address                      ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1566, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_normalnum')
int*      mesh_normalnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1567)
// number of normals                         ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1568, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_texcoordadr')
int*      mesh_texcoordadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1569)
// texcoord data address ;  -1: no texcoord    ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1570, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_texcoordnum')
int*      mesh_texcoordnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1571)
// number of texcoord                        ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1572, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_graphadr')
int*      mesh_graphadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1573)
// graph data address ;  -1: no graph          ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1574, node_state=4 (COMPLETED), field_type='float*', field_name='mesh_vert')
float*    mesh_vert ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1575)
// vertex positions for all meshes           ( nmeshvert x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1576, node_state=4 (COMPLETED), field_type='float*', field_name='mesh_normal')
float*    mesh_normal ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1577)
// normals for all meshes                    ( nmeshnormal x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1578, node_state=4 (COMPLETED), field_type='float*', field_name='mesh_texcoord')
float*    mesh_texcoord ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1579)
// vertex texcoords for all meshes           ( nmeshtexcoord x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1580, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_face')
int*      mesh_face ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1581)
// vertex face data                          ( nmeshface x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1582, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_facenormal')
int*      mesh_facenormal ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1583)
// normal face data                          ( nmeshface x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1584, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_facetexcoord')
int*      mesh_facetexcoord ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1585)
// texture face data                         ( nmeshface x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1586, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_graph')
int*      mesh_graph ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1587)
// convex graph data                         ( nmeshgraph x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1588, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='mesh_scale')
mjtNum*   mesh_scale ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1589)
// scaling applied to asset vertices         ( nmesh x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1590, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='mesh_pos')
mjtNum*   mesh_pos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1591)
// translation applied to asset vertices     ( nmesh x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1592, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='mesh_quat')
mjtNum*   mesh_quat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1593)
// rotation applied to asset vertices        ( nmesh x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1594, node_state=4 (COMPLETED), field_type='int*', field_name='mesh_pathadr')
int*      mesh_pathadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1595)
// address of asset path for mesh ;  -1: none  ( nmesh x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1596)
// skins		StructFieldNode(c_parent_idx=991, c_current_idx=1597, node_state=4 (COMPLETED), field_type='int*', field_name='skin_matid')
int*      skin_matid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1598)
// skin material id ;  -1: none                ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1599, node_state=4 (COMPLETED), field_type='int*', field_name='skin_group')
int*      skin_group ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1600)
// group for visibility                      ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1601, node_state=4 (COMPLETED), field_type='float*', field_name='skin_rgba')
float*    skin_rgba ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1602)
// skin rgba                                 ( nskin x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1603, node_state=4 (COMPLETED), field_type='float*', field_name='skin_inflate')
float*    skin_inflate ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1604)
// inflate skin in normal direction          ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1605, node_state=4 (COMPLETED), field_type='int*', field_name='skin_vertadr')
int*      skin_vertadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1606)
// first vertex address                      ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1607, node_state=4 (COMPLETED), field_type='int*', field_name='skin_vertnum')
int*      skin_vertnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1608)
// number of vertices                        ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1609, node_state=4 (COMPLETED), field_type='int*', field_name='skin_texcoordadr')
int*      skin_texcoordadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1610)
// texcoord data address ;  -1: no texcoord    ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1611, node_state=4 (COMPLETED), field_type='int*', field_name='skin_faceadr')
int*      skin_faceadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1612)
// first face address                        ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1613, node_state=4 (COMPLETED), field_type='int*', field_name='skin_facenum')
int*      skin_facenum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1614)
// number of faces                           ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1615, node_state=4 (COMPLETED), field_type='int*', field_name='skin_boneadr')
int*      skin_boneadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1616)
// first bone in skin                        ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1617, node_state=4 (COMPLETED), field_type='int*', field_name='skin_bonenum')
int*      skin_bonenum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1618)
// number of bones in skin                   ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1619, node_state=4 (COMPLETED), field_type='float*', field_name='skin_vert')
float*    skin_vert ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1620)
// vertex positions for all skin meshes      ( nskinvert x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1621, node_state=4 (COMPLETED), field_type='float*', field_name='skin_texcoord')
float*    skin_texcoord ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1622)
// vertex texcoords for all skin meshes      ( nskintexvert x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1623, node_state=4 (COMPLETED), field_type='int*', field_name='skin_face')
int*      skin_face ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1624)
// triangle faces for all skin meshes        ( nskinface x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1625, node_state=4 (COMPLETED), field_type='int*', field_name='skin_bonevertadr')
int*      skin_bonevertadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1626)
// first vertex in each bone                 ( nskinbone x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1627, node_state=4 (COMPLETED), field_type='int*', field_name='skin_bonevertnum')
int*      skin_bonevertnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1628)
// number of vertices in each bone           ( nskinbone x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1629, node_state=4 (COMPLETED), field_type='float*', field_name='skin_bonebindpos')
float*    skin_bonebindpos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1630)
// bind pos of each bone                     ( nskinbone x 3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1631, node_state=4 (COMPLETED), field_type='float*', field_name='skin_bonebindquat')
float*    skin_bonebindquat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1632)
// bind quat of each bone                    ( nskinbone x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1633, node_state=4 (COMPLETED), field_type='int*', field_name='skin_bonebodyid')
int*      skin_bonebodyid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1634)
// body id of each bone                      ( nskinbone x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1635, node_state=4 (COMPLETED), field_type='int*', field_name='skin_bonevertid')
int*      skin_bonevertid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1636)
// mesh ids of vertices in each bone         ( nskinbonevert x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1637, node_state=4 (COMPLETED), field_type='float*', field_name='skin_bonevertweight')
float*    skin_bonevertweight ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1638)
// weights of vertices in each bone          ( nskinbonevert x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1639, node_state=4 (COMPLETED), field_type='int*', field_name='skin_pathadr')
int*      skin_pathadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1640)
// address of asset path for skin ;  -1: none  ( nskin x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1641)
// height fields		StructFieldNode(c_parent_idx=991, c_current_idx=1642, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='hfield_size')
mjtNum*   hfield_size ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1643)
//  ( x ,  y ,  z_top ,  z_bottom )                    ( nhfield x 4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1644, node_state=4 (COMPLETED), field_type='int*', field_name='hfield_nrow')
int*      hfield_nrow ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1645)
// number of rows in grid                    ( nhfield x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1646, node_state=4 (COMPLETED), field_type='int*', field_name='hfield_ncol')
int*      hfield_ncol ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1647)
// number of columns in grid                 ( nhfield x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1648, node_state=4 (COMPLETED), field_type='int*', field_name='hfield_adr')
int*      hfield_adr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1649)
// address in hfield_data                    ( nhfield x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1650, node_state=4 (COMPLETED), field_type='float*', field_name='hfield_data')
float*    hfield_data ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1651)
// elevation data                            ( nhfielddata x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1652, node_state=4 (COMPLETED), field_type='int*', field_name='hfield_pathadr')
int*      hfield_pathadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1653)
// address of hfield asset path ;  -1: none    ( nhfield x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1654)
// textures		StructFieldNode(c_parent_idx=991, c_current_idx=1655, node_state=4 (COMPLETED), field_type='int*', field_name='tex_type')
int*      tex_type ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1656)
// texture type  ( mjtTexture )                  ( ntex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1657, node_state=4 (COMPLETED), field_type='int*', field_name='tex_height')
int*      tex_height ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1658)
// number of rows in texture image           ( ntex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1659, node_state=4 (COMPLETED), field_type='int*', field_name='tex_width')
int*      tex_width ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1660)
// number of columns in texture image        ( ntex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1661, node_state=4 (COMPLETED), field_type='int*', field_name='tex_nchannel')
int*      tex_nchannel ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1662)
// number of channels in texture image       ( ntex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1663, node_state=4 (COMPLETED), field_type='int*', field_name='tex_adr')
int*      tex_adr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1664)
// start address in tex_data                 ( ntex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1665, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='tex_data')
mjtByte*  tex_data ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1666)
// pixel values                              ( ntexdata x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1667, node_state=4 (COMPLETED), field_type='int*', field_name='tex_pathadr')
int*      tex_pathadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1668)
// address of texture asset path ;  -1: none   ( ntex x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1669)
// materials		StructFieldNode(c_parent_idx=991, c_current_idx=1670, node_state=4 (COMPLETED), field_type='int*', field_name='mat_texid')
int*      mat_texid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1671)
// indices of textures ;  -1: none             ( nmat x mjNTEXROLE ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1672, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='mat_texuniform')
mjtByte*  mat_texuniform ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1673)
// make texture cube uniform                 ( nmat x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1674, node_state=4 (COMPLETED), field_type='float*', field_name='mat_texrepeat')
float*    mat_texrepeat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1675)
// texture repetition for 2d mapping         ( nmat x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1676, node_state=4 (COMPLETED), field_type='float*', field_name='mat_emission')
float*    mat_emission ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1677)
// emission  ( x rgb )                           ( nmat x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1678, node_state=4 (COMPLETED), field_type='float*', field_name='mat_specular')
float*    mat_specular ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1679)
// specular  ( x white )                         ( nmat x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1680, node_state=4 (COMPLETED), field_type='float*', field_name='mat_shininess')
float*    mat_shininess ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1681)
// shininess coef                            ( nmat x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1682, node_state=4 (COMPLETED), field_type='float*', field_name='mat_reflectance')
float*    mat_reflectance ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1683)
// reflectance  ( 0: disable )                   ( nmat x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1684, node_state=4 (COMPLETED), field_type='float*', field_name='mat_metallic')
float*    mat_metallic ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1685)
// metallic coef                             ( nmat x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1686, node_state=4 (COMPLETED), field_type='float*', field_name='mat_roughness')
float*    mat_roughness ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1687)
// roughness coef                            ( nmat x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1688, node_state=4 (COMPLETED), field_type='float*', field_name='mat_rgba')
float*    mat_rgba ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1689)
// rgba                                      ( nmat x 4 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1690)
// predefined geom pairs for collision detection ;  has precedence over exclude		StructFieldNode(c_parent_idx=991, c_current_idx=1691, node_state=4 (COMPLETED), field_type='int*', field_name='pair_dim')
int*      pair_dim ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1692)
// contact dimensionality                    ( npair x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1693, node_state=4 (COMPLETED), field_type='int*', field_name='pair_geom1')
int*      pair_geom1 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1694)
// id of geom1                               ( npair x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1695, node_state=4 (COMPLETED), field_type='int*', field_name='pair_geom2')
int*      pair_geom2 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1696)
// id of geom2                               ( npair x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1697, node_state=4 (COMPLETED), field_type='int*', field_name='pair_signature')
int*      pair_signature ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1698)
// body1 << 16 + body2                       ( npair x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1699, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='pair_solref')
mjtNum*   pair_solref ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1700)
// solver reference: contact normal          ( npair x mjNREF ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1701, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='pair_solreffriction')
mjtNum*   pair_solreffriction ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1702)
// solver reference: contact friction        ( npair x mjNREF ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1703, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='pair_solimp')
mjtNum*   pair_solimp ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1704)
// solver impedance: contact                 ( npair x mjNIMP ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1705, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='pair_margin')
mjtNum*   pair_margin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1706)
// detect contact if dist<margin             ( npair x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1707, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='pair_gap')
mjtNum*   pair_gap ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1708)
// include in solver if dist<margin-gap      ( npair x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1709, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='pair_friction')
mjtNum*   pair_friction ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1710)
// tangent1 ,  2 ,  spin ,  roll1 ,  2               ( npair x 5 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1711)
// excluded body pairs for collision detection		StructFieldNode(c_parent_idx=991, c_current_idx=1712, node_state=4 (COMPLETED), field_type='int*', field_name='exclude_signature')
int*      exclude_signature ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1713)
// body1 << 16 + body2                       ( nexclude x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1714)
// equality constraints		StructFieldNode(c_parent_idx=991, c_current_idx=1715, node_state=4 (COMPLETED), field_type='int*', field_name='eq_type')
int*      eq_type ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1716)
// constraint type  ( mjtEq )                    ( neq x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1717, node_state=4 (COMPLETED), field_type='int*', field_name='eq_obj1id')
int*      eq_obj1id ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1718)
// id of object 1                            ( neq x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1719, node_state=4 (COMPLETED), field_type='int*', field_name='eq_obj2id')
int*      eq_obj2id ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1720)
// id of object 2                            ( neq x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1721, node_state=4 (COMPLETED), field_type='int*', field_name='eq_objtype')
int*      eq_objtype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1722)
// type of both objects  ( mjtObj )              ( neq x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1723, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='eq_active0')
mjtByte*  eq_active0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1724)
// initial enable/disable constraint state   ( neq x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1725, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='eq_solref')
mjtNum*   eq_solref ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1726)
// constraint solver reference               ( neq x mjNREF ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1727, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='eq_solimp')
mjtNum*   eq_solimp ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1728)
// constraint solver impedance               ( neq x mjNIMP ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1729, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='eq_data')
mjtNum*   eq_data ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1730)
// numeric data for constraint               ( neq x mjNEQDATA ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1731)
// tendons		StructFieldNode(c_parent_idx=991, c_current_idx=1732, node_state=4 (COMPLETED), field_type='int*', field_name='tendon_adr')
int*      tendon_adr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1733)
// address of first object in tendon's path  ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1734, node_state=4 (COMPLETED), field_type='int*', field_name='tendon_num')
int*      tendon_num ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1735)
// number of objects in tendon's path        ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1736, node_state=4 (COMPLETED), field_type='int*', field_name='tendon_matid')
int*      tendon_matid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1737)
// material id for rendering                 ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1738, node_state=4 (COMPLETED), field_type='int*', field_name='tendon_group')
int*      tendon_group ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1739)
// group for visibility                      ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1740, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='tendon_limited')
mjtByte*  tendon_limited ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1741)
// does tendon have length limits            ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1742, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_width')
mjtNum*   tendon_width ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1743)
// width for rendering                       ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1744, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_solref_lim')
mjtNum*   tendon_solref_lim ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1745)
// constraint solver reference: limit        ( ntendon x mjNREF ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1746, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_solimp_lim')
mjtNum*   tendon_solimp_lim ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1747)
// constraint solver impedance: limit        ( ntendon x mjNIMP ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1748, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_solref_fri')
mjtNum*   tendon_solref_fri ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1749)
// constraint solver reference: friction     ( ntendon x mjNREF ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1750, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_solimp_fri')
mjtNum*   tendon_solimp_fri ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1751)
// constraint solver impedance: friction     ( ntendon x mjNIMP ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1752, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_range')
mjtNum*   tendon_range ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1753)
// tendon length limits                      ( ntendon x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1754, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_margin')
mjtNum*   tendon_margin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1755)
// min distance for limit detection          ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1756, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_stiffness')
mjtNum*   tendon_stiffness ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1757)
// stiffness coefficient                     ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1758, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_damping')
mjtNum*   tendon_damping ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1759)
// damping coefficient                       ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1760, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_frictionloss')
mjtNum*   tendon_frictionloss ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1761)
// loss due to friction                      ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1762, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_lengthspring')
mjtNum*   tendon_lengthspring ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1763)
// spring resting length range               ( ntendon x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1764, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_length0')
mjtNum*   tendon_length0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1765)
// tendon length in qpos0                    ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1766, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_invweight0')
mjtNum*   tendon_invweight0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1767)
// inv. weight in qpos0                      ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1768, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tendon_user')
mjtNum*   tendon_user ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1769)
// user data                                 ( ntendon x nuser_tendon ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1770, node_state=4 (COMPLETED), field_type='float*', field_name='tendon_rgba')
float*    tendon_rgba ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1771)
// rgba when material is omitted             ( ntendon x 4 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1772)
// list of all wrap objects in tendon paths		StructFieldNode(c_parent_idx=991, c_current_idx=1773, node_state=4 (COMPLETED), field_type='int*', field_name='wrap_type')
int*      wrap_type ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1774)
// wrap object type  ( mjtWrap )                 ( nwrap x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1775, node_state=4 (COMPLETED), field_type='int*', field_name='wrap_objid')
int*      wrap_objid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1776)
// object id: geom ,  site ,  joint              ( nwrap x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1777, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='wrap_prm')
mjtNum*   wrap_prm ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1778)
// divisor ,  joint coef ,  or site id           ( nwrap x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1779)
// actuators		StructFieldNode(c_parent_idx=991, c_current_idx=1780, node_state=4 (COMPLETED), field_type='int*', field_name='actuator_trntype')
int*      actuator_trntype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1781)
// transmission type  ( mjtTrn )                 ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1782, node_state=4 (COMPLETED), field_type='int*', field_name='actuator_dyntype')
int*      actuator_dyntype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1783)
// dynamics type  ( mjtDyn )                     ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1784, node_state=4 (COMPLETED), field_type='int*', field_name='actuator_gaintype')
int*      actuator_gaintype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1785)
// gain type  ( mjtGain )                        ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1786, node_state=4 (COMPLETED), field_type='int*', field_name='actuator_biastype')
int*      actuator_biastype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1787)
// bias type  ( mjtBias )                        ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1788, node_state=4 (COMPLETED), field_type='int*', field_name='actuator_trnid')
int*      actuator_trnid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1789)
// transmission id: joint ,  tendon ,  site      ( nu x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1790, node_state=4 (COMPLETED), field_type='int*', field_name='actuator_actadr')
int*      actuator_actadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1791)
// first activation address ;  -1: stateless   ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1792, node_state=4 (COMPLETED), field_type='int*', field_name='actuator_actnum')
int*      actuator_actnum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1793)
// number of activation variables            ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1794, node_state=4 (COMPLETED), field_type='int*', field_name='actuator_group')
int*      actuator_group ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1795)
// group for visibility                      ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1796, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='actuator_ctrllimited')
mjtByte*  actuator_ctrllimited ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1797)
// is control limited                        ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1798, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='actuator_forcelimited')
mjtByte*  actuator_forcelimited ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1799)
// is force limited                          ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1800, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='actuator_actlimited')
mjtByte*  actuator_actlimited ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1801)
// is activation limited                     ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1802, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_dynprm')
mjtNum*   actuator_dynprm ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1803)
// dynamics parameters                       ( nu x mjNDYN ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1804, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_gainprm')
mjtNum*   actuator_gainprm ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1805)
// gain parameters                           ( nu x mjNGAIN ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1806, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_biasprm')
mjtNum*   actuator_biasprm ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1807)
// bias parameters                           ( nu x mjNBIAS ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1808, node_state=4 (COMPLETED), field_type='mjtByte*', field_name='actuator_actearly')
mjtByte*  actuator_actearly ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1809)
// step activation before force              ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1810, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_ctrlrange')
mjtNum*   actuator_ctrlrange ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1811)
// range of controls                         ( nu x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1812, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_forcerange')
mjtNum*   actuator_forcerange ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1813)
// range of forces                           ( nu x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1814, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_actrange')
mjtNum*   actuator_actrange ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1815)
// range of activations                      ( nu x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1816, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_gear')
mjtNum*   actuator_gear ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1817)
// scale length and transmitted force        ( nu x 6 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1818, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_cranklength')
mjtNum*   actuator_cranklength ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1819)
// crank length for slider-crank             ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1820, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_acc0')
mjtNum*   actuator_acc0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1821)
// acceleration from unit force in qpos0     ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1822, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_length0')
mjtNum*   actuator_length0 ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1823)
// actuator length in qpos0                  ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1824, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_lengthrange')
mjtNum*   actuator_lengthrange ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1825)
// feasible actuator length range            ( nu x 2 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1826, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='actuator_user')
mjtNum*   actuator_user ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1827)
// user data                                 ( nu x nuser_actuator ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1828, node_state=4 (COMPLETED), field_type='int*', field_name='actuator_plugin')
int*      actuator_plugin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1829)
// plugin instance id ;  -1: not a plugin      ( nu x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1830)
// sensors		StructFieldNode(c_parent_idx=991, c_current_idx=1831, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_type')
int*      sensor_type ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1832)
// sensor type  ( mjtSensor )                    ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1833, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_datatype')
int*      sensor_datatype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1834)
// numeric data type  ( mjtDataType )            ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1835, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_needstage')
int*      sensor_needstage ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1836)
// required compute stage  ( mjtStage )          ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1837, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_objtype')
int*      sensor_objtype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1838)
// type of sensorized object  ( mjtObj )         ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1839, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_objid')
int*      sensor_objid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1840)
// id of sensorized object                   ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1841, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_reftype')
int*      sensor_reftype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1842)
// type of reference frame  ( mjtObj )           ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1843, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_refid')
int*      sensor_refid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1844)
// id of reference frame ;  -1: global frame   ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1845, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_dim')
int*      sensor_dim ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1846)
// number of scalar outputs                  ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1847, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_adr')
int*      sensor_adr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1848)
// address in sensor array                   ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1849, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='sensor_cutoff')
mjtNum*   sensor_cutoff ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1850)
// cutoff for real and positive ;  0: ignore   ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1851, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='sensor_noise')
mjtNum*   sensor_noise ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1852)
// noise standard deviation                  ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1853, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='sensor_user')
mjtNum*   sensor_user ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1854)
// user data                                 ( nsensor x nuser_sensor ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1855, node_state=4 (COMPLETED), field_type='int*', field_name='sensor_plugin')
int*      sensor_plugin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1856)
// plugin instance id ;  -1: not a plugin      ( nsensor x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1857)
// plugin instances		StructFieldNode(c_parent_idx=991, c_current_idx=1858, node_state=4 (COMPLETED), field_type='int*', field_name='plugin')
int*      plugin ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1859)
// globally registered plugin slot number    ( nplugin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1860, node_state=4 (COMPLETED), field_type='int*', field_name='plugin_stateadr')
int*      plugin_stateadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1861)
// address in the plugin state array         ( nplugin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1862, node_state=4 (COMPLETED), field_type='int*', field_name='plugin_statenum')
int*      plugin_statenum ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1863)
// number of states in the plugin instance   ( nplugin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1864, node_state=4 (COMPLETED), field_type='char*', field_name='plugin_attr')
char*     plugin_attr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1865)
// config attributes of plugin instances     ( npluginattr x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1866, node_state=4 (COMPLETED), field_type='int*', field_name='plugin_attradr')
int*      plugin_attradr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1867)
// address to each instance's config attrib  ( nplugin x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1868)
// custom numeric fields		StructFieldNode(c_parent_idx=991, c_current_idx=1869, node_state=4 (COMPLETED), field_type='int*', field_name='numeric_adr')
int*      numeric_adr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1870)
// address of field in numeric_data          ( nnumeric x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1871, node_state=4 (COMPLETED), field_type='int*', field_name='numeric_size')
int*      numeric_size ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1872)
// size of numeric field                     ( nnumeric x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1873, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='numeric_data')
mjtNum*   numeric_data ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1874)
// array of all numeric fields               ( nnumericdata x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1875)
// custom text fields		StructFieldNode(c_parent_idx=991, c_current_idx=1876, node_state=4 (COMPLETED), field_type='int*', field_name='text_adr')
int*      text_adr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1877)
// address of text in text_data              ( ntext x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1878, node_state=4 (COMPLETED), field_type='int*', field_name='text_size')
int*      text_size ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1879)
// size of text field  ( strlen+1 )              ( ntext x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1880, node_state=4 (COMPLETED), field_type='char*', field_name='text_data')
char*     text_data ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1881)
// array of all text fields  ( 0-terminated )    ( ntextdata x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1882)
// custom tuple fields		StructFieldNode(c_parent_idx=991, c_current_idx=1883, node_state=4 (COMPLETED), field_type='int*', field_name='tuple_adr')
int*      tuple_adr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1884)
// address of text in text_data              ( ntuple x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1885, node_state=4 (COMPLETED), field_type='int*', field_name='tuple_size')
int*      tuple_size ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1886)
// number of objects in tuple                ( ntuple x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1887, node_state=4 (COMPLETED), field_type='int*', field_name='tuple_objtype')
int*      tuple_objtype ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1888)
// array of object types in all tuples       ( ntupledata x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1889, node_state=4 (COMPLETED), field_type='int*', field_name='tuple_objid')
int*      tuple_objid ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1890)
// array of object ids in all tuples         ( ntupledata x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1891, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='tuple_objprm')
mjtNum*   tuple_objprm ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1892)
// array of object params in all tuples      ( ntupledata x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1893)
// keyframes		StructFieldNode(c_parent_idx=991, c_current_idx=1894, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='key_time')
mjtNum*   key_time ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1895)
// key time                                  ( nkey x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1896, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='key_qpos')
mjtNum*   key_qpos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1897)
// key position                              ( nkey x nq ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1898, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='key_qvel')
mjtNum*   key_qvel ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1899)
// key velocity                              ( nkey x nv ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1900, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='key_act')
mjtNum*   key_act ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1901)
// key activation                            ( nkey x na ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1902, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='key_mpos')
mjtNum*   key_mpos ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1903)
// key mocap position                        ( nkey x nmocap*3 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1904, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='key_mquat')
mjtNum*   key_mquat ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1905)
// key mocap quaternion                      ( nkey x nmocap*4 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1906, node_state=4 (COMPLETED), field_type='mjtNum*', field_name='key_ctrl')
mjtNum*   key_ctrl ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1907)
// key control                               ( nkey x nu ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1908)
// names		StructFieldNode(c_parent_idx=991, c_current_idx=1909, node_state=4 (COMPLETED), field_type='int*', field_name='name_bodyadr')
int*      name_bodyadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1910)
// body name pointers                        ( nbody x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1911, node_state=4 (COMPLETED), field_type='int*', field_name='name_jntadr')
int*      name_jntadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1912)
// joint name pointers                       ( njnt x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1913, node_state=4 (COMPLETED), field_type='int*', field_name='name_geomadr')
int*      name_geomadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1914)
// geom name pointers                        ( ngeom x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1915, node_state=4 (COMPLETED), field_type='int*', field_name='name_siteadr')
int*      name_siteadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1916)
// site name pointers                        ( nsite x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1917, node_state=4 (COMPLETED), field_type='int*', field_name='name_camadr')
int*      name_camadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1918)
// camera name pointers                      ( ncam x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1919, node_state=4 (COMPLETED), field_type='int*', field_name='name_lightadr')
int*      name_lightadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1920)
// light name pointers                       ( nlight x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1921, node_state=4 (COMPLETED), field_type='int*', field_name='name_flexadr')
int*      name_flexadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1922)
// flex name pointers                        ( nflex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1923, node_state=4 (COMPLETED), field_type='int*', field_name='name_meshadr')
int*      name_meshadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1924)
// mesh name pointers                        ( nmesh x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1925, node_state=4 (COMPLETED), field_type='int*', field_name='name_skinadr')
int*      name_skinadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1926)
// skin name pointers                        ( nskin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1927, node_state=4 (COMPLETED), field_type='int*', field_name='name_hfieldadr')
int*      name_hfieldadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1928)
// hfield name pointers                      ( nhfield x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1929, node_state=4 (COMPLETED), field_type='int*', field_name='name_texadr')
int*      name_texadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1930)
// texture name pointers                     ( ntex x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1931, node_state=4 (COMPLETED), field_type='int*', field_name='name_matadr')
int*      name_matadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1932)
// material name pointers                    ( nmat x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1933, node_state=4 (COMPLETED), field_type='int*', field_name='name_pairadr')
int*      name_pairadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1934)
// geom pair name pointers                   ( npair x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1935, node_state=4 (COMPLETED), field_type='int*', field_name='name_excludeadr')
int*      name_excludeadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1936)
// exclude name pointers                     ( nexclude x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1937, node_state=4 (COMPLETED), field_type='int*', field_name='name_eqadr')
int*      name_eqadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1938)
// equality constraint name pointers         ( neq x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1939, node_state=4 (COMPLETED), field_type='int*', field_name='name_tendonadr')
int*      name_tendonadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1940)
// tendon name pointers                      ( ntendon x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1941, node_state=4 (COMPLETED), field_type='int*', field_name='name_actuatoradr')
int*      name_actuatoradr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1942)
// actuator name pointers                    ( nu x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1943, node_state=4 (COMPLETED), field_type='int*', field_name='name_sensoradr')
int*      name_sensoradr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1944)
// sensor name pointers                      ( nsensor x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1945, node_state=4 (COMPLETED), field_type='int*', field_name='name_numericadr')
int*      name_numericadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1946)
// numeric name pointers                     ( nnumeric x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1947, node_state=4 (COMPLETED), field_type='int*', field_name='name_textadr')
int*      name_textadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1948)
// text name pointers                        ( ntext x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1949, node_state=4 (COMPLETED), field_type='int*', field_name='name_tupleadr')
int*      name_tupleadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1950)
// tuple name pointers                       ( ntuple x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1951, node_state=4 (COMPLETED), field_type='int*', field_name='name_keyadr')
int*      name_keyadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1952)
// keyframe name pointers                    ( nkey x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1953, node_state=4 (COMPLETED), field_type='int*', field_name='name_pluginadr')
int*      name_pluginadr ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1954)
// plugin instance name pointers             ( nplugin x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1955, node_state=4 (COMPLETED), field_type='char*', field_name='names')
char*     names ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1956)
// names of all objects ,  0-terminated        ( nnames x 1 ) 		StructFieldNode(c_parent_idx=991, c_current_idx=1957, node_state=4 (COMPLETED), field_type='int*', field_name='names_map')
int*      names_map ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1958)
// internal hash map of names                ( nnames_map x 1 ) 		SingleLineCommentNode(c_parent_idx=991, c_current_idx=1959)
// paths		StructFieldNode(c_parent_idx=991, c_current_idx=1960, node_state=4 (COMPLETED), field_type='char*', field_name='paths')
char*     paths ;C_BINDER_MOJO_NEWLINE				SingleLineCommentNode(c_parent_idx=991, c_current_idx=1961)
// paths to assets ,  0-terminated             ( npaths x 1 ) C_BINDER_MOJO_NEWLINE	}; C_BINDER_MOJO_NEWLINE		TypedefNode(c_parent_idx=27, c_current_idx=1962, c_child_idxs=(1963), node_state=4 (COMPLETED), type='mjModel')
typedef		StructNode(c_parent_idx=1962, c_current_idx=1963, node_state=4 (COMPLETED), name='mjModel_')
struct mjModel_mjModel	WhitespaceNode(c_parent_idx=27, c_current_idx=1964, n_tokens=4)
C_BINDER_MOJO_NEWLINE	 C_BINDER_MOJO_NEWLINE	#endifWhitespaceNode(c_parent_idx=0, c_current_idx=1965, n_tokens=1)
SingleLineCommentNode(c_parent_idx=0, c_current_idx=1966)
// MUJOCO_MJMODEL_H_WhitespaceNode(c_parent_idx=0, c_current_idx=1967, n_tokens=3)
C_BINDER_MOJO_NEWLINE C_BINDER_MOJO_NEWLINEEndFileNode(c_parent_idx=0, c_current_idx=1968)
C_BINDER_MOJO_END_FILE