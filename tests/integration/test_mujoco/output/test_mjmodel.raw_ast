TranslationUnitDecl 0x2c4de358 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2c4df1a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2c4de920 '__int128'
|-TypedefDecl 0x2c4df210 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2c4de940 'unsigned __int128'
|-TypedefDecl 0x2c580bd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2c4df2f0 'struct __NSConstantString_tag'
|   `-Record 0x2c4df268 '__NSConstantString_tag'
|-TypedefDecl 0x2c580c40 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x2c4deae0 '__SVInt8_t'
|-TypedefDecl 0x2c580ca8 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x2c4deb00 '__SVInt16_t'
|-TypedefDecl 0x2c580d10 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x2c4deb20 '__SVInt32_t'
|-TypedefDecl 0x2c580d78 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x2c4deb40 '__SVInt64_t'
|-TypedefDecl 0x2c580de0 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x2c4deb60 '__SVUint8_t'
|-TypedefDecl 0x2c580e48 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x2c4deb80 '__SVUint16_t'
|-TypedefDecl 0x2c580eb0 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x2c4deba0 '__SVUint32_t'
|-TypedefDecl 0x2c580f18 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x2c4debc0 '__SVUint64_t'
|-TypedefDecl 0x2c580f80 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x2c4debe0 '__SVFloat16_t'
|-TypedefDecl 0x2c580fe8 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x2c4dec00 '__SVFloat32_t'
|-TypedefDecl 0x2c581050 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x2c4dec20 '__SVFloat64_t'
|-TypedefDecl 0x2c5810b8 <<invalid sloc>> <invalid sloc> implicit __SVBFloat16_t '__SVBFloat16_t'
| `-BuiltinType 0x2c4dec40 '__SVBFloat16_t'
|-TypedefDecl 0x2c581120 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x2c4dec60 '__clang_svint8x2_t'
|-TypedefDecl 0x2c581188 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x2c4dec80 '__clang_svint16x2_t'
|-TypedefDecl 0x2c5811f0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x2c4deca0 '__clang_svint32x2_t'
|-TypedefDecl 0x2c581258 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x2c4decc0 '__clang_svint64x2_t'
|-TypedefDecl 0x2c5812c0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x2c4dece0 '__clang_svuint8x2_t'
|-TypedefDecl 0x2c581328 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x2c4ded00 '__clang_svuint16x2_t'
|-TypedefDecl 0x2c581390 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x2c4ded20 '__clang_svuint32x2_t'
|-TypedefDecl 0x2c5813f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x2c4ded40 '__clang_svuint64x2_t'
|-TypedefDecl 0x2c581460 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x2c4ded60 '__clang_svfloat16x2_t'
|-TypedefDecl 0x2c5814c8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x2c4ded80 '__clang_svfloat32x2_t'
|-TypedefDecl 0x2c581530 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x2c4deda0 '__clang_svfloat64x2_t'
|-TypedefDecl 0x2c581598 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x2c4dedc0 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x2c581600 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x2c4dede0 '__clang_svint8x3_t'
|-TypedefDecl 0x2c581668 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x2c4dee00 '__clang_svint16x3_t'
|-TypedefDecl 0x2c5816d0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x2c4dee20 '__clang_svint32x3_t'
|-TypedefDecl 0x2c581738 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x2c4dee40 '__clang_svint64x3_t'
|-TypedefDecl 0x2c5817a0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x2c4dee60 '__clang_svuint8x3_t'
|-TypedefDecl 0x2c581808 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x2c4dee80 '__clang_svuint16x3_t'
|-TypedefDecl 0x2c581870 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x2c4deea0 '__clang_svuint32x3_t'
|-TypedefDecl 0x2c5818d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x2c4deec0 '__clang_svuint64x3_t'
|-TypedefDecl 0x2c581940 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x2c4deee0 '__clang_svfloat16x3_t'
|-TypedefDecl 0x2c5819a8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x2c4def00 '__clang_svfloat32x3_t'
|-TypedefDecl 0x2c581e30 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x2c4def20 '__clang_svfloat64x3_t'
|-TypedefDecl 0x2c581e98 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x2c4def40 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x2c581f00 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x2c4def60 '__clang_svint8x4_t'
|-TypedefDecl 0x2c581f68 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x2c4def80 '__clang_svint16x4_t'
|-TypedefDecl 0x2c581fd0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x2c4defa0 '__clang_svint32x4_t'
|-TypedefDecl 0x2c582038 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x2c4defc0 '__clang_svint64x4_t'
|-TypedefDecl 0x2c5820a0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x2c4defe0 '__clang_svuint8x4_t'
|-TypedefDecl 0x2c582108 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x2c4df000 '__clang_svuint16x4_t'
|-TypedefDecl 0x2c582170 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x2c4df020 '__clang_svuint32x4_t'
|-TypedefDecl 0x2c5821d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x2c4df040 '__clang_svuint64x4_t'
|-TypedefDecl 0x2c582240 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x2c4df060 '__clang_svfloat16x4_t'
|-TypedefDecl 0x2c5822a8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x2c4df080 '__clang_svfloat32x4_t'
|-TypedefDecl 0x2c582310 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x2c4df0a0 '__clang_svfloat64x4_t'
|-TypedefDecl 0x2c582378 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x2c4df0c0 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x2c5823e0 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x2c4df0e0 '__SVBool_t'
|-TypedefDecl 0x2c582480 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2c582440 'char *'
|   `-BuiltinType 0x2c4de400 'char'
|-TypedefDecl 0x2c5827e8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct std::__va_list'
| `-RecordType 0x2c582560 'struct std::__va_list'
|   `-Record 0x2c5824d8 '__va_list'
|-TypedefDecl 0x2c582880 </usr/lib/llvm-14/lib/clang/14.0.0/include/stddef.h:35:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5828f0 <line:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c582960 <line:74:1, col:24> col:24 wchar_t 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-RecordDecl 0x2c5829b8 </usr/lib/llvm-14/lib/clang/14.0.0/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
| |-FieldDecl 0x2c582ab0 <line:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| | `-AlignedAttr 0x2c582b20 <line:21:22, col:56> aligned
| |   `-ConstantExpr 0x2c582b00 <col:34, col:55> 'unsigned long'
| |     |-value: Int 8
| |     `-UnaryExprOrTypeTraitExpr 0x2c582a78 <col:34, col:55> 'unsigned long' __alignof 'long long'
| `-FieldDecl 0x2c582bd0 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
|   `-AlignedAttr 0x2c582c40 <line:23:22, col:58> aligned
|     `-ConstantExpr 0x2c582c20 <col:34, col:57> 'unsigned long'
|       |-value: Int 16
|       `-UnaryExprOrTypeTraitExpr 0x2c582b98 <col:34, col:57> 'unsigned long' __alignof 'long double'
|-TypedefDecl 0x2c582cf8 <line:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
| `-ElaboratedType 0x2c582ca0 'struct max_align_t' sugar
|   `-RecordType 0x2c582a40 'max_align_t'
|     `-Record 0x2c5829b8 ''
|-TypedefDecl 0x2c582d80 </usr/include/aarch64-linux-gnu/bits/types.h:31:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x2c4de4c0 'unsigned char'
|-TypedefDecl 0x2c5d2dc0 <line:32:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x2c4de4e0 'unsigned short'
|-TypedefDecl 0x2c5d2e30 <line:33:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5d2ea0 <line:34:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5d2f10 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x2c4de420 'signed char'
|-TypedefDecl 0x2c5d2f80 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x2c4de4c0 'unsigned char'
|-TypedefDecl 0x2c5d2ff0 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x2c4de440 'short'
|-TypedefDecl 0x2c5d3060 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x2c4de4e0 'unsigned short'
|-TypedefDecl 0x2c5d30d0 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x2c4de460 'int'
|-TypedefDecl 0x2c5d3140 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5d31b0 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5d3220 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5d32b0 <line:52:1, col:18> col:18 referenced __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x2c5d3280 '__int8_t' sugar
|   |-Typedef 0x2c5d2f10 '__int8_t'
|   `-BuiltinType 0x2c4de420 'signed char'
|-TypedefDecl 0x2c5d3340 <line:53:1, col:19> col:19 referenced __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x2c5d3310 '__uint8_t' sugar
|   |-Typedef 0x2c5d2f80 '__uint8_t'
|   `-BuiltinType 0x2c4de4c0 'unsigned char'
|-TypedefDecl 0x2c5d33d0 <line:54:1, col:19> col:19 referenced __int_least16_t '__int16_t':'short'
| `-TypedefType 0x2c5d33a0 '__int16_t' sugar
|   |-Typedef 0x2c5d2ff0 '__int16_t'
|   `-BuiltinType 0x2c4de440 'short'
|-TypedefDecl 0x2c5d3460 <line:55:1, col:20> col:20 referenced __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x2c5d3430 '__uint16_t' sugar
|   |-Typedef 0x2c5d3060 '__uint16_t'
|   `-BuiltinType 0x2c4de4e0 'unsigned short'
|-TypedefDecl 0x2c5d34f0 <line:56:1, col:19> col:19 referenced __int_least32_t '__int32_t':'int'
| `-TypedefType 0x2c5d34c0 '__int32_t' sugar
|   |-Typedef 0x2c5d30d0 '__int32_t'
|   `-BuiltinType 0x2c4de460 'int'
|-TypedefDecl 0x2c5d3580 <line:57:1, col:20> col:20 referenced __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x2c5d3550 '__uint32_t' sugar
|   |-Typedef 0x2c5d3140 '__uint32_t'
|   `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5d3610 <line:58:1, col:19> col:19 referenced __int_least64_t '__int64_t':'long'
| `-TypedefType 0x2c5d35e0 '__int64_t' sugar
|   |-Typedef 0x2c5d31b0 '__int64_t'
|   `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5d36a0 <line:59:1, col:20> col:20 referenced __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x2c5d3670 '__uint64_t' sugar
|   |-Typedef 0x2c5d3220 '__uint64_t'
|   `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5d3710 <line:63:1, col:18> col:18 __quad_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5d3780 <line:64:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5d37f0 <line:72:1, col:18> col:18 referenced __intmax_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5d3860 <line:73:1, col:27> col:27 referenced __uintmax_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5d38d0 <line:137:22, line:145:25> col:25 __dev_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5d3940 <line:137:22, line:146:25> col:25 __uid_t 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5d39b0 <line:137:22, line:147:25> col:25 __gid_t 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5d3a20 <line:137:22, line:148:25> col:25 __ino_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5d3a90 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5d3b00 <line:137:22, line:150:26> col:26 __mode_t 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5d3b70 <line:137:22, line:151:27> col:27 __nlink_t 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5d3be0 <line:137:22, line:152:25> col:25 __off_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5d3c50 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5d3cc0 <line:137:22, line:154:25> col:25 __pid_t 'int'
| `-BuiltinType 0x2c4de460 'int'
|-RecordDecl 0x2c5d3d18 </usr/include/aarch64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0x2c5dce70 <col:33, col:44> col:37 __val 'int[2]'
|-TypedefDecl 0x2c5dcf18 </usr/include/aarch64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x2c5dcec0 'struct __fsid_t' sugar
|   `-RecordType 0x2c5d3da0 '__fsid_t'
|     `-Record 0x2c5d3d18 ''
|-TypedefDecl 0x2c5dcfa0 <line:137:22, line:156:27> col:27 __clock_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dd010 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5dd080 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5dd0f0 <line:137:22, line:159:24> col:24 __id_t 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5dd160 <line:137:22, line:160:26> col:26 __time_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dd1d0 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5dd240 <line:137:22, line:162:31> col:31 __suseconds_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dd2b0 <line:137:22, line:163:33> col:33 __suseconds64_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dd320 <line:137:22, line:165:27> col:27 __daddr_t 'int'
| `-BuiltinType 0x2c4de460 'int'
|-TypedefDecl 0x2c5dd390 <line:137:22, line:166:25> col:25 __key_t 'int'
| `-BuiltinType 0x2c4de460 'int'
|-TypedefDecl 0x2c5dd400 <line:137:22, line:169:29> col:29 __clockid_t 'int'
| `-BuiltinType 0x2c4de460 'int'
|-TypedefDecl 0x2c5dd470 <line:137:22, line:172:27> col:27 __timer_t 'void *'
| `-PointerType 0x2c4df100 'void *'
|   `-BuiltinType 0x2c4de3c0 'void'
|-TypedefDecl 0x2c5dd4e0 <line:137:22, line:175:29> col:29 __blksize_t 'int'
| `-BuiltinType 0x2c4de460 'int'
|-TypedefDecl 0x2c5dd550 <line:137:22, line:180:28> col:28 __blkcnt_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dd5c0 <line:137:22, line:181:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dd630 <line:137:22, line:184:30> col:30 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5dd6a0 <line:137:22, line:185:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5dd710 <line:137:22, line:188:30> col:30 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5dd780 <line:137:22, line:189:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5dd7f0 <line:137:22, line:192:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dd860 <line:137:22, line:194:27> col:27 __ssize_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dd8d0 <line:137:22, line:197:33> col:33 __syscall_slong_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dd940 <line:137:22, line:199:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5dd9d0 <line:203:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x2c5dd9a0 '__off64_t' sugar
|   |-Typedef 0x2c5d3c50 '__off64_t'
|   `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5dda40 <line:204:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x2c582440 'char *'
|   `-BuiltinType 0x2c4de400 'char'
|-TypedefDecl 0x2c5ddab0 <line:137:22, line:207:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5ddb20 <line:137:22, line:210:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5ddb90 <line:215:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x2c4de460 'int'
|-TypedefDecl 0x2c5ddbf8 </usr/include/aarch64-linux-gnu/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| `-TypedefType 0x2c5d3280 '__int8_t' sugar
|   |-Typedef 0x2c5d2f10 '__int8_t'
|   `-BuiltinType 0x2c4de420 'signed char'
|-TypedefDecl 0x2c5ddc60 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| `-TypedefType 0x2c5d33a0 '__int16_t' sugar
|   |-Typedef 0x2c5d2ff0 '__int16_t'
|   `-BuiltinType 0x2c4de440 'short'
|-TypedefDecl 0x2c5ddcc8 <line:26:1, col:19> col:19 int32_t '__int32_t':'int'
| `-TypedefType 0x2c5d34c0 '__int32_t' sugar
|   |-Typedef 0x2c5d30d0 '__int32_t'
|   `-BuiltinType 0x2c4de460 'int'
|-TypedefDecl 0x2c5ddd30 <line:27:1, col:19> col:19 int64_t '__int64_t':'long'
| `-TypedefType 0x2c5d35e0 '__int64_t' sugar
|   |-Typedef 0x2c5d31b0 '__int64_t'
|   `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5e0ec0 </usr/include/aarch64-linux-gnu/bits/stdint-uintn.h:24:1, col:19> col:19 uint8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x2c5d3310 '__uint8_t' sugar
|   |-Typedef 0x2c5d2f80 '__uint8_t'
|   `-BuiltinType 0x2c4de4c0 'unsigned char'
|-TypedefDecl 0x2c5e0f28 <line:25:1, col:20> col:20 uint16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x2c5d3430 '__uint16_t' sugar
|   |-Typedef 0x2c5d3060 '__uint16_t'
|   `-BuiltinType 0x2c4de4e0 'unsigned short'
|-TypedefDecl 0x2c5e0f90 <line:26:1, col:20> col:20 uint32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x2c5d3550 '__uint32_t' sugar
|   |-Typedef 0x2c5d3140 '__uint32_t'
|   `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5e0ff8 <line:27:1, col:20> col:20 uint64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x2c5d3670 '__uint64_t' sugar
|   |-Typedef 0x2c5d3220 '__uint64_t'
|   `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5e1080 </usr/include/stdint.h:43:1, col:24> col:24 int_least8_t '__int_least8_t':'signed char'
| `-TypedefType 0x2c5e1050 '__int_least8_t' sugar
|   |-Typedef 0x2c5d32b0 '__int_least8_t'
|   `-TypedefType 0x2c5d3280 '__int8_t' sugar
|     |-Typedef 0x2c5d2f10 '__int8_t'
|     `-BuiltinType 0x2c4de420 'signed char'
|-TypedefDecl 0x2c5e1110 <line:44:1, col:25> col:25 int_least16_t '__int_least16_t':'short'
| `-TypedefType 0x2c5e10e0 '__int_least16_t' sugar
|   |-Typedef 0x2c5d33d0 '__int_least16_t'
|   `-TypedefType 0x2c5d33a0 '__int16_t' sugar
|     |-Typedef 0x2c5d2ff0 '__int16_t'
|     `-BuiltinType 0x2c4de440 'short'
|-TypedefDecl 0x2c5e11a0 <line:45:1, col:25> col:25 int_least32_t '__int_least32_t':'int'
| `-TypedefType 0x2c5e1170 '__int_least32_t' sugar
|   |-Typedef 0x2c5d34f0 '__int_least32_t'
|   `-TypedefType 0x2c5d34c0 '__int32_t' sugar
|     |-Typedef 0x2c5d30d0 '__int32_t'
|     `-BuiltinType 0x2c4de460 'int'
|-TypedefDecl 0x2c5e1230 <line:46:1, col:25> col:25 int_least64_t '__int_least64_t':'long'
| `-TypedefType 0x2c5e1200 '__int_least64_t' sugar
|   |-Typedef 0x2c5d3610 '__int_least64_t'
|   `-TypedefType 0x2c5d35e0 '__int64_t' sugar
|     |-Typedef 0x2c5d31b0 '__int64_t'
|     `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5e12c0 <line:49:1, col:25> col:25 uint_least8_t '__uint_least8_t':'unsigned char'
| `-TypedefType 0x2c5e1290 '__uint_least8_t' sugar
|   |-Typedef 0x2c5d3340 '__uint_least8_t'
|   `-TypedefType 0x2c5d3310 '__uint8_t' sugar
|     |-Typedef 0x2c5d2f80 '__uint8_t'
|     `-BuiltinType 0x2c4de4c0 'unsigned char'
|-TypedefDecl 0x2c5e1350 <line:50:1, col:26> col:26 uint_least16_t '__uint_least16_t':'unsigned short'
| `-TypedefType 0x2c5e1320 '__uint_least16_t' sugar
|   |-Typedef 0x2c5d3460 '__uint_least16_t'
|   `-TypedefType 0x2c5d3430 '__uint16_t' sugar
|     |-Typedef 0x2c5d3060 '__uint16_t'
|     `-BuiltinType 0x2c4de4e0 'unsigned short'
|-TypedefDecl 0x2c5e13e0 <line:51:1, col:26> col:26 uint_least32_t '__uint_least32_t':'unsigned int'
| `-TypedefType 0x2c5e13b0 '__uint_least32_t' sugar
|   |-Typedef 0x2c5d3580 '__uint_least32_t'
|   `-TypedefType 0x2c5d3550 '__uint32_t' sugar
|     |-Typedef 0x2c5d3140 '__uint32_t'
|     `-BuiltinType 0x2c4de500 'unsigned int'
|-TypedefDecl 0x2c5e1470 <line:52:1, col:26> col:26 uint_least64_t '__uint_least64_t':'unsigned long'
| `-TypedefType 0x2c5e1440 '__uint_least64_t' sugar
|   |-Typedef 0x2c5d36a0 '__uint_least64_t'
|   `-TypedefType 0x2c5d3670 '__uint64_t' sugar
|     |-Typedef 0x2c5d3220 '__uint64_t'
|     `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5e14e0 <line:58:1, col:22> col:22 int_fast8_t 'signed char'
| `-BuiltinType 0x2c4de420 'signed char'
|-TypedefDecl 0x2c5e1550 <line:60:1, col:19> col:19 int_fast16_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5e15c0 <line:61:1, col:19> col:19 int_fast32_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5e1630 <line:62:1, col:19> col:19 int_fast64_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5e16a0 <line:71:1, col:24> col:24 uint_fast8_t 'unsigned char'
| `-BuiltinType 0x2c4de4c0 'unsigned char'
|-TypedefDecl 0x2c5e1710 <line:73:1, col:27> col:27 uint_fast16_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5e1780 <line:74:1, col:27> col:27 uint_fast32_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5e17f0 <line:75:1, col:27> col:27 uint_fast64_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5e1860 <line:87:1, col:19> col:19 intptr_t 'long'
| `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5e18d0 <line:90:1, col:27> col:27 uintptr_t 'unsigned long'
| `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5e1960 <line:101:1, col:21> col:21 intmax_t '__intmax_t':'long'
| `-TypedefType 0x2c5e1930 '__intmax_t' sugar
|   |-Typedef 0x2c5d37f0 '__intmax_t'
|   `-BuiltinType 0x2c4de480 'long'
|-TypedefDecl 0x2c5e19f0 <line:102:1, col:22> col:22 uintmax_t '__uintmax_t':'unsigned long'
| `-TypedefType 0x2c5e19c0 '__uintmax_t' sugar
|   |-Typedef 0x2c5d3860 '__uintmax_t'
|   `-BuiltinType 0x2c4de520 'unsigned long'
|-TypedefDecl 0x2c5e1af0 </home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjtnum.h:22:3, col:18> col:18 referenced mjtNum 'double'
| `-BuiltinType 0x2c4de580 'double'
|-TypedefDecl 0x2c5e1c20 <line:41:1, col:23> col:23 referenced mjtByte 'unsigned char'
| |-BuiltinType 0x2c4de4c0 'unsigned char'
| `-FullComment 0x2c62d180 <line:39:3, col:100>
|   `-ParagraphComment 0x2c62d150 <col:3, col:100>
|     `-TextComment 0x2c62d120 <col:3, col:100> Text="-------------------------------------- byte definition -------------------------------------------"
|-EnumDecl 0x2c5e9e98 </home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:48:9, line:67:1> line:48:14 mjtDisableBit_
| |-FullComment 0x2c62d250 <line:46:3, col:100>
| | `-ParagraphComment 0x2c62d220 <col:3, col:100>
| |   `-TextComment 0x2c62d1f0 <col:3, col:100> Text="---------------------------------- enum types (mjt) ----------------------------------------------"
| |-EnumConstantDecl 0x2c5ea008 <line:49:3, col:28> col:3 mjDSBL_CONSTRAINT 'int'
| | |-ConstantExpr 0x2c5e9fe8 <col:25, col:28> 'int'
| | | |-value: Int 1
| | | `-BinaryOperator 0x2c5e9fc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5e9f88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5e9fa8 <col:28> 'int' 0
| | `-FullComment 0x2c62d320 <col:37, col:61>
| |   `-ParagraphComment 0x2c62d2f0 <col:37, col:61>
| |     `-TextComment 0x2c62d2c0 <col:37, col:61> Text=" entire constraint solver"
| |-EnumConstantDecl 0x2c5ea108 <line:50:3, col:28> col:3 mjDSBL_EQUALITY 'int'
| | |-ConstantExpr 0x2c5ea0e8 <col:25, col:28> 'int'
| | | |-value: Int 2
| | | `-BinaryOperator 0x2c5ea0c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea088 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea0a8 <col:28> 'int' 1
| | `-FullComment 0x2c62d3f0 <col:37, col:57>
| |   `-ParagraphComment 0x2c62d3c0 <col:37, col:57>
| |     `-TextComment 0x2c62d390 <col:37, col:57> Text=" equality constraints"
| |-EnumConstantDecl 0x2c5ea208 <line:51:3, col:28> col:3 mjDSBL_FRICTIONLOSS 'int'
| | |-ConstantExpr 0x2c5ea1e8 <col:25, col:28> 'int'
| | | |-value: Int 4
| | | `-BinaryOperator 0x2c5ea1c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea188 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea1a8 <col:28> 'int' 2
| | `-FullComment 0x2c62d4c0 <col:37, col:78>
| |   `-ParagraphComment 0x2c62d490 <col:37, col:78>
| |     `-TextComment 0x2c62d460 <col:37, col:78> Text=" joint and tendon frictionloss constraints"
| |-EnumConstantDecl 0x2c5ea308 <line:52:3, col:28> col:3 mjDSBL_LIMIT 'int'
| | |-ConstantExpr 0x2c5ea2e8 <col:25, col:28> 'int'
| | | |-value: Int 8
| | | `-BinaryOperator 0x2c5ea2c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea288 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea2a8 <col:28> 'int' 3
| | `-FullComment 0x2c62d590 <col:37, col:71>
| |   `-ParagraphComment 0x2c62d560 <col:37, col:71>
| |     `-TextComment 0x2c62d530 <col:37, col:71> Text=" joint and tendon limit constraints"
| |-EnumConstantDecl 0x2c5ea408 <line:53:3, col:28> col:3 mjDSBL_CONTACT 'int'
| | |-ConstantExpr 0x2c5ea3e8 <col:25, col:28> 'int'
| | | |-value: Int 16
| | | `-BinaryOperator 0x2c5ea3c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea388 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea3a8 <col:28> 'int' 4
| | `-FullComment 0x2c6300f0 <col:37, col:56>
| |   `-ParagraphComment 0x2c62d630 <col:37, col:56>
| |     `-TextComment 0x2c62d600 <col:37, col:56> Text=" contact constraints"
| |-EnumConstantDecl 0x2c5ea508 <line:54:3, col:28> col:3 mjDSBL_PASSIVE 'int'
| | |-ConstantExpr 0x2c5ea4e8 <col:25, col:28> 'int'
| | | |-value: Int 32
| | | `-BinaryOperator 0x2c5ea4c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea488 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea4a8 <col:28> 'int' 5
| | `-FullComment 0x2c6301c0 <col:37, col:51>
| |   `-ParagraphComment 0x2c630190 <col:37, col:51>
| |     `-TextComment 0x2c630160 <col:37, col:51> Text=" passive forces"
| |-EnumConstantDecl 0x2c5ea608 <line:55:3, col:28> col:3 mjDSBL_GRAVITY 'int'
| | |-ConstantExpr 0x2c5ea5e8 <col:25, col:28> 'int'
| | | |-value: Int 64
| | | `-BinaryOperator 0x2c5ea5c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea588 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea5a8 <col:28> 'int' 6
| | `-FullComment 0x2c630290 <col:37, col:57>
| |   `-ParagraphComment 0x2c630260 <col:37, col:57>
| |     `-TextComment 0x2c630230 <col:37, col:57> Text=" gravitational forces"
| |-EnumConstantDecl 0x2c5ea708 <line:56:3, col:28> col:3 mjDSBL_CLAMPCTRL 'int'
| | |-ConstantExpr 0x2c5ea6e8 <col:25, col:28> 'int'
| | | |-value: Int 128
| | | `-BinaryOperator 0x2c5ea6c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea688 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea6a8 <col:28> 'int' 7
| | `-FullComment 0x2c630360 <col:37, col:69>
| |   `-ParagraphComment 0x2c630330 <col:37, col:69>
| |     `-TextComment 0x2c630300 <col:37, col:69> Text=" clamp control to specified range"
| |-EnumConstantDecl 0x2c5ea808 <line:57:3, col:28> col:3 mjDSBL_WARMSTART 'int'
| | |-ConstantExpr 0x2c5ea7e8 <col:25, col:28> 'int'
| | | |-value: Int 256
| | | `-BinaryOperator 0x2c5ea7c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea788 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea7a8 <col:28> 'int' 8
| | `-FullComment 0x2c630430 <col:37, col:64>
| |   `-ParagraphComment 0x2c630400 <col:37, col:64>
| |     `-TextComment 0x2c6303d0 <col:37, col:64> Text=" warmstart constraint solver"
| |-EnumConstantDecl 0x2c5ea908 <line:58:3, col:28> col:3 mjDSBL_FILTERPARENT 'int'
| | |-ConstantExpr 0x2c5ea8e8 <col:25, col:28> 'int'
| | | |-value: Int 512
| | | `-BinaryOperator 0x2c5ea8c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea888 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea8a8 <col:28> 'int' 9
| | `-FullComment 0x2c630500 <col:37, col:71>
| |   `-ParagraphComment 0x2c6304d0 <col:37, col:71>
| |     `-TextComment 0x2c6304a0 <col:37, col:71> Text=" remove collisions with parent body"
| |-EnumConstantDecl 0x2c5eaa08 <line:59:3, col:28> col:3 mjDSBL_ACTUATION 'int'
| | |-ConstantExpr 0x2c5ea9e8 <col:25, col:28> 'int'
| | | |-value: Int 1024
| | | `-BinaryOperator 0x2c5ea9c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ea988 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ea9a8 <col:28> 'int' 10
| | `-FullComment 0x2c6305d0 <col:37, col:59>
| |   `-ParagraphComment 0x2c6305a0 <col:37, col:59>
| |     `-TextComment 0x2c630570 <col:37, col:59> Text=" apply actuation forces"
| |-EnumConstantDecl 0x2c5eab08 <line:60:3, col:28> col:3 mjDSBL_REFSAFE 'int'
| | |-ConstantExpr 0x2c5eaae8 <col:25, col:28> 'int'
| | | |-value: Int 2048
| | | `-BinaryOperator 0x2c5eaac8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5eaa88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5eaaa8 <col:28> 'int' 11
| | `-FullComment 0x2c6306a0 <col:37, col:79>
| |   `-ParagraphComment 0x2c630670 <col:37, col:79>
| |     `-TextComment 0x2c630640 <col:37, col:79> Text=" integrator safety: make ref[0]>=2*timestep"
| |-EnumConstantDecl 0x2c5eac08 <line:61:3, col:28> col:3 mjDSBL_SENSOR 'int'
| | |-ConstantExpr 0x2c5eabe8 <col:25, col:28> 'int'
| | | |-value: Int 4096
| | | `-BinaryOperator 0x2c5eabc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5eab88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5eaba8 <col:28> 'int' 12
| | `-FullComment 0x2c630770 <col:37, col:44>
| |   `-ParagraphComment 0x2c630740 <col:37, col:44>
| |     `-TextComment 0x2c630710 <col:37, col:44> Text=" sensors"
| |-EnumConstantDecl 0x2c5ede70 <line:62:3, col:28> col:3 mjDSBL_MIDPHASE 'int'
| | |-ConstantExpr 0x2c5eace8 <col:25, col:28> 'int'
| | | |-value: Int 8192
| | | `-BinaryOperator 0x2c5eacc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5eac88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5eaca8 <col:28> 'int' 13
| | `-FullComment 0x2c630840 <col:37, col:66>
| |   `-ParagraphComment 0x2c630810 <col:37, col:66>
| |     `-TextComment 0x2c6307e0 <col:37, col:66> Text=" mid-phase collision filtering"
| |-EnumConstantDecl 0x2c5edf68 <line:63:3, col:28> col:3 mjDSBL_EULERDAMP 'int'
| | |-ConstantExpr 0x2c5edf48 <col:25, col:28> 'int'
| | | |-value: Int 16384
| | | `-BinaryOperator 0x2c5edf28 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5edee8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5edf08 <col:28> 'int' 14
| | `-FullComment 0x2c630910 <col:37, col:94>
| |   `-ParagraphComment 0x2c6308e0 <col:37, col:94>
| |     `-TextComment 0x2c6308b0 <col:37, col:94> Text=" implicit integration of joint damping in Euler integrator"
| |-EnumConstantDecl 0x2c5ee068 <line:64:3, col:28> col:3 mjDSBL_AUTORESET 'int'
| | |-ConstantExpr 0x2c5ee048 <col:25, col:28> 'int'
| | | |-value: Int 32768
| | | `-BinaryOperator 0x2c5ee028 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5edfe8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ee008 <col:28> 'int' 15
| | `-FullComment 0x2c6309e0 <col:37, col:87>
| |   `-ParagraphComment 0x2c6309b0 <col:37, col:87>
| |     `-TextComment 0x2c630980 <col:37, col:87> Text=" automatic reset when numerical issues are detected"
| `-EnumConstantDecl 0x2c5ee158 <line:66:3, col:25> col:3 mjNDISABLE 'int'
|   |-ConstantExpr 0x2c5ee138 <col:25> 'int'
|   | |-value: Int 16
|   | `-IntegerLiteral 0x2c5ee0e8 <col:25> 'int' 16
|   `-FullComment 0x2c630ab0 <col:37, col:60>
|     `-ParagraphComment 0x2c630a80 <col:37, col:60>
|       `-TextComment 0x2c630a50 <col:37, col:60> Text=" number of disable flags"
|-TypedefDecl 0x2c5ee208 <line:48:1, line:67:3> col:3 mjtDisableBit 'enum mjtDisableBit_':'enum mjtDisableBit_'
| |-ElaboratedType 0x2c5ee1b0 'enum mjtDisableBit_' sugar
| | `-EnumType 0x2c5e9f40 'enum mjtDisableBit_'
| |   `-Enum 0x2c5e9e98 'mjtDisableBit_'
| `-FullComment 0x2c630b80 <line:46:3, col:100>
|   `-ParagraphComment 0x2c630b50 <col:3, col:100>
|     `-TextComment 0x2c630b20 <col:3, col:100> Text="---------------------------------- enum types (mjt) ----------------------------------------------"
|-EnumDecl 0x2c5ee278 <line:70:9, line:81:1> line:70:14 mjtEnableBit_
| |-EnumConstantDecl 0x2c5ee3e8 <line:71:3, col:28> col:3 mjENBL_OVERRIDE 'int'
| | |-ConstantExpr 0x2c5ee3c8 <col:25, col:28> 'int'
| | | |-value: Int 1
| | | `-BinaryOperator 0x2c5ee3a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ee368 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ee388 <col:28> 'int' 0
| | `-FullComment 0x2c630c50 <col:37, col:64>
| |   `-ParagraphComment 0x2c630c20 <col:37, col:64>
| |     `-TextComment 0x2c630bf0 <col:37, col:64> Text=" override contact parameters"
| |-EnumConstantDecl 0x2c5ee4e8 <line:72:3, col:28> col:3 mjENBL_ENERGY 'int'
| | |-ConstantExpr 0x2c5ee4c8 <col:25, col:28> 'int'
| | | |-value: Int 2
| | | `-BinaryOperator 0x2c5ee4a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ee468 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ee488 <col:28> 'int' 1
| | `-FullComment 0x2c630d20 <col:37, col:55>
| |   `-ParagraphComment 0x2c630cf0 <col:37, col:55>
| |     `-TextComment 0x2c630cc0 <col:37, col:55> Text=" energy computation"
| |-EnumConstantDecl 0x2c5ee5e8 <line:73:3, col:28> col:3 mjENBL_FWDINV 'int'
| | |-ConstantExpr 0x2c5ee5c8 <col:25, col:28> 'int'
| | | |-value: Int 4
| | | `-BinaryOperator 0x2c5ee5a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ee568 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ee588 <col:28> 'int' 2
| | `-FullComment 0x2c630df0 <col:37, col:61>
| |   `-ParagraphComment 0x2c630dc0 <col:37, col:61>
| |     `-TextComment 0x2c630d90 <col:37, col:61> Text=" record solver statistics"
| |-EnumConstantDecl 0x2c5ee6e8 <line:74:3, col:28> col:3 mjENBL_INVDISCRETE 'int'
| | |-ConstantExpr 0x2c5ee6c8 <col:25, col:28> 'int'
| | | |-value: Int 8
| | | `-BinaryOperator 0x2c5ee6a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ee668 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ee688 <col:28> 'int' 3
| | `-FullComment 0x2c630ee0 <col:37, line:75:59>
| |   `-ParagraphComment 0x2c630eb0 <line:74:37, line:75:59>
| |     |-TextComment 0x2c630e60 <line:74:37, col:67> Text=" discrete-time inverse dynamics"
| |     `-TextComment 0x2c630e80 <line:75:37, col:59> Text=" experimental features:"
| |-EnumConstantDecl 0x2c5ee7e8 <line:76:3, col:28> col:3 mjENBL_MULTICCD 'int'
| | |-ConstantExpr 0x2c5ee7c8 <col:25, col:28> 'int'
| | | |-value: Int 16
| | | `-BinaryOperator 0x2c5ee7a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ee768 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ee788 <col:28> 'int' 4
| | `-FullComment 0x2c630fb0 <col:37, col:75>
| |   `-ParagraphComment 0x2c630f80 <col:37, col:75>
| |     `-TextComment 0x2c630f50 <col:37, col:75> Text=" multi-point convex collision detection"
| |-EnumConstantDecl 0x2c5ee8e8 <line:77:3, col:28> col:3 mjENBL_ISLAND 'int'
| | |-ConstantExpr 0x2c5ee8c8 <col:25, col:28> 'int'
| | | |-value: Int 32
| | | `-BinaryOperator 0x2c5ee8a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ee868 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ee888 <col:28> 'int' 5
| | `-FullComment 0x2c631080 <col:37, col:64>
| |   `-ParagraphComment 0x2c631050 <col:37, col:64>
| |     `-TextComment 0x2c631020 <col:37, col:64> Text=" constraint island discovery"
| |-EnumConstantDecl 0x2c5ee9e8 <line:78:3, col:28> col:3 mjENBL_NATIVECCD 'int'
| | |-ConstantExpr 0x2c5ee9c8 <col:25, col:28> 'int'
| | | |-value: Int 64
| | | `-BinaryOperator 0x2c5ee9a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2c5ee968 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2c5ee988 <col:28> 'int' 6
| | `-FullComment 0x2c6311e0 <col:37, col:70>
| |   `-ParagraphComment 0x2c6311b0 <col:37, col:70>
| |     `-TextComment 0x2c631180 <col:37, col:70> Text=" native convex collision detection"
| `-EnumConstantDecl 0x2c5eead8 <line:80:3, col:25> col:3 mjNENABLE 'int'
|   |-ConstantExpr 0x2c5eeab8 <col:25> 'int'
|   | |-value: Int 7
|   | `-IntegerLiteral 0x2c5eea68 <col:25> 'int' 7
|   `-FullComment 0x2c6312b0 <col:37, col:59>
|     `-ParagraphComment 0x2c631280 <col:37, col:59>
|       `-TextComment 0x2c631250 <col:37, col:59> Text=" number of enable flags"
|-TypedefDecl 0x2c5eeb88 <line:70:1, line:81:3> col:3 mjtEnableBit 'enum mjtEnableBit_':'enum mjtEnableBit_'
| `-ElaboratedType 0x2c5eeb30 'enum mjtEnableBit_' sugar
|   `-EnumType 0x2c5ee320 'enum mjtEnableBit_'
|     `-Enum 0x2c5ee278 'mjtEnableBit_'
|-EnumDecl 0x2c5eebf8 <line:84:9, line:89:1> line:84:14 mjtJoint_
| |-EnumConstantDecl 0x2c5eed28 <line:85:3, col:25> col:3 mjJNT_FREE 'int'
| | |-ConstantExpr 0x2c5eed08 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5eece8 <col:25> 'int' 0
| | `-FullComment 0x2c631380 <col:37, col:85>
| |   `-ParagraphComment 0x2c631350 <col:37, col:85>
| |     `-TextComment 0x2c631320 <col:37, col:85> Text=" global position and orientation (quat)       (7)"
| |-EnumConstantDecl 0x2c5eeda8 <line:86:3> col:3 mjJNT_BALL 'int'
| | `-FullComment 0x2c631450 <col:37, col:85>
| |   `-ParagraphComment 0x2c631420 <col:37, col:85>
| |     `-TextComment 0x2c6313f0 <col:37, col:85> Text=" orientation (quat) relative to parent        (4)"
| |-EnumConstantDecl 0x2c5eee80 <line:87:3> col:3 mjJNT_SLIDE 'int'
| | `-FullComment 0x2c631520 <col:37, col:85>
| |   `-ParagraphComment 0x2c6314f0 <col:37, col:85>
| |     `-TextComment 0x2c6314c0 <col:37, col:85> Text=" sliding distance along body-fixed axis       (1)"
| `-EnumConstantDecl 0x2c5eef28 <line:88:3> col:3 mjJNT_HINGE 'int'
|   `-FullComment 0x2c6315f0 <col:37, col:85>
|     `-ParagraphComment 0x2c6315c0 <col:37, col:85>
|       `-TextComment 0x2c631590 <col:37, col:85> Text=" rotation angle (rad) around body-fixed axis  (1)"
|-TypedefDecl 0x2c5eefd8 <line:84:1, line:89:3> col:3 mjtJoint 'enum mjtJoint_':'enum mjtJoint_'
| `-ElaboratedType 0x2c5eef80 'enum mjtJoint_' sugar
|   `-EnumType 0x2c5eeca0 'enum mjtJoint_'
|     `-Enum 0x2c5eebf8 'mjtJoint_'
|-EnumDecl 0x2c5ef048 <line:92:9, line:118:1> line:92:14 mjtGeom_
| |-EnumConstantDecl 0x2c5ef1a8 <line:94:3, col:25> col:3 mjGEOM_PLANE 'int'
| | |-ConstantExpr 0x2c5ef188 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5ef168 <col:25> 'int' 0
| | `-FullComment 0x2c6316c0 <col:37, col:42>
| |   `-ParagraphComment 0x2c631690 <col:37, col:42>
| |     `-TextComment 0x2c631660 <col:37, col:42> Text=" plane"
| |-EnumConstantDecl 0x2c5ef228 <line:95:3> col:3 mjGEOM_HFIELD 'int'
| | `-FullComment 0x2c631790 <col:37, col:49>
| |   `-ParagraphComment 0x2c631760 <col:37, col:49>
| |     `-TextComment 0x2c631730 <col:37, col:49> Text=" height field"
| |-EnumConstantDecl 0x2c5ef2a8 <line:96:3> col:3 mjGEOM_SPHERE 'int'
| | `-FullComment 0x2c631860 <col:37, col:43>
| |   `-ParagraphComment 0x2c631830 <col:37, col:43>
| |     `-TextComment 0x2c631800 <col:37, col:43> Text=" sphere"
| |-EnumConstantDecl 0x2c5ef328 <line:97:3> col:3 mjGEOM_CAPSULE 'int'
| | `-FullComment 0x2c631930 <col:37, col:44>
| |   `-ParagraphComment 0x2c631900 <col:37, col:44>
| |     `-TextComment 0x2c6318d0 <col:37, col:44> Text=" capsule"
| |-EnumConstantDecl 0x2c5ef3a8 <line:98:3> col:3 mjGEOM_ELLIPSOID 'int'
| | `-FullComment 0x2c631a00 <col:37, col:46>
| |   `-ParagraphComment 0x2c6319d0 <col:37, col:46>
| |     `-TextComment 0x2c6319a0 <col:37, col:46> Text=" ellipsoid"
| |-EnumConstantDecl 0x2c5ef428 <line:99:3> col:3 mjGEOM_CYLINDER 'int'
| | `-FullComment 0x2c631ad0 <col:37, col:45>
| |   `-ParagraphComment 0x2c631aa0 <col:37, col:45>
| |     `-TextComment 0x2c631a70 <col:37, col:45> Text=" cylinder"
| |-EnumConstantDecl 0x2c5ef4a8 <line:100:3> col:3 mjGEOM_BOX 'int'
| | `-FullComment 0x2c631ba0 <col:37, col:40>
| |   `-ParagraphComment 0x2c631b70 <col:37, col:40>
| |     `-TextComment 0x2c631b40 <col:37, col:40> Text=" box"
| |-EnumConstantDecl 0x2c5ef528 <line:101:3> col:3 mjGEOM_MESH 'int'
| | `-FullComment 0x2c631c70 <col:37, col:41>
| |   `-ParagraphComment 0x2c631c40 <col:37, col:41>
| |     `-TextComment 0x2c631c10 <col:37, col:41> Text=" mesh"
| |-EnumConstantDecl 0x2c5ef5a8 <line:102:3> col:3 mjGEOM_SDF 'int'
| | `-FullComment 0x2c631d40 <col:37, col:58>
| |   `-ParagraphComment 0x2c631d10 <col:37, col:58>
| |     `-TextComment 0x2c631ce0 <col:37, col:58> Text=" signed distance field"
| |-EnumConstantDecl 0x2c5ef628 <line:104:3> col:3 mjNGEOMTYPES 'int'
| | `-FullComment 0x2c631e10 <col:37, col:65>
| |   `-ParagraphComment 0x2c631de0 <col:37, col:65>
| |     `-TextComment 0x2c631db0 <col:37, col:65> Text=" number of regular geom types"
| |-EnumConstantDecl 0x2c5ef718 <line:107:3, col:25> col:3 mjGEOM_ARROW 'int'
| | |-ConstantExpr 0x2c5ef6f8 <col:25> 'int'
| | | |-value: Int 100
| | | `-IntegerLiteral 0x2c5ef6d8 <col:25> 'int' 100
| | `-FullComment 0x2c631ee0 <col:37, col:42>
| |   `-ParagraphComment 0x2c631eb0 <col:37, col:42>
| |     `-TextComment 0x2c631e80 <col:37, col:42> Text=" arrow"
| |-EnumConstantDecl 0x2c5ef798 <line:108:3> col:3 mjGEOM_ARROW1 'int'
| | `-FullComment 0x2c631fb0 <col:37, col:57>
| |   `-ParagraphComment 0x2c631f80 <col:37, col:57>
| |     `-TextComment 0x2c631f50 <col:37, col:57> Text=" arrow without wedges"
| |-EnumConstantDecl 0x2c5ef818 <line:109:3> col:3 mjGEOM_ARROW2 'int'
| | `-FullComment 0x2c632080 <col:37, col:61>
| |   `-ParagraphComment 0x2c632050 <col:37, col:61>
| |     `-TextComment 0x2c632020 <col:37, col:61> Text=" arrow in both directions"
| |-EnumConstantDecl 0x2c5ef898 <line:110:3> col:3 mjGEOM_LINE 'int'
| | `-FullComment 0x2c632160 <col:37, col:41>
| |   `-ParagraphComment 0x2c632120 <col:37, col:41>
| |     `-TextComment 0x2c6320f0 <col:37, col:41> Text=" line"
| |-EnumConstantDecl 0x2c5ef918 <line:111:3> col:3 mjGEOM_LINEBOX 'int'
| | `-FullComment 0x2c632230 <col:37, col:56>
| |   `-ParagraphComment 0x2c632200 <col:37, col:56>
| |     `-TextComment 0x2c6321d0 <col:37, col:56> Text=" box with line edges"
| |-EnumConstantDecl 0x2c5ef998 <line:112:3> col:3 mjGEOM_FLEX 'int'
| | `-FullComment 0x2c632300 <col:37, col:41>
| |   `-ParagraphComment 0x2c6322d0 <col:37, col:41>
| |     `-TextComment 0x2c6322a0 <col:37, col:41> Text=" flex"
| |-EnumConstantDecl 0x2c5efa18 <line:113:3> col:3 mjGEOM_SKIN 'int'
| | `-FullComment 0x2c6323d0 <col:37, col:41>
| |   `-ParagraphComment 0x2c6323a0 <col:37, col:41>
| |     `-TextComment 0x2c632370 <col:37, col:41> Text=" skin"
| |-EnumConstantDecl 0x2c5efa98 <line:114:3> col:3 mjGEOM_LABEL 'int'
| | `-FullComment 0x2c6324a0 <col:37, col:47>
| |   `-ParagraphComment 0x2c632470 <col:37, col:47>
| |     `-TextComment 0x2c632440 <col:37, col:47> Text=" text label"
| |-EnumConstantDecl 0x2c5efb18 <line:115:3> col:3 mjGEOM_TRIANGLE 'int'
| | `-FullComment 0x2c632570 <col:37, col:45>
| |   `-ParagraphComment 0x2c632540 <col:37, col:45>
| |     `-TextComment 0x2c632510 <col:37, col:45> Text=" triangle"
| `-EnumConstantDecl 0x2c5efc08 <line:117:3, col:25> col:3 mjGEOM_NONE 'int'
|   |-ConstantExpr 0x2c5efbe8 <col:25> 'int'
|   | |-value: Int 1001
|   | `-IntegerLiteral 0x2c5efb98 <col:25> 'int' 1001
|   `-FullComment 0x2c632640 <col:37, col:54>
|     `-ParagraphComment 0x2c632610 <col:37, col:54>
|       `-TextComment 0x2c6325e0 <col:37, col:54> Text=" missing geom type"
|-TypedefDecl 0x2c5efcb8 <line:92:1, line:118:3> col:3 mjtGeom 'enum mjtGeom_':'enum mjtGeom_'
| `-ElaboratedType 0x2c5efc60 'enum mjtGeom_' sugar
|   `-EnumType 0x2c5ef0f0 'enum mjtGeom_'
|     `-Enum 0x2c5ef048 'mjtGeom_'
|-EnumDecl 0x2c5efd28 <line:121:9, line:127:1> line:121:14 mjtCamLight_
| |-EnumConstantDecl 0x2c5f0ea0 <line:122:3, col:25> col:3 mjCAMLIGHT_FIXED 'int'
| | |-ConstantExpr 0x2c5efe38 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5efe18 <col:25> 'int' 0
| | `-FullComment 0x2c632710 <col:37, col:62>
| |   `-ParagraphComment 0x2c6326e0 <col:37, col:62>
| |     `-TextComment 0x2c6326b0 <col:37, col:62> Text=" pos and rot fixed in body"
| |-EnumConstantDecl 0x2c5f0f18 <line:123:3> col:3 mjCAMLIGHT_TRACK 'int'
| | `-FullComment 0x2c6327e0 <col:37, col:73>
| |   `-ParagraphComment 0x2c6327b0 <col:37, col:73>
| |     `-TextComment 0x2c632780 <col:37, col:73> Text=" pos tracks body, rot fixed in global"
| |-EnumConstantDecl 0x2c5f0f98 <line:124:3> col:3 mjCAMLIGHT_TRACKCOM 'int'
| | `-FullComment 0x2c6328b0 <col:37, col:78>
| |   `-ParagraphComment 0x2c632880 <col:37, col:78>
| |     `-TextComment 0x2c632850 <col:37, col:78> Text=" pos tracks subtree com, rot fixed in body"
| |-EnumConstantDecl 0x2c5f1018 <line:125:3> col:3 mjCAMLIGHT_TARGETBODY 'int'
| | `-FullComment 0x2c632980 <col:37, col:78>
| |   `-ParagraphComment 0x2c632950 <col:37, col:78>
| |     `-TextComment 0x2c632920 <col:37, col:78> Text=" pos fixed in body, rot tracks target body"
| `-EnumConstantDecl 0x2c5f10c8 <line:126:3> col:3 mjCAMLIGHT_TARGETBODYCOM 'int'
|   `-FullComment 0x2c632a50 <col:37, col:85>
|     `-ParagraphComment 0x2c632a20 <col:37, col:85>
|       `-TextComment 0x2c6329f0 <col:37, col:85> Text=" pos fixed in body, rot tracks target subtree com"
|-TypedefDecl 0x2c5f1178 <line:121:1, line:127:3> col:3 mjtCamLight 'enum mjtCamLight_':'enum mjtCamLight_'
| `-ElaboratedType 0x2c5f1120 'enum mjtCamLight_' sugar
|   `-EnumType 0x2c5efdd0 'enum mjtCamLight_'
|     `-Enum 0x2c5efd28 'mjtCamLight_'
|-EnumDecl 0x2c5f11e8 <line:130:9, line:134:1> line:130:14 mjtTexture_
| |-EnumConstantDecl 0x2c5f1318 <line:131:3, col:25> col:3 mjTEXTURE_2D 'int'
| | |-ConstantExpr 0x2c5f12f8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f12d8 <col:25> 'int' 0
| | `-FullComment 0x2c632b20 <col:37, col:80>
| |   `-ParagraphComment 0x2c632af0 <col:37, col:80>
| |     `-TextComment 0x2c632ac0 <col:37, col:80> Text=" 2d texture, suitable for planes and hfields"
| |-EnumConstantDecl 0x2c5f1398 <line:132:3> col:3 mjTEXTURE_CUBE 'int'
| | `-FullComment 0x2c632bf0 <col:37, col:84>
| |   `-ParagraphComment 0x2c632bc0 <col:37, col:84>
| |     `-TextComment 0x2c632b90 <col:37, col:84> Text=" cube texture, suitable for all other geom types"
| `-EnumConstantDecl 0x2c5f1448 <line:133:3> col:3 mjTEXTURE_SKYBOX 'int'
|   `-FullComment 0x2c632cc0 <col:37, col:64>
|     `-ParagraphComment 0x2c632c90 <col:37, col:64>
|       `-TextComment 0x2c632c60 <col:37, col:64> Text=" cube texture used as skybox"
|-TypedefDecl 0x2c5f14f8 <line:130:1, line:134:3> col:3 mjtTexture 'enum mjtTexture_':'enum mjtTexture_'
| `-ElaboratedType 0x2c5f14a0 'enum mjtTexture_' sugar
|   `-EnumType 0x2c5f1290 'enum mjtTexture_'
|     `-Enum 0x2c5f11e8 'mjtTexture_'
|-EnumDecl 0x2c5f1568 <line:137:9, line:149:1> line:137:14 mjtTextureRole_
| |-EnumConstantDecl 0x2c5f1698 <line:138:3, col:25> col:3 mjTEXROLE_USER 'int'
| | |-ConstantExpr 0x2c5f1678 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f1658 <col:25> 'int' 0
| | `-FullComment 0x2c632d90 <col:37, col:48>
| |   `-ParagraphComment 0x2c632d60 <col:37, col:48>
| |     `-TextComment 0x2c632d30 <col:37, col:48> Text=" unspecified"
| |-EnumConstantDecl 0x2c5f1718 <line:139:3> col:3 mjTEXROLE_RGB 'int'
| | `-FullComment 0x2c632e60 <col:37, col:56>
| |   `-ParagraphComment 0x2c632e30 <col:37, col:56>
| |     `-TextComment 0x2c632e00 <col:37, col:56> Text=" base color (albedo)"
| |-EnumConstantDecl 0x2c5f1798 <line:140:3> col:3 mjTEXROLE_OCCLUSION 'int'
| | `-FullComment 0x2c632f30 <col:37, col:54>
| |   `-ParagraphComment 0x2c632f00 <col:37, col:54>
| |     `-TextComment 0x2c632ed0 <col:37, col:54> Text=" ambient occlusion"
| |-EnumConstantDecl 0x2c5f1818 <line:141:3> col:3 mjTEXROLE_ROUGHNESS 'int'
| | `-FullComment 0x2c633000 <col:37, col:46>
| |   `-ParagraphComment 0x2c632fd0 <col:37, col:46>
| |     `-TextComment 0x2c632fa0 <col:37, col:46> Text=" roughness"
| |-EnumConstantDecl 0x2c5f1898 <line:142:3> col:3 mjTEXROLE_METALLIC 'int'
| | `-FullComment 0x2c6330d0 <col:37, col:45>
| |   `-ParagraphComment 0x2c6330a0 <col:37, col:45>
| |     `-TextComment 0x2c633070 <col:37, col:45> Text=" metallic"
| |-EnumConstantDecl 0x2c5f1918 <line:143:3> col:3 mjTEXROLE_NORMAL 'int'
| | `-FullComment 0x2c6339d0 <col:37, col:54>
| |   `-ParagraphComment 0x2c6339a0 <col:37, col:54>
| |     `-TextComment 0x2c633970 <col:37, col:54> Text=" normal (bump) map"
| |-EnumConstantDecl 0x2c5f1998 <line:144:3> col:3 mjTEXROLE_OPACITY 'int'
| | `-FullComment 0x2c633aa0 <col:37, col:49>
| |   `-ParagraphComment 0x2c633a70 <col:37, col:49>
| |     `-TextComment 0x2c633a40 <col:37, col:49> Text=" transperancy"
| |-EnumConstantDecl 0x2c5f1a18 <line:145:3> col:3 mjTEXROLE_EMISSIVE 'int'
| | `-FullComment 0x2c633b70 <col:37, col:51>
| |   `-ParagraphComment 0x2c633b40 <col:37, col:51>
| |     `-TextComment 0x2c633b10 <col:37, col:51> Text=" light emission"
| |-EnumConstantDecl 0x2c5f1a98 <line:146:3> col:3 mjTEXROLE_RGBA 'int'
| | `-FullComment 0x2c633c40 <col:37, col:56>
| |   `-ParagraphComment 0x2c633c10 <col:37, col:56>
| |     `-TextComment 0x2c633be0 <col:37, col:56> Text=" base color, opacity"
| |-EnumConstantDecl 0x2c5f1b18 <line:147:3> col:3 mjTEXROLE_ORM 'int'
| | `-FullComment 0x2c633d10 <col:37, col:67>
| |   `-ParagraphComment 0x2c633ce0 <col:37, col:67>
| |     `-TextComment 0x2c633cb0 <col:37, col:67> Text=" occlusion, roughness, metallic"
| `-EnumConstantDecl 0x2c5f1b98 <line:148:3> col:3 mjNTEXROLE 'int'
|-TypedefDecl 0x2c5f1c48 <line:137:1, line:149:3> col:3 mjtTextureRole 'enum mjtTextureRole_':'enum mjtTextureRole_'
| `-ElaboratedType 0x2c5f1bf0 'enum mjtTextureRole_' sugar
|   `-EnumType 0x2c5f1610 'enum mjtTextureRole_'
|     `-Enum 0x2c5f1568 'mjtTextureRole_'
|-EnumDecl 0x2c5f1cb8 <line:152:9, line:157:1> line:152:14 mjtIntegrator_
| |-EnumConstantDecl 0x2c5f1de8 <line:153:3, col:25> col:3 mjINT_EULER 'int'
| | |-ConstantExpr 0x2c5f1dc8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f1da8 <col:25> 'int' 0
| | `-FullComment 0x2c633de0 <col:37, col:56>
| |   `-ParagraphComment 0x2c633db0 <col:37, col:56>
| |     `-TextComment 0x2c633d80 <col:37, col:56> Text=" semi-implicit Euler"
| |-EnumConstantDecl 0x2c5f1eb0 <line:154:3> col:3 mjINT_RK4 'int'
| | `-FullComment 0x2c633eb0 <col:37, col:58>
| |   `-ParagraphComment 0x2c633e80 <col:37, col:58>
| |     `-TextComment 0x2c633e50 <col:37, col:58> Text=" 4th-order Runge Kutta"
| |-EnumConstantDecl 0x2c5f1f28 <line:155:3> col:3 mjINT_IMPLICIT 'int'
| | `-FullComment 0x2c633f80 <col:37, col:57>
| |   `-ParagraphComment 0x2c633f50 <col:37, col:57>
| |     `-TextComment 0x2c633f20 <col:37, col:57> Text=" implicit in velocity"
| `-EnumConstantDecl 0x2c5f1fd8 <line:156:3> col:3 mjINT_IMPLICITFAST 'int'
|   `-FullComment 0x2c634050 <col:37, col:76>
|     `-ParagraphComment 0x2c634020 <col:37, col:76>
|       `-TextComment 0x2c633ff0 <col:37, col:76> Text=" implicit in velocity, no rne derivative"
|-TypedefDecl 0x2c5f2088 <line:152:1, line:157:3> col:3 mjtIntegrator 'enum mjtIntegrator_':'enum mjtIntegrator_'
| `-ElaboratedType 0x2c5f2030 'enum mjtIntegrator_' sugar
|   `-EnumType 0x2c5f1d60 'enum mjtIntegrator_'
|     `-Enum 0x2c5f1cb8 'mjtIntegrator_'
|-EnumDecl 0x2c5f20f8 <line:160:9, line:163:1> line:160:14 mjtCone_
| |-EnumConstantDecl 0x2c5f2228 <line:161:3, col:26> col:3 mjCONE_PYRAMIDAL 'int'
| | |-ConstantExpr 0x2c5f2208 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f21e8 <col:26> 'int' 0
| | `-FullComment 0x2c634120 <col:37, col:46>
| |   `-ParagraphComment 0x2c6340f0 <col:37, col:46>
| |     `-TextComment 0x2c6340c0 <col:37, col:46> Text=" pyramidal"
| `-EnumConstantDecl 0x2c5f22d8 <line:162:3> col:3 mjCONE_ELLIPTIC 'int'
|   `-FullComment 0x2c6341f0 <col:37, col:45>
|     `-ParagraphComment 0x2c6341c0 <col:37, col:45>
|       `-TextComment 0x2c634190 <col:37, col:45> Text=" elliptic"
|-TypedefDecl 0x2c5f2388 <line:160:1, line:163:3> col:3 mjtCone 'enum mjtCone_':'enum mjtCone_'
| `-ElaboratedType 0x2c5f2330 'enum mjtCone_' sugar
|   `-EnumType 0x2c5f21a0 'enum mjtCone_'
|     `-Enum 0x2c5f20f8 'mjtCone_'
|-EnumDecl 0x2c5f23f8 <line:166:9, line:170:1> line:166:14 mjtJacobian_
| |-EnumConstantDecl 0x2c5f2528 <line:167:3, col:26> col:3 mjJAC_DENSE 'int'
| | |-ConstantExpr 0x2c5f2508 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f24e8 <col:26> 'int' 0
| | `-FullComment 0x2c6342c0 <col:37, col:42>
| |   `-ParagraphComment 0x2c634290 <col:37, col:42>
| |     `-TextComment 0x2c634260 <col:37, col:42> Text=" dense"
| |-EnumConstantDecl 0x2c5f25a8 <line:168:3> col:3 mjJAC_SPARSE 'int'
| | `-FullComment 0x2c634390 <col:37, col:43>
| |   `-ParagraphComment 0x2c634360 <col:37, col:43>
| |     `-TextComment 0x2c634330 <col:37, col:43> Text=" sparse"
| `-EnumConstantDecl 0x2c5f2658 <line:169:3> col:3 mjJAC_AUTO 'int'
|   `-FullComment 0x2c6344b0 <col:37, col:69>
|     `-ParagraphComment 0x2c634480 <col:37, col:69>
|       |-TextComment 0x2c634400 <col:37, col:48> Text=" dense if nv"
|       |-TextComment 0x2c634420 <col:49> Text="<"
|       `-TextComment 0x2c634440 <col:50, col:69> Text="60, sparse otherwise"
|-TypedefDecl 0x2c5f2708 <line:166:1, line:170:3> col:3 mjtJacobian 'enum mjtJacobian_':'enum mjtJacobian_'
| `-ElaboratedType 0x2c5f26b0 'enum mjtJacobian_' sugar
|   `-EnumType 0x2c5f24a0 'enum mjtJacobian_'
|     `-Enum 0x2c5f23f8 'mjtJacobian_'
|-EnumDecl 0x2c5f2778 <line:173:9, line:177:1> line:173:14 mjtSolver_
| |-EnumConstantDecl 0x2c5f28a8 <line:174:3, col:26> col:3 mjSOL_PGS 'int'
| | |-ConstantExpr 0x2c5f2888 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f2868 <col:26> 'int' 0
| | `-FullComment 0x2c634580 <col:37, col:50>
| |   `-ParagraphComment 0x2c634550 <col:37, col:50>
| |     `-TextComment 0x2c634520 <col:37, col:50> Text=" PGS    (dual)"
| |-EnumConstantDecl 0x2c5f2928 <line:175:3> col:3 mjSOL_CG 'int'
| | `-FullComment 0x2c634650 <col:37, col:52>
| |   `-ParagraphComment 0x2c634620 <col:37, col:52>
| |     `-TextComment 0x2c6345f0 <col:37, col:52> Text=" CG     (primal)"
| `-EnumConstantDecl 0x2c5f29d8 <line:176:3> col:3 mjSOL_NEWTON 'int'
|   `-FullComment 0x2c634720 <col:37, col:52>
|     `-ParagraphComment 0x2c6346f0 <col:37, col:52>
|       `-TextComment 0x2c6346c0 <col:37, col:52> Text=" Newton (primal)"
|-TypedefDecl 0x2c5f2a88 <line:173:1, line:177:3> col:3 mjtSolver 'enum mjtSolver_':'enum mjtSolver_'
| `-ElaboratedType 0x2c5f2a30 'enum mjtSolver_' sugar
|   `-EnumType 0x2c5f2820 'enum mjtSolver_'
|     `-Enum 0x2c5f2778 'mjtSolver_'
|-EnumDecl 0x2c5f2af8 <line:180:9, line:187:1> line:180:14 mjtEq_
| |-EnumConstantDecl 0x2c5f2c28 <line:181:3, col:25> col:3 mjEQ_CONNECT 'int'
| | |-ConstantExpr 0x2c5f2c08 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f2be8 <col:25> 'int' 0
| | `-FullComment 0x2c6347f0 <col:37, col:79>
| |   `-ParagraphComment 0x2c6347c0 <col:37, col:79>
| |     `-TextComment 0x2c634790 <col:37, col:79> Text=" connect two bodies at a point (ball joint)"
| |-EnumConstantDecl 0x2c5f2ca8 <line:182:3> col:3 mjEQ_WELD 'int'
| | `-FullComment 0x2c6348c0 <col:37, col:88>
| |   `-ParagraphComment 0x2c634890 <col:37, col:88>
| |     `-TextComment 0x2c634860 <col:37, col:88> Text=" fix relative position and orientation of two bodies"
| |-EnumConstantDecl 0x2c5f2d28 <line:183:3> col:3 mjEQ_JOINT 'int'
| | `-FullComment 0x2c6349b0 <col:37, col:86>
| |   `-ParagraphComment 0x2c634980 <col:37, col:86>
| |     `-TextComment 0x2c634930 <col:37, col:86> Text=" couple the values of two scalar joints with cubic"
| |-EnumConstantDecl 0x2c5f2da8 <line:184:3> col:3 mjEQ_TENDON 'int'
| | `-FullComment 0x2c634a80 <col:37, col:81>
| |   `-ParagraphComment 0x2c634a50 <col:37, col:81>
| |     `-TextComment 0x2c634a20 <col:37, col:81> Text=" couple the lengths of two tendons with cubic"
| |-EnumConstantDecl 0x2c5f2e28 <line:185:3> col:3 mjEQ_FLEX 'int'
| | `-FullComment 0x2c634b50 <col:37, col:67>
| |   `-ParagraphComment 0x2c634b20 <col:37, col:67>
| |     `-TextComment 0x2c634af0 <col:37, col:67> Text=" fix all edge lengths of a flex"
| `-EnumConstantDecl 0x2c5f32e8 <line:186:3> col:3 mjEQ_DISTANCE 'int'
|   `-FullComment 0x2c634c20 <col:37, col:77>
|     `-ParagraphComment 0x2c634bf0 <col:37, col:77>
|       `-TextComment 0x2c634bc0 <col:37, col:77> Text=" unsupported, will cause an error if used"
|-TypedefDecl 0x2c5f3398 <line:180:1, line:187:3> col:3 mjtEq 'enum mjtEq_':'enum mjtEq_'
| `-ElaboratedType 0x2c5f3340 'enum mjtEq_' sugar
|   `-EnumType 0x2c5f2ba0 'enum mjtEq_'
|     `-Enum 0x2c5f2af8 'mjtEq_'
|-EnumDecl 0x2c5f3408 <line:190:9, line:197:1> line:190:14 mjtWrap_
| |-EnumConstantDecl 0x2c5f3538 <line:191:3, col:25> col:3 mjWRAP_NONE 'int'
| | |-ConstantExpr 0x2c5f3518 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f34f8 <col:25> 'int' 0
| | `-FullComment 0x2c634cf0 <col:37, col:48>
| |   `-ParagraphComment 0x2c634cc0 <col:37, col:48>
| |     `-TextComment 0x2c634c90 <col:37, col:48> Text=" null object"
| |-EnumConstantDecl 0x2c5f35b8 <line:192:3> col:3 mjWRAP_JOINT 'int'
| | `-FullComment 0x2c634dc0 <col:37, col:56>
| |   `-ParagraphComment 0x2c634d90 <col:37, col:56>
| |     `-TextComment 0x2c634d60 <col:37, col:56> Text=" constant moment arm"
| |-EnumConstantDecl 0x2c5f3638 <line:193:3> col:3 mjWRAP_PULLEY 'int'
| | `-FullComment 0x2c634e90 <col:37, col:64>
| |   `-ParagraphComment 0x2c634e60 <col:37, col:64>
| |     `-TextComment 0x2c634e30 <col:37, col:64> Text=" pulley used to split tendon"
| |-EnumConstantDecl 0x2c5f36b8 <line:194:3> col:3 mjWRAP_SITE 'int'
| | `-FullComment 0x2c634f60 <col:37, col:54>
| |   `-ParagraphComment 0x2c634f30 <col:37, col:54>
| |     `-TextComment 0x2c634f00 <col:37, col:54> Text=" pass through site"
| |-EnumConstantDecl 0x2c5f3738 <line:195:3> col:3 mjWRAP_SPHERE 'int'
| | `-FullComment 0x2c635030 <col:37, col:55>
| |   `-ParagraphComment 0x2c635000 <col:37, col:55>
| |     `-TextComment 0x2c634fd0 <col:37, col:55> Text=" wrap around sphere"
| `-EnumConstantDecl 0x2c5f37e8 <line:196:3> col:3 mjWRAP_CYLINDER 'int'
|   `-FullComment 0x2c635100 <col:37, col:68>
|     `-ParagraphComment 0x2c6350d0 <col:37, col:68>
|       `-TextComment 0x2c6350a0 <col:37, col:68> Text=" wrap around (infinite) cylinder"
|-TypedefDecl 0x2c5f3898 <line:190:1, line:197:3> col:3 mjtWrap 'enum mjtWrap_':'enum mjtWrap_'
| `-ElaboratedType 0x2c5f3840 'enum mjtWrap_' sugar
|   `-EnumType 0x2c5f34b0 'enum mjtWrap_'
|     `-Enum 0x2c5f3408 'mjtWrap_'
|-EnumDecl 0x2c5f3908 <line:200:9, line:209:1> line:200:14 mjtTrn_
| |-EnumConstantDecl 0x2c5f3a38 <line:201:3, col:25> col:3 mjTRN_JOINT 'int'
| | |-ConstantExpr 0x2c5f3a18 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f39f8 <col:25> 'int' 0
| | `-FullComment 0x2c6351d0 <col:37, col:51>
| |   `-ParagraphComment 0x2c6351a0 <col:37, col:51>
| |     `-TextComment 0x2c635170 <col:37, col:51> Text=" force on joint"
| |-EnumConstantDecl 0x2c5f3ab8 <line:202:3> col:3 mjTRN_JOINTINPARENT 'int'
| | `-FullComment 0x2c6352a0 <col:37, col:78>
| |   `-ParagraphComment 0x2c635270 <col:37, col:78>
| |     `-TextComment 0x2c635240 <col:37, col:78> Text=" force on joint, expressed in parent frame"
| |-EnumConstantDecl 0x2c5f3b38 <line:203:3> col:3 mjTRN_SLIDERCRANK 'int'
| | `-FullComment 0x2c635370 <col:37, col:67>
| |   `-ParagraphComment 0x2c635340 <col:37, col:67>
| |     `-TextComment 0x2c635310 <col:37, col:67> Text=" force via slider-crank linkage"
| |-EnumConstantDecl 0x2c5f3bb8 <line:204:3> col:3 mjTRN_TENDON 'int'
| | `-FullComment 0x2c635440 <col:37, col:52>
| |   `-ParagraphComment 0x2c635410 <col:37, col:52>
| |     `-TextComment 0x2c6353e0 <col:37, col:52> Text=" force on tendon"
| |-EnumConstantDecl 0x2c5f3c38 <line:205:3> col:3 mjTRN_SITE 'int'
| | `-FullComment 0x2c635510 <col:37, col:50>
| |   `-ParagraphComment 0x2c6354e0 <col:37, col:50>
| |     `-TextComment 0x2c6354b0 <col:37, col:50> Text=" force on site"
| |-EnumConstantDecl 0x2c5f3cb8 <line:206:3> col:3 mjTRN_BODY 'int'
| | `-FullComment 0x2c6355e0 <col:37, col:69>
| |   `-ParagraphComment 0x2c6355b0 <col:37, col:69>
| |     `-TextComment 0x2c635580 <col:37, col:69> Text=" adhesion force on a body's geoms"
| `-EnumConstantDecl 0x2c5f3da8 <line:208:3, col:25> col:3 mjTRN_UNDEFINED 'int'
|   |-ConstantExpr 0x2c5f3d88 <col:25> 'int'
|   | |-value: Int 1000
|   | `-IntegerLiteral 0x2c5f3d38 <col:25> 'int' 1000
|   `-FullComment 0x2c6356b0 <col:37, col:64>
|     `-ParagraphComment 0x2c635680 <col:37, col:64>
|       `-TextComment 0x2c635650 <col:37, col:64> Text=" undefined transmission type"
|-TypedefDecl 0x2c5f3e58 <line:200:1, line:209:3> col:3 mjtTrn 'enum mjtTrn_':'enum mjtTrn_'
| `-ElaboratedType 0x2c5f3e00 'enum mjtTrn_' sugar
|   `-EnumType 0x2c5f39b0 'enum mjtTrn_'
|     `-Enum 0x2c5f3908 'mjtTrn_'
|-EnumDecl 0x2c5f3ec8 <line:212:9, line:219:1> line:212:14 mjtDyn_
| |-EnumConstantDecl 0x2c5f3ff8 <line:213:3, col:25> col:3 mjDYN_NONE 'int'
| | |-ConstantExpr 0x2c5f3fd8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f3fb8 <col:25> 'int' 0
| | `-FullComment 0x2c635780 <col:37, col:79>
| |   `-ParagraphComment 0x2c635750 <col:37, col:79>
| |     `-TextComment 0x2c635720 <col:37, col:79> Text=" no internal dynamics; ctrl specifies force"
| |-EnumConstantDecl 0x2c5f4078 <line:214:3> col:3 mjDYN_INTEGRATOR 'int'
| | `-FullComment 0x2c635850 <col:37, col:58>
| |   `-ParagraphComment 0x2c635820 <col:37, col:58>
| |     `-TextComment 0x2c6357f0 <col:37, col:58> Text=" integrator: da/dt = u"
| |-EnumConstantDecl 0x2c5f40f8 <line:215:3> col:3 mjDYN_FILTER 'int'
| | `-FullComment 0x2c635920 <col:37, col:71>
| |   `-ParagraphComment 0x2c6358f0 <col:37, col:71>
| |     `-TextComment 0x2c6358c0 <col:37, col:71> Text=" linear filter: da/dt = (u-a) / tau"
| |-EnumConstantDecl 0x2c5f4178 <line:216:3> col:3 mjDYN_FILTEREXACT 'int'
| | `-FullComment 0x2c636a40 <col:37, col:95>
| |   `-ParagraphComment 0x2c636a10 <col:37, col:95>
| |     `-TextComment 0x2c6369e0 <col:37, col:95> Text=" linear filter: da/dt = (u-a) / tau, with exact integration"
| |-EnumConstantDecl 0x2c5f41f8 <line:217:3> col:3 mjDYN_MUSCLE 'int'
| | `-FullComment 0x2c636b10 <col:37, col:85>
| |   `-ParagraphComment 0x2c636ae0 <col:37, col:85>
| |     `-TextComment 0x2c636ab0 <col:37, col:85> Text=" piece-wise linear filter with two time constants"
| `-EnumConstantDecl 0x2c5f68a0 <line:218:3> col:3 mjDYN_USER 'int'
|   `-FullComment 0x2c636be0 <col:37, col:63>
|     `-ParagraphComment 0x2c636bb0 <col:37, col:63>
|       `-TextComment 0x2c636b80 <col:37, col:63> Text=" user-defined dynamics type"
|-TypedefDecl 0x2c5f6948 <line:212:1, line:219:3> col:3 mjtDyn 'enum mjtDyn_':'enum mjtDyn_'
| `-ElaboratedType 0x2c5f68f0 'enum mjtDyn_' sugar
|   `-EnumType 0x2c5f3f70 'enum mjtDyn_'
|     `-Enum 0x2c5f3ec8 'mjtDyn_'
|-EnumDecl 0x2c5f69b8 <line:222:9, line:227:1> line:222:14 mjtGain_
| |-EnumConstantDecl 0x2c5f6ae8 <line:223:3, col:25> col:3 mjGAIN_FIXED 'int'
| | |-ConstantExpr 0x2c5f6ac8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f6aa8 <col:25> 'int' 0
| | `-FullComment 0x2c636cb0 <col:37, col:47>
| |   `-ParagraphComment 0x2c636c80 <col:37, col:47>
| |     `-TextComment 0x2c636c50 <col:37, col:47> Text=" fixed gain"
| |-EnumConstantDecl 0x2c5f6b68 <line:224:3> col:3 mjGAIN_AFFINE 'int'
| | `-FullComment 0x2c636d80 <col:37, col:68>
| |   `-ParagraphComment 0x2c636d50 <col:37, col:68>
| |     `-TextComment 0x2c636d20 <col:37, col:68> Text=" const + kp*length + kv*velocity"
| |-EnumConstantDecl 0x2c5f6be8 <line:225:3> col:3 mjGAIN_MUSCLE 'int'
| | `-FullComment 0x2c636e50 <col:37, col:82>
| |   `-ParagraphComment 0x2c636e20 <col:37, col:82>
| |     `-TextComment 0x2c636df0 <col:37, col:82> Text=" muscle FLV curve computed by mju_muscleGain()"
| `-EnumConstantDecl 0x2c5f6c98 <line:226:3> col:3 mjGAIN_USER 'int'
|   `-FullComment 0x2c636f20 <col:37, col:59>
|     `-ParagraphComment 0x2c636ef0 <col:37, col:59>
|       `-TextComment 0x2c636ec0 <col:37, col:59> Text=" user-defined gain type"
|-TypedefDecl 0x2c5f6d48 <line:222:1, line:227:3> col:3 mjtGain 'enum mjtGain_':'enum mjtGain_'
| `-ElaboratedType 0x2c5f6cf0 'enum mjtGain_' sugar
|   `-EnumType 0x2c5f6a60 'enum mjtGain_'
|     `-Enum 0x2c5f69b8 'mjtGain_'
|-EnumDecl 0x2c5f6db8 <line:230:9, line:235:1> line:230:14 mjtBias_
| |-EnumConstantDecl 0x2c5f6ee8 <line:231:3, col:25> col:3 mjBIAS_NONE 'int'
| | |-ConstantExpr 0x2c5f6ec8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f6ea8 <col:25> 'int' 0
| | `-FullComment 0x2c636ff0 <col:37, col:44>
| |   `-ParagraphComment 0x2c636fc0 <col:37, col:44>
| |     `-TextComment 0x2c636f90 <col:37, col:44> Text=" no bias"
| |-EnumConstantDecl 0x2c5f6f68 <line:232:3> col:3 mjBIAS_AFFINE 'int'
| | `-FullComment 0x2c6370c0 <col:37, col:68>
| |   `-ParagraphComment 0x2c637090 <col:37, col:68>
| |     `-TextComment 0x2c637060 <col:37, col:68> Text=" const + kp*length + kv*velocity"
| |-EnumConstantDecl 0x2c5f6fe8 <line:233:3> col:3 mjBIAS_MUSCLE 'int'
| | `-FullComment 0x2c637190 <col:37, col:86>
| |   `-ParagraphComment 0x2c637160 <col:37, col:86>
| |     `-TextComment 0x2c637130 <col:37, col:86> Text=" muscle passive force computed by mju_muscleBias()"
| `-EnumConstantDecl 0x2c5f7098 <line:234:3> col:3 mjBIAS_USER 'int'
|   `-FullComment 0x2c637260 <col:37, col:59>
|     `-ParagraphComment 0x2c637230 <col:37, col:59>
|       `-TextComment 0x2c637200 <col:37, col:59> Text=" user-defined bias type"
|-TypedefDecl 0x2c5f7148 <line:230:1, line:235:3> col:3 mjtBias 'enum mjtBias_':'enum mjtBias_'
| `-ElaboratedType 0x2c5f70f0 'enum mjtBias_' sugar
|   `-EnumType 0x2c5f6e60 'enum mjtBias_'
|     `-Enum 0x2c5f6db8 'mjtBias_'
|-EnumDecl 0x2c5f71b8 <line:238:9, line:270:1> line:238:14 mjtObj_
| |-EnumConstantDecl 0x2c5f72e8 <line:239:3, col:25> col:3 mjOBJ_UNKNOWN 'int'
| | |-ConstantExpr 0x2c5f72c8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f72a8 <col:25> 'int' 0
| | `-FullComment 0x2c637330 <col:37, col:56>
| |   `-ParagraphComment 0x2c637300 <col:37, col:56>
| |     `-TextComment 0x2c6372d0 <col:37, col:56> Text=" unknown object type"
| |-EnumConstantDecl 0x2c5f7368 <line:240:3> col:3 mjOBJ_BODY 'int'
| | `-FullComment 0x2c637400 <col:37, col:41>
| |   `-ParagraphComment 0x2c6373d0 <col:37, col:41>
| |     `-TextComment 0x2c6373a0 <col:37, col:41> Text=" body"
| |-EnumConstantDecl 0x2c5f73e8 <line:241:3> col:3 mjOBJ_XBODY 'int'
| | `-FullComment 0x2c6374d0 <col:37, col:90>
| |   `-ParagraphComment 0x2c6374a0 <col:37, col:90>
| |     `-TextComment 0x2c637470 <col:37, col:90> Text=" body, used to access regular frame instead of i-frame"
| |-EnumConstantDecl 0x2c5f7468 <line:242:3> col:3 mjOBJ_JOINT 'int'
| | `-FullComment 0x2c6375a0 <col:37, col:42>
| |   `-ParagraphComment 0x2c637570 <col:37, col:42>
| |     `-TextComment 0x2c637540 <col:37, col:42> Text=" joint"
| |-EnumConstantDecl 0x2c5f74e8 <line:243:3> col:3 mjOBJ_DOF 'int'
| | `-FullComment 0x2c637670 <col:37, col:40>
| |   `-ParagraphComment 0x2c637640 <col:37, col:40>
| |     `-TextComment 0x2c637610 <col:37, col:40> Text=" dof"
| |-EnumConstantDecl 0x2c5f7568 <line:244:3> col:3 mjOBJ_GEOM 'int'
| | `-FullComment 0x2c637740 <col:37, col:41>
| |   `-ParagraphComment 0x2c637710 <col:37, col:41>
| |     `-TextComment 0x2c6376e0 <col:37, col:41> Text=" geom"
| |-EnumConstantDecl 0x2c5f75e8 <line:245:3> col:3 mjOBJ_SITE 'int'
| | `-FullComment 0x2c637810 <col:37, col:41>
| |   `-ParagraphComment 0x2c6377e0 <col:37, col:41>
| |     `-TextComment 0x2c6377b0 <col:37, col:41> Text=" site"
| |-EnumConstantDecl 0x2c5f7668 <line:246:3> col:3 mjOBJ_CAMERA 'int'
| | `-FullComment 0x2c6378e0 <col:37, col:43>
| |   `-ParagraphComment 0x2c6378b0 <col:37, col:43>
| |     `-TextComment 0x2c637880 <col:37, col:43> Text=" camera"
| |-EnumConstantDecl 0x2c5f76e8 <line:247:3> col:3 mjOBJ_LIGHT 'int'
| | `-FullComment 0x2c6379c0 <col:37, col:42>
| |   `-ParagraphComment 0x2c637980 <col:37, col:42>
| |     `-TextComment 0x2c637950 <col:37, col:42> Text=" light"
| |-EnumConstantDecl 0x2c5f7768 <line:248:3> col:3 mjOBJ_FLEX 'int'
| | `-FullComment 0x2c637a90 <col:37, col:41>
| |   `-ParagraphComment 0x2c637a60 <col:37, col:41>
| |     `-TextComment 0x2c637a30 <col:37, col:41> Text=" flex"
| |-EnumConstantDecl 0x2c5f77e8 <line:249:3> col:3 mjOBJ_MESH 'int'
| | `-FullComment 0x2c637b60 <col:37, col:41>
| |   `-ParagraphComment 0x2c637b30 <col:37, col:41>
| |     `-TextComment 0x2c637b00 <col:37, col:41> Text=" mesh"
| |-EnumConstantDecl 0x2c5f7e30 <line:250:3> col:3 mjOBJ_SKIN 'int'
| | `-FullComment 0x2c637c30 <col:37, col:41>
| |   `-ParagraphComment 0x2c637c00 <col:37, col:41>
| |     `-TextComment 0x2c637bd0 <col:37, col:41> Text=" skin"
| |-EnumConstantDecl 0x2c5f7ea8 <line:251:3> col:3 mjOBJ_HFIELD 'int'
| | `-FullComment 0x2c637d00 <col:37, col:48>
| |   `-ParagraphComment 0x2c637cd0 <col:37, col:48>
| |     `-TextComment 0x2c637ca0 <col:37, col:48> Text=" heightfield"
| |-EnumConstantDecl 0x2c5f7f28 <line:252:3> col:3 mjOBJ_TEXTURE 'int'
| | `-FullComment 0x2c637dd0 <col:37, col:44>
| |   `-ParagraphComment 0x2c637da0 <col:37, col:44>
| |     `-TextComment 0x2c637d70 <col:37, col:44> Text=" texture"
| |-EnumConstantDecl 0x2c5f7fa8 <line:253:3> col:3 mjOBJ_MATERIAL 'int'
| | `-FullComment 0x2c637ea0 <col:37, col:59>
| |   `-ParagraphComment 0x2c637e70 <col:37, col:59>
| |     `-TextComment 0x2c637e40 <col:37, col:59> Text=" material for rendering"
| |-EnumConstantDecl 0x2c5f8028 <line:254:3> col:3 mjOBJ_PAIR 'int'
| | `-FullComment 0x2c637f70 <col:37, col:57>
| |   `-ParagraphComment 0x2c637f40 <col:37, col:57>
| |     `-TextComment 0x2c637f10 <col:37, col:57> Text=" geom pair to include"
| |-EnumConstantDecl 0x2c5f80a8 <line:255:3> col:3 mjOBJ_EXCLUDE 'int'
| | `-FullComment 0x2c638040 <col:37, col:57>
| |   `-ParagraphComment 0x2c638010 <col:37, col:57>
| |     `-TextComment 0x2c637fe0 <col:37, col:57> Text=" body pair to exclude"
| |-EnumConstantDecl 0x2c5f8128 <line:256:3> col:3 mjOBJ_EQUALITY 'int'
| | `-FullComment 0x2c638110 <col:37, col:56>
| |   `-ParagraphComment 0x2c6380e0 <col:37, col:56>
| |     `-TextComment 0x2c6380b0 <col:37, col:56> Text=" equality constraint"
| |-EnumConstantDecl 0x2c5f81a8 <line:257:3> col:3 mjOBJ_TENDON 'int'
| | `-FullComment 0x2c6381e0 <col:37, col:43>
| |   `-ParagraphComment 0x2c6381b0 <col:37, col:43>
| |     `-TextComment 0x2c638180 <col:37, col:43> Text=" tendon"
| |-EnumConstantDecl 0x2c5f8228 <line:258:3> col:3 mjOBJ_ACTUATOR 'int'
| | `-FullComment 0x2c6382b0 <col:37, col:45>
| |   `-ParagraphComment 0x2c638280 <col:37, col:45>
| |     `-TextComment 0x2c638250 <col:37, col:45> Text=" actuator"
| |-EnumConstantDecl 0x2c5f82a8 <line:259:3> col:3 mjOBJ_SENSOR 'int'
| | `-FullComment 0x2c638380 <col:37, col:43>
| |   `-ParagraphComment 0x2c638350 <col:37, col:43>
| |     `-TextComment 0x2c638320 <col:37, col:43> Text=" sensor"
| |-EnumConstantDecl 0x2c5f8328 <line:260:3> col:3 mjOBJ_NUMERIC 'int'
| | `-FullComment 0x2c638450 <col:37, col:44>
| |   `-ParagraphComment 0x2c638420 <col:37, col:44>
| |     `-TextComment 0x2c6383f0 <col:37, col:44> Text=" numeric"
| |-EnumConstantDecl 0x2c5f83a8 <line:261:3> col:3 mjOBJ_TEXT 'int'
| | `-FullComment 0x2c638520 <col:37, col:41>
| |   `-ParagraphComment 0x2c6384f0 <col:37, col:41>
| |     `-TextComment 0x2c6384c0 <col:37, col:41> Text=" text"
| |-EnumConstantDecl 0x2c5f8428 <line:262:3> col:3 mjOBJ_TUPLE 'int'
| | `-FullComment 0x2c6385f0 <col:37, col:42>
| |   `-ParagraphComment 0x2c6385c0 <col:37, col:42>
| |     `-TextComment 0x2c638590 <col:37, col:42> Text=" tuple"
| |-EnumConstantDecl 0x2c5f84a8 <line:263:3> col:3 mjOBJ_KEY 'int'
| | `-FullComment 0x2c6386c0 <col:37, col:45>
| |   `-ParagraphComment 0x2c638690 <col:37, col:45>
| |     `-TextComment 0x2c638660 <col:37, col:45> Text=" keyframe"
| |-EnumConstantDecl 0x2c5f8528 <line:264:3> col:3 mjOBJ_PLUGIN 'int'
| | `-FullComment 0x2c638790 <col:37, col:52>
| |   `-ParagraphComment 0x2c638760 <col:37, col:52>
| |     `-TextComment 0x2c638730 <col:37, col:52> Text=" plugin instance"
| |-EnumConstantDecl 0x2c5f85a8 <line:266:3> col:3 mjNOBJECT 'int'
| | `-FullComment 0x2c638860 <col:37, col:59>
| |   `-ParagraphComment 0x2c638830 <col:37, col:59>
| |     `-TextComment 0x2c638800 <col:37, col:59> Text=" number of object types"
| `-EnumConstantDecl 0x2c5f86c8 <line:269:3, col:25> col:3 mjOBJ_FRAME 'int'
|   |-ConstantExpr 0x2c5f86a8 <col:25> 'int'
|   | |-value: Int 100
|   | `-IntegerLiteral 0x2c5f8658 <col:25> 'int' 100
|   `-FullComment 0x2c638930 <col:37, col:42>
|     `-ParagraphComment 0x2c638900 <col:37, col:42>
|       `-TextComment 0x2c6388d0 <col:37, col:42> Text=" frame"
|-TypedefDecl 0x2c5f8778 <line:238:1, line:270:3> col:3 mjtObj 'enum mjtObj_':'enum mjtObj_'
| `-ElaboratedType 0x2c5f8720 'enum mjtObj_' sugar
|   `-EnumType 0x2c5f7260 'enum mjtObj_'
|     `-Enum 0x2c5f71b8 'mjtObj_'
|-EnumDecl 0x2c5f87e8 <line:273:9, line:282:1> line:273:14 mjtConstraint_
| |-EnumConstantDecl 0x2c5f8918 <line:274:3, col:25> col:3 mjCNSTR_EQUALITY 'int'
| | |-ConstantExpr 0x2c5f88f8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f88d8 <col:25> 'int' 0
| | `-FullComment 0x2c638a20 <col:37, col:56>
| |   `-ParagraphComment 0x2c6389f0 <col:37, col:56>
| |     `-TextComment 0x2c6389c0 <col:37, col:56> Text=" equality constraint"
| |-EnumConstantDecl 0x2c5f8998 <line:275:3> col:3 mjCNSTR_FRICTION_DOF 'int'
| | `-FullComment 0x2c638af0 <col:37, col:49>
| |   `-ParagraphComment 0x2c638ac0 <col:37, col:49>
| |     `-TextComment 0x2c638a90 <col:37, col:49> Text=" dof friction"
| |-EnumConstantDecl 0x2c5f8a18 <line:276:3> col:3 mjCNSTR_FRICTION_TENDON 'int'
| | `-FullComment 0x2c638bc0 <col:37, col:52>
| |   `-ParagraphComment 0x2c638b90 <col:37, col:52>
| |     `-TextComment 0x2c638b60 <col:37, col:52> Text=" tendon friction"
| |-EnumConstantDecl 0x2c5f8a98 <line:277:3> col:3 mjCNSTR_LIMIT_JOINT 'int'
| | `-FullComment 0x2c638c90 <col:37, col:48>
| |   `-ParagraphComment 0x2c638c60 <col:37, col:48>
| |     `-TextComment 0x2c638c30 <col:37, col:48> Text=" joint limit"
| |-EnumConstantDecl 0x2c5f8b18 <line:278:3> col:3 mjCNSTR_LIMIT_TENDON 'int'
| | `-FullComment 0x2c638d60 <col:37, col:49>
| |   `-ParagraphComment 0x2c638d30 <col:37, col:49>
| |     `-TextComment 0x2c638d00 <col:37, col:49> Text=" tendon limit"
| |-EnumConstantDecl 0x2c5f8b98 <line:279:3> col:3 mjCNSTR_CONTACT_FRICTIONLESS 'int'
| | `-FullComment 0x2c638e30 <col:37, col:57>
| |   `-ParagraphComment 0x2c638e00 <col:37, col:57>
| |     `-TextComment 0x2c638dd0 <col:37, col:57> Text=" frictionless contact"
| |-EnumConstantDecl 0x2c5f8c18 <line:280:3> col:3 mjCNSTR_CONTACT_PYRAMIDAL 'int'
| | `-FullComment 0x2c638f00 <col:37, col:80>
| |   `-ParagraphComment 0x2c638ed0 <col:37, col:80>
| |     `-TextComment 0x2c638ea0 <col:37, col:80> Text=" frictional contact, pyramidal friction cone"
| `-EnumConstantDecl 0x2c5f8cc8 <line:281:3> col:3 mjCNSTR_CONTACT_ELLIPTIC 'int'
|   `-FullComment 0x2c638fd0 <col:37, col:79>
|     `-ParagraphComment 0x2c638fa0 <col:37, col:79>
|       `-TextComment 0x2c638f70 <col:37, col:79> Text=" frictional contact, elliptic friction cone"
|-TypedefDecl 0x2c5f8d78 <line:273:1, line:282:3> col:3 mjtConstraint 'enum mjtConstraint_':'enum mjtConstraint_'
| `-ElaboratedType 0x2c5f8d20 'enum mjtConstraint_' sugar
|   `-EnumType 0x2c5f8890 'enum mjtConstraint_'
|     `-Enum 0x2c5f87e8 'mjtConstraint_'
|-EnumDecl 0x2c5f9500 <line:285:9, line:291:1> line:285:14 mjtConstraintState_
| |-EnumConstantDecl 0x2c5f9628 <line:286:3, col:28> col:3 mjCNSTRSTATE_SATISFIED 'int'
| | |-ConstantExpr 0x2c5f9608 <col:28> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f95e8 <col:28> 'int' 0
| | `-FullComment 0x2c6390a0 <col:39, col:87>
| |   `-ParagraphComment 0x2c639070 <col:39, col:87>
| |     `-TextComment 0x2c639040 <col:39, col:87> Text=" constraint satisfied, zero cost (limit, contact)"
| |-EnumConstantDecl 0x2c5f96a8 <line:287:3> col:3 mjCNSTRSTATE_QUADRATIC 'int'
| | `-FullComment 0x2c639170 <col:39, col:90>
| |   `-ParagraphComment 0x2c639140 <col:39, col:90>
| |     `-TextComment 0x2c639110 <col:39, col:90> Text=" quadratic cost (equality, friction, limit, contact)"
| |-EnumConstantDecl 0x2c5f9728 <line:288:3> col:3 mjCNSTRSTATE_LINEARNEG 'int'
| | `-FullComment 0x2c639240 <col:39, col:76>
| |   `-ParagraphComment 0x2c639210 <col:39, col:76>
| |     `-TextComment 0x2c6391e0 <col:39, col:76> Text=" linear cost, negative side (friction)"
| |-EnumConstantDecl 0x2c5f97a8 <line:289:3> col:3 mjCNSTRSTATE_LINEARPOS 'int'
| | `-FullComment 0x2c639310 <col:39, col:76>
| |   `-ParagraphComment 0x2c6392e0 <col:39, col:76>
| |     `-TextComment 0x2c6392b0 <col:39, col:76> Text=" linear cost, positive side (friction)"
| `-EnumConstantDecl 0x2c5f9858 <line:290:3> col:3 mjCNSTRSTATE_CONE 'int'
|   `-FullComment 0x2c6393e0 <col:39, col:87>
|     `-ParagraphComment 0x2c6393b0 <col:39, col:87>
|       `-TextComment 0x2c639380 <col:39, col:87> Text=" squared distance to cone cost (elliptic contact)"
|-TypedefDecl 0x2c5f9908 <line:285:1, line:291:3> col:3 mjtConstraintState 'enum mjtConstraintState_':'enum mjtConstraintState_'
| `-ElaboratedType 0x2c5f98b0 'enum mjtConstraintState_' sugar
|   `-EnumType 0x2c5f95a0 'enum mjtConstraintState_'
|     `-Enum 0x2c5f9500 'mjtConstraintState_'
|-EnumDecl 0x2c5f9978 <line:294:9, line:357:1> line:294:14 mjtSensor_
| |-EnumConstantDecl 0x2c5f9ad8 <line:296:3, col:25> col:3 mjSENS_TOUCH 'int'
| | |-ConstantExpr 0x2c5f9ab8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5f9a98 <col:25> 'int' 0
| | `-FullComment 0x2c6394b0 <col:37, col:89>
| |   `-ParagraphComment 0x2c639480 <col:37, col:89>
| |     `-TextComment 0x2c639450 <col:37, col:89> Text=" scalar contact normal forces summed over sensor zone"
| |-EnumConstantDecl 0x2c5f9b58 <line:297:3> col:3 mjSENS_ACCELEROMETER 'int'
| | `-FullComment 0x2c639580 <col:37, col:75>
| |   `-ParagraphComment 0x2c639550 <col:37, col:75>
| |     `-TextComment 0x2c639520 <col:37, col:75> Text=" 3D linear acceleration, in local frame"
| |-EnumConstantDecl 0x2c5f9bd8 <line:298:3> col:3 mjSENS_VELOCIMETER 'int'
| | `-FullComment 0x2c639650 <col:37, col:71>
| |   `-ParagraphComment 0x2c639620 <col:37, col:71>
| |     `-TextComment 0x2c6395f0 <col:37, col:71> Text=" 3D linear velocity, in local frame"
| |-EnumConstantDecl 0x2c5f9c58 <line:299:3> col:3 mjSENS_GYRO 'int'
| | `-FullComment 0x2c639720 <col:37, col:72>
| |   `-ParagraphComment 0x2c6396f0 <col:37, col:72>
| |     `-TextComment 0x2c6396c0 <col:37, col:72> Text=" 3D angular velocity, in local frame"
| |-EnumConstantDecl 0x2c5f9cd8 <line:300:3> col:3 mjSENS_FORCE 'int'
| | `-FullComment 0x2c6397f0 <col:37, col:85>
| |   `-ParagraphComment 0x2c6397c0 <col:37, col:85>
| |     `-TextComment 0x2c639790 <col:37, col:85> Text=" 3D force between site's body and its parent body"
| |-EnumConstantDecl 0x2c5f9d58 <line:301:3> col:3 mjSENS_TORQUE 'int'
| | `-FullComment 0x2c6398c0 <col:37, col:86>
| |   `-ParagraphComment 0x2c639890 <col:37, col:86>
| |     `-TextComment 0x2c639860 <col:37, col:86> Text=" 3D torque between site's body and its parent body"
| |-EnumConstantDecl 0x2c5f9dd8 <line:302:3> col:3 mjSENS_MAGNETOMETER 'int'
| | `-FullComment 0x2c639990 <col:37, col:52>
| |   `-ParagraphComment 0x2c639960 <col:37, col:52>
| |     `-TextComment 0x2c639930 <col:37, col:52> Text=" 3D magnetometer"
| |-EnumConstantDecl 0x2c5f9e58 <line:303:3> col:3 mjSENS_RANGEFINDER 'int'
| | `-FullComment 0x2c639a70 <col:37, col:89>
| |   `-ParagraphComment 0x2c639a40 <col:37, col:89>
| |     `-TextComment 0x2c639a10 <col:37, col:89> Text=" scalar distance to nearest geom or site along z-axis"
| |-EnumConstantDecl 0x2c5f9ed8 <line:304:3> col:3 mjSENS_CAMPROJECTION 'int'
| | `-FullComment 0x2c639b40 <col:37, col:84>
| |   `-ParagraphComment 0x2c639b10 <col:37, col:84>
| |     `-TextComment 0x2c639ae0 <col:37, col:84> Text=" pixel coordinates of a site in the camera image"
| |-EnumConstantDecl 0x2c5f9f88 <line:307:3> col:3 mjSENS_JOINTPOS 'int'
| | `-FullComment 0x2c639c10 <col:37, col:81>
| |   `-ParagraphComment 0x2c639be0 <col:37, col:81>
| |     `-TextComment 0x2c639bb0 <col:37, col:81> Text=" scalar joint position (hinge and slide only)"
| |-EnumConstantDecl 0x2c5fa008 <line:308:3> col:3 mjSENS_JOINTVEL 'int'
| | `-FullComment 0x2c639ce0 <col:37, col:81>
| |   `-ParagraphComment 0x2c639cb0 <col:37, col:81>
| |     `-TextComment 0x2c639c80 <col:37, col:81> Text=" scalar joint velocity (hinge and slide only)"
| |-EnumConstantDecl 0x2c5fa088 <line:309:3> col:3 mjSENS_TENDONPOS 'int'
| | `-FullComment 0x2c639db0 <col:37, col:59>
| |   `-ParagraphComment 0x2c639d80 <col:37, col:59>
| |     `-TextComment 0x2c639d50 <col:37, col:59> Text=" scalar tendon position"
| |-EnumConstantDecl 0x2c5fa108 <line:310:3> col:3 mjSENS_TENDONVEL 'int'
| | `-FullComment 0x2c639e80 <col:37, col:59>
| |   `-ParagraphComment 0x2c639e50 <col:37, col:59>
| |     `-TextComment 0x2c639e20 <col:37, col:59> Text=" scalar tendon velocity"
| |-EnumConstantDecl 0x2c5fa188 <line:311:3> col:3 mjSENS_ACTUATORPOS 'int'
| | `-FullComment 0x2c639f50 <col:37, col:61>
| |   `-ParagraphComment 0x2c639f20 <col:37, col:61>
| |     `-TextComment 0x2c639ef0 <col:37, col:61> Text=" scalar actuator position"
| |-EnumConstantDecl 0x2c5fa208 <line:312:3> col:3 mjSENS_ACTUATORVEL 'int'
| | `-FullComment 0x2c63a020 <col:37, col:61>
| |   `-ParagraphComment 0x2c639ff0 <col:37, col:61>
| |     `-TextComment 0x2c639fc0 <col:37, col:61> Text=" scalar actuator velocity"
| |-EnumConstantDecl 0x2c5fa288 <line:313:3> col:3 mjSENS_ACTUATORFRC 'int'
| | `-FullComment 0x2c63a0f0 <col:37, col:58>
| |   `-ParagraphComment 0x2c63a0c0 <col:37, col:58>
| |     `-TextComment 0x2c63a090 <col:37, col:58> Text=" scalar actuator force"
| |-EnumConstantDecl 0x2c5fa308 <line:314:3> col:3 mjSENS_JOINTACTFRC 'int'
| | `-FullComment 0x2c63a1c0 <col:37, col:81>
| |   `-ParagraphComment 0x2c63a190 <col:37, col:81>
| |     `-TextComment 0x2c63a160 <col:37, col:81> Text=" scalar actuator force, measured at the joint"
| |-EnumConstantDecl 0x2c5fa3b8 <line:317:3> col:3 mjSENS_BALLQUAT 'int'
| | `-FullComment 0x2c63a290 <col:37, col:61>
| |   `-ParagraphComment 0x2c63a260 <col:37, col:61>
| |     `-TextComment 0x2c63a230 <col:37, col:61> Text=" 4D ball joint quaternion"
| |-EnumConstantDecl 0x2c5fa438 <line:318:3> col:3 mjSENS_BALLANGVEL 'int'
| | `-FullComment 0x2c63a360 <col:37, col:67>
| |   `-ParagraphComment 0x2c63a330 <col:37, col:67>
| |     `-TextComment 0x2c63a300 <col:37, col:67> Text=" 3D ball joint angular velocity"
| |-EnumConstantDecl 0x2c5fac90 <line:321:3> col:3 mjSENS_JOINTLIMITPOS 'int'
| | `-FullComment 0x2c63a430 <col:37, col:64>
| |   `-ParagraphComment 0x2c63a400 <col:37, col:64>
| |     `-TextComment 0x2c63a3d0 <col:37, col:64> Text=" joint limit distance-margin"
| |-EnumConstantDecl 0x2c5fad08 <line:322:3> col:3 mjSENS_JOINTLIMITVEL 'int'
| | `-FullComment 0x2c63a500 <col:37, col:57>
| |   `-ParagraphComment 0x2c63a4d0 <col:37, col:57>
| |     `-TextComment 0x2c63a4a0 <col:37, col:57> Text=" joint limit velocity"
| |-EnumConstantDecl 0x2c5fad88 <line:323:3> col:3 mjSENS_JOINTLIMITFRC 'int'
| | `-FullComment 0x2c63a5d0 <col:37, col:54>
| |   `-ParagraphComment 0x2c63a5a0 <col:37, col:54>
| |     `-TextComment 0x2c63a570 <col:37, col:54> Text=" joint limit force"
| |-EnumConstantDecl 0x2c5fae08 <line:324:3> col:3 mjSENS_TENDONLIMITPOS 'int'
| | `-FullComment 0x2c63a6a0 <col:37, col:65>
| |   `-ParagraphComment 0x2c63a670 <col:37, col:65>
| |     `-TextComment 0x2c63a640 <col:37, col:65> Text=" tendon limit distance-margin"
| |-EnumConstantDecl 0x2c5fae88 <line:325:3> col:3 mjSENS_TENDONLIMITVEL 'int'
| | `-FullComment 0x2c63a770 <col:37, col:58>
| |   `-ParagraphComment 0x2c63a740 <col:37, col:58>
| |     `-TextComment 0x2c63a710 <col:37, col:58> Text=" tendon limit velocity"
| |-EnumConstantDecl 0x2c5faf08 <line:326:3> col:3 mjSENS_TENDONLIMITFRC 'int'
| | `-FullComment 0x2c63a840 <col:37, col:55>
| |   `-ParagraphComment 0x2c63a810 <col:37, col:55>
| |     `-TextComment 0x2c63a7e0 <col:37, col:55> Text=" tendon limit force"
| |-EnumConstantDecl 0x2c5fafb8 <line:329:3> col:3 mjSENS_FRAMEPOS 'int'
| | `-FullComment 0x2c63a910 <col:37, col:48>
| |   `-ParagraphComment 0x2c63a8e0 <col:37, col:48>
| |     `-TextComment 0x2c63a8b0 <col:37, col:48> Text=" 3D position"
| |-EnumConstantDecl 0x2c5fb038 <line:330:3> col:3 mjSENS_FRAMEQUAT 'int'
| | `-FullComment 0x2c63a9f0 <col:37, col:67>
| |   `-ParagraphComment 0x2c63a9b0 <col:37, col:67>
| |     `-TextComment 0x2c63a980 <col:37, col:67> Text=" 4D unit quaternion orientation"
| |-EnumConstantDecl 0x2c5fb0b8 <line:331:3> col:3 mjSENS_FRAMEXAXIS 'int'
| | `-FullComment 0x2c63aac0 <col:37, col:77>
| |   `-ParagraphComment 0x2c63aa90 <col:37, col:77>
| |     `-TextComment 0x2c63aa60 <col:37, col:77> Text=" 3D unit vector: x-axis of object's frame"
| |-EnumConstantDecl 0x2c5fb138 <line:332:3> col:3 mjSENS_FRAMEYAXIS 'int'
| | `-FullComment 0x2c63ab90 <col:37, col:77>
| |   `-ParagraphComment 0x2c63ab60 <col:37, col:77>
| |     `-TextComment 0x2c63ab30 <col:37, col:77> Text=" 3D unit vector: y-axis of object's frame"
| |-EnumConstantDecl 0x2c5fb1b8 <line:333:3> col:3 mjSENS_FRAMEZAXIS 'int'
| | `-FullComment 0x2c63ac60 <col:37, col:77>
| |   `-ParagraphComment 0x2c63ac30 <col:37, col:77>
| |     `-TextComment 0x2c63ac00 <col:37, col:77> Text=" 3D unit vector: z-axis of object's frame"
| |-EnumConstantDecl 0x2c5fb238 <line:334:3> col:3 mjSENS_FRAMELINVEL 'int'
| | `-FullComment 0x2c63ad30 <col:37, col:55>
| |   `-ParagraphComment 0x2c63ad00 <col:37, col:55>
| |     `-TextComment 0x2c63acd0 <col:37, col:55> Text=" 3D linear velocity"
| |-EnumConstantDecl 0x2c5fb2b8 <line:335:3> col:3 mjSENS_FRAMEANGVEL 'int'
| | `-FullComment 0x2c63ae00 <col:37, col:56>
| |   `-ParagraphComment 0x2c63add0 <col:37, col:56>
| |     `-TextComment 0x2c63ada0 <col:37, col:56> Text=" 3D angular velocity"
| |-EnumConstantDecl 0x2c5fb338 <line:336:3> col:3 mjSENS_FRAMELINACC 'int'
| | `-FullComment 0x2c63aed0 <col:37, col:59>
| |   `-ParagraphComment 0x2c63aea0 <col:37, col:59>
| |     `-TextComment 0x2c63ae70 <col:37, col:59> Text=" 3D linear acceleration"
| |-EnumConstantDecl 0x2c5fb3b8 <line:337:3> col:3 mjSENS_FRAMEANGACC 'int'
| | `-FullComment 0x2c63afa0 <col:37, col:60>
| |   `-ParagraphComment 0x2c63af70 <col:37, col:60>
| |     `-TextComment 0x2c63af40 <col:37, col:60> Text=" 3D angular acceleration"
| |-EnumConstantDecl 0x2c5fb468 <line:340:3> col:3 mjSENS_SUBTREECOM 'int'
| | `-FullComment 0x2c63b070 <col:37, col:65>
| |   `-ParagraphComment 0x2c63b040 <col:37, col:65>
| |     `-TextComment 0x2c63b010 <col:37, col:65> Text=" 3D center of mass of subtree"
| |-EnumConstantDecl 0x2c5fb4e8 <line:341:3> col:3 mjSENS_SUBTREELINVEL 'int'
| | `-FullComment 0x2c63b140 <col:37, col:66>
| |   `-ParagraphComment 0x2c63b110 <col:37, col:66>
| |     `-TextComment 0x2c63b0e0 <col:37, col:66> Text=" 3D linear velocity of subtree"
| |-EnumConstantDecl 0x2c5fb568 <line:342:3> col:3 mjSENS_SUBTREEANGMOM 'int'
| | `-FullComment 0x2c63b210 <col:37, col:67>
| |   `-ParagraphComment 0x2c63b1e0 <col:37, col:67>
| |     `-TextComment 0x2c63b1b0 <col:37, col:67> Text=" 3D angular momentum of subtree"
| |-EnumConstantDecl 0x2c5fb618 <line:345:3> col:3 mjSENS_GEOMDIST 'int'
| | `-FullComment 0x2c63b2e0 <col:37, col:70>
| |   `-ParagraphComment 0x2c63b2b0 <col:37, col:70>
| |     `-TextComment 0x2c63b280 <col:37, col:70> Text=" signed distance between two geoms"
| |-EnumConstantDecl 0x2c5fb698 <line:346:3> col:3 mjSENS_GEOMNORMAL 'int'
| | `-FullComment 0x2c63b3b0 <col:37, col:71>
| |   `-ParagraphComment 0x2c63b380 <col:37, col:71>
| |     `-TextComment 0x2c63b350 <col:37, col:71> Text=" normal direction between two geoms"
| |-EnumConstantDecl 0x2c5fb718 <line:347:3> col:3 mjSENS_GEOMFROMTO 'int'
| | `-FullComment 0x2c63b480 <col:37, col:62>
| |   `-ParagraphComment 0x2c63b450 <col:37, col:62>
| |     `-TextComment 0x2c63b420 <col:37, col:62> Text=" segment between two geoms"
| |-EnumConstantDecl 0x2c5fb7c8 <line:350:3> col:3 mjSENS_CLOCK 'int'
| | `-FullComment 0x2c63b550 <col:37, col:52>
| |   `-ParagraphComment 0x2c63b520 <col:37, col:52>
| |     `-TextComment 0x2c63b4f0 <col:37, col:52> Text=" simulation time"
| |-EnumConstantDecl 0x2c5fb878 <line:353:3> col:3 mjSENS_PLUGIN 'int'
| | `-FullComment 0x2c63b620 <col:37, col:54>
| |   `-ParagraphComment 0x2c63b5f0 <col:37, col:54>
| |     `-TextComment 0x2c63b5c0 <col:37, col:54> Text=" plugin-controlled"
| `-EnumConstantDecl 0x2c5fb958 <line:356:3> col:3 mjSENS_USER 'int'
|   `-FullComment 0x2c63b6f0 <col:37, col:81>
|     `-ParagraphComment 0x2c63b6c0 <col:37, col:81>
|       `-TextComment 0x2c63b690 <col:37, col:81> Text=" sensor data provided by mjcb_sensor callback"
|-TypedefDecl 0x2c5fba08 <line:294:1, line:357:3> col:3 mjtSensor 'enum mjtSensor_':'enum mjtSensor_'
| `-ElaboratedType 0x2c5fb9b0 'enum mjtSensor_' sugar
|   `-EnumType 0x2c5f9a20 'enum mjtSensor_'
|     `-Enum 0x2c5f9978 'mjtSensor_'
|-EnumDecl 0x2c5fba78 <line:360:9, line:365:1> line:360:14 mjtStage_
| |-EnumConstantDecl 0x2c5fbba8 <line:361:3, col:25> col:3 mjSTAGE_NONE 'int'
| | |-ConstantExpr 0x2c5fbb88 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5fbb68 <col:25> 'int' 0
| | `-FullComment 0x2c63b7c0 <col:37, col:52>
| |   `-ParagraphComment 0x2c63b790 <col:37, col:52>
| |     `-TextComment 0x2c63b760 <col:37, col:52> Text=" no computations"
| |-EnumConstantDecl 0x2c5fbc28 <line:362:3> col:3 mjSTAGE_POS 'int'
| | `-FullComment 0x2c63b890 <col:37, col:68>
| |   `-ParagraphComment 0x2c63b860 <col:37, col:68>
| |     `-TextComment 0x2c63b830 <col:37, col:68> Text=" position-dependent computations"
| |-EnumConstantDecl 0x2c5fc048 <line:363:3> col:3 mjSTAGE_VEL 'int'
| | `-FullComment 0x2c63b960 <col:37, col:68>
| |   `-ParagraphComment 0x2c63b930 <col:37, col:68>
| |     `-TextComment 0x2c63b900 <col:37, col:68> Text=" velocity-dependent computations"
| `-EnumConstantDecl 0x2c5fc0f8 <line:364:3> col:3 mjSTAGE_ACC 'int'
|   `-FullComment 0x2c6359f0 <col:37, col:78>
|     `-ParagraphComment 0x2c6359c0 <col:37, col:78>
|       `-TextComment 0x2c635990 <col:37, col:78> Text=" acceleration/force-dependent computations"
|-TypedefDecl 0x2c5fc1a8 <line:360:1, line:365:3> col:3 mjtStage 'enum mjtStage_':'enum mjtStage_'
| `-ElaboratedType 0x2c5fc150 'enum mjtStage_' sugar
|   `-EnumType 0x2c5fbb20 'enum mjtStage_'
|     `-Enum 0x2c5fba78 'mjtStage_'
|-EnumDecl 0x2c5fc218 <line:368:9, line:373:1> line:368:14 mjtDataType_
| |-EnumConstantDecl 0x2c5fc348 <line:369:3, col:25> col:3 mjDATATYPE_REAL 'int'
| | |-ConstantExpr 0x2c5fc328 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5fc308 <col:25> 'int' 0
| | `-FullComment 0x2c635ac0 <col:37, col:64>
| |   `-ParagraphComment 0x2c635a90 <col:37, col:64>
| |     `-TextComment 0x2c635a60 <col:37, col:64> Text=" real values, no constraints"
| |-EnumConstantDecl 0x2c5fc3c8 <line:370:3> col:3 mjDATATYPE_POSITIVE 'int'
| | `-FullComment 0x2c635b90 <col:37, col:77>
| |   `-ParagraphComment 0x2c635b60 <col:37, col:77>
| |     `-TextComment 0x2c635b30 <col:37, col:77> Text=" positive values; 0 or negative: inactive"
| |-EnumConstantDecl 0x2c5fc448 <line:371:3> col:3 mjDATATYPE_AXIS 'int'
| | `-FullComment 0x2c635c60 <col:37, col:51>
| |   `-ParagraphComment 0x2c635c30 <col:37, col:51>
| |     `-TextComment 0x2c635c00 <col:37, col:51> Text=" 3D unit vector"
| `-EnumConstantDecl 0x2c5fc4f8 <line:372:3> col:3 mjDATATYPE_QUATERNION 'int'
|   `-FullComment 0x2c635d30 <col:37, col:52>
|     `-ParagraphComment 0x2c635d00 <col:37, col:52>
|       `-TextComment 0x2c635cd0 <col:37, col:52> Text=" unit quaternion"
|-TypedefDecl 0x2c5fc5a8 <line:368:1, line:373:3> col:3 mjtDataType 'enum mjtDataType_':'enum mjtDataType_'
| `-ElaboratedType 0x2c5fc550 'enum mjtDataType_' sugar
|   `-EnumType 0x2c5fc2c0 'enum mjtDataType_'
|     `-Enum 0x2c5fc218 'mjtDataType_'
|-EnumDecl 0x2c5fc618 <line:376:9, line:382:1> line:376:14 mjtSameFrame_
| |-EnumConstantDecl 0x2c5fc748 <line:377:3, col:25> col:3 mjSAMEFRAME_NONE 'int'
| | |-ConstantExpr 0x2c5fc728 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5fc708 <col:25> 'int' 0
| | `-FullComment 0x2c635e00 <col:37, col:49>
| |   `-ParagraphComment 0x2c635dd0 <col:37, col:49>
| |     `-TextComment 0x2c635da0 <col:37, col:49> Text=" no alignment"
| |-EnumConstantDecl 0x2c5fc7c8 <line:378:3> col:3 mjSAMEFRAME_BODY 'int'
| | `-FullComment 0x2c635ed0 <col:37, col:64>
| |   `-ParagraphComment 0x2c635ea0 <col:37, col:64>
| |     `-TextComment 0x2c635e70 <col:37, col:64> Text=" frame is same as body frame"
| |-EnumConstantDecl 0x2c5fc848 <line:379:3> col:3 mjSAMEFRAME_INERTIA 'int'
| | `-FullComment 0x2c635fa0 <col:37, col:68>
| |   `-ParagraphComment 0x2c635f70 <col:37, col:68>
| |     `-TextComment 0x2c635f40 <col:37, col:68> Text=" frame is same as inertial frame"
| |-EnumConstantDecl 0x2c5fc8c8 <line:380:3> col:3 mjSAMEFRAME_BODYROT 'int'
| | `-FullComment 0x2c636070 <col:37, col:82>
| |   `-ParagraphComment 0x2c636040 <col:37, col:82>
| |     `-TextComment 0x2c636010 <col:37, col:82> Text=" frame orientation is same as body orientation"
| `-EnumConstantDecl 0x2c5fc978 <line:381:3> col:3 mjSAMEFRAME_INERTIAROT 'int'
|   `-FullComment 0x2c636140 <col:37, col:85>
|     `-ParagraphComment 0x2c636110 <col:37, col:85>
|       `-TextComment 0x2c6360e0 <col:37, col:85> Text=" frame orientation is same as inertia orientation"
|-TypedefDecl 0x2c5fca28 <line:376:1, line:382:3> col:3 mjtSameFrame 'enum mjtSameFrame_':'enum mjtSameFrame_'
| `-ElaboratedType 0x2c5fc9d0 'enum mjtSameFrame_' sugar
|   `-EnumType 0x2c5fc6c0 'enum mjtSameFrame_'
|     `-Enum 0x2c5fc618 'mjtSameFrame_'
|-EnumDecl 0x2c5fca98 <line:385:9, line:390:1> line:385:14 mjtLRMode_
| |-EnumConstantDecl 0x2c5fcbc8 <line:386:3, col:21> col:3 mjLRMODE_NONE 'int'
| | |-ConstantExpr 0x2c5fcba8 <col:21> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5fcb88 <col:21> 'int' 0
| | `-FullComment 0x2c636210 <col:37, col:65>
| |   `-ParagraphComment 0x2c6361e0 <col:37, col:65>
| |     `-TextComment 0x2c6361b0 <col:37, col:65> Text=" do not process any actuators"
| |-EnumConstantDecl 0x2c5fcc48 <line:387:3> col:3 mjLRMODE_MUSCLE 'int'
| | `-FullComment 0x2c6362e0 <col:37, col:61>
| |   `-ParagraphComment 0x2c6362b0 <col:37, col:61>
| |     `-TextComment 0x2c636280 <col:37, col:61> Text=" process muscle actuators"
| |-EnumConstantDecl 0x2c5fccc8 <line:388:3> col:3 mjLRMODE_MUSCLEUSER 'int'
| | `-FullComment 0x2c6363b0 <col:37, col:70>
| |   `-ParagraphComment 0x2c636380 <col:37, col:70>
| |     `-TextComment 0x2c636350 <col:37, col:70> Text=" process muscle and user actuators"
| `-EnumConstantDecl 0x2c5fcd78 <line:389:3> col:3 mjLRMODE_ALL 'int'
|   `-FullComment 0x2c636480 <col:37, col:58>
|     `-ParagraphComment 0x2c636450 <col:37, col:58>
|       `-TextComment 0x2c636420 <col:37, col:58> Text=" process all actuators"
|-TypedefDecl 0x2c5fce28 <line:385:1, line:390:3> col:3 mjtLRMode 'enum mjtLRMode_':'enum mjtLRMode_'
| `-ElaboratedType 0x2c5fcdd0 'enum mjtLRMode_' sugar
|   `-EnumType 0x2c5fcb40 'enum mjtLRMode_'
|     `-Enum 0x2c5fca98 'mjtLRMode_'
|-EnumDecl 0x2c5fce98 <line:393:9, line:399:1> line:393:14 mjtFlexSelf_
| |-EnumConstantDecl 0x2c5fcfc8 <line:394:3, col:23> col:3 mjFLEXSELF_NONE 'int'
| | |-ConstantExpr 0x2c5fcfa8 <col:23> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2c5fcf88 <col:23> 'int' 0
| | `-FullComment 0x2c636550 <col:37, col:55>
| |   `-ParagraphComment 0x2c636520 <col:37, col:55>
| |     `-TextComment 0x2c6364f0 <col:37, col:55> Text=" no self-collisions"
| |-EnumConstantDecl 0x2c5ff068 <line:395:3> col:3 mjFLEXSELF_NARROW 'int'
| | `-FullComment 0x2c636620 <col:37, col:78>
| |   `-ParagraphComment 0x2c6365f0 <col:37, col:78>
| |     `-TextComment 0x2c6365c0 <col:37, col:78> Text=" skip midphase, go directly to narrowphase"
| |-EnumConstantDecl 0x2c5ff0e8 <line:396:3> col:3 mjFLEXSELF_BVH 'int'
| | `-FullComment 0x2c6366f0 <col:37, col:78>
| |   `-ParagraphComment 0x2c6366c0 <col:37, col:78>
| |     `-TextComment 0x2c636690 <col:37, col:78> Text=" use BVH in midphase (if midphase enabled)"
| |-EnumConstantDecl 0x2c5ff168 <line:397:3> col:3 mjFLEXSELF_SAP 'int'
| | `-FullComment 0x2c6367c0 <col:37, col:56>
| |   `-ParagraphComment 0x2c636790 <col:37, col:56>
| |     `-TextComment 0x2c636760 <col:37, col:56> Text=" use SAP in midphase"
| `-EnumConstantDecl 0x2c5ff218 <line:398:3> col:3 mjFLEXSELF_AUTO 'int'
|   `-FullComment 0x2c636890 <col:37, col:77>
|     `-ParagraphComment 0x2c636860 <col:37, col:77>
|       `-TextComment 0x2c636830 <col:37, col:77> Text=" choose between BVH and SAP automatically"
|-TypedefDecl 0x2c5ff2c8 <line:393:1, line:399:3> col:3 mjtFlexSelf 'enum mjtFlexSelf_':'enum mjtFlexSelf_'
| `-ElaboratedType 0x2c5ff270 'enum mjtFlexSelf_' sugar
|   `-EnumType 0x2c5fcf40 'enum mjtFlexSelf_'
|     `-Enum 0x2c5fce98 'mjtFlexSelf_'
|-RecordDecl 0x2c5ff360 <line:404:1, line:418:1> line:404:8 struct mjLROpt_ definition
| |-FullComment 0x2c636960 <line:402:3, col:100>
| | `-ParagraphComment 0x2c636930 <col:3, col:100>
| |   `-TextComment 0x2c636900 <col:3, col:100> Text="---------------------------------- mjLROpt -------------------------------------------------------"
| |-FieldDecl 0x2c5ff470 <line:406:3, col:7> col:7 mode 'int'
| | `-FullComment 0x2c63daa0 <col:37, col:75>
| |   `-ParagraphComment 0x2c63da70 <col:37, col:75>
| |     `-TextComment 0x2c63da40 <col:37, col:75> Text=" which actuators to process (mjtLRMode)"
| |-FieldDecl 0x2c5ff500 <line:407:3, col:7> col:7 useexisting 'int'
| | `-FullComment 0x2c63db70 <col:37, col:75>
| |   `-ParagraphComment 0x2c63db40 <col:37, col:75>
| |     `-TextComment 0x2c63db10 <col:37, col:75> Text=" use existing length range if available"
| |-FieldDecl 0x2c5ff590 <line:408:3, col:7> col:7 uselimit 'int'
| | `-FullComment 0x2c63dc40 <col:37, col:77>
| |   `-ParagraphComment 0x2c63dc10 <col:37, col:77>
| |     `-TextComment 0x2c63dbe0 <col:37, col:77> Text=" use joint and tendon limits if available"
| |-FieldDecl 0x2c5ff670 <line:411:3, col:10> col:10 accel 'mjtNum':'double'
| | `-FullComment 0x2c63dd10 <col:37, col:78>
| |   `-ParagraphComment 0x2c63dce0 <col:37, col:78>
| |     `-TextComment 0x2c63dcb0 <col:37, col:78> Text=" target acceleration used to compute force"
| |-FieldDecl 0x2c5ff6f8 <line:412:3, col:10> col:10 maxforce 'mjtNum':'double'
| | `-FullComment 0x2c63dde0 <col:37, col:63>
| |   `-ParagraphComment 0x2c63ddb0 <col:37, col:63>
| |     `-TextComment 0x2c63dd80 <col:37, col:63> Text=" maximum force; 0: no limit"
| |-FieldDecl 0x2c5ff788 <line:413:3, col:10> col:10 timeconst 'mjtNum':'double'
| | `-FullComment 0x2c63deb0 <col:37, col:83>
| |   `-ParagraphComment 0x2c63de80 <col:37, col:83>
| |     `-TextComment 0x2c63de50 <col:37, col:83> Text=" time constant for velocity reduction; min 0.01"
| |-FieldDecl 0x2c5ff818 <line:414:3, col:10> col:10 timestep 'mjtNum':'double'
| | `-FullComment 0x2c63df80 <col:37, col:82>
| |   `-ParagraphComment 0x2c63df50 <col:37, col:82>
| |     `-TextComment 0x2c63df20 <col:37, col:82> Text=" simulation timestep; 0: use mjOption.timestep"
| |-FieldDecl 0x2c5ff8a8 <line:415:3, col:10> col:10 inttotal 'mjtNum':'double'
| | `-FullComment 0x2c63e050 <col:37, col:67>
| |   `-ParagraphComment 0x2c63e020 <col:37, col:67>
| |     `-TextComment 0x2c63dff0 <col:37, col:67> Text=" total simulation time interval"
| |-FieldDecl 0x2c5ff938 <line:416:3, col:10> col:10 interval 'mjtNum':'double'
| | `-FullComment 0x2c63e120 <col:37, col:74>
| |   `-ParagraphComment 0x2c63e0f0 <col:37, col:74>
| |     `-TextComment 0x2c63e0c0 <col:37, col:74> Text=" evaluation time interval (at the end)"
| `-FieldDecl 0x2c5ff9c8 <line:417:3, col:10> col:10 tolrange 'mjtNum':'double'
|   `-FullComment 0x2c63e1f0 <col:37, col:78>
|     `-ParagraphComment 0x2c63e1c0 <col:37, col:78>
|       `-TextComment 0x2c63e190 <col:37, col:78> Text=" convergence tolerance (relative to range)"
|-TypedefDecl 0x2c5ffaa0 <line:419:1, col:25> col:25 mjLROpt 'struct mjLROpt_':'struct mjLROpt_'
| `-ElaboratedType 0x2c5ffa50 'struct mjLROpt_' sugar
|   `-RecordType 0x2c5ff3e0 'struct mjLROpt_'
|     `-Record 0x2c5ff360 'mjLROpt_'
|-RecordDecl 0x2c5ffb28 <line:424:1, line:426:1> line:424:8 struct mjVFS_ definition
| |-FullComment 0x2c63e2c0 <line:422:3, col:100>
| | `-ParagraphComment 0x2c63e290 <col:3, col:100>
| |   `-TextComment 0x2c63e260 <col:3, col:100> Text="---------------------------------- mjVFS ---------------------------------------------------------"
| `-FieldDecl 0x2c5ffc10 <line:425:3, col:9> col:9 impl_ 'void *'
|   `-FullComment 0x2c63e390 <col:49, col:79>
|     `-ParagraphComment 0x2c63e360 <col:49, col:79>
|       `-TextComment 0x2c63e330 <col:49, col:79> Text=" internal pointer to VFS memory"
|-TypedefDecl 0x2c5ffce0 <line:427:1, col:23> col:23 mjVFS 'struct mjVFS_':'struct mjVFS_'
| `-ElaboratedType 0x2c5ffc90 'struct mjVFS_' sugar
|   `-RecordType 0x2c5ffbb0 'struct mjVFS_'
|     `-Record 0x2c5ffb28 'mjVFS_'
|-RecordDecl 0x2c5ffd68 <line:431:1, line:472:1> line:431:8 struct mjOption_ definition
| |-FullComment 0x2c63e460 <line:429:3, col:100>
| | `-ParagraphComment 0x2c63e430 <col:3, col:100>
| |   `-TextComment 0x2c63e400 <col:3, col:100> Text="---------------------------------- mjOption ------------------------------------------------------"
| |-FieldDecl 0x2c5ffe78 <line:433:3, col:10> col:10 timestep 'mjtNum':'double'
| | `-FullComment 0x2c63e530 <col:37, col:45>
| |   `-ParagraphComment 0x2c63e500 <col:37, col:45>
| |     `-TextComment 0x2c63e4d0 <col:37, col:45> Text=" timestep"
| |-FieldDecl 0x2c5fff08 <line:434:3, col:10> col:10 apirate 'mjtNum':'double'
| | `-FullComment 0x2c63e600 <col:37, col:68>
| |   `-ParagraphComment 0x2c63e5d0 <col:37, col:68>
| |     `-TextComment 0x2c63e5a0 <col:37, col:68> Text=" update rate for remote API (Hz)"
| |-FieldDecl 0x2c5fffc8 <line:437:3, col:10> col:10 impratio 'mjtNum':'double'
| | `-FullComment 0x2c63e6d0 <col:37, col:82>
| |   `-ParagraphComment 0x2c63e6a0 <col:37, col:82>
| |     `-TextComment 0x2c63e670 <col:37, col:82> Text=" ratio of friction-to-normal contact impedance"
| |-FieldDecl 0x2c600088 <line:438:3, col:10> col:10 tolerance 'mjtNum':'double'
| | `-FullComment 0x2c63e7a0 <col:37, col:58>
| |   `-ParagraphComment 0x2c63e770 <col:37, col:58>
| |     `-TextComment 0x2c63e740 <col:37, col:58> Text=" main solver tolerance"
| |-FieldDecl 0x2c600118 <line:439:3, col:10> col:10 ls_tolerance 'mjtNum':'double'
| | `-FullComment 0x2c63e870 <col:37, col:67>
| |   `-ParagraphComment 0x2c63e840 <col:37, col:67>
| |     `-TextComment 0x2c63e810 <col:37, col:67> Text=" CG/Newton linesearch tolerance"
| |-FieldDecl 0x2c6001a8 <line:440:3, col:10> col:10 noslip_tolerance 'mjtNum':'double'
| | `-FullComment 0x2c63e940 <col:37, col:60>
| |   `-ParagraphComment 0x2c63e910 <col:37, col:60>
| |     `-TextComment 0x2c63e8e0 <col:37, col:60> Text=" noslip solver tolerance"
| |-FieldDecl 0x2c600238 <line:441:3, col:10> col:10 ccd_tolerance 'mjtNum':'double'
| | `-FullComment 0x2c63ea20 <col:37, col:70>
| |   `-ParagraphComment 0x2c63e9e0 <col:37, col:70>
| |     `-TextComment 0x2c63e9b0 <col:37, col:70> Text=" convex collision solver tolerance"
| |-FieldDecl 0x2c6003c8 <line:444:3, col:19> col:10 gravity 'mjtNum[3]'
| | `-FullComment 0x2c63eaf0 <col:37, col:63>
| |   `-ParagraphComment 0x2c63eac0 <col:37, col:63>
| |     `-TextComment 0x2c63ea90 <col:37, col:63> Text=" gravitational acceleration"
| |-FieldDecl 0x2c6004a8 <line:445:3, col:16> col:10 wind 'mjtNum[3]'
| | `-FullComment 0x2c63ebc0 <col:37, col:72>
| |   `-ParagraphComment 0x2c63eb90 <col:37, col:72>
| |     `-TextComment 0x2c63eb60 <col:37, col:72> Text=" wind (for lift, drag and viscosity)"
| |-FieldDecl 0x2c600588 <line:446:3, col:20> col:10 magnetic 'mjtNum[3]'
| | `-FullComment 0x2c63ec90 <col:37, col:57>
| |   `-ParagraphComment 0x2c63ec60 <col:37, col:57>
| |     `-TextComment 0x2c63ec30 <col:37, col:57> Text=" global magnetic flux"
| |-FieldDecl 0x2c600618 <line:447:3, col:10> col:10 density 'mjtNum':'double'
| | `-FullComment 0x2c63ed60 <col:37, col:54>
| |   `-ParagraphComment 0x2c63ed30 <col:37, col:54>
| |     `-TextComment 0x2c63ed00 <col:37, col:54> Text=" density of medium"
| |-FieldDecl 0x2c6006a8 <line:448:3, col:10> col:10 viscosity 'mjtNum':'double'
| | `-FullComment 0x2c63ee30 <col:37, col:56>
| |   `-ParagraphComment 0x2c63ee00 <col:37, col:56>
| |     `-TextComment 0x2c63edd0 <col:37, col:56> Text=" viscosity of medium"
| |-FieldDecl 0x2c600768 <line:451:3, col:10> col:10 o_margin 'mjtNum':'double'
| | `-FullComment 0x2c63ef00 <col:37, col:43>
| |   `-ParagraphComment 0x2c63eed0 <col:37, col:43>
| |     `-TextComment 0x2c63eea0 <col:37, col:43> Text=" margin"
| |-FieldDecl 0x2c6008c8 <line:452:3, col:25> col:10 o_solref 'mjtNum[2]'
| | `-FullComment 0x2c63efd0 <col:37, col:43>
| |   `-ParagraphComment 0x2c63efa0 <col:37, col:43>
| |     `-TextComment 0x2c63ef70 <col:37, col:43> Text=" solref"
| |-FieldDecl 0x2c600a28 <line:453:3, col:25> col:10 o_solimp 'mjtNum[5]'
| | `-FullComment 0x2c63f0a0 <col:37, col:43>
| |   `-ParagraphComment 0x2c63f070 <col:37, col:43>
| |     `-TextComment 0x2c63f040 <col:37, col:43> Text=" solimp"
| |-FieldDecl 0x2c600b08 <line:454:3, col:22> col:10 o_friction 'mjtNum[5]'
| | `-FullComment 0x2c63f170 <col:37, col:45>
| |   `-ParagraphComment 0x2c63f140 <col:37, col:45>
| |     `-TextComment 0x2c63f110 <col:37, col:45> Text=" friction"
| |-FieldDecl 0x2c600bd0 <line:457:3, col:7> col:7 integrator 'int'
| | `-FullComment 0x2c63f240 <col:37, col:69>
| |   `-ParagraphComment 0x2c63f210 <col:37, col:69>
| |     `-TextComment 0x2c63f1e0 <col:37, col:69> Text=" integration mode (mjtIntegrator)"
| |-FieldDecl 0x2c600c60 <line:458:3, col:7> col:7 cone 'int'
| | `-FullComment 0x2c63f310 <col:37, col:68>
| |   `-ParagraphComment 0x2c63f2e0 <col:37, col:68>
| |     `-TextComment 0x2c63f2b0 <col:37, col:68> Text=" type of friction cone (mjtCone)"
| |-FieldDecl 0x2c600cf0 <line:459:3, col:7> col:7 jacobian 'int'
| | `-FullComment 0x2c63f3e0 <col:37, col:67>
| |   `-ParagraphComment 0x2c63f3b0 <col:37, col:67>
| |     `-TextComment 0x2c63f380 <col:37, col:67> Text=" type of Jacobian (mjtJacobian)"
| |-FieldDecl 0x2c600d80 <line:460:3, col:7> col:7 solver 'int'
| | `-FullComment 0x2c63f4b0 <col:37, col:65>
| |   `-ParagraphComment 0x2c63f480 <col:37, col:65>
| |     `-TextComment 0x2c63f450 <col:37, col:65> Text=" solver algorithm (mjtSolver)"
| |-FieldDecl 0x2c600e10 <line:461:3, col:7> col:7 iterations 'int'
| | `-FullComment 0x2c63f580 <col:37, col:77>
| |   `-ParagraphComment 0x2c63f550 <col:37, col:77>
| |     `-TextComment 0x2c63f520 <col:37, col:77> Text=" maximum number of main solver iterations"
| |-FieldDecl 0x2c600ea0 <line:462:3, col:7> col:7 ls_iterations 'int'
| | `-FullComment 0x2c63f650 <col:37, col:86>
| |   `-ParagraphComment 0x2c63f620 <col:37, col:86>
| |     `-TextComment 0x2c63f5f0 <col:37, col:86> Text=" maximum number of CG/Newton linesearch iterations"
| |-FieldDecl 0x2c600f30 <line:463:3, col:7> col:7 noslip_iterations 'int'
| | `-FullComment 0x2c63f720 <col:37, col:79>
| |   `-ParagraphComment 0x2c63f6f0 <col:37, col:79>
| |     `-TextComment 0x2c63f6c0 <col:37, col:79> Text=" maximum number of noslip solver iterations"
| |-FieldDecl 0x2c600fc0 <line:464:3, col:7> col:7 ccd_iterations 'int'
| | `-FullComment 0x2c63f7f0 <col:37, col:89>
| |   `-ParagraphComment 0x2c63f7c0 <col:37, col:89>
| |     `-TextComment 0x2c63f790 <col:37, col:89> Text=" maximum number of convex collision solver iterations"
| |-FieldDecl 0x2c6041c0 <line:465:3, col:7> col:7 disableflags 'int'
| | `-FullComment 0x2c63f8c0 <col:37, col:78>
| |   `-ParagraphComment 0x2c63f890 <col:37, col:78>
| |     `-TextComment 0x2c63f860 <col:37, col:78> Text=" bit flags for disabling standard features"
| |-FieldDecl 0x2c604250 <line:466:3, col:7> col:7 enableflags 'int'
| | `-FullComment 0x2c63f990 <col:37, col:77>
| |   `-ParagraphComment 0x2c63f960 <col:37, col:77>
| |     `-TextComment 0x2c63f930 <col:37, col:77> Text=" bit flags for enabling optional features"
| |-FieldDecl 0x2c6042e0 <line:467:3, col:7> col:7 disableactuator 'int'
| | `-FullComment 0x2c63fa80 <col:37, col:82>
| |   `-ParagraphComment 0x2c63fa50 <col:37, col:82>
| |     `-TextComment 0x2c63fa20 <col:37, col:82> Text=" bit flags for disabling actuators by group id"
| |-FieldDecl 0x2c6043a0 <line:470:3, col:7> col:7 sdf_initpoints 'int'
| | `-FullComment 0x2c63fb50 <col:37, col:83>
| |   `-ParagraphComment 0x2c63fb20 <col:37, col:83>
| |     `-TextComment 0x2c63faf0 <col:37, col:83> Text=" number of starting points for gradient descent"
| `-FieldDecl 0x2c604430 <line:471:3, col:7> col:7 sdf_iterations 'int'
|   `-FullComment 0x2c63fc20 <col:37, col:82>
|     `-ParagraphComment 0x2c63fbf0 <col:37, col:82>
|       `-TextComment 0x2c63fbc0 <col:37, col:82> Text=" max number of iterations for gradient descent"
|-TypedefDecl 0x2c604500 <line:473:1, col:26> col:26 referenced mjOption 'struct mjOption_':'struct mjOption_'
| `-ElaboratedType 0x2c6044b0 'struct mjOption_' sugar
|   `-RecordType 0x2c5ffdf0 'struct mjOption_'
|     `-Record 0x2c5ffd68 'mjOption_'
|-RecordDecl 0x2c604588 <line:478:1, line:572:1> line:478:8 struct mjVisual_ definition
| |-FullComment 0x2c63fcf0 <line:476:3, col:100>
| | `-ParagraphComment 0x2c63fcc0 <col:3, col:100>
| |   `-TextComment 0x2c63fc90 <col:3, col:100> Text="---------------------------------- mjVisual ------------------------------------------------------"
| |-RecordDecl 0x2c604658 <line:479:3, line:492:3> line:479:3 struct definition
| | |-FieldDecl 0x2c604740 <line:480:5, col:9> col:9 orthographic 'int'
| | | `-FullComment 0x2c63fdc0 <col:37, col:84>
| | |   `-ParagraphComment 0x2c63fd90 <col:37, col:84>
| | |     `-TextComment 0x2c63fd60 <col:37, col:84> Text=" is the free camera orthographic (0: no, 1: yes)"
| | |-FieldDecl 0x2c6047d0 <line:481:5, col:11> col:11 fovy 'float'
| | | `-FullComment 0x2c63fe90 <col:37, col:100>
| | |   `-ParagraphComment 0x2c63fe60 <col:37, col:100>
| | |     `-TextComment 0x2c63fe30 <col:37, col:100> Text=" y field-of-view of free camera (orthographic ? length : degree)"
| | |-FieldDecl 0x2c604860 <line:482:5, col:11> col:11 ipd 'float'
| | | `-FullComment 0x2c63ff60 <col:37, col:76>
| | |   `-ParagraphComment 0x2c63ff30 <col:37, col:76>
| | |     `-TextComment 0x2c63ff00 <col:37, col:76> Text=" inter-pupilary distance for free camera"
| | |-FieldDecl 0x2c6048f0 <line:483:5, col:11> col:11 azimuth 'float'
| | | `-FullComment 0x2c640030 <col:37, col:77>
| | |   `-ParagraphComment 0x2c640000 <col:37, col:77>
| | |     `-TextComment 0x2c63ffd0 <col:37, col:77> Text=" initial azimuth of free camera (degrees)"
| | |-FieldDecl 0x2c604980 <line:484:5, col:11> col:11 elevation 'float'
| | | `-FullComment 0x2c640100 <col:37, col:79>
| | |   `-ParagraphComment 0x2c6400d0 <col:37, col:79>
| | |     `-TextComment 0x2c6400a0 <col:37, col:79> Text=" initial elevation of free camera (degrees)"
| | |-FieldDecl 0x2c604a10 <line:485:5, col:11> col:11 linewidth 'float'
| | | `-FullComment 0x2c6401d0 <col:37, col:79>
| | |   `-ParagraphComment 0x2c6401a0 <col:37, col:79>
| | |     `-TextComment 0x2c640170 <col:37, col:79> Text=" line width for wireframe and ray rendering"
| | |-FieldDecl 0x2c604aa0 <line:486:5, col:11> col:11 glow 'float'
| | | `-FullComment 0x2c6402a0 <col:37, col:71>
| | |   `-ParagraphComment 0x2c640270 <col:37, col:71>
| | |     `-TextComment 0x2c640240 <col:37, col:71> Text=" glow coefficient for selected body"
| | |-FieldDecl 0x2c604b30 <line:487:5, col:11> col:11 realtime 'float'
| | | `-FullComment 0x2c640370 <col:37, col:76>
| | |   `-ParagraphComment 0x2c640340 <col:37, col:76>
| | |     `-TextComment 0x2c640310 <col:37, col:76> Text=" initial real-time factor (1: real time)"
| | |-FieldDecl 0x2c604bc0 <line:488:5, col:11> col:11 offwidth 'int'
| | | `-FullComment 0x2c640440 <col:37, col:62>
| | |   `-ParagraphComment 0x2c640410 <col:37, col:62>
| | |     `-TextComment 0x2c6403e0 <col:37, col:62> Text=" width of offscreen buffer"
| | |-FieldDecl 0x2c604c50 <line:489:5, col:11> col:11 offheight 'int'
| | | `-FullComment 0x2c640510 <col:37, col:63>
| | |   `-ParagraphComment 0x2c6404e0 <col:37, col:63>
| | |     `-TextComment 0x2c6404b0 <col:37, col:63> Text=" height of offscreen buffer"
| | |-FieldDecl 0x2c604ce0 <line:490:5, col:11> col:11 ellipsoidinertia 'int'
| | | `-FullComment 0x2c6405e0 <col:37, col:90>
| | |   `-ParagraphComment 0x2c6405b0 <col:37, col:90>
| | |     `-TextComment 0x2c640580 <col:37, col:90> Text=" geom for inertia visualization (0: box, 1: ellipsoid)"
| | `-FieldDecl 0x2c604d70 <line:491:5, col:11> col:11 bvactive 'int'
| |   `-FullComment 0x2c6406b0 <col:37, col:86>
| |     `-ParagraphComment 0x2c640680 <col:37, col:86>
| |       `-TextComment 0x2c640650 <col:37, col:86> Text=" visualize active bounding volumes (0: no, 1: yes)"
| |-FieldDecl 0x2c604e48 <line:479:3, line:492:5> col:5 global 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:479:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:479:3)'
| |-RecordDecl 0x2c604e98 <line:494:3, line:500:3> line:494:3 struct definition
| | |-FieldDecl 0x2c604f80 <line:495:5, col:11> col:11 shadowsize 'int'
| | | `-FullComment 0x2c640780 <col:37, col:62>
| | |   `-ParagraphComment 0x2c640750 <col:37, col:62>
| | |     `-TextComment 0x2c640720 <col:37, col:62> Text=" size of shadowmap texture"
| | |-FieldDecl 0x2c605010 <line:496:5, col:11> col:11 offsamples 'int'
| | | `-FullComment 0x2c640850 <col:37, col:83>
| | |   `-ParagraphComment 0x2c640820 <col:37, col:83>
| | |     `-TextComment 0x2c6407f0 <col:37, col:83> Text=" number of multisamples for offscreen rendering"
| | |-FieldDecl 0x2c6050a0 <line:497:5, col:11> col:11 numslices 'int'
| | | `-FullComment 0x2c640920 <col:37, col:78>
| | |   `-ParagraphComment 0x2c6408f0 <col:37, col:78>
| | |     `-TextComment 0x2c6408c0 <col:37, col:78> Text=" number of slices for builtin geom drawing"
| | |-FieldDecl 0x2c605130 <line:498:5, col:11> col:11 numstacks 'int'
| | | `-FullComment 0x2c6409f0 <col:37, col:78>
| | |   `-ParagraphComment 0x2c6409c0 <col:37, col:78>
| | |     `-TextComment 0x2c640990 <col:37, col:78> Text=" number of stacks for builtin geom drawing"
| | `-FieldDecl 0x2c6052d0 <line:499:5, col:11> col:11 numquads 'int'
| |   `-FullComment 0x2c640ad0 <col:37, col:70>
| |     `-ParagraphComment 0x2c640aa0 <col:37, col:70>
| |       `-TextComment 0x2c640a70 <col:37, col:70> Text=" number of quads for box rendering"
| |-FieldDecl 0x2c6053a8 <line:494:3, line:500:5> col:5 quality 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:494:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:494:3)'
| |-RecordDecl 0x2c6053f8 <line:502:3, line:507:3> line:502:3 struct definition
| | |-FieldDecl 0x2c605570 <line:503:5, col:20> col:11 ambient 'float[3]'
| | | `-FullComment 0x2c640ba0 <col:37, col:58>
| | |   `-ParagraphComment 0x2c640b70 <col:37, col:58>
| | |     `-TextComment 0x2c640b40 <col:37, col:58> Text=" ambient rgb (alpha=1)"
| | |-FieldDecl 0x2c605650 <line:504:5, col:20> col:11 diffuse 'float[3]'
| | | `-FullComment 0x2c640c70 <col:37, col:58>
| | |   `-ParagraphComment 0x2c640c40 <col:37, col:58>
| | |     `-TextComment 0x2c640c10 <col:37, col:58> Text=" diffuse rgb (alpha=1)"
| | |-FieldDecl 0x2c605730 <line:505:5, col:21> col:11 specular 'float[3]'
| | | `-FullComment 0x2c640d40 <col:37, col:59>
| | |   `-ParagraphComment 0x2c640d10 <col:37, col:59>
| | |     `-TextComment 0x2c640ce0 <col:37, col:59> Text=" specular rgb (alpha=1)"
| | `-FieldDecl 0x2c6057c0 <line:506:5, col:11> col:11 active 'int'
| |   `-FullComment 0x2c640e10 <col:37, col:56>
| |     `-ParagraphComment 0x2c640de0 <col:37, col:56>
| |       `-TextComment 0x2c640db0 <col:37, col:56> Text=" is headlight active"
| |-FieldDecl 0x2c605898 <line:502:3, line:507:5> col:5 headlight 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:502:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:502:3)'
| |-RecordDecl 0x2c6058e8 <line:509:3, line:523:3> line:509:3 struct definition
| | |-FieldDecl 0x2c6059d0 <line:510:5, col:11> col:11 stiffness 'float'
| | | `-FullComment 0x2c640ee0 <col:37, col:80>
| | |   `-ParagraphComment 0x2c640eb0 <col:37, col:80>
| | |     `-TextComment 0x2c640e80 <col:37, col:80> Text=" mouse perturbation stiffness (space->force)"
| | |-FieldDecl 0x2c605a60 <line:511:5, col:11> col:11 stiffnessrot 'float'
| | | `-FullComment 0x2c640fb0 <col:37, col:81>
| | |   `-ParagraphComment 0x2c640f80 <col:37, col:81>
| | |     `-TextComment 0x2c640f50 <col:37, col:81> Text=" mouse perturbation stiffness (space->torque)"
| | |-FieldDecl 0x2c605af0 <line:512:5, col:11> col:11 force 'float'
| | | `-FullComment 0x2c641080 <col:37, col:68>
| | |   `-ParagraphComment 0x2c641050 <col:37, col:68>
| | |     `-TextComment 0x2c641020 <col:37, col:68> Text=" from force units to space units"
| | |-FieldDecl 0x2c605b80 <line:513:5, col:11> col:11 torque 'float'
| | | `-FullComment 0x2c641150 <col:37, col:69>
| | |   `-ParagraphComment 0x2c641120 <col:37, col:69>
| | |     `-TextComment 0x2c6410f0 <col:37, col:69> Text=" from torque units to space units"
| | |-FieldDecl 0x2c605c10 <line:514:5, col:11> col:11 alpha 'float'
| | | `-FullComment 0x2c641220 <col:37, col:83>
| | |   `-ParagraphComment 0x2c6411f0 <col:37, col:83>
| | |     `-TextComment 0x2c6411c0 <col:37, col:83> Text=" scale geom alphas when transparency is enabled"
| | |-FieldDecl 0x2c605ca0 <line:515:5, col:11> col:11 fogstart 'float'
| | | `-FullComment 0x2c6412f0 <col:37, col:88>
| | |   `-ParagraphComment 0x2c6412c0 <col:37, col:88>
| | |     `-TextComment 0x2c641290 <col:37, col:88> Text=" OpenGL fog starts at fogstart * mjModel.stat.extent"
| | |-FieldDecl 0x2c605d30 <line:516:5, col:11> col:11 fogend 'float'
| | | `-FullComment 0x2c6413c0 <col:37, col:84>
| | |   `-ParagraphComment 0x2c641390 <col:37, col:84>
| | |     `-TextComment 0x2c641360 <col:37, col:84> Text=" OpenGL fog ends at fogend * mjModel.stat.extent"
| | |-FieldDecl 0x2c605dc0 <line:517:5, col:11> col:11 znear 'float'
| | | `-FullComment 0x2c641490 <col:37, col:86>
| | |   `-ParagraphComment 0x2c641460 <col:37, col:86>
| | |     `-TextComment 0x2c641430 <col:37, col:86> Text=" near clipping plane = znear * mjModel.stat.extent"
| | |-FieldDecl 0x2c605e50 <line:518:5, col:11> col:11 zfar 'float'
| | | `-FullComment 0x2c641560 <col:37, col:84>
| | |   `-ParagraphComment 0x2c641530 <col:37, col:84>
| | |     `-TextComment 0x2c641500 <col:37, col:84> Text=" far clipping plane = zfar * mjModel.stat.extent"
| | |-FieldDecl 0x2c605ee0 <line:519:5, col:11> col:11 haze 'float'
| | | `-FullComment 0x2c641630 <col:37, col:47>
| | |   `-ParagraphComment 0x2c641600 <col:37, col:47>
| | |     `-TextComment 0x2c6415d0 <col:37, col:47> Text=" haze ratio"
| | |-FieldDecl 0x2c605f70 <line:520:5, col:11> col:11 shadowclip 'float'
| | | `-FullComment 0x2c641700 <col:37, col:88>
| | |   `-ParagraphComment 0x2c6416d0 <col:37, col:88>
| | |     `-TextComment 0x2c6416a0 <col:37, col:88> Text=" directional light: shadowclip * mjModel.stat.extent"
| | |-FieldDecl 0x2c606000 <line:521:5, col:11> col:11 shadowscale 'float'
| | | `-FullComment 0x2c6417d0 <col:37, col:75>
| | |   `-ParagraphComment 0x2c6417a0 <col:37, col:75>
| | |     `-TextComment 0x2c641770 <col:37, col:75> Text=" spot light: shadowscale * light.cutoff"
| | `-FieldDecl 0x2c606090 <line:522:5, col:11> col:11 actuatortendon 'float'
| |   `-FullComment 0x2c6418a0 <col:37, col:55>
| |     `-ParagraphComment 0x2c641870 <col:37, col:55>
| |       `-TextComment 0x2c641840 <col:37, col:55> Text=" scale tendon width"
| |-FieldDecl 0x2c606168 <line:509:3, line:523:5> col:5 map 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:509:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:509:3)'
| |-RecordDecl 0x2c6061b8 <line:525:3, line:543:3> line:525:3 struct definition
| | |-FieldDecl 0x2c606820 <line:526:5, col:11> col:11 forcewidth 'float'
| | | `-FullComment 0x2c641970 <col:37, col:57>
| | |   `-ParagraphComment 0x2c641940 <col:37, col:57>
| | |     `-TextComment 0x2c641910 <col:37, col:57> Text=" width of force arrow"
| | |-FieldDecl 0x2c6068b0 <line:527:5, col:11> col:11 contactwidth 'float'
| | | `-FullComment 0x2c641a50 <col:37, col:50>
| | |   `-ParagraphComment 0x2c641a10 <col:37, col:50>
| | |     `-TextComment 0x2c6419e0 <col:37, col:50> Text=" contact width"
| | |-FieldDecl 0x2c606940 <line:528:5, col:11> col:11 contactheight 'float'
| | | `-FullComment 0x2c641b20 <col:37, col:51>
| | |   `-ParagraphComment 0x2c641af0 <col:37, col:51>
| | |     `-TextComment 0x2c641ac0 <col:37, col:51> Text=" contact height"
| | |-FieldDecl 0x2c6069d0 <line:529:5, col:11> col:11 connect 'float'
| | | `-FullComment 0x2c641bf0 <col:37, col:62>
| | |   `-ParagraphComment 0x2c641bc0 <col:37, col:62>
| | |     `-TextComment 0x2c641b90 <col:37, col:62> Text=" autoconnect capsule width"
| | |-FieldDecl 0x2c606a60 <line:530:5, col:11> col:11 com 'float'
| | | `-FullComment 0x2c641cc0 <col:37, col:47>
| | |   `-ParagraphComment 0x2c641c90 <col:37, col:47>
| | |     `-TextComment 0x2c641c60 <col:37, col:47> Text=" com radius"
| | |-FieldDecl 0x2c606af0 <line:531:5, col:11> col:11 camera 'float'
| | | `-FullComment 0x2c641d90 <col:37, col:50>
| | |   `-ParagraphComment 0x2c641d60 <col:37, col:50>
| | |     `-TextComment 0x2c641d30 <col:37, col:50> Text=" camera object"
| | |-FieldDecl 0x2c606b80 <line:532:5, col:11> col:11 light 'float'
| | | `-FullComment 0x2c641e60 <col:37, col:49>
| | |   `-ParagraphComment 0x2c641e30 <col:37, col:49>
| | |     `-TextComment 0x2c641e00 <col:37, col:49> Text=" light object"
| | |-FieldDecl 0x2c606c10 <line:533:5, col:11> col:11 selectpoint 'float'
| | | `-FullComment 0x2c641f30 <col:37, col:52>
| | |   `-ParagraphComment 0x2c641f00 <col:37, col:52>
| | |     `-TextComment 0x2c641ed0 <col:37, col:52> Text=" selection point"
| | |-FieldDecl 0x2c606ca0 <line:534:5, col:11> col:11 jointlength 'float'
| | | `-FullComment 0x2c642000 <col:37, col:49>
| | |   `-ParagraphComment 0x2c641fd0 <col:37, col:49>
| | |     `-TextComment 0x2c641fa0 <col:37, col:49> Text=" joint length"
| | |-FieldDecl 0x2c606d30 <line:535:5, col:11> col:11 jointwidth 'float'
| | | `-FullComment 0x2c6420d0 <col:37, col:48>
| | |   `-ParagraphComment 0x2c6420a0 <col:37, col:48>
| | |     `-TextComment 0x2c642070 <col:37, col:48> Text=" joint width"
| | |-FieldDecl 0x2c606dc0 <line:536:5, col:11> col:11 actuatorlength 'float'
| | | `-FullComment 0x2c6421a0 <col:37, col:52>
| | |   `-ParagraphComment 0x2c642170 <col:37, col:52>
| | |     `-TextComment 0x2c642140 <col:37, col:52> Text=" actuator length"
| | |-FieldDecl 0x2c606e50 <line:537:5, col:11> col:11 actuatorwidth 'float'
| | | `-FullComment 0x2c642270 <col:37, col:51>
| | |   `-ParagraphComment 0x2c642240 <col:37, col:51>
| | |     `-TextComment 0x2c642210 <col:37, col:51> Text=" actuator width"
| | |-FieldDecl 0x2c606ee0 <line:538:5, col:11> col:11 framelength 'float'
| | | `-FullComment 0x2c642340 <col:37, col:58>
| | |   `-ParagraphComment 0x2c642310 <col:37, col:58>
| | |     `-TextComment 0x2c6422e0 <col:37, col:58> Text=" bodyframe axis length"
| | |-FieldDecl 0x2c606f70 <line:539:5, col:11> col:11 framewidth 'float'
| | | `-FullComment 0x2c642410 <col:37, col:57>
| | |   `-ParagraphComment 0x2c6423e0 <col:37, col:57>
| | |     `-TextComment 0x2c6423b0 <col:37, col:57> Text=" bodyframe axis width"
| | |-FieldDecl 0x2c607000 <line:540:5, col:11> col:11 constraint 'float'
| | | `-FullComment 0x2c6424e0 <col:37, col:53>
| | |   `-ParagraphComment 0x2c6424b0 <col:37, col:53>
| | |     `-TextComment 0x2c642480 <col:37, col:53> Text=" constraint width"
| | |-FieldDecl 0x2c607090 <line:541:5, col:11> col:11 slidercrank 'float'
| | | `-FullComment 0x2c6425b0 <col:37, col:54>
| | |   `-ParagraphComment 0x2c642580 <col:37, col:54>
| | |     `-TextComment 0x2c642550 <col:37, col:54> Text=" slidercrank width"
| | `-FieldDecl 0x2c607120 <line:542:5, col:11> col:11 frustum 'float'
| |   `-FullComment 0x2c642680 <col:37, col:55>
| |     `-ParagraphComment 0x2c642650 <col:37, col:55>
| |       `-TextComment 0x2c642620 <col:37, col:55> Text=" frustum zfar plane"
| |-FieldDecl 0x2c6071f8 <line:525:3, line:543:5> col:5 scale 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:525:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:525:3)'
| |-RecordDecl 0x2c607248 <line:545:3, line:571:3> line:545:3 struct definition
| | |-FieldDecl 0x2c6073c0 <line:546:5, col:16> col:11 fog 'float[4]'
| | | `-FullComment 0x2c642750 <col:37, col:40>
| | |   `-ParagraphComment 0x2c642720 <col:37, col:40>
| | |     `-TextComment 0x2c6426f0 <col:37, col:40> Text=" fog"
| | |-FieldDecl 0x2c6074a0 <line:547:5, col:17> col:11 haze 'float[4]'
| | | `-FullComment 0x2c642820 <col:37, col:41>
| | |   `-ParagraphComment 0x2c6427f0 <col:37, col:41>
| | |     `-TextComment 0x2c6427c0 <col:37, col:41> Text=" haze"
| | |-FieldDecl 0x2c607580 <line:548:5, col:18> col:11 force 'float[4]'
| | | `-FullComment 0x2c6428f0 <col:37, col:51>
| | |   `-ParagraphComment 0x2c6428c0 <col:37, col:51>
| | |     `-TextComment 0x2c642890 <col:37, col:51> Text=" external force"
| | |-FieldDecl 0x2c607660 <line:549:5, col:20> col:11 inertia 'float[4]'
| | | `-FullComment 0x2c6429c0 <col:37, col:48>
| | |   `-ParagraphComment 0x2c642990 <col:37, col:48>
| | |     `-TextComment 0x2c642960 <col:37, col:48> Text=" inertia box"
| | |-FieldDecl 0x2c607740 <line:550:5, col:18> col:11 joint 'float[4]'
| | | `-FullComment 0x2c642ab0 <col:37, col:42>
| | |   `-ParagraphComment 0x2c642a80 <col:37, col:42>
| | |     `-TextComment 0x2c642a50 <col:37, col:42> Text=" joint"
| | |-FieldDecl 0x2c607df0 <line:551:5, col:21> col:11 actuator 'float[4]'
| | | `-FullComment 0x2c642b80 <col:37, col:54>
| | |   `-ParagraphComment 0x2c642b50 <col:37, col:54>
| | |     `-TextComment 0x2c642b20 <col:37, col:54> Text=" actuator, neutral"
| | |-FieldDecl 0x2c607ed0 <line:552:5, col:29> col:11 actuatornegative 'float[4]'
| | | `-FullComment 0x2c642c50 <col:37, col:61>
| | |   `-ParagraphComment 0x2c642c20 <col:37, col:61>
| | |     `-TextComment 0x2c642bf0 <col:37, col:61> Text=" actuator, negative limit"
| | |-FieldDecl 0x2c607fb0 <line:553:5, col:29> col:11 actuatorpositive 'float[4]'
| | | `-FullComment 0x2c642d20 <col:37, col:61>
| | |   `-ParagraphComment 0x2c642cf0 <col:37, col:61>
| | |     `-TextComment 0x2c642cc0 <col:37, col:61> Text=" actuator, positive limit"
| | |-FieldDecl 0x2c608090 <line:554:5, col:16> col:11 com 'float[4]'
| | | `-FullComment 0x2c642df0 <col:37, col:51>
| | |   `-ParagraphComment 0x2c642dc0 <col:37, col:51>
| | |     `-TextComment 0x2c642d90 <col:37, col:51> Text=" center of mass"
| | |-FieldDecl 0x2c608170 <line:555:5, col:19> col:11 camera 'float[4]'
| | | `-FullComment 0x2c642ec0 <col:37, col:50>
| | |   `-ParagraphComment 0x2c642e90 <col:37, col:50>
| | |     `-TextComment 0x2c642e60 <col:37, col:50> Text=" camera object"
| | |-FieldDecl 0x2c608250 <line:556:5, col:18> col:11 light 'float[4]'
| | | `-FullComment 0x2c642f90 <col:37, col:49>
| | |   `-ParagraphComment 0x2c642f60 <col:37, col:49>
| | |     `-TextComment 0x2c642f30 <col:37, col:49> Text=" light object"
| | |-FieldDecl 0x2c608330 <line:557:5, col:24> col:11 selectpoint 'float[4]'
| | | `-FullComment 0x2c643060 <col:37, col:52>
| | |   `-ParagraphComment 0x2c643030 <col:37, col:52>
| | |     `-TextComment 0x2c643000 <col:37, col:52> Text=" selection point"
| | |-FieldDecl 0x2c608410 <line:558:5, col:20> col:11 connect 'float[4]'
| | | `-FullComment 0x2c643130 <col:37, col:49>
| | |   `-ParagraphComment 0x2c643100 <col:37, col:49>
| | |     `-TextComment 0x2c6430d0 <col:37, col:49> Text=" auto connect"
| | |-FieldDecl 0x2c6084f0 <line:559:5, col:25> col:11 contactpoint 'float[4]'
| | | `-FullComment 0x2c643200 <col:37, col:50>
| | |   `-ParagraphComment 0x2c6431d0 <col:37, col:50>
| | |     `-TextComment 0x2c6431a0 <col:37, col:50> Text=" contact point"
| | |-FieldDecl 0x2c6085d0 <line:560:5, col:25> col:11 contactforce 'float[4]'
| | | `-FullComment 0x2c6432d0 <col:37, col:50>
| | |   `-ParagraphComment 0x2c6432a0 <col:37, col:50>
| | |     `-TextComment 0x2c643270 <col:37, col:50> Text=" contact force"
| | |-FieldDecl 0x2c6086b0 <line:561:5, col:28> col:11 contactfriction 'float[4]'
| | | `-FullComment 0x2c6433a0 <col:37, col:59>
| | |   `-ParagraphComment 0x2c643370 <col:37, col:59>
| | |     `-TextComment 0x2c643340 <col:37, col:59> Text=" contact friction force"
| | |-FieldDecl 0x2c608790 <line:562:5, col:26> col:11 contacttorque 'float[4]'
| | | `-FullComment 0x2c643470 <col:37, col:51>
| | |   `-ParagraphComment 0x2c643440 <col:37, col:51>
| | |     `-TextComment 0x2c643410 <col:37, col:51> Text=" contact torque"
| | |-FieldDecl 0x2c608870 <line:563:5, col:23> col:11 contactgap 'float[4]'
| | | `-FullComment 0x2c643540 <col:37, col:57>
| | |   `-ParagraphComment 0x2c643510 <col:37, col:57>
| | |     `-TextComment 0x2c6434e0 <col:37, col:57> Text=" contact point in gap"
| | |-FieldDecl 0x2c608950 <line:564:5, col:24> col:11 rangefinder 'float[4]'
| | | `-FullComment 0x2c643610 <col:37, col:52>
| | |   `-ParagraphComment 0x2c6435e0 <col:37, col:52>
| | |     `-TextComment 0x2c6435b0 <col:37, col:52> Text=" rangefinder ray"
| | |-FieldDecl 0x2c608a30 <line:565:5, col:23> col:11 constraint 'float[4]'
| | | `-FullComment 0x2c6436e0 <col:37, col:47>
| | |   `-ParagraphComment 0x2c6436b0 <col:37, col:47>
| | |     `-TextComment 0x2c643680 <col:37, col:47> Text=" constraint"
| | |-FieldDecl 0x2c608b10 <line:566:5, col:24> col:11 slidercrank 'float[4]'
| | | `-FullComment 0x2c6437b0 <col:37, col:48>
| | |   `-ParagraphComment 0x2c643780 <col:37, col:48>
| | |     `-TextComment 0x2c643750 <col:37, col:48> Text=" slidercrank"
| | |-FieldDecl 0x2c608bf0 <line:567:5, col:24> col:11 crankbroken 'float[4]'
| | | `-FullComment 0x2c643880 <col:37, col:77>
| | |   `-ParagraphComment 0x2c643850 <col:37, col:77>
| | |     `-TextComment 0x2c643820 <col:37, col:77> Text=" used when crank must be stretched/broken"
| | |-FieldDecl 0x2c608cd0 <line:568:5, col:20> col:11 frustum 'float[4]'
| | | `-FullComment 0x2c643950 <col:37, col:51>
| | |   `-ParagraphComment 0x2c643920 <col:37, col:51>
| | |     `-TextComment 0x2c6438f0 <col:37, col:51> Text=" camera frustum"
| | |-FieldDecl 0x2c609280 <line:569:5, col:15> col:11 bv 'float[4]'
| | | `-FullComment 0x2c643a20 <col:37, col:52>
| | |   `-ParagraphComment 0x2c6439f0 <col:37, col:52>
| | |     `-TextComment 0x2c6439c0 <col:37, col:52> Text=" bounding volume"
| | `-FieldDecl 0x2c609360 <line:570:5, col:21> col:11 bvactive 'float[4]'
| |   `-FullComment 0x2c643b00 <col:37, col:59>
| |     `-ParagraphComment 0x2c643ad0 <col:37, col:59>
| |       `-TextComment 0x2c643aa0 <col:37, col:59> Text=" active bounding volume"
| `-FieldDecl 0x2c609438 <line:545:3, line:571:5> col:5 rgba 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:545:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:545:3)'
|-TypedefDecl 0x2c609590 <line:573:1, col:26> col:26 referenced mjVisual 'struct mjVisual_':'struct mjVisual_'
| `-ElaboratedType 0x2c609540 'struct mjVisual_' sugar
|   `-RecordType 0x2c604610 'struct mjVisual_'
|     `-Record 0x2c604588 'mjVisual_'
|-RecordDecl 0x2c609618 <line:578:1, line:584:1> line:578:8 struct mjStatistic_ definition
| |-FullComment 0x2c643bd0 <line:576:3, col:100>
| | `-ParagraphComment 0x2c643ba0 <col:3, col:100>
| |   `-TextComment 0x2c643b70 <col:3, col:100> Text="---------------------------------- mjStatistic ---------------------------------------------------"
| |-FieldDecl 0x2c6096f8 <line:579:3, col:10> col:10 meaninertia 'mjtNum':'double'
| | `-FullComment 0x2c643ca0 <col:37, col:58>
| |   `-ParagraphComment 0x2c643c70 <col:37, col:58>
| |     `-TextComment 0x2c643c40 <col:37, col:58> Text=" mean diagonal inertia"
| |-FieldDecl 0x2c609788 <line:580:3, col:10> col:10 meanmass 'mjtNum':'double'
| | `-FullComment 0x2c643d70 <col:37, col:51>
| |   `-ParagraphComment 0x2c643d40 <col:37, col:51>
| |     `-TextComment 0x2c643d10 <col:37, col:51> Text=" mean body mass"
| |-FieldDecl 0x2c609818 <line:581:3, col:10> col:10 meansize 'mjtNum':'double'
| | `-FullComment 0x2c643e40 <col:37, col:51>
| |   `-ParagraphComment 0x2c643e10 <col:37, col:51>
| |     `-TextComment 0x2c643de0 <col:37, col:51> Text=" mean body size"
| |-FieldDecl 0x2c6098a8 <line:582:3, col:10> col:10 extent 'mjtNum':'double'
| | `-FullComment 0x2c643f10 <col:37, col:51>
| |   `-ParagraphComment 0x2c643ee0 <col:37, col:51>
| |     `-TextComment 0x2c643eb0 <col:37, col:51> Text=" spatial extent"
| `-FieldDecl 0x2c609988 <line:583:3, col:18> col:10 center 'mjtNum[3]'
|   `-FullComment 0x2c643fe0 <col:37, col:52>
|     `-ParagraphComment 0x2c643fb0 <col:37, col:52>
|       `-TextComment 0x2c643f80 <col:37, col:52> Text=" center of model"
|-TypedefDecl 0x2c609a60 <line:585:1, col:29> col:29 referenced mjStatistic 'struct mjStatistic_':'struct mjStatistic_'
| `-ElaboratedType 0x2c609a10 'struct mjStatistic_' sugar
|   `-RecordType 0x2c6096a0 'struct mjStatistic_'
|     `-Record 0x2c609618 'mjStatistic_'
|-RecordDecl 0x2c609ae8 <line:590:1, line:1131:1> line:590:8 struct mjModel_ definition
| |-FullComment 0x2c6440b0 <line:588:3, col:100>
| | `-ParagraphComment 0x2c644080 <col:3, col:100>
| |   `-TextComment 0x2c644050 <col:3, col:100> Text="---------------------------------- mjModel -------------------------------------------------------"
| |-FieldDecl 0x2c609c00 <line:594:3, col:7> col:7 nq 'int'
| | `-FullComment 0x2c644180 <col:37, col:82>
| |   `-ParagraphComment 0x2c644150 <col:37, col:82>
| |     `-TextComment 0x2c644120 <col:37, col:82> Text=" number of generalized coordinates = dim(qpos)"
| |-FieldDecl 0x2c609c90 <line:595:3, col:7> col:7 nv 'int'
| | `-FullComment 0x2c644250 <col:37, col:77>
| |   `-ParagraphComment 0x2c644220 <col:37, col:77>
| |     `-TextComment 0x2c6441f0 <col:37, col:77> Text=" number of degrees of freedom = dim(qvel)"
| |-FieldDecl 0x2c609d20 <line:596:3, col:7> col:7 nu 'int'
| | `-FullComment 0x2c644320 <col:37, col:77>
| |   `-ParagraphComment 0x2c6442f0 <col:37, col:77>
| |     `-TextComment 0x2c6442c0 <col:37, col:77> Text=" number of actuators/controls = dim(ctrl)"
| |-FieldDecl 0x2c609db0 <line:597:3, col:7> col:7 na 'int'
| | `-FullComment 0x2c6443f0 <col:37, col:75>
| |   `-ParagraphComment 0x2c6443c0 <col:37, col:75>
| |     `-TextComment 0x2c644390 <col:37, col:75> Text=" number of activation states = dim(act)"
| |-FieldDecl 0x2c609e40 <line:598:3, col:7> col:7 nbody 'int'
| | `-FullComment 0x2c6444c0 <col:37, col:53>
| |   `-ParagraphComment 0x2c644490 <col:37, col:53>
| |     `-TextComment 0x2c644460 <col:37, col:53> Text=" number of bodies"
| |-FieldDecl 0x2c609ed0 <line:599:3, col:7> col:7 nbvh 'int'
| | `-FullComment 0x2c644590 <col:37, col:83>
| |   `-ParagraphComment 0x2c644560 <col:37, col:83>
| |     `-TextComment 0x2c644530 <col:37, col:83> Text=" number of total bounding volumes in all bodies"
| |-FieldDecl 0x2c609f60 <line:600:3, col:7> col:7 nbvhstatic 'int'
| | `-FullComment 0x2c644660 <col:37, col:95>
| |   `-ParagraphComment 0x2c644630 <col:37, col:95>
| |     `-TextComment 0x2c644600 <col:37, col:95> Text=" number of static bounding volumes (aabb stored in mjModel)"
| |-FieldDecl 0x2c609ff0 <line:601:3, col:7> col:7 nbvhdynamic 'int'
| | `-FullComment 0x2c644730 <col:37, col:95>
| |   `-ParagraphComment 0x2c644700 <col:37, col:95>
| |     `-TextComment 0x2c6446d0 <col:37, col:95> Text=" number of dynamic bounding volumes (aabb stored in mjData)"
| |-FieldDecl 0x2c60a080 <line:602:3, col:7> col:7 njnt 'int'
| | `-FullComment 0x2c644800 <col:37, col:53>
| |   `-ParagraphComment 0x2c6447d0 <col:37, col:53>
| |     `-TextComment 0x2c6447a0 <col:37, col:53> Text=" number of joints"
| |-FieldDecl 0x2c60a110 <line:603:3, col:7> col:7 ngeom 'int'
| | `-FullComment 0x2c6448d0 <col:37, col:52>
| |   `-ParagraphComment 0x2c6448a0 <col:37, col:52>
| |     `-TextComment 0x2c644870 <col:37, col:52> Text=" number of geoms"
| |-FieldDecl 0x2c60a1a0 <line:604:3, col:7> col:7 nsite 'int'
| | `-FullComment 0x2c6449a0 <col:37, col:52>
| |   `-ParagraphComment 0x2c644970 <col:37, col:52>
| |     `-TextComment 0x2c644940 <col:37, col:52> Text=" number of sites"
| |-FieldDecl 0x2c60a230 <line:605:3, col:7> col:7 ncam 'int'
| | `-FullComment 0x2c644a80 <col:37, col:54>
| |   `-ParagraphComment 0x2c644a40 <col:37, col:54>
| |     `-TextComment 0x2c644a10 <col:37, col:54> Text=" number of cameras"
| |-FieldDecl 0x2c60c8a0 <line:606:3, col:7> col:7 nlight 'int'
| | `-FullComment 0x2c644b50 <col:37, col:53>
| |   `-ParagraphComment 0x2c644b20 <col:37, col:53>
| |     `-TextComment 0x2c644af0 <col:37, col:53> Text=" number of lights"
| |-FieldDecl 0x2c60c930 <line:607:3, col:7> col:7 nflex 'int'
| | `-FullComment 0x2c644c20 <col:37, col:53>
| |   `-ParagraphComment 0x2c644bf0 <col:37, col:53>
| |     `-TextComment 0x2c644bc0 <col:37, col:53> Text=" number of flexes"
| |-FieldDecl 0x2c60c9c0 <line:608:3, col:7> col:7 nflexvert 'int'
| | `-FullComment 0x2c644cf0 <col:37, col:69>
| |   `-ParagraphComment 0x2c644cc0 <col:37, col:69>
| |     `-TextComment 0x2c644c90 <col:37, col:69> Text=" number of vertices in all flexes"
| |-FieldDecl 0x2c60ca50 <line:609:3, col:7> col:7 nflexedge 'int'
| | `-FullComment 0x2c644dc0 <col:37, col:66>
| |   `-ParagraphComment 0x2c644d90 <col:37, col:66>
| |     `-TextComment 0x2c644d60 <col:37, col:66> Text=" number of edges in all flexes"
| |-FieldDecl 0x2c60cae0 <line:610:3, col:7> col:7 nflexelem 'int'
| | `-FullComment 0x2c644e90 <col:37, col:69>
| |   `-ParagraphComment 0x2c644e60 <col:37, col:69>
| |     `-TextComment 0x2c644e30 <col:37, col:69> Text=" number of elements in all flexes"
| |-FieldDecl 0x2c60cb70 <line:611:3, col:7> col:7 nflexelemdata 'int'
| | `-FullComment 0x2c644f60 <col:37, col:79>
| |   `-ParagraphComment 0x2c644f30 <col:37, col:79>
| |     `-TextComment 0x2c644f00 <col:37, col:79> Text=" number of element vertex ids in all flexes"
| |-FieldDecl 0x2c60cc00 <line:612:3, col:7> col:7 nflexelemedge 'int'
| | `-FullComment 0x2c645030 <col:37, col:77>
| |   `-ParagraphComment 0x2c645000 <col:37, col:77>
| |     `-TextComment 0x2c644fd0 <col:37, col:77> Text=" number of element edge ids in all flexes"
| |-FieldDecl 0x2c60cc90 <line:613:3, col:7> col:7 nflexshelldata 'int'
| | `-FullComment 0x2c645100 <col:37, col:86>
| |   `-ParagraphComment 0x2c6450d0 <col:37, col:86>
| |     `-TextComment 0x2c6450a0 <col:37, col:86> Text=" number of shell fragment vertex ids in all flexes"
| |-FieldDecl 0x2c60cd20 <line:614:3, col:7> col:7 nflexevpair 'int'
| | `-FullComment 0x2c6451d0 <col:37, col:81>
| |   `-ParagraphComment 0x2c6451a0 <col:37, col:81>
| |     `-TextComment 0x2c645170 <col:37, col:81> Text=" number of element-vertex pairs in all flexes"
| |-FieldDecl 0x2c60cdb0 <line:615:3, col:7> col:7 nflextexcoord 'int'
| | `-FullComment 0x2c6452a0 <col:37, col:80>
| |   `-ParagraphComment 0x2c645270 <col:37, col:80>
| |     `-TextComment 0x2c645240 <col:37, col:80> Text=" number of vertices with texture coordinates"
| |-FieldDecl 0x2c60ce40 <line:616:3, col:7> col:7 nmesh 'int'
| | `-FullComment 0x2c645370 <col:37, col:53>
| |   `-ParagraphComment 0x2c645340 <col:37, col:53>
| |     `-TextComment 0x2c645310 <col:37, col:53> Text=" number of meshes"
| |-FieldDecl 0x2c60ced0 <line:617:3, col:7> col:7 nmeshvert 'int'
| | `-FullComment 0x2c645440 <col:37, col:69>
| |   `-ParagraphComment 0x2c645410 <col:37, col:69>
| |     `-TextComment 0x2c6453e0 <col:37, col:69> Text=" number of vertices in all meshes"
| |-FieldDecl 0x2c60cf60 <line:618:3, col:7> col:7 nmeshnormal 'int'
| | `-FullComment 0x2c645510 <col:37, col:68>
| |   `-ParagraphComment 0x2c6454e0 <col:37, col:68>
| |     `-TextComment 0x2c6454b0 <col:37, col:68> Text=" number of normals in all meshes"
| |-FieldDecl 0x2c60cff0 <line:619:3, col:7> col:7 nmeshtexcoord 'int'
| | `-FullComment 0x2c6455e0 <col:37, col:70>
| |   `-ParagraphComment 0x2c6455b0 <col:37, col:70>
| |     `-TextComment 0x2c645580 <col:37, col:70> Text=" number of texcoords in all meshes"
| |-FieldDecl 0x2c60d080 <line:620:3, col:7> col:7 nmeshface 'int'
| | `-FullComment 0x2c6456b0 <col:37, col:77>
| |   `-ParagraphComment 0x2c645680 <col:37, col:77>
| |     `-TextComment 0x2c645650 <col:37, col:77> Text=" number of triangular faces in all meshes"
| |-FieldDecl 0x2c60d110 <line:621:3, col:7> col:7 nmeshgraph 'int'
| | `-FullComment 0x2c645780 <col:37, col:74>
| |   `-ParagraphComment 0x2c645750 <col:37, col:74>
| |     `-TextComment 0x2c645720 <col:37, col:74> Text=" number of ints in mesh auxiliary data"
| |-FieldDecl 0x2c60d1a0 <line:622:3, col:7> col:7 nskin 'int'
| | `-FullComment 0x2c645850 <col:37, col:52>
| |   `-ParagraphComment 0x2c645820 <col:37, col:52>
| |     `-TextComment 0x2c6457f0 <col:37, col:52> Text=" number of skins"
| |-FieldDecl 0x2c60d230 <line:623:3, col:7> col:7 nskinvert 'int'
| | `-FullComment 0x2c645920 <col:37, col:68>
| |   `-ParagraphComment 0x2c6458f0 <col:37, col:68>
| |     `-TextComment 0x2c6458c0 <col:37, col:68> Text=" number of vertices in all skins"
| |-FieldDecl 0x2c60d2c0 <line:624:3, col:7> col:7 nskintexvert 'int'
| | `-FullComment 0x2c6459f0 <col:37, col:82>
| |   `-ParagraphComment 0x2c6459c0 <col:37, col:82>
| |     `-TextComment 0x2c645990 <col:37, col:82> Text=" number of vertiex with texcoords in all skins"
| |-FieldDecl 0x2c60d350 <line:625:3, col:7> col:7 nskinface 'int'
| | `-FullComment 0x2c645ae0 <col:37, col:76>
| |   `-ParagraphComment 0x2c645ab0 <col:37, col:76>
| |     `-TextComment 0x2c645a80 <col:37, col:76> Text=" number of triangular faces in all skins"
| |-FieldDecl 0x2c60d3e0 <line:626:3, col:7> col:7 nskinbone 'int'
| | `-FullComment 0x2c645bb0 <col:37, col:65>
| |   `-ParagraphComment 0x2c645b80 <col:37, col:65>
| |     `-TextComment 0x2c645b50 <col:37, col:65> Text=" number of bones in all skins"
| |-FieldDecl 0x2c60d470 <line:627:3, col:7> col:7 nskinbonevert 'int'
| | `-FullComment 0x2c645c80 <col:37, col:73>
| |   `-ParagraphComment 0x2c645c50 <col:37, col:73>
| |     `-TextComment 0x2c645c20 <col:37, col:73> Text=" number of vertices in all skin bones"
| |-FieldDecl 0x2c60d500 <line:628:3, col:7> col:7 nhfield 'int'
| | `-FullComment 0x2c645d50 <col:37, col:59>
| |   `-ParagraphComment 0x2c645d20 <col:37, col:59>
| |     `-TextComment 0x2c645cf0 <col:37, col:59> Text=" number of heightfields"
| |-FieldDecl 0x2c60d590 <line:629:3, col:7> col:7 nhfielddata 'int'
| | `-FullComment 0x2c645e20 <col:37, col:78>
| |   `-ParagraphComment 0x2c645df0 <col:37, col:78>
| |     `-TextComment 0x2c645dc0 <col:37, col:78> Text=" number of data points in all heightfields"
| |-FieldDecl 0x2c60d620 <line:630:3, col:7> col:7 ntex 'int'
| | `-FullComment 0x2c645ef0 <col:37, col:55>
| |   `-ParagraphComment 0x2c645ec0 <col:37, col:55>
| |     `-TextComment 0x2c645e90 <col:37, col:55> Text=" number of textures"
| |-FieldDecl 0x2c60d6b0 <line:631:3, col:7> col:7 ntexdata 'int'
| | `-FullComment 0x2c645fc0 <col:37, col:72>
| |   `-ParagraphComment 0x2c645f90 <col:37, col:72>
| |     `-TextComment 0x2c645f60 <col:37, col:72> Text=" number of bytes in texture rgb data"
| |-FieldDecl 0x2c60d740 <line:632:3, col:7> col:7 nmat 'int'
| | `-FullComment 0x2c646090 <col:37, col:56>
| |   `-ParagraphComment 0x2c646060 <col:37, col:56>
| |     `-TextComment 0x2c646030 <col:37, col:56> Text=" number of materials"
| |-FieldDecl 0x2c60d7d0 <line:633:3, col:7> col:7 npair 'int'
| | `-FullComment 0x2c646160 <col:37, col:68>
| |   `-ParagraphComment 0x2c646130 <col:37, col:68>
| |     `-TextComment 0x2c646100 <col:37, col:68> Text=" number of predefined geom pairs"
| |-FieldDecl 0x2c60e3c0 <line:634:3, col:7> col:7 nexclude 'int'
| | `-FullComment 0x2c646230 <col:37, col:66>
| |   `-ParagraphComment 0x2c646200 <col:37, col:66>
| |     `-TextComment 0x2c6461d0 <col:37, col:66> Text=" number of excluded geom pairs"
| |-FieldDecl 0x2c60e450 <line:635:3, col:7> col:7 neq 'int'
| | `-FullComment 0x2c646300 <col:37, col:67>
| |   `-ParagraphComment 0x2c6462d0 <col:37, col:67>
| |     `-TextComment 0x2c6462a0 <col:37, col:67> Text=" number of equality constraints"
| |-FieldDecl 0x2c60e4e0 <line:636:3, col:7> col:7 ntendon 'int'
| | `-FullComment 0x2c6463d0 <col:37, col:54>
| |   `-ParagraphComment 0x2c6463a0 <col:37, col:54>
| |     `-TextComment 0x2c646370 <col:37, col:54> Text=" number of tendons"
| |-FieldDecl 0x2c60e570 <line:637:3, col:7> col:7 nwrap 'int'
| | `-FullComment 0x2c6464a0 <col:37, col:79>
| |   `-ParagraphComment 0x2c646470 <col:37, col:79>
| |     `-TextComment 0x2c646440 <col:37, col:79> Text=" number of wrap objects in all tendon paths"
| |-FieldDecl 0x2c60e600 <line:638:3, col:7> col:7 nsensor 'int'
| | `-FullComment 0x2c646570 <col:37, col:54>
| |   `-ParagraphComment 0x2c646540 <col:37, col:54>
| |     `-TextComment 0x2c646510 <col:37, col:54> Text=" number of sensors"
| |-FieldDecl 0x2c60e690 <line:639:3, col:7> col:7 nnumeric 'int'
| | `-FullComment 0x2c646640 <col:37, col:68>
| |   `-ParagraphComment 0x2c646610 <col:37, col:68>
| |     `-TextComment 0x2c6465e0 <col:37, col:68> Text=" number of numeric custom fields"
| |-FieldDecl 0x2c60e720 <line:640:3, col:7> col:7 nnumericdata 'int'
| | `-FullComment 0x2c646710 <col:37, col:76>
| |   `-ParagraphComment 0x2c6466e0 <col:37, col:76>
| |     `-TextComment 0x2c6466b0 <col:37, col:76> Text=" number of mjtNums in all numeric fields"
| |-FieldDecl 0x2c60e7b0 <line:641:3, col:7> col:7 ntext 'int'
| | `-FullComment 0x2c6467e0 <col:37, col:65>
| |   `-ParagraphComment 0x2c6467b0 <col:37, col:65>
| |     `-TextComment 0x2c646780 <col:37, col:65> Text=" number of text custom fields"
| |-FieldDecl 0x2c60e840 <line:642:3, col:7> col:7 ntextdata 'int'
| | `-FullComment 0x2c6468b0 <col:37, col:74>
| |   `-ParagraphComment 0x2c646880 <col:37, col:74>
| |     `-TextComment 0x2c646850 <col:37, col:74> Text=" number of mjtBytes in all text fields"
| |-FieldDecl 0x2c60e8d0 <line:643:3, col:7> col:7 ntuple 'int'
| | `-FullComment 0x2c646980 <col:37, col:66>
| |   `-ParagraphComment 0x2c646950 <col:37, col:66>
| |     `-TextComment 0x2c646920 <col:37, col:66> Text=" number of tuple custom fields"
| |-FieldDecl 0x2c60e960 <line:644:3, col:7> col:7 ntupledata 'int'
| | `-FullComment 0x2c646a50 <col:37, col:74>
| |   `-ParagraphComment 0x2c646a20 <col:37, col:74>
| |     `-TextComment 0x2c6469f0 <col:37, col:74> Text=" number of objects in all tuple fields"
| |-FieldDecl 0x2c60e9f0 <line:645:3, col:7> col:7 nkey 'int'
| | `-FullComment 0x2c63ba90 <col:37, col:56>
| |   `-ParagraphComment 0x2c63ba60 <col:37, col:56>
| |     `-TextComment 0x2c63ba30 <col:37, col:56> Text=" number of keyframes"
| |-FieldDecl 0x2c60ea80 <line:646:3, col:7> col:7 nmocap 'int'
| | `-FullComment 0x2c63bb60 <col:37, col:59>
| |   `-ParagraphComment 0x2c63bb30 <col:37, col:59>
| |     `-TextComment 0x2c63bb00 <col:37, col:59> Text=" number of mocap bodies"
| |-FieldDecl 0x2c60eb10 <line:647:3, col:7> col:7 nplugin 'int'
| | `-FullComment 0x2c63bc30 <col:37, col:63>
| |   `-ParagraphComment 0x2c63bc00 <col:37, col:63>
| |     `-TextComment 0x2c63bbd0 <col:37, col:63> Text=" number of plugin instances"
| |-FieldDecl 0x2c60eba0 <line:648:3, col:7> col:7 npluginattr 'int'
| | `-FullComment 0x2c63bd00 <col:37, col:84>
| |   `-ParagraphComment 0x2c63bcd0 <col:37, col:84>
| |     `-TextComment 0x2c63bca0 <col:37, col:84> Text=" number of chars in all plugin config attributes"
| |-FieldDecl 0x2c60ec30 <line:649:3, col:7> col:7 nuser_body 'int'
| | `-FullComment 0x2c63bdd0 <col:37, col:67>
| |   `-ParagraphComment 0x2c63bda0 <col:37, col:67>
| |     `-TextComment 0x2c63bd70 <col:37, col:67> Text=" number of mjtNums in body_user"
| |-FieldDecl 0x2c60ecc0 <line:650:3, col:7> col:7 nuser_jnt 'int'
| | `-FullComment 0x2c63bea0 <col:37, col:66>
| |   `-ParagraphComment 0x2c63be70 <col:37, col:66>
| |     `-TextComment 0x2c63be40 <col:37, col:66> Text=" number of mjtNums in jnt_user"
| |-FieldDecl 0x2c60ed50 <line:651:3, col:7> col:7 nuser_geom 'int'
| | `-FullComment 0x2c63bf70 <col:37, col:67>
| |   `-ParagraphComment 0x2c63bf40 <col:37, col:67>
| |     `-TextComment 0x2c63bf10 <col:37, col:67> Text=" number of mjtNums in geom_user"
| |-FieldDecl 0x2c60ede0 <line:652:3, col:7> col:7 nuser_site 'int'
| | `-FullComment 0x2c63c040 <col:37, col:67>
| |   `-ParagraphComment 0x2c63c010 <col:37, col:67>
| |     `-TextComment 0x2c63bfe0 <col:37, col:67> Text=" number of mjtNums in site_user"
| |-FieldDecl 0x2c60ee70 <line:653:3, col:7> col:7 nuser_cam 'int'
| | `-FullComment 0x2c63c110 <col:37, col:66>
| |   `-ParagraphComment 0x2c63c0e0 <col:37, col:66>
| |     `-TextComment 0x2c63c0b0 <col:37, col:66> Text=" number of mjtNums in cam_user"
| |-FieldDecl 0x2c60ef00 <line:654:3, col:7> col:7 nuser_tendon 'int'
| | `-FullComment 0x2c63c1e0 <col:37, col:69>
| |   `-ParagraphComment 0x2c63c1b0 <col:37, col:69>
| |     `-TextComment 0x2c63c180 <col:37, col:69> Text=" number of mjtNums in tendon_user"
| |-FieldDecl 0x2c60ef90 <line:655:3, col:7> col:7 nuser_actuator 'int'
| | `-FullComment 0x2c63c2b0 <col:37, col:71>
| |   `-ParagraphComment 0x2c63c280 <col:37, col:71>
| |     `-TextComment 0x2c63c250 <col:37, col:71> Text=" number of mjtNums in actuator_user"
| |-FieldDecl 0x2c60f020 <line:656:3, col:7> col:7 nuser_sensor 'int'
| | `-FullComment 0x2c63c380 <col:37, col:69>
| |   `-ParagraphComment 0x2c63c350 <col:37, col:69>
| |     `-TextComment 0x2c63c320 <col:37, col:69> Text=" number of mjtNums in sensor_user"
| |-FieldDecl 0x2c60f0b0 <line:657:3, col:7> col:7 nnames 'int'
| | `-FullComment 0x2c63c450 <col:37, col:65>
| |   `-ParagraphComment 0x2c63c420 <col:37, col:65>
| |     `-TextComment 0x2c63c3f0 <col:37, col:65> Text=" number of chars in all names"
| |-FieldDecl 0x2c60f140 <line:658:3, col:7> col:7 nnames_map 'int'
| | `-FullComment 0x2c63c520 <col:37, col:74>
| |   `-ParagraphComment 0x2c63c4f0 <col:37, col:74>
| |     `-TextComment 0x2c63c4c0 <col:37, col:74> Text=" number of slots in the names hash map"
| |-FieldDecl 0x2c60f1d0 <line:659:3, col:7> col:7 npaths 'int'
| | `-FullComment 0x2c63c5f0 <col:37, col:65>
| |   `-ParagraphComment 0x2c63c5c0 <col:37, col:65>
| |     `-TextComment 0x2c63c590 <col:37, col:65> Text=" number of chars in all paths"
| |-FieldDecl 0x2c60f290 <line:662:3, col:7> col:7 nM 'int'
| | `-FullComment 0x2c63c6c0 <col:37, col:81>
| |   `-ParagraphComment 0x2c63c690 <col:37, col:81>
| |     `-TextComment 0x2c63c660 <col:37, col:81> Text=" number of non-zeros in sparse inertia matrix"
| |-FieldDecl 0x2c60f320 <line:663:3, col:7> col:7 nB 'int'
| | `-FullComment 0x2c63c790 <col:37, col:82>
| |   `-ParagraphComment 0x2c63c760 <col:37, col:82>
| |     `-TextComment 0x2c63c730 <col:37, col:82> Text=" number of non-zeros in sparse body-dof matrix"
| |-FieldDecl 0x2c60fb10 <line:664:3, col:7> col:7 nC 'int'
| | `-FullComment 0x2c63c860 <col:37, col:89>
| |   `-ParagraphComment 0x2c63c830 <col:37, col:89>
| |     `-TextComment 0x2c63c800 <col:37, col:89> Text=" number of non-zeros in sparse reduced dof-dof matrix"
| |-FieldDecl 0x2c60fba0 <line:665:3, col:7> col:7 nD 'int'
| | `-FullComment 0x2c63c930 <col:37, col:81>
| |   `-ParagraphComment 0x2c63c900 <col:37, col:81>
| |     `-TextComment 0x2c63c8d0 <col:37, col:81> Text=" number of non-zeros in sparse dof-dof matrix"
| |-FieldDecl 0x2c60fc30 <line:666:3, col:7> col:7 ntree 'int'
| | `-FullComment 0x2c64aab0 <col:37, col:79>
| |   `-ParagraphComment 0x2c63c9d0 <col:37, col:79>
| |     `-TextComment 0x2c63c9a0 <col:37, col:79> Text=" number of kinematic trees under world body"
| |-FieldDecl 0x2c60fcc0 <line:667:3, col:7> col:7 ngravcomp 'int'
| | `-FullComment 0x2c64ab80 <col:37, col:75>
| |   `-ParagraphComment 0x2c64ab50 <col:37, col:75>
| |     `-TextComment 0x2c64ab20 <col:37, col:75> Text=" number of bodies with nonzero gravcomp"
| |-FieldDecl 0x2c60fd50 <line:668:3, col:7> col:7 nemax 'int'
| | `-FullComment 0x2c64ac50 <col:37, col:81>
| |   `-ParagraphComment 0x2c64ac20 <col:37, col:81>
| |     `-TextComment 0x2c64abf0 <col:37, col:81> Text=" number of potential equality-constraint rows"
| |-FieldDecl 0x2c60fde0 <line:669:3, col:7> col:7 njmax 'int'
| | `-FullComment 0x2c64ad20 <col:37, col:84>
| |   `-ParagraphComment 0x2c64acf0 <col:37, col:84>
| |     `-TextComment 0x2c64acc0 <col:37, col:84> Text=" number of available rows in constraint Jacobian"
| |-FieldDecl 0x2c60fe70 <line:670:3, col:7> col:7 nconmax 'int'
| | `-FullComment 0x2c64adf0 <col:37, col:81>
| |   `-ParagraphComment 0x2c64adc0 <col:37, col:81>
| |     `-TextComment 0x2c64ad90 <col:37, col:81> Text=" number of potential contacts in contact list"
| |-FieldDecl 0x2c60ff00 <line:671:3, col:7> col:7 nuserdata 'int'
| | `-FullComment 0x2c64aec0 <col:37, col:76>
| |   `-ParagraphComment 0x2c64ae90 <col:37, col:76>
| |     `-TextComment 0x2c64ae60 <col:37, col:76> Text=" number of mjtNums reserved for the user"
| |-FieldDecl 0x2c60ff90 <line:672:3, col:7> col:7 nsensordata 'int'
| | `-FullComment 0x2c64af90 <col:37, col:76>
| |   `-ParagraphComment 0x2c64af60 <col:37, col:76>
| |     `-TextComment 0x2c64af30 <col:37, col:76> Text=" number of mjtNums in sensor data vector"
| |-FieldDecl 0x2c610020 <line:673:3, col:7> col:7 npluginstate 'int'
| | `-FullComment 0x2c64b060 <col:37, col:77>
| |   `-ParagraphComment 0x2c64b030 <col:37, col:77>
| |     `-TextComment 0x2c64b000 <col:37, col:77> Text=" number of mjtNums in plugin state vector"
| |-FieldDecl 0x2c6100d0 <line:675:3, col:10> col:10 narena 'size_t':'unsigned long'
| | `-FullComment 0x2c64b130 <col:37, col:93>
| |   `-ParagraphComment 0x2c64b100 <col:37, col:93>
| |     `-TextComment 0x2c64b0d0 <col:37, col:93> Text=" number of bytes in the mjData arena (inclusive of stack)"
| |-FieldDecl 0x2c610158 <line:676:3, col:10> col:10 nbuffer 'size_t':'unsigned long'
| | `-FullComment 0x2c64b200 <col:37, col:62>
| |   `-ParagraphComment 0x2c64b1d0 <col:37, col:62>
| |     `-TextComment 0x2c64b1a0 <col:37, col:62> Text=" number of bytes in buffer"
| |-FieldDecl 0x2c610240 <line:680:3, col:12> col:12 opt 'mjOption':'struct mjOption_'
| | `-FullComment 0x2c64b2d0 <col:37, col:52>
| |   `-ParagraphComment 0x2c64b2a0 <col:37, col:52>
| |     `-TextComment 0x2c64b270 <col:37, col:52> Text=" physics options"
| |-FieldDecl 0x2c6102f0 <line:681:3, col:12> col:12 vis 'mjVisual':'struct mjVisual_'
| | `-FullComment 0x2c64b3a0 <col:37, col:58>
| |   `-ParagraphComment 0x2c64b370 <col:37, col:58>
| |     `-TextComment 0x2c64b340 <col:37, col:58> Text=" visualization options"
| |-FieldDecl 0x2c6103a0 <line:682:3, col:15> col:15 stat 'mjStatistic':'struct mjStatistic_'
| | `-FullComment 0x2c64b470 <col:37, col:53>
| |   `-ParagraphComment 0x2c64b440 <col:37, col:53>
| |     `-TextComment 0x2c64b410 <col:37, col:53> Text=" model statistics"
| |-FieldDecl 0x2c610490 <line:687:3, col:13> col:13 buffer 'void *'
| | `-FullComment 0x2c64b540 <col:37, col:87>
| |   `-ParagraphComment 0x2c64b510 <col:37, col:87>
| |     `-TextComment 0x2c64b4e0 <col:37, col:87> Text=" main buffer; all pointers point in it    (nbuffer)"
| |-FieldDecl 0x2c6105a8 <line:690:3, col:13> col:13 qpos0 'mjtNum *'
| | `-FullComment 0x2c64b610 <col:37, col:86>
| |   `-ParagraphComment 0x2c64b5e0 <col:37, col:86>
| |     `-TextComment 0x2c64b5b0 <col:37, col:86> Text=" qpos values at default pose              (nq x 1)"
| |-FieldDecl 0x2c610638 <line:691:3, col:13> col:13 qpos_spring 'mjtNum *'
| | `-FullComment 0x2c64b6e0 <col:37, col:86>
| |   `-ParagraphComment 0x2c64b6b0 <col:37, col:86>
| |     `-TextComment 0x2c64b680 <col:37, col:86> Text=" reference pose for springs               (nq x 1)"
| |-FieldDecl 0x2c610730 <line:694:3, col:13> col:13 body_parentid 'int *'
| | `-FullComment 0x2c64b7b0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64b780 <col:37, col:89>
| |     `-TextComment 0x2c64b750 <col:37, col:89> Text=" id of body's parent                      (nbody x 1)"
| |-FieldDecl 0x2c6107c0 <line:695:3, col:13> col:13 body_rootid 'int *'
| | `-FullComment 0x2c64b880 <col:37, col:89>
| |   `-ParagraphComment 0x2c64b850 <col:37, col:89>
| |     `-TextComment 0x2c64b820 <col:37, col:89> Text=" id of root above body                    (nbody x 1)"
| |-FieldDecl 0x2c610850 <line:696:3, col:13> col:13 body_weldid 'int *'
| | `-FullComment 0x2c64b950 <col:37, col:89>
| |   `-ParagraphComment 0x2c64b920 <col:37, col:89>
| |     `-TextComment 0x2c64b8f0 <col:37, col:89> Text=" id of body that this body is welded to   (nbody x 1)"
| |-FieldDecl 0x2c6108e0 <line:697:3, col:13> col:13 body_mocapid 'int *'
| | `-FullComment 0x2c64ba20 <col:37, col:89>
| |   `-ParagraphComment 0x2c64b9f0 <col:37, col:89>
| |     `-TextComment 0x2c64b9c0 <col:37, col:89> Text=" id of mocap data; -1: none               (nbody x 1)"
| |-FieldDecl 0x2c610970 <line:698:3, col:13> col:13 body_jntnum 'int *'
| | `-FullComment 0x2c64bb10 <col:37, col:89>
| |   `-ParagraphComment 0x2c64bae0 <col:37, col:89>
| |     `-TextComment 0x2c64bab0 <col:37, col:89> Text=" number of joints for this body           (nbody x 1)"
| |-FieldDecl 0x2c610a00 <line:699:3, col:13> col:13 body_jntadr 'int *'
| | `-FullComment 0x2c64bbe0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64bbb0 <col:37, col:89>
| |     `-TextComment 0x2c64bb80 <col:37, col:89> Text=" start addr of joints; -1: no joints      (nbody x 1)"
| |-FieldDecl 0x2c610a90 <line:700:3, col:13> col:13 body_dofnum 'int *'
| | `-FullComment 0x2c64bcb0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64bc80 <col:37, col:89>
| |     `-TextComment 0x2c64bc50 <col:37, col:89> Text=" number of motion degrees of freedom      (nbody x 1)"
| |-FieldDecl 0x2c6112b8 <line:701:3, col:13> col:13 body_dofadr 'int *'
| | `-FullComment 0x2c64bd80 <col:37, col:89>
| |   `-ParagraphComment 0x2c64bd50 <col:37, col:89>
| |     `-TextComment 0x2c64bd20 <col:37, col:89> Text=" start addr of dofs; -1: no dofs          (nbody x 1)"
| |-FieldDecl 0x2c611350 <line:702:3, col:13> col:13 body_treeid 'int *'
| | `-FullComment 0x2c64be50 <col:37, col:89>
| |   `-ParagraphComment 0x2c64be20 <col:37, col:89>
| |     `-TextComment 0x2c64bdf0 <col:37, col:89> Text=" id of body's kinematic tree; -1: static  (nbody x 1)"
| |-FieldDecl 0x2c6113e0 <line:703:3, col:13> col:13 body_geomnum 'int *'
| | `-FullComment 0x2c64bf20 <col:37, col:89>
| |   `-ParagraphComment 0x2c64bef0 <col:37, col:89>
| |     `-TextComment 0x2c64bec0 <col:37, col:89> Text=" number of geoms                          (nbody x 1)"
| |-FieldDecl 0x2c611470 <line:704:3, col:13> col:13 body_geomadr 'int *'
| | `-FullComment 0x2c64bff0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64bfc0 <col:37, col:89>
| |     `-TextComment 0x2c64bf90 <col:37, col:89> Text=" start addr of geoms; -1: no geoms        (nbody x 1)"
| |-FieldDecl 0x2c611578 <line:705:3, col:13> col:13 body_simple 'mjtByte *'
| | `-FullComment 0x2c64c0c0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c090 <col:37, col:89>
| |     `-TextComment 0x2c64c060 <col:37, col:89> Text=" 1: diag M; 2: diag M, sliders only       (nbody x 1)"
| |-FieldDecl 0x2c611608 <line:706:3, col:13> col:13 body_sameframe 'mjtByte *'
| | `-FullComment 0x2c64c190 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c160 <col:37, col:89>
| |     `-TextComment 0x2c64c130 <col:37, col:89> Text=" same frame as inertia (mjtSameframe)     (nbody x 1)"
| |-FieldDecl 0x2c611698 <line:707:3, col:13> col:13 body_pos 'mjtNum *'
| | `-FullComment 0x2c64c260 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c230 <col:37, col:89>
| |     `-TextComment 0x2c64c200 <col:37, col:89> Text=" position offset rel. to parent body      (nbody x 3)"
| |-FieldDecl 0x2c611728 <line:708:3, col:13> col:13 body_quat 'mjtNum *'
| | `-FullComment 0x2c64c330 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c300 <col:37, col:89>
| |     `-TextComment 0x2c64c2d0 <col:37, col:89> Text=" orientation offset rel. to parent body   (nbody x 4)"
| |-FieldDecl 0x2c6117b8 <line:709:3, col:13> col:13 body_ipos 'mjtNum *'
| | `-FullComment 0x2c64c400 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c3d0 <col:37, col:89>
| |     `-TextComment 0x2c64c3a0 <col:37, col:89> Text=" local position of center of mass         (nbody x 3)"
| |-FieldDecl 0x2c611848 <line:710:3, col:13> col:13 body_iquat 'mjtNum *'
| | `-FullComment 0x2c64c4d0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c4a0 <col:37, col:89>
| |     `-TextComment 0x2c64c470 <col:37, col:89> Text=" local orientation of inertia ellipsoid   (nbody x 4)"
| |-FieldDecl 0x2c6118d8 <line:711:3, col:13> col:13 body_mass 'mjtNum *'
| | `-FullComment 0x2c64c5a0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c570 <col:37, col:89>
| |     `-TextComment 0x2c64c540 <col:37, col:89> Text=" mass                                     (nbody x 1)"
| |-FieldDecl 0x2c611968 <line:712:3, col:13> col:13 body_subtreemass 'mjtNum *'
| | `-FullComment 0x2c64c670 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c640 <col:37, col:89>
| |     `-TextComment 0x2c64c610 <col:37, col:89> Text=" mass of subtree starting at this body    (nbody x 1)"
| |-FieldDecl 0x2c6119f8 <line:713:3, col:13> col:13 body_inertia 'mjtNum *'
| | `-FullComment 0x2c64c740 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c710 <col:37, col:89>
| |     `-TextComment 0x2c64c6e0 <col:37, col:89> Text=" diagonal inertia in ipos/iquat frame     (nbody x 3)"
| |-FieldDecl 0x2c611a88 <line:714:3, col:13> col:13 body_invweight0 'mjtNum *'
| | `-FullComment 0x2c64c810 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c7e0 <col:37, col:89>
| |     `-TextComment 0x2c64c7b0 <col:37, col:89> Text=" mean inv inert in qpos0 (trn, rot)       (nbody x 2)"
| |-FieldDecl 0x2c611b18 <line:715:3, col:13> col:13 body_gravcomp 'mjtNum *'
| | `-FullComment 0x2c64c8e0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c8b0 <col:37, col:89>
| |     `-TextComment 0x2c64c880 <col:37, col:89> Text=" antigravity force, units of body weight  (nbody x 1)"
| |-FieldDecl 0x2c611ba8 <line:716:3, col:13> col:13 body_margin 'mjtNum *'
| | `-FullComment 0x2c64c9b0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64c980 <col:37, col:89>
| |     `-TextComment 0x2c64c950 <col:37, col:89> Text=" MAX over all geom margins                (nbody x 1)"
| |-FieldDecl 0x2c611c38 <line:717:3, col:13> col:13 body_user 'mjtNum *'
| | `-FullComment 0x2c64ca80 <col:37, col:98>
| |   `-ParagraphComment 0x2c64ca50 <col:37, col:98>
| |     `-TextComment 0x2c64ca20 <col:37, col:98> Text=" user data                                (nbody x nuser_body)"
| |-FieldDecl 0x2c611cd0 <line:718:3, col:13> col:13 body_plugin 'int *'
| | `-FullComment 0x2c64cb60 <col:37, col:89>
| |   `-ParagraphComment 0x2c64cb30 <col:37, col:89>
| |     `-TextComment 0x2c64cb00 <col:37, col:89> Text=" plugin instance id; -1: not in use       (nbody x 1)"
| |-FieldDecl 0x2c611d60 <line:719:3, col:13> col:13 body_contype 'int *'
| | `-FullComment 0x2c64cc30 <col:37, col:89>
| |   `-ParagraphComment 0x2c64cc00 <col:37, col:89>
| |     `-TextComment 0x2c64cbd0 <col:37, col:89> Text=" OR over all geom contypes                (nbody x 1)"
| |-FieldDecl 0x2c611df0 <line:720:3, col:13> col:13 body_conaffinity 'int *'
| | `-FullComment 0x2c64cd00 <col:37, col:89>
| |   `-ParagraphComment 0x2c64ccd0 <col:37, col:89>
| |     `-TextComment 0x2c64cca0 <col:37, col:89> Text=" OR over all geom conaffinities           (nbody x 1)"
| |-FieldDecl 0x2c611e80 <line:721:3, col:13> col:13 body_bvhadr 'int *'
| | `-FullComment 0x2c64cdd0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64cda0 <col:37, col:89>
| |     `-TextComment 0x2c64cd70 <col:37, col:89> Text=" address of bvh root                      (nbody x 1)"
| |-FieldDecl 0x2c611f10 <line:722:3, col:13> col:13 body_bvhnum 'int *'
| | `-FullComment 0x2c64cea0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64ce70 <col:37, col:89>
| |     `-TextComment 0x2c64ce40 <col:37, col:89> Text=" number of bounding volumes               (nbody x 1)"
| |-FieldDecl 0x2c611fd0 <line:725:3, col:13> col:13 bvh_depth 'int *'
| | `-FullComment 0x2c64cf70 <col:37, col:88>
| |   `-ParagraphComment 0x2c64cf40 <col:37, col:88>
| |     `-TextComment 0x2c64cf10 <col:37, col:88> Text=" depth in the bounding volume hierarchy   (nbvh x 1)"
| |-FieldDecl 0x2c612060 <line:726:3, col:13> col:13 bvh_child 'int *'
| | `-FullComment 0x2c64d040 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d010 <col:37, col:88>
| |     `-TextComment 0x2c64cfe0 <col:37, col:88> Text=" left and right children in tree          (nbvh x 2)"
| |-FieldDecl 0x2c6120f0 <line:727:3, col:13> col:13 bvh_nodeid 'int *'
| | `-FullComment 0x2c64d110 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d0e0 <col:37, col:88>
| |     `-TextComment 0x2c64d0b0 <col:37, col:88> Text=" geom or elem id of node; -1: non-leaf    (nbvh x 1)"
| |-FieldDecl 0x2c612178 <line:728:3, col:13> col:13 bvh_aabb 'mjtNum *'
| | `-FullComment 0x2c64d1e0 <col:37, col:94>
| |   `-ParagraphComment 0x2c64d1b0 <col:37, col:94>
| |     `-TextComment 0x2c64d180 <col:37, col:94> Text=" local bounding box (center, size)        (nbvhstatic x 6)"
| |-FieldDecl 0x2c612240 <line:731:3, col:13> col:13 jnt_type 'int *'
| | `-FullComment 0x2c64d2b0 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d280 <col:37, col:88>
| |     `-TextComment 0x2c64d250 <col:37, col:88> Text=" type of joint (mjtJoint)                 (njnt x 1)"
| |-FieldDecl 0x2c613200 <line:732:3, col:13> col:13 jnt_qposadr 'int *'
| | `-FullComment 0x2c64d380 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d350 <col:37, col:88>
| |     `-TextComment 0x2c64d320 <col:37, col:88> Text=" start addr in 'qpos' for joint's data    (njnt x 1)"
| |-FieldDecl 0x2c613290 <line:733:3, col:13> col:13 jnt_dofadr 'int *'
| | `-FullComment 0x2c64d450 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d420 <col:37, col:88>
| |     `-TextComment 0x2c64d3f0 <col:37, col:88> Text=" start addr in 'qvel' for joint's data    (njnt x 1)"
| |-FieldDecl 0x2c613320 <line:734:3, col:13> col:13 jnt_bodyid 'int *'
| | `-FullComment 0x2c64d520 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d4f0 <col:37, col:88>
| |     `-TextComment 0x2c64d4c0 <col:37, col:88> Text=" id of joint's body                       (njnt x 1)"
| |-FieldDecl 0x2c6133b0 <line:735:3, col:13> col:13 jnt_group 'int *'
| | `-FullComment 0x2c64d5f0 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d5c0 <col:37, col:88>
| |     `-TextComment 0x2c64d590 <col:37, col:88> Text=" group for visibility                     (njnt x 1)"
| |-FieldDecl 0x2c613438 <line:736:3, col:13> col:13 jnt_limited 'mjtByte *'
| | `-FullComment 0x2c64d6c0 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d690 <col:37, col:88>
| |     `-TextComment 0x2c64d660 <col:37, col:88> Text=" does joint have limits                   (njnt x 1)"
| |-FieldDecl 0x2c6134c8 <line:737:3, col:13> col:13 jnt_actfrclimited 'mjtByte *'
| | `-FullComment 0x2c64d790 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d760 <col:37, col:88>
| |     `-TextComment 0x2c64d730 <col:37, col:88> Text=" does joint have actuator force limits    (njnt x 1)"
| |-FieldDecl 0x2c613558 <line:738:3, col:13> col:13 jnt_actgravcomp 'mjtByte *'
| | `-FullComment 0x2c64d860 <col:37, col:88>
| |   `-ParagraphComment 0x2c64d830 <col:37, col:88>
| |     `-TextComment 0x2c64d800 <col:37, col:88> Text=" is gravcomp force applied via actuators  (njnt x 1)"
| |-FieldDecl 0x2c6135e8 <line:739:3, col:13> col:13 jnt_solref 'mjtNum *'
| | `-FullComment 0x2c64d930 <col:37, col:93>
| |   `-ParagraphComment 0x2c64d900 <col:37, col:93>
| |     `-TextComment 0x2c64d8d0 <col:37, col:93> Text=" constraint solver reference: limit       (njnt x mjNREF)"
| |-FieldDecl 0x2c613678 <line:740:3, col:13> col:13 jnt_solimp 'mjtNum *'
| | `-FullComment 0x2c64da00 <col:37, col:93>
| |   `-ParagraphComment 0x2c64d9d0 <col:37, col:93>
| |     `-TextComment 0x2c64d9a0 <col:37, col:93> Text=" constraint solver impedance: limit       (njnt x mjNIMP)"
| |-FieldDecl 0x2c613708 <line:741:3, col:13> col:13 jnt_pos 'mjtNum *'
| | `-FullComment 0x2c64dae0 <col:37, col:88>
| |   `-ParagraphComment 0x2c64daa0 <col:37, col:88>
| |     `-TextComment 0x2c64da70 <col:37, col:88> Text=" local anchor position                    (njnt x 3)"
| |-FieldDecl 0x2c613798 <line:742:3, col:13> col:13 jnt_axis 'mjtNum *'
| | `-FullComment 0x2c64dbb0 <col:37, col:88>
| |   `-ParagraphComment 0x2c64db80 <col:37, col:88>
| |     `-TextComment 0x2c64db50 <col:37, col:88> Text=" local joint axis                         (njnt x 3)"
| |-FieldDecl 0x2c613828 <line:743:3, col:13> col:13 jnt_stiffness 'mjtNum *'
| | `-FullComment 0x2c64dc80 <col:37, col:88>
| |   `-ParagraphComment 0x2c64dc50 <col:37, col:88>
| |     `-TextComment 0x2c64dc20 <col:37, col:88> Text=" stiffness coefficient                    (njnt x 1)"
| |-FieldDecl 0x2c6138b8 <line:744:3, col:13> col:13 jnt_range 'mjtNum *'
| | `-FullComment 0x2c64dd50 <col:37, col:88>
| |   `-ParagraphComment 0x2c64dd20 <col:37, col:88>
| |     `-TextComment 0x2c64dcf0 <col:37, col:88> Text=" joint limits                             (njnt x 2)"
| |-FieldDecl 0x2c613948 <line:745:3, col:13> col:13 jnt_actfrcrange 'mjtNum *'
| | `-FullComment 0x2c64de20 <col:37, col:88>
| |   `-ParagraphComment 0x2c64ddf0 <col:37, col:88>
| |     `-TextComment 0x2c64ddc0 <col:37, col:88> Text=" range of total actuator force            (njnt x 2)"
| |-FieldDecl 0x2c6139d8 <line:746:3, col:13> col:13 jnt_margin 'mjtNum *'
| | `-FullComment 0x2c64def0 <col:37, col:88>
| |   `-ParagraphComment 0x2c64dec0 <col:37, col:88>
| |     `-TextComment 0x2c64de90 <col:37, col:88> Text=" min distance for limit detection         (njnt x 1)"
| |-FieldDecl 0x2c613a68 <line:747:3, col:13> col:13 jnt_user 'mjtNum *'
| | `-FullComment 0x2c64dfc0 <col:37, col:96>
| |   `-ParagraphComment 0x2c64df90 <col:37, col:96>
| |     `-TextComment 0x2c64df60 <col:37, col:96> Text=" user data                                (njnt x nuser_jnt)"
| |-FieldDecl 0x2c613b30 <line:750:3, col:13> col:13 dof_bodyid 'int *'
| | `-FullComment 0x2c64e090 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e060 <col:37, col:86>
| |     `-TextComment 0x2c64e030 <col:37, col:86> Text=" id of dof's body                         (nv x 1)"
| |-FieldDecl 0x2c613bc0 <line:751:3, col:13> col:13 dof_jntid 'int *'
| | `-FullComment 0x2c64e160 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e130 <col:37, col:86>
| |     `-TextComment 0x2c64e100 <col:37, col:86> Text=" id of dof's joint                        (nv x 1)"
| |-FieldDecl 0x2c613c50 <line:752:3, col:13> col:13 dof_parentid 'int *'
| | `-FullComment 0x2c64e230 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e200 <col:37, col:86>
| |     `-TextComment 0x2c64e1d0 <col:37, col:86> Text=" id of dof's parent; -1: none             (nv x 1)"
| |-FieldDecl 0x2c613ce0 <line:753:3, col:13> col:13 dof_treeid 'int *'
| | `-FullComment 0x2c64e300 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e2d0 <col:37, col:86>
| |     `-TextComment 0x2c64e2a0 <col:37, col:86> Text=" id of dof's kinematic tree               (nv x 1)"
| |-FieldDecl 0x2c613d70 <line:754:3, col:13> col:13 dof_Madr 'int *'
| | `-FullComment 0x2c64e3d0 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e3a0 <col:37, col:86>
| |     `-TextComment 0x2c64e370 <col:37, col:86> Text=" dof address in M-diagonal                (nv x 1)"
| |-FieldDecl 0x2c613e00 <line:755:3, col:13> col:13 dof_simplenum 'int *'
| | `-FullComment 0x2c64e4a0 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e470 <col:37, col:86>
| |     `-TextComment 0x2c64e440 <col:37, col:86> Text=" number of consecutive simple dofs        (nv x 1)"
| |-FieldDecl 0x2c613e88 <line:756:3, col:13> col:13 dof_solref 'mjtNum *'
| | `-FullComment 0x2c64e570 <col:37, col:91>
| |   `-ParagraphComment 0x2c64e540 <col:37, col:91>
| |     `-TextComment 0x2c64e510 <col:37, col:91> Text=" constraint solver reference:frictionloss (nv x mjNREF)"
| |-FieldDecl 0x2c613f18 <line:757:3, col:13> col:13 dof_solimp 'mjtNum *'
| | `-FullComment 0x2c64e640 <col:37, col:91>
| |   `-ParagraphComment 0x2c64e610 <col:37, col:91>
| |     `-TextComment 0x2c64e5e0 <col:37, col:91> Text=" constraint solver impedance:frictionloss (nv x mjNIMP)"
| |-FieldDecl 0x2c613fa8 <line:758:3, col:13> col:13 dof_frictionloss 'mjtNum *'
| | `-FullComment 0x2c64e710 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e6e0 <col:37, col:86>
| |     `-TextComment 0x2c64e6b0 <col:37, col:86> Text=" dof friction loss                        (nv x 1)"
| |-FieldDecl 0x2c614038 <line:759:3, col:13> col:13 dof_armature 'mjtNum *'
| | `-FullComment 0x2c64e7e0 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e7b0 <col:37, col:86>
| |     `-TextComment 0x2c64e780 <col:37, col:86> Text=" dof armature inertia/mass                (nv x 1)"
| |-FieldDecl 0x2c6140c8 <line:760:3, col:13> col:13 dof_damping 'mjtNum *'
| | `-FullComment 0x2c64e8b0 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e880 <col:37, col:86>
| |     `-TextComment 0x2c64e850 <col:37, col:86> Text=" damping coefficient                      (nv x 1)"
| |-FieldDecl 0x2c614158 <line:761:3, col:13> col:13 dof_invweight0 'mjtNum *'
| | `-FullComment 0x2c64e980 <col:37, col:86>
| |   `-ParagraphComment 0x2c64e950 <col:37, col:86>
| |     `-TextComment 0x2c64e920 <col:37, col:86> Text=" diag. inverse inertia in qpos0           (nv x 1)"
| |-FieldDecl 0x2c614948 <line:762:3, col:13> col:13 dof_M0 'mjtNum *'
| | `-FullComment 0x2c64ea50 <col:37, col:86>
| |   `-ParagraphComment 0x2c64ea20 <col:37, col:86>
| |     `-TextComment 0x2c64e9f0 <col:37, col:86> Text=" diag. inertia in qpos0                   (nv x 1)"
| |-FieldDecl 0x2c614a10 <line:765:3, col:13> col:13 geom_type 'int *'
| | `-FullComment 0x2c64eb40 <col:37, col:89>
| |   `-ParagraphComment 0x2c64eb10 <col:37, col:89>
| |     `-TextComment 0x2c64eae0 <col:37, col:89> Text=" geometric type (mjtGeom)                 (ngeom x 1)"
| |-FieldDecl 0x2c614aa0 <line:766:3, col:13> col:13 geom_contype 'int *'
| | `-FullComment 0x2c64ec10 <col:37, col:89>
| |   `-ParagraphComment 0x2c64ebe0 <col:37, col:89>
| |     `-TextComment 0x2c64ebb0 <col:37, col:89> Text=" geom contact type                        (ngeom x 1)"
| |-FieldDecl 0x2c614b30 <line:767:3, col:13> col:13 geom_conaffinity 'int *'
| | `-FullComment 0x2c64ece0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64ecb0 <col:37, col:89>
| |     `-TextComment 0x2c64ec80 <col:37, col:89> Text=" geom contact affinity                    (ngeom x 1)"
| |-FieldDecl 0x2c614bc0 <line:768:3, col:13> col:13 geom_condim 'int *'
| | `-FullComment 0x2c64edb0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64ed80 <col:37, col:89>
| |     `-TextComment 0x2c64ed50 <col:37, col:89> Text=" contact dimensionality (1, 3, 4, 6)      (ngeom x 1)"
| |-FieldDecl 0x2c614c50 <line:769:3, col:13> col:13 geom_bodyid 'int *'
| | `-FullComment 0x2c64ee80 <col:37, col:89>
| |   `-ParagraphComment 0x2c64ee50 <col:37, col:89>
| |     `-TextComment 0x2c64ee20 <col:37, col:89> Text=" id of geom's body                        (ngeom x 1)"
| |-FieldDecl 0x2c614ce0 <line:770:3, col:13> col:13 geom_dataid 'int *'
| | `-FullComment 0x2c64ef50 <col:37, col:89>
| |   `-ParagraphComment 0x2c64ef20 <col:37, col:89>
| |     `-TextComment 0x2c64eef0 <col:37, col:89> Text=" id of geom's mesh/hfield; -1: none       (ngeom x 1)"
| |-FieldDecl 0x2c614d70 <line:771:3, col:13> col:13 geom_matid 'int *'
| | `-FullComment 0x2c64f020 <col:37, col:89>
| |   `-ParagraphComment 0x2c64eff0 <col:37, col:89>
| |     `-TextComment 0x2c64efc0 <col:37, col:89> Text=" material id for rendering; -1: none      (ngeom x 1)"
| |-FieldDecl 0x2c614e00 <line:772:3, col:13> col:13 geom_group 'int *'
| | `-FullComment 0x2c64f0f0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f0c0 <col:37, col:89>
| |     `-TextComment 0x2c64f090 <col:37, col:89> Text=" group for visibility                     (ngeom x 1)"
| |-FieldDecl 0x2c614e90 <line:773:3, col:13> col:13 geom_priority 'int *'
| | `-FullComment 0x2c64f1c0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f190 <col:37, col:89>
| |     `-TextComment 0x2c64f160 <col:37, col:89> Text=" geom contact priority                    (ngeom x 1)"
| |-FieldDecl 0x2c614f20 <line:774:3, col:13> col:13 geom_plugin 'int *'
| | `-FullComment 0x2c64f290 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f260 <col:37, col:89>
| |     `-TextComment 0x2c64f230 <col:37, col:89> Text=" plugin instance id; -1: not in use       (ngeom x 1)"
| |-FieldDecl 0x2c614fa8 <line:775:3, col:13> col:13 geom_sameframe 'mjtByte *'
| | `-FullComment 0x2c64f360 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f330 <col:37, col:89>
| |     `-TextComment 0x2c64f300 <col:37, col:89> Text=" same frame as body (mjtSameframe)        (ngeom x 1)"
| |-FieldDecl 0x2c615038 <line:776:3, col:13> col:13 geom_solmix 'mjtNum *'
| | `-FullComment 0x2c64f430 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f400 <col:37, col:89>
| |     `-TextComment 0x2c64f3d0 <col:37, col:89> Text=" mixing coef for solref/imp in geom pair  (ngeom x 1)"
| |-FieldDecl 0x2c6150c8 <line:777:3, col:13> col:13 geom_solref 'mjtNum *'
| | `-FullComment 0x2c64f500 <col:37, col:94>
| |   `-ParagraphComment 0x2c64f4d0 <col:37, col:94>
| |     `-TextComment 0x2c64f4a0 <col:37, col:94> Text=" constraint solver reference: contact     (ngeom x mjNREF)"
| |-FieldDecl 0x2c615158 <line:778:3, col:13> col:13 geom_solimp 'mjtNum *'
| | `-FullComment 0x2c64f5d0 <col:37, col:94>
| |   `-ParagraphComment 0x2c64f5a0 <col:37, col:94>
| |     `-TextComment 0x2c64f570 <col:37, col:94> Text=" constraint solver impedance: contact     (ngeom x mjNIMP)"
| |-FieldDecl 0x2c6151e8 <line:779:3, col:13> col:13 geom_size 'mjtNum *'
| | `-FullComment 0x2c64f6a0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f670 <col:37, col:89>
| |     `-TextComment 0x2c64f640 <col:37, col:89> Text=" geom-specific size parameters            (ngeom x 3)"
| |-FieldDecl 0x2c615278 <line:780:3, col:13> col:13 geom_aabb 'mjtNum *'
| | `-FullComment 0x2c64f770 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f740 <col:37, col:89>
| |     `-TextComment 0x2c64f710 <col:37, col:89> Text=" bounding box, (center, size)             (ngeom x 6)"
| |-FieldDecl 0x2c615308 <line:781:3, col:13> col:13 geom_rbound 'mjtNum *'
| | `-FullComment 0x2c64f840 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f810 <col:37, col:89>
| |     `-TextComment 0x2c64f7e0 <col:37, col:89> Text=" radius of bounding sphere                (ngeom x 1)"
| |-FieldDecl 0x2c615398 <line:782:3, col:13> col:13 geom_pos 'mjtNum *'
| | `-FullComment 0x2c64f910 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f8e0 <col:37, col:89>
| |     `-TextComment 0x2c64f8b0 <col:37, col:89> Text=" local position offset rel. to body       (ngeom x 3)"
| |-FieldDecl 0x2c615428 <line:783:3, col:13> col:13 geom_quat 'mjtNum *'
| | `-FullComment 0x2c64f9e0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64f9b0 <col:37, col:89>
| |     `-TextComment 0x2c64f980 <col:37, col:89> Text=" local orientation offset rel. to body    (ngeom x 4)"
| |-FieldDecl 0x2c6154b8 <line:784:3, col:13> col:13 geom_friction 'mjtNum *'
| | `-FullComment 0x2c64fab0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64fa80 <col:37, col:89>
| |     `-TextComment 0x2c64fa50 <col:37, col:89> Text=" friction for (slide, spin, roll)         (ngeom x 3)"
| |-FieldDecl 0x2c615548 <line:785:3, col:13> col:13 geom_margin 'mjtNum *'
| | `-FullComment 0x2c64fbe0 <col:37, col:89>
| |   `-ParagraphComment 0x2c64fbb0 <col:37, col:89>
| |     |-TextComment 0x2c64fb30 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x2c64fb50 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x2c64fb70 <col:67, col:89> Text="            (ngeom x 1)"
| |-FieldDecl 0x2c6155d8 <line:786:3, col:13> col:13 geom_gap 'mjtNum *'
| | `-FullComment 0x2c64fd00 <col:37, col:89>
| |   `-ParagraphComment 0x2c64fcd0 <col:37, col:89>
| |     |-TextComment 0x2c64fc50 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x2c64fc70 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x2c64fc90 <col:70, col:89> Text="-gap     (ngeom x 1)"
| |-FieldDecl 0x2c615668 <line:787:3, col:13> col:13 geom_fluid 'mjtNum *'
| | `-FullComment 0x2c64fdd0 <col:37, col:96>
| |   `-ParagraphComment 0x2c64fda0 <col:37, col:96>
| |     `-TextComment 0x2c64fd70 <col:37, col:96> Text=" fluid interaction parameters             (ngeom x mjNFLUID)"
| |-FieldDecl 0x2c6156f8 <line:788:3, col:13> col:13 geom_user 'mjtNum *'
| | `-FullComment 0x2c64fea0 <col:37, col:98>
| |   `-ParagraphComment 0x2c64fe70 <col:37, col:98>
| |     `-TextComment 0x2c64fe40 <col:37, col:98> Text=" user data                                (ngeom x nuser_geom)"
| |-FieldDecl 0x2c6157c0 <line:789:3, col:13> col:13 geom_rgba 'float *'
| | `-FullComment 0x2c64ff70 <col:37, col:89>
| |   `-ParagraphComment 0x2c64ff40 <col:37, col:89>
| |     `-TextComment 0x2c64ff10 <col:37, col:89> Text=" rgba when material is omitted            (ngeom x 4)"
| |-FieldDecl 0x2c615880 <line:792:3, col:13> col:13 site_type 'int *'
| | `-FullComment 0x2c650040 <col:37, col:89>
| |   `-ParagraphComment 0x2c650010 <col:37, col:89>
| |     `-TextComment 0x2c64ffe0 <col:37, col:89> Text=" geom type for rendering (mjtGeom)        (nsite x 1)"
| |-FieldDecl 0x2c6180b0 <line:793:3, col:13> col:13 site_bodyid 'int *'
| | `-FullComment 0x2c650110 <col:37, col:89>
| |   `-ParagraphComment 0x2c6500e0 <col:37, col:89>
| |     `-TextComment 0x2c6500b0 <col:37, col:89> Text=" id of site's body                        (nsite x 1)"
| |-FieldDecl 0x2c618140 <line:794:3, col:13> col:13 site_matid 'int *'
| | `-FullComment 0x2c6501e0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6501b0 <col:37, col:89>
| |     `-TextComment 0x2c650180 <col:37, col:89> Text=" material id for rendering; -1: none      (nsite x 1)"
| |-FieldDecl 0x2c6181d0 <line:795:3, col:13> col:13 site_group 'int *'
| | `-FullComment 0x2c6502b0 <col:37, col:89>
| |   `-ParagraphComment 0x2c650280 <col:37, col:89>
| |     `-TextComment 0x2c650250 <col:37, col:89> Text=" group for visibility                     (nsite x 1)"
| |-FieldDecl 0x2c618258 <line:796:3, col:13> col:13 site_sameframe 'mjtByte *'
| | `-FullComment 0x2c650380 <col:37, col:89>
| |   `-ParagraphComment 0x2c650350 <col:37, col:89>
| |     `-TextComment 0x2c650320 <col:37, col:89> Text=" same frame as body (mjtSameframe)        (nsite x 1)"
| |-FieldDecl 0x2c6182e8 <line:797:3, col:13> col:13 site_size 'mjtNum *'
| | `-FullComment 0x2c650450 <col:37, col:89>
| |   `-ParagraphComment 0x2c650420 <col:37, col:89>
| |     `-TextComment 0x2c6503f0 <col:37, col:89> Text=" geom size for rendering                  (nsite x 3)"
| |-FieldDecl 0x2c618378 <line:798:3, col:13> col:13 site_pos 'mjtNum *'
| | `-FullComment 0x2c650520 <col:37, col:89>
| |   `-ParagraphComment 0x2c6504f0 <col:37, col:89>
| |     `-TextComment 0x2c6504c0 <col:37, col:89> Text=" local position offset rel. to body       (nsite x 3)"
| |-FieldDecl 0x2c618408 <line:799:3, col:13> col:13 site_quat 'mjtNum *'
| | `-FullComment 0x2c6505f0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6505c0 <col:37, col:89>
| |     `-TextComment 0x2c650590 <col:37, col:89> Text=" local orientation offset rel. to body    (nsite x 4)"
| |-FieldDecl 0x2c618498 <line:800:3, col:13> col:13 site_user 'mjtNum *'
| | `-FullComment 0x2c6506c0 <col:37, col:98>
| |   `-ParagraphComment 0x2c650690 <col:37, col:98>
| |     `-TextComment 0x2c650660 <col:37, col:98> Text=" user data                                (nsite x nuser_site)"
| |-FieldDecl 0x2c618530 <line:801:3, col:13> col:13 site_rgba 'float *'
| | `-FullComment 0x2c650790 <col:37, col:89>
| |   `-ParagraphComment 0x2c650760 <col:37, col:89>
| |     `-TextComment 0x2c650730 <col:37, col:89> Text=" rgba when material is omitted            (nsite x 4)"
| |-FieldDecl 0x2c6185f0 <line:804:3, col:13> col:13 cam_mode 'int *'
| | `-FullComment 0x2c650860 <col:37, col:88>
| |   `-ParagraphComment 0x2c650830 <col:37, col:88>
| |     `-TextComment 0x2c650800 <col:37, col:88> Text=" camera tracking mode (mjtCamLight)       (ncam x 1)"
| |-FieldDecl 0x2c618680 <line:805:3, col:13> col:13 cam_bodyid 'int *'
| | `-FullComment 0x2c650930 <col:37, col:88>
| |   `-ParagraphComment 0x2c650900 <col:37, col:88>
| |     `-TextComment 0x2c6508d0 <col:37, col:88> Text=" id of camera's body                      (ncam x 1)"
| |-FieldDecl 0x2c618710 <line:806:3, col:13> col:13 cam_targetbodyid 'int *'
| | `-FullComment 0x2c650a00 <col:37, col:88>
| |   `-ParagraphComment 0x2c6509d0 <col:37, col:88>
| |     `-TextComment 0x2c6509a0 <col:37, col:88> Text=" id of targeted body; -1: none            (ncam x 1)"
| |-FieldDecl 0x2c618798 <line:807:3, col:13> col:13 cam_pos 'mjtNum *'
| | `-FullComment 0x2c650b00 <col:37, col:88>
| |   `-ParagraphComment 0x2c650aa0 <col:37, col:88>
| |     `-TextComment 0x2c650a70 <col:37, col:88> Text=" position rel. to body frame              (ncam x 3)"
| |-FieldDecl 0x2c618828 <line:808:3, col:13> col:13 cam_quat 'mjtNum *'
| | `-FullComment 0x2c650bd0 <col:37, col:88>
| |   `-ParagraphComment 0x2c650ba0 <col:37, col:88>
| |     `-TextComment 0x2c650b70 <col:37, col:88> Text=" orientation rel. to body frame           (ncam x 4)"
| |-FieldDecl 0x2c6188b8 <line:809:3, col:13> col:13 cam_poscom0 'mjtNum *'
| | `-FullComment 0x2c650ca0 <col:37, col:88>
| |   `-ParagraphComment 0x2c650c70 <col:37, col:88>
| |     `-TextComment 0x2c650c40 <col:37, col:88> Text=" global position rel. to sub-com in qpos0 (ncam x 3)"
| |-FieldDecl 0x2c618948 <line:810:3, col:13> col:13 cam_pos0 'mjtNum *'
| | `-FullComment 0x2c650d70 <col:37, col:88>
| |   `-ParagraphComment 0x2c650d40 <col:37, col:88>
| |     `-TextComment 0x2c650d10 <col:37, col:88> Text=" global position rel. to body in qpos0    (ncam x 3)"
| |-FieldDecl 0x2c6189d8 <line:811:3, col:13> col:13 cam_mat0 'mjtNum *'
| | `-FullComment 0x2c650e40 <col:37, col:88>
| |   `-ParagraphComment 0x2c650e10 <col:37, col:88>
| |     `-TextComment 0x2c650de0 <col:37, col:88> Text=" global orientation in qpos0              (ncam x 9)"
| |-FieldDecl 0x2c618a70 <line:812:3, col:13> col:13 cam_orthographic 'int *'
| | `-FullComment 0x2c650f10 <col:37, col:88>
| |   `-ParagraphComment 0x2c650ee0 <col:37, col:88>
| |     `-TextComment 0x2c650eb0 <col:37, col:88> Text=" orthographic camera; 0: no, 1: yes       (ncam x 1)"
| |-FieldDecl 0x2c618af8 <line:813:3, col:13> col:13 cam_fovy 'mjtNum *'
| | `-FullComment 0x2c650fe0 <col:37, col:88>
| |   `-ParagraphComment 0x2c650fb0 <col:37, col:88>
| |     `-TextComment 0x2c650f80 <col:37, col:88> Text=" y field-of-view (ortho ? len : deg)      (ncam x 1)"
| |-FieldDecl 0x2c618b88 <line:814:3, col:13> col:13 cam_ipd 'mjtNum *'
| | `-FullComment 0x2c6510b0 <col:37, col:88>
| |   `-ParagraphComment 0x2c651080 <col:37, col:88>
| |     `-TextComment 0x2c651050 <col:37, col:88> Text=" inter-pupilary distance                  (ncam x 1)"
| |-FieldDecl 0x2c618c20 <line:815:3, col:13> col:13 cam_resolution 'int *'
| | `-FullComment 0x2c651180 <col:37, col:88>
| |   `-ParagraphComment 0x2c651150 <col:37, col:88>
| |     `-TextComment 0x2c651120 <col:37, col:88> Text=" resolution: pixels [width, height]       (ncam x 2)"
| |-FieldDecl 0x2c618cb0 <line:816:3, col:13> col:13 cam_sensorsize 'float *'
| | `-FullComment 0x2c651250 <col:37, col:88>
| |   `-ParagraphComment 0x2c651220 <col:37, col:88>
| |     `-TextComment 0x2c6511f0 <col:37, col:88> Text=" sensor size: length [width, height]      (ncam x 2)"
| |-FieldDecl 0x2c618d40 <line:817:3, col:13> col:13 cam_intrinsic 'float *'
| | `-FullComment 0x2c651320 <col:37, col:88>
| |   `-ParagraphComment 0x2c6512f0 <col:37, col:88>
| |     `-TextComment 0x2c6512c0 <col:37, col:88> Text=" [focal length; principal point]          (ncam x 4)"
| |-FieldDecl 0x2c618dc8 <line:818:3, col:13> col:13 cam_user 'mjtNum *'
| | `-FullComment 0x2c6513f0 <col:37, col:96>
| |   `-ParagraphComment 0x2c6513c0 <col:37, col:96>
| |     `-TextComment 0x2c651390 <col:37, col:96> Text=" user data                                (ncam x nuser_cam)"
| |-FieldDecl 0x2c618e90 <line:821:3, col:13> col:13 light_mode 'int *'
| | `-FullComment 0x2c6514c0 <col:37, col:90>
| |   `-ParagraphComment 0x2c651490 <col:37, col:90>
| |     `-TextComment 0x2c651460 <col:37, col:90> Text=" light tracking mode (mjtCamLight)        (nlight x 1)"
| |-FieldDecl 0x2c618f20 <line:822:3, col:13> col:13 light_bodyid 'int *'
| | `-FullComment 0x2c651590 <col:37, col:90>
| |   `-ParagraphComment 0x2c651560 <col:37, col:90>
| |     `-TextComment 0x2c651530 <col:37, col:90> Text=" id of light's body                       (nlight x 1)"
| |-FieldDecl 0x2c618fb0 <line:823:3, col:13> col:13 light_targetbodyid 'int *'
| | `-FullComment 0x2c651660 <col:37, col:90>
| |   `-ParagraphComment 0x2c651630 <col:37, col:90>
| |     `-TextComment 0x2c651600 <col:37, col:90> Text=" id of targeted body; -1: none            (nlight x 1)"
| |-FieldDecl 0x2c619038 <line:824:3, col:13> col:13 light_directional 'mjtByte *'
| | `-FullComment 0x2c651730 <col:37, col:90>
| |   `-ParagraphComment 0x2c651700 <col:37, col:90>
| |     `-TextComment 0x2c6516d0 <col:37, col:90> Text=" directional light                        (nlight x 1)"
| |-FieldDecl 0x2c61a588 <line:825:3, col:13> col:13 light_castshadow 'mjtByte *'
| | `-FullComment 0x2c651800 <col:37, col:90>
| |   `-ParagraphComment 0x2c6517d0 <col:37, col:90>
| |     `-TextComment 0x2c6517a0 <col:37, col:90> Text=" does light cast shadows                  (nlight x 1)"
| |-FieldDecl 0x2c61a620 <line:826:3, col:13> col:13 light_bulbradius 'float *'
| | `-FullComment 0x2c6518d0 <col:37, col:90>
| |   `-ParagraphComment 0x2c6518a0 <col:37, col:90>
| |     `-TextComment 0x2c651870 <col:37, col:90> Text=" light radius for soft shadows            (nlight x 1)"
| |-FieldDecl 0x2c61a6a8 <line:827:3, col:13> col:13 light_active 'mjtByte *'
| | `-FullComment 0x2c6519a0 <col:37, col:90>
| |   `-ParagraphComment 0x2c651970 <col:37, col:90>
| |     `-TextComment 0x2c651940 <col:37, col:90> Text=" is light on                              (nlight x 1)"
| |-FieldDecl 0x2c61a738 <line:828:3, col:13> col:13 light_pos 'mjtNum *'
| | `-FullComment 0x2c651a70 <col:37, col:90>
| |   `-ParagraphComment 0x2c651a40 <col:37, col:90>
| |     `-TextComment 0x2c651a10 <col:37, col:90> Text=" position rel. to body frame              (nlight x 3)"
| |-FieldDecl 0x2c61a7c8 <line:829:3, col:13> col:13 light_dir 'mjtNum *'
| | `-FullComment 0x2c651b50 <col:37, col:90>
| |   `-ParagraphComment 0x2c651b20 <col:37, col:90>
| |     `-TextComment 0x2c651ae0 <col:37, col:90> Text=" direction rel. to body frame             (nlight x 3)"
| |-FieldDecl 0x2c61a858 <line:830:3, col:13> col:13 light_poscom0 'mjtNum *'
| | `-FullComment 0x2c651c20 <col:37, col:90>
| |   `-ParagraphComment 0x2c651bf0 <col:37, col:90>
| |     `-TextComment 0x2c651bc0 <col:37, col:90> Text=" global position rel. to sub-com in qpos0 (nlight x 3)"
| |-FieldDecl 0x2c61a8e8 <line:831:3, col:13> col:13 light_pos0 'mjtNum *'
| | `-FullComment 0x2c651cf0 <col:37, col:90>
| |   `-ParagraphComment 0x2c651cc0 <col:37, col:90>
| |     `-TextComment 0x2c651c90 <col:37, col:90> Text=" global position rel. to body in qpos0    (nlight x 3)"
| |-FieldDecl 0x2c61a978 <line:832:3, col:13> col:13 light_dir0 'mjtNum *'
| | `-FullComment 0x2c651dc0 <col:37, col:90>
| |   `-ParagraphComment 0x2c651d90 <col:37, col:90>
| |     `-TextComment 0x2c651d60 <col:37, col:90> Text=" global direction in qpos0                (nlight x 3)"
| |-FieldDecl 0x2c61aa10 <line:833:3, col:13> col:13 light_attenuation 'float *'
| | `-FullComment 0x2c651e90 <col:37, col:90>
| |   `-ParagraphComment 0x2c651e60 <col:37, col:90>
| |     `-TextComment 0x2c651e30 <col:37, col:90> Text=" OpenGL attenuation (quadratic model)     (nlight x 3)"
| |-FieldDecl 0x2c61aaa0 <line:834:3, col:13> col:13 light_cutoff 'float *'
| | `-FullComment 0x2c651f60 <col:37, col:90>
| |   `-ParagraphComment 0x2c651f30 <col:37, col:90>
| |     `-TextComment 0x2c651f00 <col:37, col:90> Text=" OpenGL cutoff                            (nlight x 1)"
| |-FieldDecl 0x2c61ab30 <line:835:3, col:13> col:13 light_exponent 'float *'
| | `-FullComment 0x2c652030 <col:37, col:90>
| |   `-ParagraphComment 0x2c652000 <col:37, col:90>
| |     `-TextComment 0x2c651fd0 <col:37, col:90> Text=" OpenGL exponent                          (nlight x 1)"
| |-FieldDecl 0x2c61abc0 <line:836:3, col:13> col:13 light_ambient 'float *'
| | `-FullComment 0x2c652100 <col:37, col:90>
| |   `-ParagraphComment 0x2c6520d0 <col:37, col:90>
| |     `-TextComment 0x2c6520a0 <col:37, col:90> Text=" ambient rgb (alpha=1)                    (nlight x 3)"
| |-FieldDecl 0x2c61ac50 <line:837:3, col:13> col:13 light_diffuse 'float *'
| | `-FullComment 0x2c6521d0 <col:37, col:90>
| |   `-ParagraphComment 0x2c6521a0 <col:37, col:90>
| |     `-TextComment 0x2c652170 <col:37, col:90> Text=" diffuse rgb (alpha=1)                    (nlight x 3)"
| |-FieldDecl 0x2c61ace0 <line:838:3, col:13> col:13 light_specular 'float *'
| | `-FullComment 0x2c6522a0 <col:37, col:90>
| |   `-ParagraphComment 0x2c652270 <col:37, col:90>
| |     `-TextComment 0x2c652240 <col:37, col:90> Text=" specular rgb (alpha=1)                   (nlight x 3)"
| |-FieldDecl 0x2c61ada0 <line:841:3, col:13> col:13 flex_contype 'int *'
| | `-FullComment 0x2c652370 <col:37, col:89>
| |   `-ParagraphComment 0x2c652340 <col:37, col:89>
| |     `-TextComment 0x2c652310 <col:37, col:89> Text=" flex contact type                        (nflex x 1)"
| |-FieldDecl 0x2c61ae30 <line:842:3, col:13> col:13 flex_conaffinity 'int *'
| | `-FullComment 0x2c652440 <col:37, col:89>
| |   `-ParagraphComment 0x2c652410 <col:37, col:89>
| |     `-TextComment 0x2c6523e0 <col:37, col:89> Text=" flex contact affinity                    (nflex x 1)"
| |-FieldDecl 0x2c61aec0 <line:843:3, col:13> col:13 flex_condim 'int *'
| | `-FullComment 0x2c652510 <col:37, col:89>
| |   `-ParagraphComment 0x2c6524e0 <col:37, col:89>
| |     `-TextComment 0x2c6524b0 <col:37, col:89> Text=" contact dimensionality (1, 3, 4, 6)      (nflex x 1)"
| |-FieldDecl 0x2c61af50 <line:844:3, col:13> col:13 flex_priority 'int *'
| | `-FullComment 0x2c6525e0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6525b0 <col:37, col:89>
| |     `-TextComment 0x2c652580 <col:37, col:89> Text=" flex contact priority                    (nflex x 1)"
| |-FieldDecl 0x2c61afd8 <line:845:3, col:13> col:13 flex_solmix 'mjtNum *'
| | `-FullComment 0x2c6526b0 <col:37, col:89>
| |   `-ParagraphComment 0x2c652680 <col:37, col:89>
| |     `-TextComment 0x2c652650 <col:37, col:89> Text=" mix coef for solref/imp in contact pair  (nflex x 1)"
| |-FieldDecl 0x2c61b068 <line:846:3, col:13> col:13 flex_solref 'mjtNum *'
| | `-FullComment 0x2c652780 <col:37, col:94>
| |   `-ParagraphComment 0x2c652750 <col:37, col:94>
| |     `-TextComment 0x2c652720 <col:37, col:94> Text=" constraint solver reference: contact     (nflex x mjNREF)"
| |-FieldDecl 0x2c61b0f8 <line:847:3, col:13> col:13 flex_solimp 'mjtNum *'
| | `-FullComment 0x2c652850 <col:37, col:94>
| |   `-ParagraphComment 0x2c652820 <col:37, col:94>
| |     `-TextComment 0x2c6527f0 <col:37, col:94> Text=" constraint solver impedance: contact     (nflex x mjNIMP)"
| |-FieldDecl 0x2c61b188 <line:848:3, col:13> col:13 flex_friction 'mjtNum *'
| | `-FullComment 0x2c652920 <col:37, col:89>
| |   `-ParagraphComment 0x2c6528f0 <col:37, col:89>
| |     `-TextComment 0x2c6528c0 <col:37, col:89> Text=" friction for (slide, spin, roll)         (nflex x 3)"
| |-FieldDecl 0x2c61b218 <line:849:3, col:13> col:13 flex_margin 'mjtNum *'
| | `-FullComment 0x2c652a40 <col:37, col:89>
| |   `-ParagraphComment 0x2c652a10 <col:37, col:89>
| |     |-TextComment 0x2c652990 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x2c6529b0 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x2c6529d0 <col:67, col:89> Text="            (nflex x 1)"
| |-FieldDecl 0x2c61b2a8 <line:850:3, col:13> col:13 flex_gap 'mjtNum *'
| | `-FullComment 0x2c652b70 <col:37, col:89>
| |   `-ParagraphComment 0x2c652b40 <col:37, col:89>
| |     |-TextComment 0x2c652ab0 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x2c652ad0 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x2c652af0 <col:70, col:89> Text="-gap     (nflex x 1)"
| |-FieldDecl 0x2c61b338 <line:851:3, col:13> col:13 flex_internal 'mjtByte *'
| | `-FullComment 0x2c652c40 <col:37, col:89>
| |   `-ParagraphComment 0x2c652c10 <col:37, col:89>
| |     `-TextComment 0x2c652be0 <col:37, col:89> Text=" internal flex collision enabled          (nflex x 1)"
| |-FieldDecl 0x2c61b3d0 <line:852:3, col:13> col:13 flex_selfcollide 'int *'
| | `-FullComment 0x2c652d10 <col:37, col:89>
| |   `-ParagraphComment 0x2c652ce0 <col:37, col:89>
| |     `-TextComment 0x2c652cb0 <col:37, col:89> Text=" self collision mode (mjtFlexSelf)        (nflex x 1)"
| |-FieldDecl 0x2c61b460 <line:853:3, col:13> col:13 flex_activelayers 'int *'
| | `-FullComment 0x2c652de0 <col:37, col:89>
| |   `-ParagraphComment 0x2c652db0 <col:37, col:89>
| |     `-TextComment 0x2c652d80 <col:37, col:89> Text=" number of active element layers, 3D only (nflex x 1)"
| |-FieldDecl 0x2c61b7a0 <line:856:3, col:13> col:13 flex_dim 'int *'
| | `-FullComment 0x2c652eb0 <col:37, col:89>
| |   `-ParagraphComment 0x2c652e80 <col:37, col:89>
| |     `-TextComment 0x2c652e50 <col:37, col:89> Text=" 1: lines, 2: triangles, 3: tetrahedra    (nflex x 1)"
| |-FieldDecl 0x2c61b830 <line:857:3, col:13> col:13 flex_matid 'int *'
| | `-FullComment 0x2c652f80 <col:37, col:89>
| |   `-ParagraphComment 0x2c652f50 <col:37, col:89>
| |     `-TextComment 0x2c652f20 <col:37, col:89> Text=" material id for rendering                (nflex x 1)"
| |-FieldDecl 0x2c61b8c0 <line:858:3, col:13> col:13 flex_group 'int *'
| | `-FullComment 0x2c653050 <col:37, col:89>
| |   `-ParagraphComment 0x2c653020 <col:37, col:89>
| |     `-TextComment 0x2c652ff0 <col:37, col:89> Text=" group for visibility                     (nflex x 1)"
| |-FieldDecl 0x2c61b950 <line:859:3, col:13> col:13 flex_vertadr 'int *'
| | `-FullComment 0x2c653120 <col:37, col:89>
| |   `-ParagraphComment 0x2c6530f0 <col:37, col:89>
| |     `-TextComment 0x2c6530c0 <col:37, col:89> Text=" first vertex address                     (nflex x 1)"
| |-FieldDecl 0x2c61b9e0 <line:860:3, col:13> col:13 flex_vertnum 'int *'
| | `-FullComment 0x2c6531f0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6531c0 <col:37, col:89>
| |     `-TextComment 0x2c653190 <col:37, col:89> Text=" number of vertices                       (nflex x 1)"
| |-FieldDecl 0x2c61ba70 <line:861:3, col:13> col:13 flex_edgeadr 'int *'
| | `-FullComment 0x2c6532c0 <col:37, col:89>
| |   `-ParagraphComment 0x2c653290 <col:37, col:89>
| |     `-TextComment 0x2c653260 <col:37, col:89> Text=" first edge address                       (nflex x 1)"
| |-FieldDecl 0x2c61bb00 <line:862:3, col:13> col:13 flex_edgenum 'int *'
| | `-FullComment 0x2c653390 <col:37, col:89>
| |   `-ParagraphComment 0x2c653360 <col:37, col:89>
| |     `-TextComment 0x2c653330 <col:37, col:89> Text=" number of edges                          (nflex x 1)"
| |-FieldDecl 0x2c61bb90 <line:863:3, col:13> col:13 flex_elemadr 'int *'
| | `-FullComment 0x2c653460 <col:37, col:89>
| |   `-ParagraphComment 0x2c653430 <col:37, col:89>
| |     `-TextComment 0x2c653400 <col:37, col:89> Text=" first element address                    (nflex x 1)"
| |-FieldDecl 0x2c61bc20 <line:864:3, col:13> col:13 flex_elemnum 'int *'
| | `-FullComment 0x2c653530 <col:37, col:89>
| |   `-ParagraphComment 0x2c653500 <col:37, col:89>
| |     `-TextComment 0x2c6534d0 <col:37, col:89> Text=" number of elements                       (nflex x 1)"
| |-FieldDecl 0x2c61bcb0 <line:865:3, col:13> col:13 flex_elemdataadr 'int *'
| | `-FullComment 0x2c653600 <col:37, col:89>
| |   `-ParagraphComment 0x2c6535d0 <col:37, col:89>
| |     `-TextComment 0x2c6535a0 <col:37, col:89> Text=" first element vertex id address          (nflex x 1)"
| |-FieldDecl 0x2c61bd40 <line:866:3, col:13> col:13 flex_elemedgeadr 'int *'
| | `-FullComment 0x2c6536d0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6536a0 <col:37, col:89>
| |     `-TextComment 0x2c653670 <col:37, col:89> Text=" first element edge id address            (nflex x 1)"
| |-FieldDecl 0x2c61bdd0 <line:867:3, col:13> col:13 flex_shellnum 'int *'
| | `-FullComment 0x2c6537a0 <col:37, col:89>
| |   `-ParagraphComment 0x2c653770 <col:37, col:89>
| |     `-TextComment 0x2c653740 <col:37, col:89> Text=" number of shells                         (nflex x 1)"
| |-FieldDecl 0x2c61be60 <line:868:3, col:13> col:13 flex_shelldataadr 'int *'
| | `-FullComment 0x2c653870 <col:37, col:89>
| |   `-ParagraphComment 0x2c653840 <col:37, col:89>
| |     `-TextComment 0x2c653810 <col:37, col:89> Text=" first shell data address                 (nflex x 1)"
| |-FieldDecl 0x2c61bef0 <line:869:3, col:13> col:13 flex_evpairadr 'int *'
| | `-FullComment 0x2c653940 <col:37, col:89>
| |   `-ParagraphComment 0x2c653910 <col:37, col:89>
| |     `-TextComment 0x2c6538e0 <col:37, col:89> Text=" first evpair address                     (nflex x 1)"
| |-FieldDecl 0x2c61bf80 <line:870:3, col:13> col:13 flex_evpairnum 'int *'
| | `-FullComment 0x2c653a10 <col:37, col:89>
| |   `-ParagraphComment 0x2c6539e0 <col:37, col:89>
| |     `-TextComment 0x2c6539b0 <col:37, col:89> Text=" number of evpairs                        (nflex x 1)"
| |-FieldDecl 0x2c61c010 <line:871:3, col:13> col:13 flex_texcoordadr 'int *'
| | `-FullComment 0x2c653ae0 <col:37, col:89>
| |   `-ParagraphComment 0x2c653ab0 <col:37, col:89>
| |     `-TextComment 0x2c653a80 <col:37, col:89> Text=" address in flex_texcoord; -1: none       (nflex x 1)"
| |-FieldDecl 0x2c61c0a0 <line:872:3, col:13> col:13 flex_vertbodyid 'int *'
| | `-FullComment 0x2c653bd0 <col:37, col:93>
| |   `-ParagraphComment 0x2c653ba0 <col:37, col:93>
| |     `-TextComment 0x2c653b70 <col:37, col:93> Text=" vertex body ids                          (nflexvert x 1)"
| |-FieldDecl 0x2c61c130 <line:873:3, col:13> col:13 flex_edge 'int *'
| | `-FullComment 0x2c653ca0 <col:37, col:93>
| |   `-ParagraphComment 0x2c653c70 <col:37, col:93>
| |     `-TextComment 0x2c653c40 <col:37, col:93> Text=" edge vertex ids (2 per edge)             (nflexedge x 2)"
| |-FieldDecl 0x2c61c1c0 <line:874:3, col:13> col:13 flex_elem 'int *'
| | `-FullComment 0x2c653d70 <col:37, col:97>
| |   `-ParagraphComment 0x2c653d40 <col:37, col:97>
| |     `-TextComment 0x2c653d10 <col:37, col:97> Text=" element vertex ids (dim+1 per elem)      (nflexelemdata x 1)"
| |-FieldDecl 0x2c61c250 <line:875:3, col:13> col:13 flex_elemedge 'int *'
| | `-FullComment 0x2c653e40 <col:37, col:97>
| |   `-ParagraphComment 0x2c653e10 <col:37, col:97>
| |     `-TextComment 0x2c653de0 <col:37, col:97> Text=" element edge ids                         (nflexelemedge x 1)"
| |-FieldDecl 0x2c61c2e0 <line:876:3, col:13> col:13 flex_elemlayer 'int *'
| | `-FullComment 0x2c653f10 <col:37, col:93>
| |   `-ParagraphComment 0x2c653ee0 <col:37, col:93>
| |     `-TextComment 0x2c653eb0 <col:37, col:93> Text=" element distance from surface, 3D only   (nflexelem x 1)"
| |-FieldDecl 0x2c61c370 <line:877:3, col:13> col:13 flex_shell 'int *'
| | `-FullComment 0x2c653fe0 <col:37, col:98>
| |   `-ParagraphComment 0x2c653fb0 <col:37, col:98>
| |     `-TextComment 0x2c653f80 <col:37, col:98> Text=" shell fragment vertex ids (dim per frag) (nflexshelldata x 1)"
| |-FieldDecl 0x2c61c400 <line:878:3, col:13> col:13 flex_evpair 'int *'
| | `-FullComment 0x2c6540b0 <col:37, col:95>
| |   `-ParagraphComment 0x2c654080 <col:37, col:95>
| |     `-TextComment 0x2c654050 <col:37, col:95> Text=" (element, vertex) collision pairs        (nflexevpair x 2)"
| |-FieldDecl 0x2c61c488 <line:879:3, col:13> col:13 flex_vert 'mjtNum *'
| | `-FullComment 0x2c654180 <col:37, col:93>
| |   `-ParagraphComment 0x2c654150 <col:37, col:93>
| |     `-TextComment 0x2c654120 <col:37, col:93> Text=" vertex positions in local body frames    (nflexvert x 3)"
| |-FieldDecl 0x2c61c518 <line:880:3, col:13> col:13 flex_xvert0 'mjtNum *'
| | `-FullComment 0x2c654250 <col:37, col:93>
| |   `-ParagraphComment 0x2c654220 <col:37, col:93>
| |     `-TextComment 0x2c6541f0 <col:37, col:93> Text=" Cartesian vertex positions in qpos0      (nflexvert x 3)"
| |-FieldDecl 0x2c61c5a8 <line:881:3, col:13> col:13 flexedge_length0 'mjtNum *'
| | `-FullComment 0x2c654320 <col:37, col:93>
| |   `-ParagraphComment 0x2c6542f0 <col:37, col:93>
| |     `-TextComment 0x2c6542c0 <col:37, col:93> Text=" edge lengths in qpos0                    (nflexedge x 1)"
| |-FieldDecl 0x2c61c638 <line:882:3, col:13> col:13 flexedge_invweight0 'mjtNum *'
| | `-FullComment 0x2c6543f0 <col:37, col:93>
| |   `-ParagraphComment 0x2c6543c0 <col:37, col:93>
| |     `-TextComment 0x2c654390 <col:37, col:93> Text=" edge inv. weight in qpos0                (nflexedge x 1)"
| |-FieldDecl 0x2c61c6c8 <line:883:3, col:13> col:13 flex_radius 'mjtNum *'
| | `-FullComment 0x2c6544c0 <col:37, col:89>
| |   `-ParagraphComment 0x2c654490 <col:37, col:89>
| |     `-TextComment 0x2c654460 <col:37, col:89> Text=" radius around primitive element          (nflex x 1)"
| |-FieldDecl 0x2c61ceb0 <line:884:3, col:13> col:13 flex_stiffness 'mjtNum *'
| | `-FullComment 0x2c654590 <col:37, col:94>
| |   `-ParagraphComment 0x2c654560 <col:37, col:94>
| |     `-TextComment 0x2c654530 <col:37, col:94> Text=" finite element stiffness matrix          (nflexelem x 21)"
| |-FieldDecl 0x2c61cf38 <line:885:3, col:13> col:13 flex_damping 'mjtNum *'
| | `-FullComment 0x2c654660 <col:37, col:89>
| |   `-ParagraphComment 0x2c654630 <col:37, col:89>
| |     `-TextComment 0x2c654600 <col:37, col:89> Text=" Rayleigh's damping coefficient           (nflex x 1)"
| |-FieldDecl 0x2c61cfc8 <line:886:3, col:13> col:13 flex_edgestiffness 'mjtNum *'
| | `-FullComment 0x2c654730 <col:37, col:89>
| |   `-ParagraphComment 0x2c654700 <col:37, col:89>
| |     `-TextComment 0x2c6546d0 <col:37, col:89> Text=" edge stiffness                           (nflex x 1)"
| |-FieldDecl 0x2c61d058 <line:887:3, col:13> col:13 flex_edgedamping 'mjtNum *'
| | `-FullComment 0x2c654800 <col:37, col:89>
| |   `-ParagraphComment 0x2c6547d0 <col:37, col:89>
| |     `-TextComment 0x2c6547a0 <col:37, col:89> Text=" edge damping                             (nflex x 1)"
| |-FieldDecl 0x2c61d0e8 <line:888:3, col:13> col:13 flex_edgeequality 'mjtByte *'
| | `-FullComment 0x2c6548d0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6548a0 <col:37, col:89>
| |     `-TextComment 0x2c654870 <col:37, col:89> Text=" is edge equality constraint defined      (nflex x 1)"
| |-FieldDecl 0x2c61d178 <line:889:3, col:13> col:13 flex_rigid 'mjtByte *'
| | `-FullComment 0x2c6549a0 <col:37, col:89>
| |   `-ParagraphComment 0x2c654970 <col:37, col:89>
| |     `-TextComment 0x2c654940 <col:37, col:89> Text=" are all verices in the same body         (nflex x 1)"
| |-FieldDecl 0x2c61d208 <line:890:3, col:13> col:13 flexedge_rigid 'mjtByte *'
| | `-FullComment 0x2c654a70 <col:37, col:93>
| |   `-ParagraphComment 0x2c654a40 <col:37, col:93>
| |     `-TextComment 0x2c654a10 <col:37, col:93> Text=" are both edge vertices in same body      (nflexedge x 1)"
| |-FieldDecl 0x2c61d298 <line:891:3, col:13> col:13 flex_centered 'mjtByte *'
| | `-FullComment 0x2c654b50 <col:37, col:89>
| |   `-ParagraphComment 0x2c654b10 <col:37, col:89>
| |     `-TextComment 0x2c654ae0 <col:37, col:89> Text=" are all vertex coordinates (0,0,0)       (nflex x 1)"
| |-FieldDecl 0x2c61d328 <line:892:3, col:13> col:13 flex_flatskin 'mjtByte *'
| | `-FullComment 0x2c654c20 <col:37, col:89>
| |   `-ParagraphComment 0x2c654bf0 <col:37, col:89>
| |     `-TextComment 0x2c654bc0 <col:37, col:89> Text=" render flex skin with flat shading       (nflex x 1)"
| |-FieldDecl 0x2c61d3c0 <line:893:3, col:13> col:13 flex_bvhadr 'int *'
| | `-FullComment 0x2c654cf0 <col:37, col:89>
| |   `-ParagraphComment 0x2c654cc0 <col:37, col:89>
| |     `-TextComment 0x2c654c90 <col:37, col:89> Text=" address of bvh root; -1: no bvh          (nflex x 1)"
| |-FieldDecl 0x2c61d450 <line:894:3, col:13> col:13 flex_bvhnum 'int *'
| | `-FullComment 0x2c654dc0 <col:37, col:89>
| |   `-ParagraphComment 0x2c654d90 <col:37, col:89>
| |     `-TextComment 0x2c654d60 <col:37, col:89> Text=" number of bounding volumes               (nflex x 1)"
| |-FieldDecl 0x2c61d4e0 <line:895:3, col:13> col:13 flex_rgba 'float *'
| | `-FullComment 0x2c654e90 <col:37, col:89>
| |   `-ParagraphComment 0x2c654e60 <col:37, col:89>
| |     `-TextComment 0x2c654e30 <col:37, col:89> Text=" rgba when material is omitted            (nflex x 4)"
| |-FieldDecl 0x2c61d570 <line:896:3, col:13> col:13 flex_texcoord 'float *'
| | `-FullComment 0x2c654f60 <col:37, col:97>
| |   `-ParagraphComment 0x2c654f30 <col:37, col:97>
| |     `-TextComment 0x2c654f00 <col:37, col:97> Text=" vertex texture coordinates               (nflextexcoord x 2)"
| |-FieldDecl 0x2c61d630 <line:899:3, col:13> col:13 mesh_vertadr 'int *'
| | `-FullComment 0x2c655030 <col:37, col:89>
| |   `-ParagraphComment 0x2c655000 <col:37, col:89>
| |     `-TextComment 0x2c654fd0 <col:37, col:89> Text=" first vertex address                     (nmesh x 1)"
| |-FieldDecl 0x2c61d6c0 <line:900:3, col:13> col:13 mesh_vertnum 'int *'
| | `-FullComment 0x2c655100 <col:37, col:89>
| |   `-ParagraphComment 0x2c6550d0 <col:37, col:89>
| |     `-TextComment 0x2c6550a0 <col:37, col:89> Text=" number of vertices                       (nmesh x 1)"
| |-FieldDecl 0x2c61d750 <line:901:3, col:13> col:13 mesh_faceadr 'int *'
| | `-FullComment 0x2c6551d0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6551a0 <col:37, col:89>
| |     `-TextComment 0x2c655170 <col:37, col:89> Text=" first face address                       (nmesh x 1)"
| |-FieldDecl 0x2c61d7e0 <line:902:3, col:13> col:13 mesh_facenum 'int *'
| | `-FullComment 0x2c6552a0 <col:37, col:89>
| |   `-ParagraphComment 0x2c655270 <col:37, col:89>
| |     `-TextComment 0x2c655240 <col:37, col:89> Text=" number of faces                          (nmesh x 1)"
| |-FieldDecl 0x2c61d870 <line:903:3, col:13> col:13 mesh_bvhadr 'int *'
| | `-FullComment 0x2c655370 <col:37, col:89>
| |   `-ParagraphComment 0x2c655340 <col:37, col:89>
| |     `-TextComment 0x2c655310 <col:37, col:89> Text=" address of bvh root                      (nmesh x 1)"
| |-FieldDecl 0x2c61d900 <line:904:3, col:13> col:13 mesh_bvhnum 'int *'
| | `-FullComment 0x2c655440 <col:37, col:89>
| |   `-ParagraphComment 0x2c655410 <col:37, col:89>
| |     `-TextComment 0x2c6553e0 <col:37, col:89> Text=" number of bvh                            (nmesh x 1)"
| |-FieldDecl 0x2c61d990 <line:905:3, col:13> col:13 mesh_normaladr 'int *'
| | `-FullComment 0x2c655510 <col:37, col:89>
| |   `-ParagraphComment 0x2c6554e0 <col:37, col:89>
| |     `-TextComment 0x2c6554b0 <col:37, col:89> Text=" first normal address                     (nmesh x 1)"
| |-FieldDecl 0x2c61da20 <line:906:3, col:13> col:13 mesh_normalnum 'int *'
| | `-FullComment 0x2c6555e0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6555b0 <col:37, col:89>
| |     `-TextComment 0x2c655580 <col:37, col:89> Text=" number of normals                        (nmesh x 1)"
| |-FieldDecl 0x2c61dab0 <line:907:3, col:13> col:13 mesh_texcoordadr 'int *'
| | `-FullComment 0x2c6556b0 <col:37, col:89>
| |   `-ParagraphComment 0x2c655680 <col:37, col:89>
| |     `-TextComment 0x2c655650 <col:37, col:89> Text=" texcoord data address; -1: no texcoord   (nmesh x 1)"
| |-FieldDecl 0x2c61db40 <line:908:3, col:13> col:13 mesh_texcoordnum 'int *'
| | `-FullComment 0x2c655780 <col:37, col:89>
| |   `-ParagraphComment 0x2c655750 <col:37, col:89>
| |     `-TextComment 0x2c655720 <col:37, col:89> Text=" number of texcoord                       (nmesh x 1)"
| |-FieldDecl 0x2c61dbd0 <line:909:3, col:13> col:13 mesh_graphadr 'int *'
| | `-FullComment 0x2c655850 <col:37, col:89>
| |   `-ParagraphComment 0x2c655820 <col:37, col:89>
| |     `-TextComment 0x2c6557f0 <col:37, col:89> Text=" graph data address; -1: no graph         (nmesh x 1)"
| |-FieldDecl 0x2c61dc60 <line:910:3, col:13> col:13 mesh_vert 'float *'
| | `-FullComment 0x2c655920 <col:37, col:93>
| |   `-ParagraphComment 0x2c6558f0 <col:37, col:93>
| |     `-TextComment 0x2c6558c0 <col:37, col:93> Text=" vertex positions for all meshes          (nmeshvert x 3)"
| |-FieldDecl 0x2c61dcf0 <line:911:3, col:13> col:13 mesh_normal 'float *'
| | `-FullComment 0x2c6559f0 <col:37, col:95>
| |   `-ParagraphComment 0x2c6559c0 <col:37, col:95>
| |     `-TextComment 0x2c655990 <col:37, col:95> Text=" normals for all meshes                   (nmeshnormal x 3)"
| |-FieldDecl 0x2c61dd80 <line:912:3, col:13> col:13 mesh_texcoord 'float *'
| | `-FullComment 0x2c655ac0 <col:37, col:97>
| |   `-ParagraphComment 0x2c655a90 <col:37, col:97>
| |     `-TextComment 0x2c655a60 <col:37, col:97> Text=" vertex texcoords for all meshes          (nmeshtexcoord x 2)"
| |-FieldDecl 0x2c61de10 <line:913:3, col:13> col:13 mesh_face 'int *'
| | `-FullComment 0x2c655bb0 <col:37, col:93>
| |   `-ParagraphComment 0x2c655b80 <col:37, col:93>
| |     `-TextComment 0x2c655b50 <col:37, col:93> Text=" vertex face data                         (nmeshface x 3)"
| |-FieldDecl 0x2c61e600 <line:914:3, col:13> col:13 mesh_facenormal 'int *'
| | `-FullComment 0x2c655c80 <col:37, col:93>
| |   `-ParagraphComment 0x2c655c50 <col:37, col:93>
| |     `-TextComment 0x2c655c20 <col:37, col:93> Text=" normal face data                         (nmeshface x 3)"
| |-FieldDecl 0x2c61e690 <line:915:3, col:13> col:13 mesh_facetexcoord 'int *'
| | `-FullComment 0x2c655d50 <col:37, col:93>
| |   `-ParagraphComment 0x2c655d20 <col:37, col:93>
| |     `-TextComment 0x2c655cf0 <col:37, col:93> Text=" texture face data                        (nmeshface x 3)"
| |-FieldDecl 0x2c61e720 <line:916:3, col:13> col:13 mesh_graph 'int *'
| | `-FullComment 0x2c655e20 <col:37, col:94>
| |   `-ParagraphComment 0x2c655df0 <col:37, col:94>
| |     `-TextComment 0x2c655dc0 <col:37, col:94> Text=" convex graph data                        (nmeshgraph x 1)"
| |-FieldDecl 0x2c61e7a8 <line:917:3, col:13> col:13 mesh_scale 'mjtNum *'
| | `-FullComment 0x2c655ef0 <col:37, col:89>
| |   `-ParagraphComment 0x2c655ec0 <col:37, col:89>
| |     `-TextComment 0x2c655e90 <col:37, col:89> Text=" scaling applied to asset vertices        (nmesh x 3)"
| |-FieldDecl 0x2c61e838 <line:918:3, col:13> col:13 mesh_pos 'mjtNum *'
| | `-FullComment 0x2c655fc0 <col:37, col:89>
| |   `-ParagraphComment 0x2c655f90 <col:37, col:89>
| |     `-TextComment 0x2c655f60 <col:37, col:89> Text=" translation applied to asset vertices    (nmesh x 3)"
| |-FieldDecl 0x2c61e8c8 <line:919:3, col:13> col:13 mesh_quat 'mjtNum *'
| | `-FullComment 0x2c656090 <col:37, col:89>
| |   `-ParagraphComment 0x2c656060 <col:37, col:89>
| |     `-TextComment 0x2c656030 <col:37, col:89> Text=" rotation applied to asset vertices       (nmesh x 4)"
| |-FieldDecl 0x2c61e960 <line:920:3, col:13> col:13 mesh_pathadr 'int *'
| | `-FullComment 0x2c656160 <col:37, col:89>
| |   `-ParagraphComment 0x2c656130 <col:37, col:89>
| |     `-TextComment 0x2c656100 <col:37, col:89> Text=" address of asset path for mesh; -1: none (nmesh x 1)"
| |-FieldDecl 0x2c61ea20 <line:923:3, col:13> col:13 skin_matid 'int *'
| | `-FullComment 0x2c656230 <col:37, col:89>
| |   `-ParagraphComment 0x2c656200 <col:37, col:89>
| |     `-TextComment 0x2c6561d0 <col:37, col:89> Text=" skin material id; -1: none               (nskin x 1)"
| |-FieldDecl 0x2c61eab0 <line:924:3, col:13> col:13 skin_group 'int *'
| | `-FullComment 0x2c656300 <col:37, col:89>
| |   `-ParagraphComment 0x2c6562d0 <col:37, col:89>
| |     `-TextComment 0x2c6562a0 <col:37, col:89> Text=" group for visibility                     (nskin x 1)"
| |-FieldDecl 0x2c61eb40 <line:925:3, col:13> col:13 skin_rgba 'float *'
| | `-FullComment 0x2c6563d0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6563a0 <col:37, col:89>
| |     `-TextComment 0x2c656370 <col:37, col:89> Text=" skin rgba                                (nskin x 4)"
| |-FieldDecl 0x2c61ebd0 <line:926:3, col:13> col:13 skin_inflate 'float *'
| | `-FullComment 0x2c6564a0 <col:37, col:89>
| |   `-ParagraphComment 0x2c656470 <col:37, col:89>
| |     `-TextComment 0x2c656440 <col:37, col:89> Text=" inflate skin in normal direction         (nskin x 1)"
| |-FieldDecl 0x2c61ec60 <line:927:3, col:13> col:13 skin_vertadr 'int *'
| | `-FullComment 0x2c656570 <col:37, col:89>
| |   `-ParagraphComment 0x2c656540 <col:37, col:89>
| |     `-TextComment 0x2c656510 <col:37, col:89> Text=" first vertex address                     (nskin x 1)"
| |-FieldDecl 0x2c61ecf0 <line:928:3, col:13> col:13 skin_vertnum 'int *'
| | `-FullComment 0x2c656640 <col:37, col:89>
| |   `-ParagraphComment 0x2c656610 <col:37, col:89>
| |     `-TextComment 0x2c6565e0 <col:37, col:89> Text=" number of vertices                       (nskin x 1)"
| |-FieldDecl 0x2c61ed80 <line:929:3, col:13> col:13 skin_texcoordadr 'int *'
| | `-FullComment 0x2c656710 <col:37, col:89>
| |   `-ParagraphComment 0x2c6566e0 <col:37, col:89>
| |     `-TextComment 0x2c6566b0 <col:37, col:89> Text=" texcoord data address; -1: no texcoord   (nskin x 1)"
| |-FieldDecl 0x2c61ee10 <line:930:3, col:13> col:13 skin_faceadr 'int *'
| | `-FullComment 0x2c6567e0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6567b0 <col:37, col:89>
| |     `-TextComment 0x2c656780 <col:37, col:89> Text=" first face address                       (nskin x 1)"
| |-FieldDecl 0x2c61eea0 <line:931:3, col:13> col:13 skin_facenum 'int *'
| | `-FullComment 0x2c6568b0 <col:37, col:89>
| |   `-ParagraphComment 0x2c656880 <col:37, col:89>
| |     `-TextComment 0x2c656850 <col:37, col:89> Text=" number of faces                          (nskin x 1)"
| |-FieldDecl 0x2c61ef30 <line:932:3, col:13> col:13 skin_boneadr 'int *'
| | `-FullComment 0x2c656980 <col:37, col:89>
| |   `-ParagraphComment 0x2c656950 <col:37, col:89>
| |     `-TextComment 0x2c656920 <col:37, col:89> Text=" first bone in skin                       (nskin x 1)"
| |-FieldDecl 0x2c61efc0 <line:933:3, col:13> col:13 skin_bonenum 'int *'
| | `-FullComment 0x2c656a50 <col:37, col:89>
| |   `-ParagraphComment 0x2c656a20 <col:37, col:89>
| |     `-TextComment 0x2c6569f0 <col:37, col:89> Text=" number of bones in skin                  (nskin x 1)"
| |-FieldDecl 0x2c61f050 <line:934:3, col:13> col:13 skin_vert 'float *'
| | `-FullComment 0x2c656b20 <col:37, col:93>
| |   `-ParagraphComment 0x2c656af0 <col:37, col:93>
| |     `-TextComment 0x2c656ac0 <col:37, col:93> Text=" vertex positions for all skin meshes     (nskinvert x 3)"
| |-FieldDecl 0x2c61f0e0 <line:935:3, col:13> col:13 skin_texcoord 'float *'
| | `-FullComment 0x2c656c00 <col:37, col:96>
| |   `-ParagraphComment 0x2c656bd0 <col:37, col:96>
| |     `-TextComment 0x2c656ba0 <col:37, col:96> Text=" vertex texcoords for all skin meshes     (nskintexvert x 2)"
| |-FieldDecl 0x2c61f170 <line:936:3, col:13> col:13 skin_face 'int *'
| | `-FullComment 0x2c656cd0 <col:37, col:93>
| |   `-ParagraphComment 0x2c656ca0 <col:37, col:93>
| |     `-TextComment 0x2c656c70 <col:37, col:93> Text=" triangle faces for all skin meshes       (nskinface x 3)"
| |-FieldDecl 0x2c61f200 <line:937:3, col:13> col:13 skin_bonevertadr 'int *'
| | `-FullComment 0x2c656da0 <col:37, col:93>
| |   `-ParagraphComment 0x2c656d70 <col:37, col:93>
| |     `-TextComment 0x2c656d40 <col:37, col:93> Text=" first vertex in each bone                (nskinbone x 1)"
| |-FieldDecl 0x2c61f290 <line:938:3, col:13> col:13 skin_bonevertnum 'int *'
| | `-FullComment 0x2c656e70 <col:37, col:93>
| |   `-ParagraphComment 0x2c656e40 <col:37, col:93>
| |     `-TextComment 0x2c656e10 <col:37, col:93> Text=" number of vertices in each bone          (nskinbone x 1)"
| |-FieldDecl 0x2c61f320 <line:939:3, col:13> col:13 skin_bonebindpos 'float *'
| | `-FullComment 0x2c656f40 <col:37, col:93>
| |   `-ParagraphComment 0x2c656f10 <col:37, col:93>
| |     `-TextComment 0x2c656ee0 <col:37, col:93> Text=" bind pos of each bone                    (nskinbone x 3)"
| |-FieldDecl 0x2c61f3b0 <line:940:3, col:13> col:13 skin_bonebindquat 'float *'
| | `-FullComment 0x2c657010 <col:37, col:93>
| |   `-ParagraphComment 0x2c656fe0 <col:37, col:93>
| |     `-TextComment 0x2c656fb0 <col:37, col:93> Text=" bind quat of each bone                   (nskinbone x 4)"
| |-FieldDecl 0x2c61f440 <line:941:3, col:13> col:13 skin_bonebodyid 'int *'
| | `-FullComment 0x2c6570e0 <col:37, col:93>
| |   `-ParagraphComment 0x2c6570b0 <col:37, col:93>
| |     `-TextComment 0x2c657080 <col:37, col:93> Text=" body id of each bone                     (nskinbone x 1)"
| |-FieldDecl 0x2c61f4d0 <line:942:3, col:13> col:13 skin_bonevertid 'int *'
| | `-FullComment 0x2c6571b0 <col:37, col:97>
| |   `-ParagraphComment 0x2c657180 <col:37, col:97>
| |     `-TextComment 0x2c657150 <col:37, col:97> Text=" mesh ids of vertices in each bone        (nskinbonevert x 1)"
| |-FieldDecl 0x2c61f560 <line:943:3, col:13> col:13 skin_bonevertweight 'float *'
| | `-FullComment 0x2c657280 <col:37, col:97>
| |   `-ParagraphComment 0x2c657250 <col:37, col:97>
| |     `-TextComment 0x2c657220 <col:37, col:97> Text=" weights of vertices in each bone         (nskinbonevert x 1)"
| |-FieldDecl 0x2c621d60 <line:944:3, col:13> col:13 skin_pathadr 'int *'
| | `-FullComment 0x2c657350 <col:37, col:89>
| |   `-ParagraphComment 0x2c657320 <col:37, col:89>
| |     `-TextComment 0x2c6572f0 <col:37, col:89> Text=" address of asset path for skin; -1: none (nskin x 1)"
| |-FieldDecl 0x2c621e18 <line:947:3, col:13> col:13 hfield_size 'mjtNum *'
| | `-FullComment 0x2c657420 <col:37, col:91>
| |   `-ParagraphComment 0x2c6573f0 <col:37, col:91>
| |     `-TextComment 0x2c6573c0 <col:37, col:91> Text=" (x, y, z_top, z_bottom)                  (nhfield x 4)"
| |-FieldDecl 0x2c621eb0 <line:948:3, col:13> col:13 hfield_nrow 'int *'
| | `-FullComment 0x2c6574f0 <col:37, col:91>
| |   `-ParagraphComment 0x2c6574c0 <col:37, col:91>
| |     `-TextComment 0x2c657490 <col:37, col:91> Text=" number of rows in grid                   (nhfield x 1)"
| |-FieldDecl 0x2c621f40 <line:949:3, col:13> col:13 hfield_ncol 'int *'
| | `-FullComment 0x2c6575c0 <col:37, col:91>
| |   `-ParagraphComment 0x2c657590 <col:37, col:91>
| |     `-TextComment 0x2c657560 <col:37, col:91> Text=" number of columns in grid                (nhfield x 1)"
| |-FieldDecl 0x2c621fd0 <line:950:3, col:13> col:13 hfield_adr 'int *'
| | `-FullComment 0x2c657690 <col:37, col:91>
| |   `-ParagraphComment 0x2c657660 <col:37, col:91>
| |     `-TextComment 0x2c657630 <col:37, col:91> Text=" address in hfield_data                   (nhfield x 1)"
| |-FieldDecl 0x2c622060 <line:951:3, col:13> col:13 hfield_data 'float *'
| | `-FullComment 0x2c657760 <col:37, col:95>
| |   `-ParagraphComment 0x2c657730 <col:37, col:95>
| |     `-TextComment 0x2c657700 <col:37, col:95> Text=" elevation data                           (nhfielddata x 1)"
| |-FieldDecl 0x2c6220f0 <line:952:3, col:13> col:13 hfield_pathadr 'int *'
| | `-FullComment 0x2c657830 <col:37, col:91>
| |   `-ParagraphComment 0x2c657800 <col:37, col:91>
| |     `-TextComment 0x2c6577d0 <col:37, col:91> Text=" address of hfield asset path; -1: none   (nhfield x 1)"
| |-FieldDecl 0x2c6221b0 <line:955:3, col:13> col:13 tex_type 'int *'
| | `-FullComment 0x2c657900 <col:37, col:88>
| |   `-ParagraphComment 0x2c6578d0 <col:37, col:88>
| |     `-TextComment 0x2c6578a0 <col:37, col:88> Text=" texture type (mjtTexture)                (ntex x 1)"
| |-FieldDecl 0x2c622240 <line:956:3, col:13> col:13 tex_height 'int *'
| | `-FullComment 0x2c6579d0 <col:37, col:88>
| |   `-ParagraphComment 0x2c6579a0 <col:37, col:88>
| |     `-TextComment 0x2c657970 <col:37, col:88> Text=" number of rows in texture image          (ntex x 1)"
| |-FieldDecl 0x2c6222d0 <line:957:3, col:13> col:13 tex_width 'int *'
| | `-FullComment 0x2c657aa0 <col:37, col:88>
| |   `-ParagraphComment 0x2c657a70 <col:37, col:88>
| |     `-TextComment 0x2c657a40 <col:37, col:88> Text=" number of columns in texture image       (ntex x 1)"
| |-FieldDecl 0x2c622360 <line:958:3, col:13> col:13 tex_nchannel 'int *'
| | `-FullComment 0x2c657b80 <col:37, col:88>
| |   `-ParagraphComment 0x2c657b40 <col:37, col:88>
| |     `-TextComment 0x2c657b10 <col:37, col:88> Text=" number of channels in texture image      (ntex x 1)"
| |-FieldDecl 0x2c6223f0 <line:959:3, col:13> col:13 tex_adr 'int *'
| | `-FullComment 0x2c657c50 <col:37, col:88>
| |   `-ParagraphComment 0x2c657c20 <col:37, col:88>
| |     `-TextComment 0x2c657bf0 <col:37, col:88> Text=" start address in tex_data                (ntex x 1)"
| |-FieldDecl 0x2c622478 <line:960:3, col:13> col:13 tex_data 'mjtByte *'
| | `-FullComment 0x2c657d20 <col:37, col:92>
| |   `-ParagraphComment 0x2c657cf0 <col:37, col:92>
| |     `-TextComment 0x2c657cc0 <col:37, col:92> Text=" pixel values                             (ntexdata x 1)"
| |-FieldDecl 0x2c622510 <line:961:3, col:13> col:13 tex_pathadr 'int *'
| | `-FullComment 0x2c657df0 <col:37, col:88>
| |   `-ParagraphComment 0x2c657dc0 <col:37, col:88>
| |     `-TextComment 0x2c657d90 <col:37, col:88> Text=" address of texture asset path; -1: none  (ntex x 1)"
| |-FieldDecl 0x2c6225d0 <line:964:3, col:13> col:13 mat_texid 'int *'
| | `-FullComment 0x2c657ec0 <col:37, col:97>
| |   `-ParagraphComment 0x2c657e90 <col:37, col:97>
| |     `-TextComment 0x2c657e60 <col:37, col:97> Text=" indices of textures; -1: none            (nmat x mjNTEXROLE)"
| |-FieldDecl 0x2c622658 <line:965:3, col:13> col:13 mat_texuniform 'mjtByte *'
| | `-FullComment 0x2c657f90 <col:37, col:88>
| |   `-ParagraphComment 0x2c657f60 <col:37, col:88>
| |     `-TextComment 0x2c657f30 <col:37, col:88> Text=" make texture cube uniform                (nmat x 1)"
| |-FieldDecl 0x2c6226f0 <line:966:3, col:13> col:13 mat_texrepeat 'float *'
| | `-FullComment 0x2c658060 <col:37, col:88>
| |   `-ParagraphComment 0x2c658030 <col:37, col:88>
| |     `-TextComment 0x2c658000 <col:37, col:88> Text=" texture repetition for 2d mapping        (nmat x 2)"
| |-FieldDecl 0x2c622780 <line:967:3, col:13> col:13 mat_emission 'float *'
| | `-FullComment 0x2c658130 <col:37, col:88>
| |   `-ParagraphComment 0x2c658100 <col:37, col:88>
| |     `-TextComment 0x2c6580d0 <col:37, col:88> Text=" emission (x rgb)                         (nmat x 1)"
| |-FieldDecl 0x2c622810 <line:968:3, col:13> col:13 mat_specular 'float *'
| | `-FullComment 0x2c658200 <col:37, col:88>
| |   `-ParagraphComment 0x2c6581d0 <col:37, col:88>
| |     `-TextComment 0x2c6581a0 <col:37, col:88> Text=" specular (x white)                       (nmat x 1)"
| |-FieldDecl 0x2c6228a0 <line:969:3, col:13> col:13 mat_shininess 'float *'
| | `-FullComment 0x2c6582d0 <col:37, col:88>
| |   `-ParagraphComment 0x2c6582a0 <col:37, col:88>
| |     `-TextComment 0x2c658270 <col:37, col:88> Text=" shininess coef                           (nmat x 1)"
| |-FieldDecl 0x2c622930 <line:970:3, col:13> col:13 mat_reflectance 'float *'
| | `-FullComment 0x2c6583a0 <col:37, col:88>
| |   `-ParagraphComment 0x2c658370 <col:37, col:88>
| |     `-TextComment 0x2c658340 <col:37, col:88> Text=" reflectance (0: disable)                 (nmat x 1)"
| |-FieldDecl 0x2c6229c0 <line:971:3, col:13> col:13 mat_metallic 'float *'
| | `-FullComment 0x2c658470 <col:37, col:88>
| |   `-ParagraphComment 0x2c658440 <col:37, col:88>
| |     `-TextComment 0x2c658410 <col:37, col:88> Text=" metallic coef                            (nmat x 1)"
| |-FieldDecl 0x2c622a50 <line:972:3, col:13> col:13 mat_roughness 'float *'
| | `-FullComment 0x2c658540 <col:37, col:88>
| |   `-ParagraphComment 0x2c658510 <col:37, col:88>
| |     `-TextComment 0x2c6584e0 <col:37, col:88> Text=" roughness coef                           (nmat x 1)"
| |-FieldDecl 0x2c622ae0 <line:973:3, col:13> col:13 mat_rgba 'float *'
| | `-FullComment 0x2c658610 <col:37, col:88>
| |   `-ParagraphComment 0x2c6585e0 <col:37, col:88>
| |     `-TextComment 0x2c6585b0 <col:37, col:88> Text=" rgba                                     (nmat x 4)"
| |-FieldDecl 0x2c622ba0 <line:976:3, col:13> col:13 pair_dim 'int *'
| | `-FullComment 0x2c6586e0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6586b0 <col:37, col:89>
| |     `-TextComment 0x2c658680 <col:37, col:89> Text=" contact dimensionality                   (npair x 1)"
| |-FieldDecl 0x2c622c30 <line:977:3, col:13> col:13 pair_geom1 'int *'
| | `-FullComment 0x2c6587b0 <col:37, col:89>
| |   `-ParagraphComment 0x2c658780 <col:37, col:89>
| |     `-TextComment 0x2c658750 <col:37, col:89> Text=" id of geom1                              (npair x 1)"
| |-FieldDecl 0x2c622cc0 <line:978:3, col:13> col:13 pair_geom2 'int *'
| | `-FullComment 0x2c658880 <col:37, col:89>
| |   `-ParagraphComment 0x2c658850 <col:37, col:89>
| |     `-TextComment 0x2c658820 <col:37, col:89> Text=" id of geom2                              (npair x 1)"
| |-FieldDecl 0x2c623530 <line:979:3, col:13> col:13 pair_signature 'int *'
| | `-FullComment 0x2c6589c0 <col:37, col:89>
| |   `-ParagraphComment 0x2c658990 <col:37, col:89>
| |     |-TextComment 0x2c6588f0 <col:37, col:43> Text=" body1 "
| |     |-TextComment 0x2c658910 <col:44> Text="<"
| |     |-TextComment 0x2c658930 <col:45> Text="<"
| |     `-TextComment 0x2c658950 <col:46, col:89> Text=" 16 + body2                      (npair x 1)"
| |-FieldDecl 0x2c6235b8 <line:980:3, col:13> col:13 pair_solref 'mjtNum *'
| | `-FullComment 0x2c658a90 <col:37, col:94>
| |   `-ParagraphComment 0x2c658a60 <col:37, col:94>
| |     `-TextComment 0x2c658a30 <col:37, col:94> Text=" solver reference: contact normal         (npair x mjNREF)"
| |-FieldDecl 0x2c623648 <line:981:3, col:13> col:13 pair_solreffriction 'mjtNum *'
| | `-FullComment 0x2c658b80 <col:37, col:94>
| |   `-ParagraphComment 0x2c658b30 <col:37, col:94>
| |     `-TextComment 0x2c658b00 <col:37, col:94> Text=" solver reference: contact friction       (npair x mjNREF)"
| |-FieldDecl 0x2c6236d8 <line:982:3, col:13> col:13 pair_solimp 'mjtNum *'
| | `-FullComment 0x2c658c50 <col:37, col:94>
| |   `-ParagraphComment 0x2c658c20 <col:37, col:94>
| |     `-TextComment 0x2c658bf0 <col:37, col:94> Text=" solver impedance: contact                (npair x mjNIMP)"
| |-FieldDecl 0x2c623768 <line:983:3, col:13> col:13 pair_margin 'mjtNum *'
| | `-FullComment 0x2c658d70 <col:37, col:89>
| |   `-ParagraphComment 0x2c658d40 <col:37, col:89>
| |     |-TextComment 0x2c658cc0 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x2c658ce0 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x2c658d00 <col:67, col:89> Text="            (npair x 1)"
| |-FieldDecl 0x2c6237f8 <line:984:3, col:13> col:13 pair_gap 'mjtNum *'
| | `-FullComment 0x2c658e90 <col:37, col:89>
| |   `-ParagraphComment 0x2c658e60 <col:37, col:89>
| |     |-TextComment 0x2c658de0 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x2c658e00 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x2c658e20 <col:70, col:89> Text="-gap     (npair x 1)"
| |-FieldDecl 0x2c623888 <line:985:3, col:13> col:13 pair_friction 'mjtNum *'
| | `-FullComment 0x2c658f60 <col:37, col:89>
| |   `-ParagraphComment 0x2c658f30 <col:37, col:89>
| |     `-TextComment 0x2c658f00 <col:37, col:89> Text=" tangent1, 2, spin, roll1, 2              (npair x 5)"
| |-FieldDecl 0x2c623950 <line:988:3, col:13> col:13 exclude_signature 'int *'
| | `-FullComment 0x2c6590a0 <col:37, col:92>
| |   `-ParagraphComment 0x2c659070 <col:37, col:92>
| |     |-TextComment 0x2c658fd0 <col:37, col:43> Text=" body1 "
| |     |-TextComment 0x2c658ff0 <col:44> Text="<"
| |     |-TextComment 0x2c659010 <col:45> Text="<"
| |     `-TextComment 0x2c659030 <col:46, col:92> Text=" 16 + body2                      (nexclude x 1)"
| |-FieldDecl 0x2c623a10 <line:991:3, col:13> col:13 eq_type 'int *'
| | `-FullComment 0x2c659170 <col:37, col:87>
| |   `-ParagraphComment 0x2c659140 <col:37, col:87>
| |     `-TextComment 0x2c659110 <col:37, col:87> Text=" constraint type (mjtEq)                  (neq x 1)"
| |-FieldDecl 0x2c623aa0 <line:992:3, col:13> col:13 eq_obj1id 'int *'
| | `-FullComment 0x2c659240 <col:37, col:87>
| |   `-ParagraphComment 0x2c659210 <col:37, col:87>
| |     `-TextComment 0x2c6591e0 <col:37, col:87> Text=" id of object 1                           (neq x 1)"
| |-FieldDecl 0x2c623b30 <line:993:3, col:13> col:13 eq_obj2id 'int *'
| | `-FullComment 0x2c659310 <col:37, col:87>
| |   `-ParagraphComment 0x2c6592e0 <col:37, col:87>
| |     `-TextComment 0x2c6592b0 <col:37, col:87> Text=" id of object 2                           (neq x 1)"
| |-FieldDecl 0x2c623bc0 <line:994:3, col:13> col:13 eq_objtype 'int *'
| | `-FullComment 0x2c6593e0 <col:37, col:87>
| |   `-ParagraphComment 0x2c6593b0 <col:37, col:87>
| |     `-TextComment 0x2c659380 <col:37, col:87> Text=" type of both objects (mjtObj)            (neq x 1)"
| |-FieldDecl 0x2c623c48 <line:995:3, col:13> col:13 eq_active0 'mjtByte *'
| | `-FullComment 0x2c6594b0 <col:37, col:87>
| |   `-ParagraphComment 0x2c659480 <col:37, col:87>
| |     `-TextComment 0x2c659450 <col:37, col:87> Text=" initial enable/disable constraint state  (neq x 1)"
| |-FieldDecl 0x2c623cd8 <line:996:3, col:13> col:13 eq_solref 'mjtNum *'
| | `-FullComment 0x2c659580 <col:37, col:92>
| |   `-ParagraphComment 0x2c659550 <col:37, col:92>
| |     `-TextComment 0x2c659520 <col:37, col:92> Text=" constraint solver reference              (neq x mjNREF)"
| |-FieldDecl 0x2c623d68 <line:997:3, col:13> col:13 eq_solimp 'mjtNum *'
| | `-FullComment 0x2c659650 <col:37, col:92>
| |   `-ParagraphComment 0x2c659620 <col:37, col:92>
| |     `-TextComment 0x2c6595f0 <col:37, col:92> Text=" constraint solver impedance              (neq x mjNIMP)"
| |-FieldDecl 0x2c623df8 <line:998:3, col:13> col:13 eq_data 'mjtNum *'
| | `-FullComment 0x2c659720 <col:37, col:95>
| |   `-ParagraphComment 0x2c6596f0 <col:37, col:95>
| |     `-TextComment 0x2c6596c0 <col:37, col:95> Text=" numeric data for constraint              (neq x mjNEQDATA)"
| |-FieldDecl 0x2c623ec0 <line:1001:3, col:13> col:13 tendon_adr 'int *'
| | `-FullComment 0x2c6597f0 <col:37, col:91>
| |   `-ParagraphComment 0x2c6597c0 <col:37, col:91>
| |     `-TextComment 0x2c659790 <col:37, col:91> Text=" address of first object in tendon's path (ntendon x 1)"
| |-FieldDecl 0x2c623f50 <line:1002:3, col:13> col:13 tendon_num 'int *'
| | `-FullComment 0x2c6598c0 <col:37, col:91>
| |   `-ParagraphComment 0x2c659890 <col:37, col:91>
| |     `-TextComment 0x2c659860 <col:37, col:91> Text=" number of objects in tendon's path       (ntendon x 1)"
| |-FieldDecl 0x2c623fe0 <line:1003:3, col:13> col:13 tendon_matid 'int *'
| | `-FullComment 0x2c659990 <col:37, col:91>
| |   `-ParagraphComment 0x2c659960 <col:37, col:91>
| |     `-TextComment 0x2c659930 <col:37, col:91> Text=" material id for rendering                (ntendon x 1)"
| |-FieldDecl 0x2c624070 <line:1004:3, col:13> col:13 tendon_group 'int *'
| | `-FullComment 0x2c659a60 <col:37, col:91>
| |   `-ParagraphComment 0x2c659a30 <col:37, col:91>
| |     `-TextComment 0x2c659a00 <col:37, col:91> Text=" group for visibility                     (ntendon x 1)"
| |-FieldDecl 0x2c6240f8 <line:1005:3, col:13> col:13 tendon_limited 'mjtByte *'
| | `-FullComment 0x2c659b30 <col:37, col:91>
| |   `-ParagraphComment 0x2c659b00 <col:37, col:91>
| |     `-TextComment 0x2c659ad0 <col:37, col:91> Text=" does tendon have length limits           (ntendon x 1)"
| |-FieldDecl 0x2c624188 <line:1006:3, col:13> col:13 tendon_width 'mjtNum *'
| | `-FullComment 0x2c659c30 <col:37, col:91>
| |   `-ParagraphComment 0x2c659c00 <col:37, col:91>
| |     `-TextComment 0x2c659bd0 <col:37, col:91> Text=" width for rendering                      (ntendon x 1)"
| |-FieldDecl 0x2c624218 <line:1007:3, col:13> col:13 tendon_solref_lim 'mjtNum *'
| | `-FullComment 0x2c659d00 <col:37, col:96>
| |   `-ParagraphComment 0x2c659cd0 <col:37, col:96>
| |     `-TextComment 0x2c659ca0 <col:37, col:96> Text=" constraint solver reference: limit       (ntendon x mjNREF)"
| |-FieldDecl 0x2c6242a8 <line:1008:3, col:13> col:13 tendon_solimp_lim 'mjtNum *'
| | `-FullComment 0x2c659dd0 <col:37, col:96>
| |   `-ParagraphComment 0x2c659da0 <col:37, col:96>
| |     `-TextComment 0x2c659d70 <col:37, col:96> Text=" constraint solver impedance: limit       (ntendon x mjNIMP)"
| |-FieldDecl 0x2c624338 <line:1009:3, col:13> col:13 tendon_solref_fri 'mjtNum *'
| | `-FullComment 0x2c659ea0 <col:37, col:96>
| |   `-ParagraphComment 0x2c659e70 <col:37, col:96>
| |     `-TextComment 0x2c659e40 <col:37, col:96> Text=" constraint solver reference: friction    (ntendon x mjNREF)"
| |-FieldDecl 0x2c6243c8 <line:1010:3, col:13> col:13 tendon_solimp_fri 'mjtNum *'
| | `-FullComment 0x2c659f70 <col:37, col:96>
| |   `-ParagraphComment 0x2c659f40 <col:37, col:96>
| |     `-TextComment 0x2c659f10 <col:37, col:96> Text=" constraint solver impedance: friction    (ntendon x mjNIMP)"
| |-FieldDecl 0x2c624458 <line:1011:3, col:13> col:13 tendon_range 'mjtNum *'
| | `-FullComment 0x2c65a040 <col:37, col:91>
| |   `-ParagraphComment 0x2c65a010 <col:37, col:91>
| |     `-TextComment 0x2c659fe0 <col:37, col:91> Text=" tendon length limits                     (ntendon x 2)"
| |-FieldDecl 0x2c624cc0 <line:1012:3, col:13> col:13 tendon_margin 'mjtNum *'
| | `-FullComment 0x2c65a110 <col:37, col:91>
| |   `-ParagraphComment 0x2c65a0e0 <col:37, col:91>
| |     `-TextComment 0x2c65a0b0 <col:37, col:91> Text=" min distance for limit detection         (ntendon x 1)"
| |-FieldDecl 0x2c624d48 <line:1013:3, col:13> col:13 tendon_stiffness 'mjtNum *'
| | `-FullComment 0x2c65a1e0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65a1b0 <col:37, col:91>
| |     `-TextComment 0x2c65a180 <col:37, col:91> Text=" stiffness coefficient                    (ntendon x 1)"
| |-FieldDecl 0x2c624dd8 <line:1014:3, col:13> col:13 tendon_damping 'mjtNum *'
| | `-FullComment 0x2c65a2b0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65a280 <col:37, col:91>
| |     `-TextComment 0x2c65a250 <col:37, col:91> Text=" damping coefficient                      (ntendon x 1)"
| |-FieldDecl 0x2c624e68 <line:1015:3, col:13> col:13 tendon_frictionloss 'mjtNum *'
| | `-FullComment 0x2c65a380 <col:37, col:91>
| |   `-ParagraphComment 0x2c65a350 <col:37, col:91>
| |     `-TextComment 0x2c65a320 <col:37, col:91> Text=" loss due to friction                     (ntendon x 1)"
| |-FieldDecl 0x2c624ef8 <line:1016:3, col:13> col:13 tendon_lengthspring 'mjtNum *'
| | `-FullComment 0x2c65a450 <col:37, col:91>
| |   `-ParagraphComment 0x2c65a420 <col:37, col:91>
| |     `-TextComment 0x2c65a3f0 <col:37, col:91> Text=" spring resting length range              (ntendon x 2)"
| |-FieldDecl 0x2c624f88 <line:1017:3, col:13> col:13 tendon_length0 'mjtNum *'
| | `-FullComment 0x2c65a520 <col:37, col:91>
| |   `-ParagraphComment 0x2c65a4f0 <col:37, col:91>
| |     `-TextComment 0x2c65a4c0 <col:37, col:91> Text=" tendon length in qpos0                   (ntendon x 1)"
| |-FieldDecl 0x2c625018 <line:1018:3, col:13> col:13 tendon_invweight0 'mjtNum *'
| | `-FullComment 0x2c65a5f0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65a5c0 <col:37, col:91>
| |     `-TextComment 0x2c65a590 <col:37, col:91> Text=" inv. weight in qpos0                     (ntendon x 1)"
| |-FieldDecl 0x2c6250a8 <line:1019:3, col:13> col:13 tendon_user 'mjtNum *'
| | `-FullComment 0x2c65a6c0 <col:37, col:102>
| |   `-ParagraphComment 0x2c65a690 <col:37, col:102>
| |     `-TextComment 0x2c65a660 <col:37, col:102> Text=" user data                                (ntendon x nuser_tendon)"
| |-FieldDecl 0x2c625140 <line:1020:3, col:13> col:13 tendon_rgba 'float *'
| | `-FullComment 0x2c65a790 <col:37, col:91>
| |   `-ParagraphComment 0x2c65a760 <col:37, col:91>
| |     `-TextComment 0x2c65a730 <col:37, col:91> Text=" rgba when material is omitted            (ntendon x 4)"
| |-FieldDecl 0x2c625200 <line:1023:3, col:13> col:13 wrap_type 'int *'
| | `-FullComment 0x2c65a860 <col:37, col:89>
| |   `-ParagraphComment 0x2c65a830 <col:37, col:89>
| |     `-TextComment 0x2c65a800 <col:37, col:89> Text=" wrap object type (mjtWrap)               (nwrap x 1)"
| |-FieldDecl 0x2c625290 <line:1024:3, col:13> col:13 wrap_objid 'int *'
| | `-FullComment 0x2c65a930 <col:37, col:89>
| |   `-ParagraphComment 0x2c65a900 <col:37, col:89>
| |     `-TextComment 0x2c65a8d0 <col:37, col:89> Text=" object id: geom, site, joint             (nwrap x 1)"
| |-FieldDecl 0x2c625318 <line:1025:3, col:13> col:13 wrap_prm 'mjtNum *'
| | `-FullComment 0x2c65aa00 <col:37, col:89>
| |   `-ParagraphComment 0x2c65a9d0 <col:37, col:89>
| |     `-TextComment 0x2c65a9a0 <col:37, col:89> Text=" divisor, joint coef, or site id          (nwrap x 1)"
| |-FieldDecl 0x2c6253e0 <line:1028:3, col:13> col:13 actuator_trntype 'int *'
| | `-FullComment 0x2c65aad0 <col:37, col:86>
| |   `-ParagraphComment 0x2c65aaa0 <col:37, col:86>
| |     `-TextComment 0x2c65aa70 <col:37, col:86> Text=" transmission type (mjtTrn)               (nu x 1)"
| |-FieldDecl 0x2c625470 <line:1029:3, col:13> col:13 actuator_dyntype 'int *'
| | `-FullComment 0x2c65abb0 <col:37, col:86>
| |   `-ParagraphComment 0x2c65ab70 <col:37, col:86>
| |     `-TextComment 0x2c65ab40 <col:37, col:86> Text=" dynamics type (mjtDyn)                   (nu x 1)"
| |-FieldDecl 0x2c625500 <line:1030:3, col:13> col:13 actuator_gaintype 'int *'
| | `-FullComment 0x2c65ac80 <col:37, col:86>
| |   `-ParagraphComment 0x2c65ac50 <col:37, col:86>
| |     `-TextComment 0x2c65ac20 <col:37, col:86> Text=" gain type (mjtGain)                      (nu x 1)"
| |-FieldDecl 0x2c625590 <line:1031:3, col:13> col:13 actuator_biastype 'int *'
| | `-FullComment 0x2c65ad50 <col:37, col:86>
| |   `-ParagraphComment 0x2c65ad20 <col:37, col:86>
| |     `-TextComment 0x2c65acf0 <col:37, col:86> Text=" bias type (mjtBias)                      (nu x 1)"
| |-FieldDecl 0x2c625620 <line:1032:3, col:13> col:13 actuator_trnid 'int *'
| | `-FullComment 0x2c65ae20 <col:37, col:86>
| |   `-ParagraphComment 0x2c65adf0 <col:37, col:86>
| |     `-TextComment 0x2c65adc0 <col:37, col:86> Text=" transmission id: joint, tendon, site     (nu x 2)"
| |-FieldDecl 0x2c6256b0 <line:1033:3, col:13> col:13 actuator_actadr 'int *'
| | `-FullComment 0x2c65aef0 <col:37, col:86>
| |   `-ParagraphComment 0x2c65aec0 <col:37, col:86>
| |     `-TextComment 0x2c65ae90 <col:37, col:86> Text=" first activation address; -1: stateless  (nu x 1)"
| |-FieldDecl 0x2c625740 <line:1034:3, col:13> col:13 actuator_actnum 'int *'
| | `-FullComment 0x2c65afc0 <col:37, col:86>
| |   `-ParagraphComment 0x2c65af90 <col:37, col:86>
| |     `-TextComment 0x2c65af60 <col:37, col:86> Text=" number of activation variables           (nu x 1)"
| |-FieldDecl 0x2c6257d0 <line:1035:3, col:13> col:13 actuator_group 'int *'
| | `-FullComment 0x2c65b090 <col:37, col:86>
| |   `-ParagraphComment 0x2c65b060 <col:37, col:86>
| |     `-TextComment 0x2c65b030 <col:37, col:86> Text=" group for visibility                     (nu x 1)"
| |-FieldDecl 0x2c625858 <line:1036:3, col:13> col:13 actuator_ctrllimited 'mjtByte *'
| | `-FullComment 0x2c65b160 <col:37, col:86>
| |   `-ParagraphComment 0x2c65b130 <col:37, col:86>
| |     `-TextComment 0x2c65b100 <col:37, col:86> Text=" is control limited                       (nu x 1)"
| |-FieldDecl 0x2c6258e8 <line:1037:3, col:13> col:13 actuator_forcelimited 'mjtByte *'
| | `-FullComment 0x2c65b230 <col:37, col:86>
| |   `-ParagraphComment 0x2c65b200 <col:37, col:86>
| |     `-TextComment 0x2c65b1d0 <col:37, col:86> Text=" is force limited                         (nu x 1)"
| |-FieldDecl 0x2c625978 <line:1038:3, col:13> col:13 actuator_actlimited 'mjtByte *'
| | `-FullComment 0x2c65b300 <col:37, col:86>
| |   `-ParagraphComment 0x2c65b2d0 <col:37, col:86>
| |     `-TextComment 0x2c65b2a0 <col:37, col:86> Text=" is activation limited                    (nu x 1)"
| |-FieldDecl 0x2c625a08 <line:1039:3, col:13> col:13 actuator_dynprm 'mjtNum *'
| | `-FullComment 0x2c65b3d0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65b3a0 <col:37, col:91>
| |     `-TextComment 0x2c65b370 <col:37, col:91> Text=" dynamics parameters                      (nu x mjNDYN)"
| |-FieldDecl 0x2c625a98 <line:1040:3, col:13> col:13 actuator_gainprm 'mjtNum *'
| | `-FullComment 0x2c65b4a0 <col:37, col:92>
| |   `-ParagraphComment 0x2c65b470 <col:37, col:92>
| |     `-TextComment 0x2c65b440 <col:37, col:92> Text=" gain parameters                          (nu x mjNGAIN)"
| |-FieldDecl 0x2c625b28 <line:1041:3, col:13> col:13 actuator_biasprm 'mjtNum *'
| | `-FullComment 0x2c65b570 <col:37, col:92>
| |   `-ParagraphComment 0x2c65b540 <col:37, col:92>
| |     `-TextComment 0x2c65b510 <col:37, col:92> Text=" bias parameters                          (nu x mjNBIAS)"
| |-FieldDecl 0x2c625bb8 <line:1042:3, col:13> col:13 actuator_actearly 'mjtByte *'
| | `-FullComment 0x2c65b640 <col:37, col:86>
| |   `-ParagraphComment 0x2c65b610 <col:37, col:86>
| |     `-TextComment 0x2c65b5e0 <col:37, col:86> Text=" step activation before force             (nu x 1)"
| |-FieldDecl 0x2c625c48 <line:1043:3, col:13> col:13 actuator_ctrlrange 'mjtNum *'
| | `-FullComment 0x2c65b710 <col:37, col:86>
| |   `-ParagraphComment 0x2c65b6e0 <col:37, col:86>
| |     `-TextComment 0x2c65b6b0 <col:37, col:86> Text=" range of controls                        (nu x 2)"
| |-FieldDecl 0x2c628198 <line:1044:3, col:13> col:13 actuator_forcerange 'mjtNum *'
| | `-FullComment 0x2c65b7e0 <col:37, col:86>
| |   `-ParagraphComment 0x2c65b7b0 <col:37, col:86>
| |     `-TextComment 0x2c65b780 <col:37, col:86> Text=" range of forces                          (nu x 2)"
| |-FieldDecl 0x2c628228 <line:1045:3, col:13> col:13 actuator_actrange 'mjtNum *'
| | `-FullComment 0x2c65b8b0 <col:37, col:86>
| |   `-ParagraphComment 0x2c65b880 <col:37, col:86>
| |     `-TextComment 0x2c65b850 <col:37, col:86> Text=" range of activations                     (nu x 2)"
| |-FieldDecl 0x2c6282b8 <line:1046:3, col:13> col:13 actuator_gear 'mjtNum *'
| | `-FullComment 0x2c65b980 <col:37, col:86>
| |   `-ParagraphComment 0x2c65b950 <col:37, col:86>
| |     `-TextComment 0x2c65b920 <col:37, col:86> Text=" scale length and transmitted force       (nu x 6)"
| |-FieldDecl 0x2c628348 <line:1047:3, col:13> col:13 actuator_cranklength 'mjtNum *'
| | `-FullComment 0x2c65ba50 <col:37, col:86>
| |   `-ParagraphComment 0x2c65ba20 <col:37, col:86>
| |     `-TextComment 0x2c65b9f0 <col:37, col:86> Text=" crank length for slider-crank            (nu x 1)"
| |-FieldDecl 0x2c6283d8 <line:1048:3, col:13> col:13 actuator_acc0 'mjtNum *'
| | `-FullComment 0x2c65bb20 <col:37, col:86>
| |   `-ParagraphComment 0x2c65baf0 <col:37, col:86>
| |     `-TextComment 0x2c65bac0 <col:37, col:86> Text=" acceleration from unit force in qpos0    (nu x 1)"
| |-FieldDecl 0x2c628468 <line:1049:3, col:13> col:13 actuator_length0 'mjtNum *'
| | `-FullComment 0x2c65bc10 <col:37, col:86>
| |   `-ParagraphComment 0x2c65bbe0 <col:37, col:86>
| |     `-TextComment 0x2c65bbb0 <col:37, col:86> Text=" actuator length in qpos0                 (nu x 1)"
| |-FieldDecl 0x2c6284f8 <line:1050:3, col:13> col:13 actuator_lengthrange 'mjtNum *'
| | `-FullComment 0x2c65bce0 <col:37, col:86>
| |   `-ParagraphComment 0x2c65bcb0 <col:37, col:86>
| |     `-TextComment 0x2c65bc80 <col:37, col:86> Text=" feasible actuator length range           (nu x 2)"
| |-FieldDecl 0x2c628588 <line:1051:3, col:13> col:13 actuator_user 'mjtNum *'
| | `-FullComment 0x2c65bdb0 <col:37, col:99>
| |   `-ParagraphComment 0x2c65bd80 <col:37, col:99>
| |     `-TextComment 0x2c65bd50 <col:37, col:99> Text=" user data                                (nu x nuser_actuator)"
| |-FieldDecl 0x2c628620 <line:1052:3, col:13> col:13 actuator_plugin 'int *'
| | `-FullComment 0x2c65be80 <col:37, col:86>
| |   `-ParagraphComment 0x2c65be50 <col:37, col:86>
| |     `-TextComment 0x2c65be20 <col:37, col:86> Text=" plugin instance id; -1: not a plugin     (nu x 1)"
| |-FieldDecl 0x2c6286e0 <line:1055:3, col:13> col:13 sensor_type 'int *'
| | `-FullComment 0x2c65bf50 <col:37, col:91>
| |   `-ParagraphComment 0x2c65bf20 <col:37, col:91>
| |     `-TextComment 0x2c65bef0 <col:37, col:91> Text=" sensor type (mjtSensor)                  (nsensor x 1)"
| |-FieldDecl 0x2c628770 <line:1056:3, col:13> col:13 sensor_datatype 'int *'
| | `-FullComment 0x2c65c020 <col:37, col:91>
| |   `-ParagraphComment 0x2c65bff0 <col:37, col:91>
| |     `-TextComment 0x2c65bfc0 <col:37, col:91> Text=" numeric data type (mjtDataType)          (nsensor x 1)"
| |-FieldDecl 0x2c628800 <line:1057:3, col:13> col:13 sensor_needstage 'int *'
| | `-FullComment 0x2c65c0f0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c0c0 <col:37, col:91>
| |     `-TextComment 0x2c65c090 <col:37, col:91> Text=" required compute stage (mjtStage)        (nsensor x 1)"
| |-FieldDecl 0x2c628890 <line:1058:3, col:13> col:13 sensor_objtype 'int *'
| | `-FullComment 0x2c65c1c0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c190 <col:37, col:91>
| |     `-TextComment 0x2c65c160 <col:37, col:91> Text=" type of sensorized object (mjtObj)       (nsensor x 1)"
| |-FieldDecl 0x2c628920 <line:1059:3, col:13> col:13 sensor_objid 'int *'
| | `-FullComment 0x2c65c290 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c260 <col:37, col:91>
| |     `-TextComment 0x2c65c230 <col:37, col:91> Text=" id of sensorized object                  (nsensor x 1)"
| |-FieldDecl 0x2c6289b0 <line:1060:3, col:13> col:13 sensor_reftype 'int *'
| | `-FullComment 0x2c65c360 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c330 <col:37, col:91>
| |     `-TextComment 0x2c65c300 <col:37, col:91> Text=" type of reference frame (mjtObj)         (nsensor x 1)"
| |-FieldDecl 0x2c628a40 <line:1061:3, col:13> col:13 sensor_refid 'int *'
| | `-FullComment 0x2c65c430 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c400 <col:37, col:91>
| |     `-TextComment 0x2c65c3d0 <col:37, col:91> Text=" id of reference frame; -1: global frame  (nsensor x 1)"
| |-FieldDecl 0x2c628ad0 <line:1062:3, col:13> col:13 sensor_dim 'int *'
| | `-FullComment 0x2c65c500 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c4d0 <col:37, col:91>
| |     `-TextComment 0x2c65c4a0 <col:37, col:91> Text=" number of scalar outputs                 (nsensor x 1)"
| |-FieldDecl 0x2c628b60 <line:1063:3, col:13> col:13 sensor_adr 'int *'
| | `-FullComment 0x2c65c5d0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c5a0 <col:37, col:91>
| |     `-TextComment 0x2c65c570 <col:37, col:91> Text=" address in sensor array                  (nsensor x 1)"
| |-FieldDecl 0x2c628be8 <line:1064:3, col:13> col:13 sensor_cutoff 'mjtNum *'
| | `-FullComment 0x2c65c6a0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c670 <col:37, col:91>
| |     `-TextComment 0x2c65c640 <col:37, col:91> Text=" cutoff for real and positive; 0: ignore  (nsensor x 1)"
| |-FieldDecl 0x2c628c78 <line:1065:3, col:13> col:13 sensor_noise 'mjtNum *'
| | `-FullComment 0x2c65c770 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c740 <col:37, col:91>
| |     `-TextComment 0x2c65c710 <col:37, col:91> Text=" noise standard deviation                 (nsensor x 1)"
| |-FieldDecl 0x2c628d08 <line:1066:3, col:13> col:13 sensor_user 'mjtNum *'
| | `-FullComment 0x2c65c840 <col:37, col:102>
| |   `-ParagraphComment 0x2c65c810 <col:37, col:102>
| |     `-TextComment 0x2c65c7e0 <col:37, col:102> Text=" user data                                (nsensor x nuser_sensor)"
| |-FieldDecl 0x2c628da0 <line:1067:3, col:13> col:13 sensor_plugin 'int *'
| | `-FullComment 0x2c65c910 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c8e0 <col:37, col:91>
| |     `-TextComment 0x2c65c8b0 <col:37, col:91> Text=" plugin instance id; -1: not a plugin     (nsensor x 1)"
| |-FieldDecl 0x2c628e60 <line:1070:3, col:13> col:13 plugin 'int *'
| | `-FullComment 0x2c65c9e0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65c9b0 <col:37, col:91>
| |     `-TextComment 0x2c65c980 <col:37, col:91> Text=" globally registered plugin slot number   (nplugin x 1)"
| |-FieldDecl 0x2c628ef0 <line:1071:3, col:13> col:13 plugin_stateadr 'int *'
| | `-FullComment 0x2c65cab0 <col:37, col:91>
| |   `-ParagraphComment 0x2c65ca80 <col:37, col:91>
| |     `-TextComment 0x2c65ca50 <col:37, col:91> Text=" address in the plugin state array        (nplugin x 1)"
| |-FieldDecl 0x2c628f80 <line:1072:3, col:13> col:13 plugin_statenum 'int *'
| | `-FullComment 0x2c65cb80 <col:37, col:91>
| |   `-ParagraphComment 0x2c65cb50 <col:37, col:91>
| |     `-TextComment 0x2c65cb20 <col:37, col:91> Text=" number of states in the plugin instance  (nplugin x 1)"
| |-FieldDecl 0x2c629010 <line:1073:3, col:13> col:13 plugin_attr 'char *'
| | `-FullComment 0x2c65cc60 <col:37, col:95>
| |   `-ParagraphComment 0x2c65cc30 <col:37, col:95>
| |     `-TextComment 0x2c65cc00 <col:37, col:95> Text=" config attributes of plugin instances    (npluginattr x 1)"
| |-FieldDecl 0x2c6290a0 <line:1074:3, col:13> col:13 plugin_attradr 'int *'
| | `-FullComment 0x2c65cd30 <col:37, col:91>
| |   `-ParagraphComment 0x2c65cd00 <col:37, col:91>
| |     `-TextComment 0x2c65ccd0 <col:37, col:91> Text=" address to each instance's config attrib (nplugin x 1)"
| |-FieldDecl 0x2c629170 <line:1077:3, col:13> col:13 numeric_adr 'int *'
| | `-FullComment 0x2c65ce00 <col:37, col:92>
| |   `-ParagraphComment 0x2c65cdd0 <col:37, col:92>
| |     `-TextComment 0x2c65cda0 <col:37, col:92> Text=" address of field in numeric_data         (nnumeric x 1)"
| |-FieldDecl 0x2c629200 <line:1078:3, col:13> col:13 numeric_size 'int *'
| | `-FullComment 0x2c65ced0 <col:37, col:92>
| |   `-ParagraphComment 0x2c65cea0 <col:37, col:92>
| |     `-TextComment 0x2c65ce70 <col:37, col:92> Text=" size of numeric field                    (nnumeric x 1)"
| |-FieldDecl 0x2c629288 <line:1079:3, col:13> col:13 numeric_data 'mjtNum *'
| | `-FullComment 0x2c65cfa0 <col:37, col:96>
| |   `-ParagraphComment 0x2c65cf70 <col:37, col:96>
| |     `-TextComment 0x2c65cf40 <col:37, col:96> Text=" array of all numeric fields              (nnumericdata x 1)"
| |-FieldDecl 0x2c629350 <line:1082:3, col:13> col:13 text_adr 'int *'
| | `-FullComment 0x2c65d070 <col:37, col:89>
| |   `-ParagraphComment 0x2c65d040 <col:37, col:89>
| |     `-TextComment 0x2c65d010 <col:37, col:89> Text=" address of text in text_data             (ntext x 1)"
| |-FieldDecl 0x2c6293e0 <line:1083:3, col:13> col:13 text_size 'int *'
| | `-FullComment 0x2c65d140 <col:37, col:89>
| |   `-ParagraphComment 0x2c65d110 <col:37, col:89>
| |     `-TextComment 0x2c65d0e0 <col:37, col:89> Text=" size of text field (strlen+1)            (ntext x 1)"
| |-FieldDecl 0x2c629470 <line:1084:3, col:13> col:13 text_data 'char *'
| | `-FullComment 0x2c65d210 <col:37, col:93>
| |   `-ParagraphComment 0x2c65d1e0 <col:37, col:93>
| |     `-TextComment 0x2c65d1b0 <col:37, col:93> Text=" array of all text fields (0-terminated)  (ntextdata x 1)"
| |-FieldDecl 0x2c629530 <line:1087:3, col:13> col:13 tuple_adr 'int *'
| | `-FullComment 0x2c65d2e0 <col:37, col:90>
| |   `-ParagraphComment 0x2c65d2b0 <col:37, col:90>
| |     `-TextComment 0x2c65d280 <col:37, col:90> Text=" address of text in text_data             (ntuple x 1)"
| |-FieldDecl 0x2c6295c0 <line:1088:3, col:13> col:13 tuple_size 'int *'
| | `-FullComment 0x2c65d3b0 <col:37, col:90>
| |   `-ParagraphComment 0x2c65d380 <col:37, col:90>
| |     `-TextComment 0x2c65d350 <col:37, col:90> Text=" number of objects in tuple               (ntuple x 1)"
| |-FieldDecl 0x2c629650 <line:1089:3, col:13> col:13 tuple_objtype 'int *'
| | `-FullComment 0x2c65d480 <col:37, col:94>
| |   `-ParagraphComment 0x2c65d450 <col:37, col:94>
| |     `-TextComment 0x2c65d420 <col:37, col:94> Text=" array of object types in all tuples      (ntupledata x 1)"
| |-FieldDecl 0x2c6296e0 <line:1090:3, col:13> col:13 tuple_objid 'int *'
| | `-FullComment 0x2c65d550 <col:37, col:94>
| |   `-ParagraphComment 0x2c65d520 <col:37, col:94>
| |     `-TextComment 0x2c65d4f0 <col:37, col:94> Text=" array of object ids in all tuples        (ntupledata x 1)"
| |-FieldDecl 0x2c629768 <line:1091:3, col:13> col:13 tuple_objprm 'mjtNum *'
| | `-FullComment 0x2c65d620 <col:37, col:94>
| |   `-ParagraphComment 0x2c65d5f0 <col:37, col:94>
| |     `-TextComment 0x2c65d5c0 <col:37, col:94> Text=" array of object params in all tuples     (ntupledata x 1)"
| |-FieldDecl 0x2c629828 <line:1094:3, col:13> col:13 key_time 'mjtNum *'
| | `-FullComment 0x2c65d6f0 <col:37, col:88>
| |   `-ParagraphComment 0x2c65d6c0 <col:37, col:88>
| |     `-TextComment 0x2c65d690 <col:37, col:88> Text=" key time                                 (nkey x 1)"
| |-FieldDecl 0x2c6298b8 <line:1095:3, col:13> col:13 key_qpos 'mjtNum *'
| | `-FullComment 0x2c65d7c0 <col:37, col:89>
| |   `-ParagraphComment 0x2c65d790 <col:37, col:89>
| |     `-TextComment 0x2c65d760 <col:37, col:89> Text=" key position                             (nkey x nq)"
| |-FieldDecl 0x2c629948 <line:1096:3, col:13> col:13 key_qvel 'mjtNum *'
| | `-FullComment 0x2c65d890 <col:37, col:89>
| |   `-ParagraphComment 0x2c65d860 <col:37, col:89>
| |     `-TextComment 0x2c65d830 <col:37, col:89> Text=" key velocity                             (nkey x nv)"
| |-FieldDecl 0x2c6299d8 <line:1097:3, col:13> col:13 key_act 'mjtNum *'
| | `-FullComment 0x2c65d960 <col:37, col:89>
| |   `-ParagraphComment 0x2c65d930 <col:37, col:89>
| |     `-TextComment 0x2c65d900 <col:37, col:89> Text=" key activation                           (nkey x na)"
| |-FieldDecl 0x2c629a68 <line:1098:3, col:13> col:13 key_mpos 'mjtNum *'
| | `-FullComment 0x2c65da30 <col:37, col:95>
| |   `-ParagraphComment 0x2c65da00 <col:37, col:95>
| |     `-TextComment 0x2c65d9d0 <col:37, col:95> Text=" key mocap position                       (nkey x nmocap*3)"
| |-FieldDecl 0x2c629af8 <line:1099:3, col:13> col:13 key_mquat 'mjtNum *'
| | `-FullComment 0x2c65db00 <col:37, col:95>
| |   `-ParagraphComment 0x2c65dad0 <col:37, col:95>
| |     `-TextComment 0x2c65daa0 <col:37, col:95> Text=" key mocap quaternion                     (nkey x nmocap*4)"
| |-FieldDecl 0x2c629b88 <line:1100:3, col:13> col:13 key_ctrl 'mjtNum *'
| | `-FullComment 0x2c646aa0 <col:37, col:89>
| |   `-ParagraphComment 0x2c65dba0 <col:37, col:89>
| |     `-TextComment 0x2c65db70 <col:37, col:89> Text=" key control                              (nkey x nu)"
| |-FieldDecl 0x2c629c50 <line:1103:3, col:13> col:13 name_bodyadr 'int *'
| | `-FullComment 0x2c646b70 <col:37, col:89>
| |   `-ParagraphComment 0x2c646b40 <col:37, col:89>
| |     `-TextComment 0x2c646b10 <col:37, col:89> Text=" body name pointers                       (nbody x 1)"
| |-FieldDecl 0x2c629ce0 <line:1104:3, col:13> col:13 name_jntadr 'int *'
| | `-FullComment 0x2c646c40 <col:37, col:88>
| |   `-ParagraphComment 0x2c646c10 <col:37, col:88>
| |     `-TextComment 0x2c646be0 <col:37, col:88> Text=" joint name pointers                      (njnt x 1)"
| |-FieldDecl 0x2c629d70 <line:1105:3, col:13> col:13 name_geomadr 'int *'
| | `-FullComment 0x2c646d10 <col:37, col:89>
| |   `-ParagraphComment 0x2c646ce0 <col:37, col:89>
| |     `-TextComment 0x2c646cb0 <col:37, col:89> Text=" geom name pointers                       (ngeom x 1)"
| |-FieldDecl 0x2c629e00 <line:1106:3, col:13> col:13 name_siteadr 'int *'
| | `-FullComment 0x2c646de0 <col:37, col:89>
| |   `-ParagraphComment 0x2c646db0 <col:37, col:89>
| |     `-TextComment 0x2c646d80 <col:37, col:89> Text=" site name pointers                       (nsite x 1)"
| |-FieldDecl 0x2c629e90 <line:1107:3, col:13> col:13 name_camadr 'int *'
| | `-FullComment 0x2c646eb0 <col:37, col:88>
| |   `-ParagraphComment 0x2c646e80 <col:37, col:88>
| |     `-TextComment 0x2c646e50 <col:37, col:88> Text=" camera name pointers                     (ncam x 1)"
| |-FieldDecl 0x2c629f20 <line:1108:3, col:13> col:13 name_lightadr 'int *'
| | `-FullComment 0x2c646f80 <col:37, col:90>
| |   `-ParagraphComment 0x2c646f50 <col:37, col:90>
| |     `-TextComment 0x2c646f20 <col:37, col:90> Text=" light name pointers                      (nlight x 1)"
| |-FieldDecl 0x2c629fb0 <line:1109:3, col:13> col:13 name_flexadr 'int *'
| | `-FullComment 0x2c647050 <col:37, col:89>
| |   `-ParagraphComment 0x2c647020 <col:37, col:89>
| |     `-TextComment 0x2c646ff0 <col:37, col:89> Text=" flex name pointers                       (nflex x 1)"
| |-FieldDecl 0x2c62a040 <line:1110:3, col:13> col:13 name_meshadr 'int *'
| | `-FullComment 0x2c647120 <col:37, col:89>
| |   `-ParagraphComment 0x2c6470f0 <col:37, col:89>
| |     `-TextComment 0x2c6470c0 <col:37, col:89> Text=" mesh name pointers                       (nmesh x 1)"
| |-FieldDecl 0x2c62a0d0 <line:1111:3, col:13> col:13 name_skinadr 'int *'
| | `-FullComment 0x2c6471f0 <col:37, col:89>
| |   `-ParagraphComment 0x2c6471c0 <col:37, col:89>
| |     `-TextComment 0x2c647190 <col:37, col:89> Text=" skin name pointers                       (nskin x 1)"
| |-FieldDecl 0x2c62c650 <line:1112:3, col:13> col:13 name_hfieldadr 'int *'
| | `-FullComment 0x2c6472c0 <col:37, col:91>
| |   `-ParagraphComment 0x2c647290 <col:37, col:91>
| |     `-TextComment 0x2c647260 <col:37, col:91> Text=" hfield name pointers                     (nhfield x 1)"
| |-FieldDecl 0x2c62c6e0 <line:1113:3, col:13> col:13 name_texadr 'int *'
| | `-FullComment 0x2c647390 <col:37, col:88>
| |   `-ParagraphComment 0x2c647360 <col:37, col:88>
| |     `-TextComment 0x2c647330 <col:37, col:88> Text=" texture name pointers                    (ntex x 1)"
| |-FieldDecl 0x2c62c770 <line:1114:3, col:13> col:13 name_matadr 'int *'
| | `-FullComment 0x2c647460 <col:37, col:88>
| |   `-ParagraphComment 0x2c647430 <col:37, col:88>
| |     `-TextComment 0x2c647400 <col:37, col:88> Text=" material name pointers                   (nmat x 1)"
| |-FieldDecl 0x2c62c800 <line:1115:3, col:13> col:13 name_pairadr 'int *'
| | `-FullComment 0x2c647530 <col:37, col:89>
| |   `-ParagraphComment 0x2c647500 <col:37, col:89>
| |     `-TextComment 0x2c6474d0 <col:37, col:89> Text=" geom pair name pointers                  (npair x 1)"
| |-FieldDecl 0x2c62c890 <line:1116:3, col:13> col:13 name_excludeadr 'int *'
| | `-FullComment 0x2c647600 <col:37, col:92>
| |   `-ParagraphComment 0x2c6475d0 <col:37, col:92>
| |     `-TextComment 0x2c6475a0 <col:37, col:92> Text=" exclude name pointers                    (nexclude x 1)"
| |-FieldDecl 0x2c62c920 <line:1117:3, col:13> col:13 name_eqadr 'int *'
| | `-FullComment 0x2c6476d0 <col:37, col:87>
| |   `-ParagraphComment 0x2c6476a0 <col:37, col:87>
| |     `-TextComment 0x2c647670 <col:37, col:87> Text=" equality constraint name pointers        (neq x 1)"
| |-FieldDecl 0x2c62c9b0 <line:1118:3, col:13> col:13 name_tendonadr 'int *'
| | `-FullComment 0x2c6477a0 <col:37, col:91>
| |   `-ParagraphComment 0x2c647770 <col:37, col:91>
| |     `-TextComment 0x2c647740 <col:37, col:91> Text=" tendon name pointers                     (ntendon x 1)"
| |-FieldDecl 0x2c62ca40 <line:1119:3, col:13> col:13 name_actuatoradr 'int *'
| | `-FullComment 0x2c647870 <col:37, col:86>
| |   `-ParagraphComment 0x2c647840 <col:37, col:86>
| |     `-TextComment 0x2c647810 <col:37, col:86> Text=" actuator name pointers                   (nu x 1)"
| |-FieldDecl 0x2c62cad0 <line:1120:3, col:13> col:13 name_sensoradr 'int *'
| | `-FullComment 0x2c647940 <col:37, col:91>
| |   `-ParagraphComment 0x2c647910 <col:37, col:91>
| |     `-TextComment 0x2c6478e0 <col:37, col:91> Text=" sensor name pointers                     (nsensor x 1)"
| |-FieldDecl 0x2c62cb60 <line:1121:3, col:13> col:13 name_numericadr 'int *'
| | `-FullComment 0x2c647a10 <col:37, col:92>
| |   `-ParagraphComment 0x2c6479e0 <col:37, col:92>
| |     `-TextComment 0x2c6479b0 <col:37, col:92> Text=" numeric name pointers                    (nnumeric x 1)"
| |-FieldDecl 0x2c62cbf0 <line:1122:3, col:13> col:13 name_textadr 'int *'
| | `-FullComment 0x2c647b00 <col:37, col:89>
| |   `-ParagraphComment 0x2c647ad0 <col:37, col:89>
| |     `-TextComment 0x2c647aa0 <col:37, col:89> Text=" text name pointers                       (ntext x 1)"
| |-FieldDecl 0x2c62cc80 <line:1123:3, col:13> col:13 name_tupleadr 'int *'
| | `-FullComment 0x2c647bd0 <col:37, col:90>
| |   `-ParagraphComment 0x2c647ba0 <col:37, col:90>
| |     `-TextComment 0x2c647b70 <col:37, col:90> Text=" tuple name pointers                      (ntuple x 1)"
| |-FieldDecl 0x2c62cd10 <line:1124:3, col:13> col:13 name_keyadr 'int *'
| | `-FullComment 0x2c647ca0 <col:37, col:88>
| |   `-ParagraphComment 0x2c647c70 <col:37, col:88>
| |     `-TextComment 0x2c647c40 <col:37, col:88> Text=" keyframe name pointers                   (nkey x 1)"
| |-FieldDecl 0x2c62cda0 <line:1125:3, col:13> col:13 name_pluginadr 'int *'
| | `-FullComment 0x2c647d70 <col:37, col:91>
| |   `-ParagraphComment 0x2c647d40 <col:37, col:91>
| |     `-TextComment 0x2c647d10 <col:37, col:91> Text=" plugin instance name pointers            (nplugin x 1)"
| |-FieldDecl 0x2c62ce30 <line:1126:3, col:13> col:13 names 'char *'
| | `-FullComment 0x2c647e40 <col:37, col:90>
| |   `-ParagraphComment 0x2c647e10 <col:37, col:90>
| |     `-TextComment 0x2c647de0 <col:37, col:90> Text=" names of all objects, 0-terminated       (nnames x 1)"
| |-FieldDecl 0x2c62cec0 <line:1127:3, col:13> col:13 names_map 'int *'
| | `-FullComment 0x2c647f10 <col:37, col:94>
| |   `-ParagraphComment 0x2c647ee0 <col:37, col:94>
| |     `-TextComment 0x2c647eb0 <col:37, col:94> Text=" internal hash map of names               (nnames_map x 1)"
| `-FieldDecl 0x2c62cf80 <line:1130:3, col:13> col:13 paths 'char *'
|   `-FullComment 0x2c647fe0 <col:37, col:90>
|     `-ParagraphComment 0x2c647fb0 <col:37, col:90>
|       `-TextComment 0x2c647f80 <col:37, col:90> Text=" paths to assets, 0-terminated            (npaths x 1)"
`-TypedefDecl 0x2c62d050 <line:1132:1, col:25> col:25 mjModel 'struct mjModel_':'struct mjModel_'
  `-ElaboratedType 0x2c62d000 'struct mjModel_' sugar
    `-RecordType 0x2c609b70 'struct mjModel_'
      `-Record 0x2c609ae8 'mjModel_'
C_BINDER_MOJO_END_FILE