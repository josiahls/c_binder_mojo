TranslationUnitDecl 0x4e3658 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x4e3e80 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x4e3c20 '__int128'
|-TypedefDecl 0x4e3ef0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x4e3c40 'unsigned __int128'
|-TypedefDecl 0x4e41f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x4e3fd0 'struct __NSConstantString_tag'
|   `-Record 0x4e3f48 '__NSConstantString_tag'
|-TypedefDecl 0x4e4290 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x4e4250 'char *'
|   `-BuiltinType 0x4e3700 'char'
|-TypedefDecl 0x4e4588 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag[1]'
| `-ConstantArrayType 0x4e4530 'struct __va_list_tag[1]' 1 
|   `-RecordType 0x4e4370 'struct __va_list_tag'
|     `-Record 0x4e42e8 '__va_list_tag'
|-TypedefDecl 0x553230 </usr/lib/llvm-14/lib/clang/14.0.0/include/stddef.h:35:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x5532a0 <line:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x553310 <line:74:1, col:24> col:24 wchar_t 'int'
| `-BuiltinType 0x4e3760 'int'
|-RecordDecl 0x553368 </usr/lib/llvm-14/lib/clang/14.0.0/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
| |-FieldDecl 0x553460 <line:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| | `-AlignedAttr 0x5534d0 <line:21:22, col:56> aligned
| |   `-ConstantExpr 0x5534b0 <col:34, col:55> 'unsigned long'
| |     |-value: Int 8
| |     `-UnaryExprOrTypeTraitExpr 0x553428 <col:34, col:55> 'unsigned long' __alignof 'long long'
| `-FieldDecl 0x553580 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
|   `-AlignedAttr 0x5535f0 <line:23:22, col:58> aligned
|     `-ConstantExpr 0x5535d0 <col:34, col:57> 'unsigned long'
|       |-value: Int 16
|       `-UnaryExprOrTypeTraitExpr 0x553548 <col:34, col:57> 'unsigned long' __alignof 'long double'
|-TypedefDecl 0x5536a8 <line:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
| `-ElaboratedType 0x553650 'struct max_align_t' sugar
|   `-RecordType 0x5533f0 'max_align_t'
|     `-Record 0x553368 ''
|-TypedefDecl 0x553730 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x4e37c0 'unsigned char'
|-TypedefDecl 0x5537a0 <line:32:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x4e37e0 'unsigned short'
|-TypedefDecl 0x553810 <line:33:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x553880 <line:34:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x5538f0 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x4e3720 'signed char'
|-TypedefDecl 0x553960 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x4e37c0 'unsigned char'
|-TypedefDecl 0x5539d0 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x4e3740 'short'
|-TypedefDecl 0x553a40 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x4e37e0 'unsigned short'
|-TypedefDecl 0x553ab0 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x4e3760 'int'
|-TypedefDecl 0x553b20 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x553b90 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x553c00 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x553c90 <line:52:1, col:18> col:18 referenced __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x553c60 '__int8_t' sugar
|   |-Typedef 0x5538f0 '__int8_t'
|   `-BuiltinType 0x4e3720 'signed char'
|-TypedefDecl 0x553d20 <line:53:1, col:19> col:19 referenced __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x553cf0 '__uint8_t' sugar
|   |-Typedef 0x553960 '__uint8_t'
|   `-BuiltinType 0x4e37c0 'unsigned char'
|-TypedefDecl 0x553db0 <line:54:1, col:19> col:19 referenced __int_least16_t '__int16_t':'short'
| `-TypedefType 0x553d80 '__int16_t' sugar
|   |-Typedef 0x5539d0 '__int16_t'
|   `-BuiltinType 0x4e3740 'short'
|-TypedefDecl 0x553e40 <line:55:1, col:20> col:20 referenced __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x553e10 '__uint16_t' sugar
|   |-Typedef 0x553a40 '__uint16_t'
|   `-BuiltinType 0x4e37e0 'unsigned short'
|-TypedefDecl 0x553ed0 <line:56:1, col:19> col:19 referenced __int_least32_t '__int32_t':'int'
| `-TypedefType 0x553ea0 '__int32_t' sugar
|   |-Typedef 0x553ab0 '__int32_t'
|   `-BuiltinType 0x4e3760 'int'
|-TypedefDecl 0x553f60 <line:57:1, col:20> col:20 referenced __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x553f30 '__uint32_t' sugar
|   |-Typedef 0x553b20 '__uint32_t'
|   `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x553ff0 <line:58:1, col:19> col:19 referenced __int_least64_t '__int64_t':'long'
| `-TypedefType 0x553fc0 '__int64_t' sugar
|   |-Typedef 0x553b90 '__int64_t'
|   `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x554080 <line:59:1, col:20> col:20 referenced __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x554050 '__uint64_t' sugar
|   |-Typedef 0x553c00 '__uint64_t'
|   `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x5540f0 <line:63:1, col:18> col:18 __quad_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x554160 <line:64:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x5541d0 <line:72:1, col:18> col:18 referenced __intmax_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x577368 <line:73:1, col:27> col:27 referenced __uintmax_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x5773d8 <line:137:22, line:145:25> col:25 __dev_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x577448 <line:137:22, line:146:25> col:25 __uid_t 'unsigned int'
| `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x5774b8 <line:137:22, line:147:25> col:25 __gid_t 'unsigned int'
| `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x577528 <line:137:22, line:148:25> col:25 __ino_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x577598 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x577608 <line:137:22, line:150:26> col:26 __mode_t 'unsigned int'
| `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x577678 <line:137:22, line:151:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x5776e8 <line:137:22, line:152:25> col:25 __off_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x577758 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x5777c8 <line:137:22, line:154:25> col:25 __pid_t 'int'
| `-BuiltinType 0x4e3760 'int'
|-RecordDecl 0x577820 </usr/include/x86_64-linux-gnu/bits/typesizes.h:73:24, col:47> col:24 struct definition
| `-FieldDecl 0x577960 <col:33, col:44> col:37 __val 'int[2]'
|-TypedefDecl 0x577a08 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5779b0 'struct __fsid_t' sugar
|   `-RecordType 0x5778a0 '__fsid_t'
|     `-Record 0x577820 ''
|-TypedefDecl 0x577a90 <line:137:22, line:156:27> col:27 __clock_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x577b00 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x577b70 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x577be0 <line:137:22, line:159:24> col:24 __id_t 'unsigned int'
| `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x577c50 <line:137:22, line:160:26> col:26 __time_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x577cc0 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x577d30 <line:137:22, line:162:31> col:31 __suseconds_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x577da0 <line:137:22, line:163:33> col:33 __suseconds64_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x577e10 <line:137:22, line:165:27> col:27 __daddr_t 'int'
| `-BuiltinType 0x4e3760 'int'
|-TypedefDecl 0x577e80 <line:137:22, line:166:25> col:25 __key_t 'int'
| `-BuiltinType 0x4e3760 'int'
|-TypedefDecl 0x577ef0 <line:137:22, line:169:29> col:29 __clockid_t 'int'
| `-BuiltinType 0x4e3760 'int'
|-TypedefDecl 0x577f60 <line:137:22, line:172:27> col:27 __timer_t 'void *'
| `-PointerType 0x4e3de0 'void *'
|   `-BuiltinType 0x4e36c0 'void'
|-TypedefDecl 0x577fd0 <line:137:22, line:175:29> col:29 __blksize_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x578040 <line:137:22, line:180:28> col:28 __blkcnt_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x5780b0 <line:137:22, line:181:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x578120 <line:137:22, line:184:30> col:30 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x578190 <line:137:22, line:185:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x578200 <line:137:22, line:188:30> col:30 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x578270 <line:137:22, line:189:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x5782e0 <line:137:22, line:192:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x581370 <line:137:22, line:194:27> col:27 __ssize_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x5813e0 <line:137:22, line:197:33> col:33 __syscall_slong_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x581450 <line:137:22, line:199:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x5814e0 <line:203:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5814b0 '__off64_t' sugar
|   |-Typedef 0x577758 '__off64_t'
|   `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x581550 <line:204:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x4e4250 'char *'
|   `-BuiltinType 0x4e3700 'char'
|-TypedefDecl 0x5815c0 <line:137:22, line:207:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x581630 <line:137:22, line:210:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x5816a0 <line:215:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x4e3760 'int'
|-TypedefDecl 0x581708 </usr/include/x86_64-linux-gnu/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| `-TypedefType 0x553c60 '__int8_t' sugar
|   |-Typedef 0x5538f0 '__int8_t'
|   `-BuiltinType 0x4e3720 'signed char'
|-TypedefDecl 0x581770 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| `-TypedefType 0x553d80 '__int16_t' sugar
|   |-Typedef 0x5539d0 '__int16_t'
|   `-BuiltinType 0x4e3740 'short'
|-TypedefDecl 0x5817d8 <line:26:1, col:19> col:19 int32_t '__int32_t':'int'
| `-TypedefType 0x553ea0 '__int32_t' sugar
|   |-Typedef 0x553ab0 '__int32_t'
|   `-BuiltinType 0x4e3760 'int'
|-TypedefDecl 0x581840 <line:27:1, col:19> col:19 int64_t '__int64_t':'long'
| `-TypedefType 0x553fc0 '__int64_t' sugar
|   |-Typedef 0x553b90 '__int64_t'
|   `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x5818a8 </usr/include/x86_64-linux-gnu/bits/stdint-uintn.h:24:1, col:19> col:19 uint8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x553cf0 '__uint8_t' sugar
|   |-Typedef 0x553960 '__uint8_t'
|   `-BuiltinType 0x4e37c0 'unsigned char'
|-TypedefDecl 0x581910 <line:25:1, col:20> col:20 uint16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x553e10 '__uint16_t' sugar
|   |-Typedef 0x553a40 '__uint16_t'
|   `-BuiltinType 0x4e37e0 'unsigned short'
|-TypedefDecl 0x581978 <line:26:1, col:20> col:20 uint32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x553f30 '__uint32_t' sugar
|   |-Typedef 0x553b20 '__uint32_t'
|   `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x5819e0 <line:27:1, col:20> col:20 uint64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x554050 '__uint64_t' sugar
|   |-Typedef 0x553c00 '__uint64_t'
|   `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x581a70 </usr/include/stdint.h:43:1, col:24> col:24 int_least8_t '__int_least8_t':'signed char'
| `-TypedefType 0x581a40 '__int_least8_t' sugar
|   |-Typedef 0x553c90 '__int_least8_t'
|   `-TypedefType 0x553c60 '__int8_t' sugar
|     |-Typedef 0x5538f0 '__int8_t'
|     `-BuiltinType 0x4e3720 'signed char'
|-TypedefDecl 0x581b00 <line:44:1, col:25> col:25 int_least16_t '__int_least16_t':'short'
| `-TypedefType 0x581ad0 '__int_least16_t' sugar
|   |-Typedef 0x553db0 '__int_least16_t'
|   `-TypedefType 0x553d80 '__int16_t' sugar
|     |-Typedef 0x5539d0 '__int16_t'
|     `-BuiltinType 0x4e3740 'short'
|-TypedefDecl 0x581b90 <line:45:1, col:25> col:25 int_least32_t '__int_least32_t':'int'
| `-TypedefType 0x581b60 '__int_least32_t' sugar
|   |-Typedef 0x553ed0 '__int_least32_t'
|   `-TypedefType 0x553ea0 '__int32_t' sugar
|     |-Typedef 0x553ab0 '__int32_t'
|     `-BuiltinType 0x4e3760 'int'
|-TypedefDecl 0x581c20 <line:46:1, col:25> col:25 int_least64_t '__int_least64_t':'long'
| `-TypedefType 0x581bf0 '__int_least64_t' sugar
|   |-Typedef 0x553ff0 '__int_least64_t'
|   `-TypedefType 0x553fc0 '__int64_t' sugar
|     |-Typedef 0x553b90 '__int64_t'
|     `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x581cb0 <line:49:1, col:25> col:25 uint_least8_t '__uint_least8_t':'unsigned char'
| `-TypedefType 0x581c80 '__uint_least8_t' sugar
|   |-Typedef 0x553d20 '__uint_least8_t'
|   `-TypedefType 0x553cf0 '__uint8_t' sugar
|     |-Typedef 0x553960 '__uint8_t'
|     `-BuiltinType 0x4e37c0 'unsigned char'
|-TypedefDecl 0x581d40 <line:50:1, col:26> col:26 uint_least16_t '__uint_least16_t':'unsigned short'
| `-TypedefType 0x581d10 '__uint_least16_t' sugar
|   |-Typedef 0x553e40 '__uint_least16_t'
|   `-TypedefType 0x553e10 '__uint16_t' sugar
|     |-Typedef 0x553a40 '__uint16_t'
|     `-BuiltinType 0x4e37e0 'unsigned short'
|-TypedefDecl 0x581dd0 <line:51:1, col:26> col:26 uint_least32_t '__uint_least32_t':'unsigned int'
| `-TypedefType 0x581da0 '__uint_least32_t' sugar
|   |-Typedef 0x553f60 '__uint_least32_t'
|   `-TypedefType 0x553f30 '__uint32_t' sugar
|     |-Typedef 0x553b20 '__uint32_t'
|     `-BuiltinType 0x4e3800 'unsigned int'
|-TypedefDecl 0x581e60 <line:52:1, col:26> col:26 uint_least64_t '__uint_least64_t':'unsigned long'
| `-TypedefType 0x581e30 '__uint_least64_t' sugar
|   |-Typedef 0x554080 '__uint_least64_t'
|   `-TypedefType 0x554050 '__uint64_t' sugar
|     |-Typedef 0x553c00 '__uint64_t'
|     `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x581ed0 <line:58:1, col:22> col:22 int_fast8_t 'signed char'
| `-BuiltinType 0x4e3720 'signed char'
|-TypedefDecl 0x581f40 <line:60:1, col:19> col:19 int_fast16_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x581fb0 <line:61:1, col:19> col:19 int_fast32_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x582020 <line:62:1, col:19> col:19 int_fast64_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x582090 <line:71:1, col:24> col:24 uint_fast8_t 'unsigned char'
| `-BuiltinType 0x4e37c0 'unsigned char'
|-TypedefDecl 0x582100 <line:73:1, col:27> col:27 uint_fast16_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x582170 <line:74:1, col:27> col:27 uint_fast32_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x5821e0 <line:75:1, col:27> col:27 uint_fast64_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x582250 <line:87:1, col:19> col:19 intptr_t 'long'
| `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x5822c0 <line:90:1, col:27> col:27 uintptr_t 'unsigned long'
| `-BuiltinType 0x4e3820 'unsigned long'
|-TypedefDecl 0x5858a0 <line:101:1, col:21> col:21 intmax_t '__intmax_t':'long'
| `-TypedefType 0x582320 '__intmax_t' sugar
|   |-Typedef 0x5541d0 '__intmax_t'
|   `-BuiltinType 0x4e3780 'long'
|-TypedefDecl 0x585930 <line:102:1, col:22> col:22 uintmax_t '__uintmax_t':'unsigned long'
| `-TypedefType 0x585900 '__uintmax_t' sugar
|   |-Typedef 0x577368 '__uintmax_t'
|   `-BuiltinType 0x4e3820 'unsigned long'
|-EnumDecl 0x585ce8 </home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:48:9, line:67:1> line:48:14 mjtDisableBit_
| |-FullComment 0x5cfe20 <line:46:3, col:100>
| | `-ParagraphComment 0x5cfdf0 <col:3, col:100>
| |   `-TextComment 0x5cfdc0 <col:3, col:100> Text="---------------------------------- enum types (mjt) ----------------------------------------------"
| |-EnumConstantDecl 0x585e58 <line:49:3, col:28> col:3 mjDSBL_CONSTRAINT 'int'
| | |-ConstantExpr 0x585e38 <col:25, col:28> 'int'
| | | |-value: Int 1
| | | `-BinaryOperator 0x585e18 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x585dd8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x585df8 <col:28> 'int' 0
| | `-FullComment 0x5cfef0 <col:37, col:61>
| |   `-ParagraphComment 0x5cfec0 <col:37, col:61>
| |     `-TextComment 0x5cfe90 <col:37, col:61> Text=" entire constraint solver"
| |-EnumConstantDecl 0x585f58 <line:50:3, col:28> col:3 mjDSBL_EQUALITY 'int'
| | |-ConstantExpr 0x585f38 <col:25, col:28> 'int'
| | | |-value: Int 2
| | | `-BinaryOperator 0x585f18 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x585ed8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x585ef8 <col:28> 'int' 1
| | `-FullComment 0x5cffc0 <col:37, col:57>
| |   `-ParagraphComment 0x5cff90 <col:37, col:57>
| |     `-TextComment 0x5cff60 <col:37, col:57> Text=" equality constraints"
| |-EnumConstantDecl 0x586058 <line:51:3, col:28> col:3 mjDSBL_FRICTIONLOSS 'int'
| | |-ConstantExpr 0x586038 <col:25, col:28> 'int'
| | | |-value: Int 4
| | | `-BinaryOperator 0x586018 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x585fd8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x585ff8 <col:28> 'int' 2
| | `-FullComment 0x5d0090 <col:37, col:78>
| |   `-ParagraphComment 0x5d0060 <col:37, col:78>
| |     `-TextComment 0x5d0030 <col:37, col:78> Text=" joint and tendon frictionloss constraints"
| |-EnumConstantDecl 0x586158 <line:52:3, col:28> col:3 mjDSBL_LIMIT 'int'
| | |-ConstantExpr 0x586138 <col:25, col:28> 'int'
| | | |-value: Int 8
| | | `-BinaryOperator 0x586118 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x5860d8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x5860f8 <col:28> 'int' 3
| | `-FullComment 0x5d0160 <col:37, col:71>
| |   `-ParagraphComment 0x5d0130 <col:37, col:71>
| |     `-TextComment 0x5d0100 <col:37, col:71> Text=" joint and tendon limit constraints"
| |-EnumConstantDecl 0x586258 <line:53:3, col:28> col:3 mjDSBL_CONTACT 'int'
| | |-ConstantExpr 0x586238 <col:25, col:28> 'int'
| | | |-value: Int 16
| | | `-BinaryOperator 0x586218 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x5861d8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x5861f8 <col:28> 'int' 4
| | `-FullComment 0x5d2bf0 <col:37, col:56>
| |   `-ParagraphComment 0x5d2bc0 <col:37, col:56>
| |     `-TextComment 0x5d2b90 <col:37, col:56> Text=" contact constraints"
| |-EnumConstantDecl 0x586358 <line:54:3, col:28> col:3 mjDSBL_PASSIVE 'int'
| | |-ConstantExpr 0x586338 <col:25, col:28> 'int'
| | | |-value: Int 32
| | | `-BinaryOperator 0x586318 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x5862d8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x5862f8 <col:28> 'int' 5
| | `-FullComment 0x5d2cc0 <col:37, col:51>
| |   `-ParagraphComment 0x5d2c90 <col:37, col:51>
| |     `-TextComment 0x5d2c60 <col:37, col:51> Text=" passive forces"
| |-EnumConstantDecl 0x586458 <line:55:3, col:28> col:3 mjDSBL_GRAVITY 'int'
| | |-ConstantExpr 0x586438 <col:25, col:28> 'int'
| | | |-value: Int 64
| | | `-BinaryOperator 0x586418 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x5863d8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x5863f8 <col:28> 'int' 6
| | `-FullComment 0x5d2d90 <col:37, col:57>
| |   `-ParagraphComment 0x5d2d60 <col:37, col:57>
| |     `-TextComment 0x5d2d30 <col:37, col:57> Text=" gravitational forces"
| |-EnumConstantDecl 0x586558 <line:56:3, col:28> col:3 mjDSBL_CLAMPCTRL 'int'
| | |-ConstantExpr 0x586538 <col:25, col:28> 'int'
| | | |-value: Int 128
| | | `-BinaryOperator 0x586518 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x5864d8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x5864f8 <col:28> 'int' 7
| | `-FullComment 0x5d2e60 <col:37, col:69>
| |   `-ParagraphComment 0x5d2e30 <col:37, col:69>
| |     `-TextComment 0x5d2e00 <col:37, col:69> Text=" clamp control to specified range"
| |-EnumConstantDecl 0x586658 <line:57:3, col:28> col:3 mjDSBL_WARMSTART 'int'
| | |-ConstantExpr 0x586638 <col:25, col:28> 'int'
| | | |-value: Int 256
| | | `-BinaryOperator 0x586618 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x5865d8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x5865f8 <col:28> 'int' 8
| | `-FullComment 0x5d2f30 <col:37, col:64>
| |   `-ParagraphComment 0x5d2f00 <col:37, col:64>
| |     `-TextComment 0x5d2ed0 <col:37, col:64> Text=" warmstart constraint solver"
| |-EnumConstantDecl 0x586758 <line:58:3, col:28> col:3 mjDSBL_FILTERPARENT 'int'
| | |-ConstantExpr 0x586738 <col:25, col:28> 'int'
| | | |-value: Int 512
| | | `-BinaryOperator 0x586718 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x5866d8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x5866f8 <col:28> 'int' 9
| | `-FullComment 0x5d3000 <col:37, col:71>
| |   `-ParagraphComment 0x5d2fd0 <col:37, col:71>
| |     `-TextComment 0x5d2fa0 <col:37, col:71> Text=" remove collisions with parent body"
| |-EnumConstantDecl 0x590190 <line:59:3, col:28> col:3 mjDSBL_ACTUATION 'int'
| | |-ConstantExpr 0x586838 <col:25, col:28> 'int'
| | | |-value: Int 1024
| | | `-BinaryOperator 0x586818 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x5867d8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x5867f8 <col:28> 'int' 10
| | `-FullComment 0x5d30d0 <col:37, col:59>
| |   `-ParagraphComment 0x5d30a0 <col:37, col:59>
| |     `-TextComment 0x5d3070 <col:37, col:59> Text=" apply actuation forces"
| |-EnumConstantDecl 0x590288 <line:60:3, col:28> col:3 mjDSBL_REFSAFE 'int'
| | |-ConstantExpr 0x590268 <col:25, col:28> 'int'
| | | |-value: Int 2048
| | | `-BinaryOperator 0x590248 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590208 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590228 <col:28> 'int' 11
| | `-FullComment 0x5d31a0 <col:37, col:79>
| |   `-ParagraphComment 0x5d3170 <col:37, col:79>
| |     `-TextComment 0x5d3140 <col:37, col:79> Text=" integrator safety: make ref[0]>=2*timestep"
| |-EnumConstantDecl 0x590388 <line:61:3, col:28> col:3 mjDSBL_SENSOR 'int'
| | |-ConstantExpr 0x590368 <col:25, col:28> 'int'
| | | |-value: Int 4096
| | | `-BinaryOperator 0x590348 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590308 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590328 <col:28> 'int' 12
| | `-FullComment 0x5d3270 <col:37, col:44>
| |   `-ParagraphComment 0x5d3240 <col:37, col:44>
| |     `-TextComment 0x5d3210 <col:37, col:44> Text=" sensors"
| |-EnumConstantDecl 0x590488 <line:62:3, col:28> col:3 mjDSBL_MIDPHASE 'int'
| | |-ConstantExpr 0x590468 <col:25, col:28> 'int'
| | | |-value: Int 8192
| | | `-BinaryOperator 0x590448 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590408 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590428 <col:28> 'int' 13
| | `-FullComment 0x5d3340 <col:37, col:66>
| |   `-ParagraphComment 0x5d3310 <col:37, col:66>
| |     `-TextComment 0x5d32e0 <col:37, col:66> Text=" mid-phase collision filtering"
| |-EnumConstantDecl 0x590588 <line:63:3, col:28> col:3 mjDSBL_EULERDAMP 'int'
| | |-ConstantExpr 0x590568 <col:25, col:28> 'int'
| | | |-value: Int 16384
| | | `-BinaryOperator 0x590548 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590508 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590528 <col:28> 'int' 14
| | `-FullComment 0x5d3410 <col:37, col:94>
| |   `-ParagraphComment 0x5d33e0 <col:37, col:94>
| |     `-TextComment 0x5d33b0 <col:37, col:94> Text=" implicit integration of joint damping in Euler integrator"
| |-EnumConstantDecl 0x590688 <line:64:3, col:28> col:3 mjDSBL_AUTORESET 'int'
| | |-ConstantExpr 0x590668 <col:25, col:28> 'int'
| | | |-value: Int 32768
| | | `-BinaryOperator 0x590648 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590608 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590628 <col:28> 'int' 15
| | `-FullComment 0x5d34e0 <col:37, col:87>
| |   `-ParagraphComment 0x5d34b0 <col:37, col:87>
| |     `-TextComment 0x5d3480 <col:37, col:87> Text=" automatic reset when numerical issues are detected"
| `-EnumConstantDecl 0x590778 <line:66:3, col:25> col:3 mjNDISABLE 'int'
|   |-ConstantExpr 0x590758 <col:25> 'int'
|   | |-value: Int 16
|   | `-IntegerLiteral 0x590708 <col:25> 'int' 16
|   `-FullComment 0x5d35b0 <col:37, col:60>
|     `-ParagraphComment 0x5d3580 <col:37, col:60>
|       `-TextComment 0x5d3550 <col:37, col:60> Text=" number of disable flags"
|-TypedefDecl 0x590828 <line:48:1, line:67:3> col:3 mjtDisableBit 'enum mjtDisableBit_':'enum mjtDisableBit_'
| |-ElaboratedType 0x5907d0 'enum mjtDisableBit_' sugar
| | `-EnumType 0x585d90 'enum mjtDisableBit_'
| |   `-Enum 0x585ce8 'mjtDisableBit_'
| `-FullComment 0x5d3680 <line:46:3, col:100>
|   `-ParagraphComment 0x5d3650 <col:3, col:100>
|     `-TextComment 0x5d3620 <col:3, col:100> Text="---------------------------------- enum types (mjt) ----------------------------------------------"
|-EnumDecl 0x590898 <line:70:9, line:81:1> line:70:14 mjtEnableBit_
| |-EnumConstantDecl 0x590a08 <line:71:3, col:28> col:3 mjENBL_OVERRIDE 'int'
| | |-ConstantExpr 0x5909e8 <col:25, col:28> 'int'
| | | |-value: Int 1
| | | `-BinaryOperator 0x5909c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590988 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x5909a8 <col:28> 'int' 0
| | `-FullComment 0x5d3750 <col:37, col:64>
| |   `-ParagraphComment 0x5d3720 <col:37, col:64>
| |     `-TextComment 0x5d36f0 <col:37, col:64> Text=" override contact parameters"
| |-EnumConstantDecl 0x590b08 <line:72:3, col:28> col:3 mjENBL_ENERGY 'int'
| | |-ConstantExpr 0x590ae8 <col:25, col:28> 'int'
| | | |-value: Int 2
| | | `-BinaryOperator 0x590ac8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590a88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590aa8 <col:28> 'int' 1
| | `-FullComment 0x5d3820 <col:37, col:55>
| |   `-ParagraphComment 0x5d37f0 <col:37, col:55>
| |     `-TextComment 0x5d37c0 <col:37, col:55> Text=" energy computation"
| |-EnumConstantDecl 0x590c08 <line:73:3, col:28> col:3 mjENBL_FWDINV 'int'
| | |-ConstantExpr 0x590be8 <col:25, col:28> 'int'
| | | |-value: Int 4
| | | `-BinaryOperator 0x590bc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590b88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590ba8 <col:28> 'int' 2
| | `-FullComment 0x5d38f0 <col:37, col:61>
| |   `-ParagraphComment 0x5d38c0 <col:37, col:61>
| |     `-TextComment 0x5d3890 <col:37, col:61> Text=" record solver statistics"
| |-EnumConstantDecl 0x590d08 <line:74:3, col:28> col:3 mjENBL_INVDISCRETE 'int'
| | |-ConstantExpr 0x590ce8 <col:25, col:28> 'int'
| | | |-value: Int 8
| | | `-BinaryOperator 0x590cc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590c88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590ca8 <col:28> 'int' 3
| | `-FullComment 0x5d39e0 <col:37, line:75:59>
| |   `-ParagraphComment 0x5d39b0 <line:74:37, line:75:59>
| |     |-TextComment 0x5d3960 <line:74:37, col:67> Text=" discrete-time inverse dynamics"
| |     `-TextComment 0x5d3980 <line:75:37, col:59> Text=" experimental features:"
| |-EnumConstantDecl 0x590e08 <line:76:3, col:28> col:3 mjENBL_MULTICCD 'int'
| | |-ConstantExpr 0x590de8 <col:25, col:28> 'int'
| | | |-value: Int 16
| | | `-BinaryOperator 0x590dc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590d88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590da8 <col:28> 'int' 4
| | `-FullComment 0x5d3ab0 <col:37, col:75>
| |   `-ParagraphComment 0x5d3a80 <col:37, col:75>
| |     `-TextComment 0x5d3a50 <col:37, col:75> Text=" multi-point convex collision detection"
| |-EnumConstantDecl 0x590f08 <line:77:3, col:28> col:3 mjENBL_ISLAND 'int'
| | |-ConstantExpr 0x590ee8 <col:25, col:28> 'int'
| | | |-value: Int 32
| | | `-BinaryOperator 0x590ec8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590e88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590ea8 <col:28> 'int' 5
| | `-FullComment 0x5d3e10 <col:37, col:64>
| |   `-ParagraphComment 0x5d3de0 <col:37, col:64>
| |     `-TextComment 0x5d3b20 <col:37, col:64> Text=" constraint island discovery"
| |-EnumConstantDecl 0x591008 <line:78:3, col:28> col:3 mjENBL_NATIVECCD 'int'
| | |-ConstantExpr 0x590fe8 <col:25, col:28> 'int'
| | | |-value: Int 64
| | | `-BinaryOperator 0x590fc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x590f88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x590fa8 <col:28> 'int' 6
| | `-FullComment 0x5d3ee0 <col:37, col:70>
| |   `-ParagraphComment 0x5d3eb0 <col:37, col:70>
| |     `-TextComment 0x5d3e80 <col:37, col:70> Text=" native convex collision detection"
| `-EnumConstantDecl 0x5910f8 <line:80:3, col:25> col:3 mjNENABLE 'int'
|   |-ConstantExpr 0x5910d8 <col:25> 'int'
|   | |-value: Int 7
|   | `-IntegerLiteral 0x591088 <col:25> 'int' 7
|   `-FullComment 0x5d3fb0 <col:37, col:59>
|     `-ParagraphComment 0x5d3f80 <col:37, col:59>
|       `-TextComment 0x5d3f50 <col:37, col:59> Text=" number of enable flags"
|-TypedefDecl 0x5911c0 <line:70:1, line:81:3> col:3 mjtEnableBit 'enum mjtEnableBit_':'enum mjtEnableBit_'
| `-ElaboratedType 0x591150 'enum mjtEnableBit_' sugar
|   `-EnumType 0x590940 'enum mjtEnableBit_'
|     `-Enum 0x590898 'mjtEnableBit_'
|-EnumDecl 0x591230 <line:84:9, line:89:1> line:84:14 mjtJoint_
| |-EnumConstantDecl 0x591358 <line:85:3, col:25> col:3 mjJNT_FREE 'int'
| | |-ConstantExpr 0x591338 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x591318 <col:25> 'int' 0
| | `-FullComment 0x5d4080 <col:37, col:85>
| |   `-ParagraphComment 0x5d4050 <col:37, col:85>
| |     `-TextComment 0x5d4020 <col:37, col:85> Text=" global position and orientation (quat)       (7)"
| |-EnumConstantDecl 0x5913d8 <line:86:3> col:3 mjJNT_BALL 'int'
| | `-FullComment 0x5d4150 <col:37, col:85>
| |   `-ParagraphComment 0x5d4120 <col:37, col:85>
| |     `-TextComment 0x5d40f0 <col:37, col:85> Text=" orientation (quat) relative to parent        (4)"
| |-EnumConstantDecl 0x591458 <line:87:3> col:3 mjJNT_SLIDE 'int'
| | `-FullComment 0x5d4220 <col:37, col:85>
| |   `-ParagraphComment 0x5d41f0 <col:37, col:85>
| |     `-TextComment 0x5d41c0 <col:37, col:85> Text=" sliding distance along body-fixed axis       (1)"
| `-EnumConstantDecl 0x591508 <line:88:3> col:3 mjJNT_HINGE 'int'
|   `-FullComment 0x5d42f0 <col:37, col:85>
|     `-ParagraphComment 0x5d42c0 <col:37, col:85>
|       `-TextComment 0x5d4290 <col:37, col:85> Text=" rotation angle (rad) around body-fixed axis  (1)"
|-TypedefDecl 0x5915b8 <line:84:1, line:89:3> col:3 mjtJoint 'enum mjtJoint_':'enum mjtJoint_'
| `-ElaboratedType 0x591560 'enum mjtJoint_' sugar
|   `-EnumType 0x5912d0 'enum mjtJoint_'
|     `-Enum 0x591230 'mjtJoint_'
|-EnumDecl 0x591628 <line:92:9, line:118:1> line:92:14 mjtGeom_
| |-EnumConstantDecl 0x591788 <line:94:3, col:25> col:3 mjGEOM_PLANE 'int'
| | |-ConstantExpr 0x591768 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x591748 <col:25> 'int' 0
| | `-FullComment 0x5d43c0 <col:37, col:42>
| |   `-ParagraphComment 0x5d4390 <col:37, col:42>
| |     `-TextComment 0x5d4360 <col:37, col:42> Text=" plane"
| |-EnumConstantDecl 0x591808 <line:95:3> col:3 mjGEOM_HFIELD 'int'
| | `-FullComment 0x5d4490 <col:37, col:49>
| |   `-ParagraphComment 0x5d4460 <col:37, col:49>
| |     `-TextComment 0x5d4430 <col:37, col:49> Text=" height field"
| |-EnumConstantDecl 0x591888 <line:96:3> col:3 mjGEOM_SPHERE 'int'
| | `-FullComment 0x5d4560 <col:37, col:43>
| |   `-ParagraphComment 0x5d4530 <col:37, col:43>
| |     `-TextComment 0x5d4500 <col:37, col:43> Text=" sphere"
| |-EnumConstantDecl 0x591908 <line:97:3> col:3 mjGEOM_CAPSULE 'int'
| | `-FullComment 0x5d4630 <col:37, col:44>
| |   `-ParagraphComment 0x5d4600 <col:37, col:44>
| |     `-TextComment 0x5d45d0 <col:37, col:44> Text=" capsule"
| |-EnumConstantDecl 0x591988 <line:98:3> col:3 mjGEOM_ELLIPSOID 'int'
| | `-FullComment 0x5d4700 <col:37, col:46>
| |   `-ParagraphComment 0x5d46d0 <col:37, col:46>
| |     `-TextComment 0x5d46a0 <col:37, col:46> Text=" ellipsoid"
| |-EnumConstantDecl 0x591a08 <line:99:3> col:3 mjGEOM_CYLINDER 'int'
| | `-FullComment 0x5d47d0 <col:37, col:45>
| |   `-ParagraphComment 0x5d47a0 <col:37, col:45>
| |     `-TextComment 0x5d4770 <col:37, col:45> Text=" cylinder"
| |-EnumConstantDecl 0x591a88 <line:100:3> col:3 mjGEOM_BOX 'int'
| | `-FullComment 0x5d48a0 <col:37, col:40>
| |   `-ParagraphComment 0x5d4870 <col:37, col:40>
| |     `-TextComment 0x5d4840 <col:37, col:40> Text=" box"
| |-EnumConstantDecl 0x591b08 <line:101:3> col:3 mjGEOM_MESH 'int'
| | `-FullComment 0x5d4970 <col:37, col:41>
| |   `-ParagraphComment 0x5d4940 <col:37, col:41>
| |     `-TextComment 0x5d4910 <col:37, col:41> Text=" mesh"
| |-EnumConstantDecl 0x591b88 <line:102:3> col:3 mjGEOM_SDF 'int'
| | `-FullComment 0x5d4a40 <col:37, col:58>
| |   `-ParagraphComment 0x5d4a10 <col:37, col:58>
| |     `-TextComment 0x5d49e0 <col:37, col:58> Text=" signed distance field"
| |-EnumConstantDecl 0x591c08 <line:104:3> col:3 mjNGEOMTYPES 'int'
| | `-FullComment 0x5d4b10 <col:37, col:65>
| |   `-ParagraphComment 0x5d4ae0 <col:37, col:65>
| |     `-TextComment 0x5d4ab0 <col:37, col:65> Text=" number of regular geom types"
| |-EnumConstantDecl 0x591cf8 <line:107:3, col:25> col:3 mjGEOM_ARROW 'int'
| | |-ConstantExpr 0x591cd8 <col:25> 'int'
| | | |-value: Int 100
| | | `-IntegerLiteral 0x591cb8 <col:25> 'int' 100
| | `-FullComment 0x5d4be0 <col:37, col:42>
| |   `-ParagraphComment 0x5d4bb0 <col:37, col:42>
| |     `-TextComment 0x5d4b80 <col:37, col:42> Text=" arrow"
| |-EnumConstantDecl 0x591d78 <line:108:3> col:3 mjGEOM_ARROW1 'int'
| | `-FullComment 0x5d4cb0 <col:37, col:57>
| |   `-ParagraphComment 0x5d4c80 <col:37, col:57>
| |     `-TextComment 0x5d4c50 <col:37, col:57> Text=" arrow without wedges"
| |-EnumConstantDecl 0x591df8 <line:109:3> col:3 mjGEOM_ARROW2 'int'
| | `-FullComment 0x5d4d80 <col:37, col:61>
| |   `-ParagraphComment 0x5d4d50 <col:37, col:61>
| |     `-TextComment 0x5d4d20 <col:37, col:61> Text=" arrow in both directions"
| |-EnumConstantDecl 0x591e78 <line:110:3> col:3 mjGEOM_LINE 'int'
| | `-FullComment 0x5d4e90 <col:37, col:41>
| |   `-ParagraphComment 0x5d4e60 <col:37, col:41>
| |     `-TextComment 0x5d4e30 <col:37, col:41> Text=" line"
| |-EnumConstantDecl 0x591ef8 <line:111:3> col:3 mjGEOM_LINEBOX 'int'
| | `-FullComment 0x5d4f60 <col:37, col:56>
| |   `-ParagraphComment 0x5d4f30 <col:37, col:56>
| |     `-TextComment 0x5d4f00 <col:37, col:56> Text=" box with line edges"
| |-EnumConstantDecl 0x591f78 <line:112:3> col:3 mjGEOM_FLEX 'int'
| | `-FullComment 0x5d5030 <col:37, col:41>
| |   `-ParagraphComment 0x5d5000 <col:37, col:41>
| |     `-TextComment 0x5d4fd0 <col:37, col:41> Text=" flex"
| |-EnumConstantDecl 0x591ff8 <line:113:3> col:3 mjGEOM_SKIN 'int'
| | `-FullComment 0x5d5100 <col:37, col:41>
| |   `-ParagraphComment 0x5d50d0 <col:37, col:41>
| |     `-TextComment 0x5d50a0 <col:37, col:41> Text=" skin"
| |-EnumConstantDecl 0x592078 <line:114:3> col:3 mjGEOM_LABEL 'int'
| | `-FullComment 0x5d51d0 <col:37, col:47>
| |   `-ParagraphComment 0x5d51a0 <col:37, col:47>
| |     `-TextComment 0x5d5170 <col:37, col:47> Text=" text label"
| |-EnumConstantDecl 0x5920f8 <line:115:3> col:3 mjGEOM_TRIANGLE 'int'
| | `-FullComment 0x5d52a0 <col:37, col:45>
| |   `-ParagraphComment 0x5d5270 <col:37, col:45>
| |     `-TextComment 0x5d5240 <col:37, col:45> Text=" triangle"
| `-EnumConstantDecl 0x593208 <line:117:3, col:25> col:3 mjGEOM_NONE 'int'
|   |-ConstantExpr 0x5931e8 <col:25> 'int'
|   | |-value: Int 1001
|   | `-IntegerLiteral 0x592178 <col:25> 'int' 1001
|   `-FullComment 0x5d5370 <col:37, col:54>
|     `-ParagraphComment 0x5d5340 <col:37, col:54>
|       `-TextComment 0x5d5310 <col:37, col:54> Text=" missing geom type"
|-TypedefDecl 0x5932b8 <line:92:1, line:118:3> col:3 mjtGeom 'enum mjtGeom_':'enum mjtGeom_'
| `-ElaboratedType 0x593260 'enum mjtGeom_' sugar
|   `-EnumType 0x5916d0 'enum mjtGeom_'
|     `-Enum 0x591628 'mjtGeom_'
|-EnumDecl 0x593328 <line:121:9, line:127:1> line:121:14 mjtCamLight_
| |-EnumConstantDecl 0x593458 <line:122:3, col:25> col:3 mjCAMLIGHT_FIXED 'int'
| | |-ConstantExpr 0x593438 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x593418 <col:25> 'int' 0
| | `-FullComment 0x5d5440 <col:37, col:62>
| |   `-ParagraphComment 0x5d5410 <col:37, col:62>
| |     `-TextComment 0x5d53e0 <col:37, col:62> Text=" pos and rot fixed in body"
| |-EnumConstantDecl 0x5934d8 <line:123:3> col:3 mjCAMLIGHT_TRACK 'int'
| | `-FullComment 0x5d5510 <col:37, col:73>
| |   `-ParagraphComment 0x5d54e0 <col:37, col:73>
| |     `-TextComment 0x5d54b0 <col:37, col:73> Text=" pos tracks body, rot fixed in global"
| |-EnumConstantDecl 0x593558 <line:124:3> col:3 mjCAMLIGHT_TRACKCOM 'int'
| | `-FullComment 0x5d55e0 <col:37, col:78>
| |   `-ParagraphComment 0x5d55b0 <col:37, col:78>
| |     `-TextComment 0x5d5580 <col:37, col:78> Text=" pos tracks subtree com, rot fixed in body"
| |-EnumConstantDecl 0x5935d8 <line:125:3> col:3 mjCAMLIGHT_TARGETBODY 'int'
| | `-FullComment 0x5d56b0 <col:37, col:78>
| |   `-ParagraphComment 0x5d5680 <col:37, col:78>
| |     `-TextComment 0x5d5650 <col:37, col:78> Text=" pos fixed in body, rot tracks target body"
| `-EnumConstantDecl 0x593688 <line:126:3> col:3 mjCAMLIGHT_TARGETBODYCOM 'int'
|   `-FullComment 0x5d5780 <col:37, col:85>
|     `-ParagraphComment 0x5d5750 <col:37, col:85>
|       `-TextComment 0x5d5720 <col:37, col:85> Text=" pos fixed in body, rot tracks target subtree com"
|-TypedefDecl 0x593738 <line:121:1, line:127:3> col:3 mjtCamLight 'enum mjtCamLight_':'enum mjtCamLight_'
| `-ElaboratedType 0x5936e0 'enum mjtCamLight_' sugar
|   `-EnumType 0x5933d0 'enum mjtCamLight_'
|     `-Enum 0x593328 'mjtCamLight_'
|-EnumDecl 0x5937a8 <line:130:9, line:134:1> line:130:14 mjtTexture_
| |-EnumConstantDecl 0x5938d8 <line:131:3, col:25> col:3 mjTEXTURE_2D 'int'
| | |-ConstantExpr 0x5938b8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x593898 <col:25> 'int' 0
| | `-FullComment 0x5d5850 <col:37, col:80>
| |   `-ParagraphComment 0x5d5820 <col:37, col:80>
| |     `-TextComment 0x5d57f0 <col:37, col:80> Text=" 2d texture, suitable for planes and hfields"
| |-EnumConstantDecl 0x593958 <line:132:3> col:3 mjTEXTURE_CUBE 'int'
| | `-FullComment 0x5d5920 <col:37, col:84>
| |   `-ParagraphComment 0x5d58f0 <col:37, col:84>
| |     `-TextComment 0x5d58c0 <col:37, col:84> Text=" cube texture, suitable for all other geom types"
| `-EnumConstantDecl 0x593a08 <line:133:3> col:3 mjTEXTURE_SKYBOX 'int'
|   `-FullComment 0x5d59f0 <col:37, col:64>
|     `-ParagraphComment 0x5d59c0 <col:37, col:64>
|       `-TextComment 0x5d5990 <col:37, col:64> Text=" cube texture used as skybox"
|-TypedefDecl 0x593ab8 <line:130:1, line:134:3> col:3 mjtTexture 'enum mjtTexture_':'enum mjtTexture_'
| `-ElaboratedType 0x593a60 'enum mjtTexture_' sugar
|   `-EnumType 0x593850 'enum mjtTexture_'
|     `-Enum 0x5937a8 'mjtTexture_'
|-EnumDecl 0x593b28 <line:137:9, line:149:1> line:137:14 mjtTextureRole_
| |-EnumConstantDecl 0x593c58 <line:138:3, col:25> col:3 mjTEXROLE_USER 'int'
| | |-ConstantExpr 0x593c38 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x593c18 <col:25> 'int' 0
| | `-FullComment 0x5d5ac0 <col:37, col:48>
| |   `-ParagraphComment 0x5d5a90 <col:37, col:48>
| |     `-TextComment 0x5d5a60 <col:37, col:48> Text=" unspecified"
| |-EnumConstantDecl 0x593cd8 <line:139:3> col:3 mjTEXROLE_RGB 'int'
| | `-FullComment 0x5d5b90 <col:37, col:56>
| |   `-ParagraphComment 0x5d5b60 <col:37, col:56>
| |     `-TextComment 0x5d5b30 <col:37, col:56> Text=" base color (albedo)"
| |-EnumConstantDecl 0x593d58 <line:140:3> col:3 mjTEXROLE_OCCLUSION 'int'
| | `-FullComment 0x5d5c60 <col:37, col:54>
| |   `-ParagraphComment 0x5d5c30 <col:37, col:54>
| |     `-TextComment 0x5d5c00 <col:37, col:54> Text=" ambient occlusion"
| |-EnumConstantDecl 0x593dd8 <line:141:3> col:3 mjTEXROLE_ROUGHNESS 'int'
| | `-FullComment 0x5d5d30 <col:37, col:46>
| |   `-ParagraphComment 0x5d5d00 <col:37, col:46>
| |     `-TextComment 0x5d5cd0 <col:37, col:46> Text=" roughness"
| |-EnumConstantDecl 0x593e58 <line:142:3> col:3 mjTEXROLE_METALLIC 'int'
| | `-FullComment 0x5d6620 <col:37, col:45>
| |   `-ParagraphComment 0x5d5dd0 <col:37, col:45>
| |     `-TextComment 0x5d5da0 <col:37, col:45> Text=" metallic"
| |-EnumConstantDecl 0x593ed8 <line:143:3> col:3 mjTEXROLE_NORMAL 'int'
| | `-FullComment 0x5d66f0 <col:37, col:54>
| |   `-ParagraphComment 0x5d66c0 <col:37, col:54>
| |     `-TextComment 0x5d6690 <col:37, col:54> Text=" normal (bump) map"
| |-EnumConstantDecl 0x593f58 <line:144:3> col:3 mjTEXROLE_OPACITY 'int'
| | `-FullComment 0x5d67c0 <col:37, col:49>
| |   `-ParagraphComment 0x5d6790 <col:37, col:49>
| |     `-TextComment 0x5d6760 <col:37, col:49> Text=" transperancy"
| |-EnumConstantDecl 0x593fd8 <line:145:3> col:3 mjTEXROLE_EMISSIVE 'int'
| | `-FullComment 0x5d6890 <col:37, col:51>
| |   `-ParagraphComment 0x5d6860 <col:37, col:51>
| |     `-TextComment 0x5d6830 <col:37, col:51> Text=" light emission"
| |-EnumConstantDecl 0x594058 <line:146:3> col:3 mjTEXROLE_RGBA 'int'
| | `-FullComment 0x5d6960 <col:37, col:56>
| |   `-ParagraphComment 0x5d6930 <col:37, col:56>
| |     `-TextComment 0x5d6900 <col:37, col:56> Text=" base color, opacity"
| |-EnumConstantDecl 0x5940d8 <line:147:3> col:3 mjTEXROLE_ORM 'int'
| | `-FullComment 0x5d6a30 <col:37, col:67>
| |   `-ParagraphComment 0x5d6a00 <col:37, col:67>
| |     `-TextComment 0x5d69d0 <col:37, col:67> Text=" occlusion, roughness, metallic"
| `-EnumConstantDecl 0x594158 <line:148:3> col:3 mjNTEXROLE 'int'
|-TypedefDecl 0x594628 <line:137:1, line:149:3> col:3 mjtTextureRole 'enum mjtTextureRole_':'enum mjtTextureRole_'
| `-ElaboratedType 0x5945d0 'enum mjtTextureRole_' sugar
|   `-EnumType 0x593bd0 'enum mjtTextureRole_'
|     `-Enum 0x593b28 'mjtTextureRole_'
|-EnumDecl 0x594698 <line:152:9, line:157:1> line:152:14 mjtIntegrator_
| |-EnumConstantDecl 0x5947c8 <line:153:3, col:25> col:3 mjINT_EULER 'int'
| | |-ConstantExpr 0x5947a8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x594788 <col:25> 'int' 0
| | `-FullComment 0x5d6b00 <col:37, col:56>
| |   `-ParagraphComment 0x5d6ad0 <col:37, col:56>
| |     `-TextComment 0x5d6aa0 <col:37, col:56> Text=" semi-implicit Euler"
| |-EnumConstantDecl 0x594848 <line:154:3> col:3 mjINT_RK4 'int'
| | `-FullComment 0x5d6bd0 <col:37, col:58>
| |   `-ParagraphComment 0x5d6ba0 <col:37, col:58>
| |     `-TextComment 0x5d6b70 <col:37, col:58> Text=" 4th-order Runge Kutta"
| |-EnumConstantDecl 0x5948c8 <line:155:3> col:3 mjINT_IMPLICIT 'int'
| | `-FullComment 0x5d6ca0 <col:37, col:57>
| |   `-ParagraphComment 0x5d6c70 <col:37, col:57>
| |     `-TextComment 0x5d6c40 <col:37, col:57> Text=" implicit in velocity"
| `-EnumConstantDecl 0x594978 <line:156:3> col:3 mjINT_IMPLICITFAST 'int'
|   `-FullComment 0x5d6d70 <col:37, col:76>
|     `-ParagraphComment 0x5d6d40 <col:37, col:76>
|       `-TextComment 0x5d6d10 <col:37, col:76> Text=" implicit in velocity, no rne derivative"
|-TypedefDecl 0x594a28 <line:152:1, line:157:3> col:3 mjtIntegrator 'enum mjtIntegrator_':'enum mjtIntegrator_'
| `-ElaboratedType 0x5949d0 'enum mjtIntegrator_' sugar
|   `-EnumType 0x594740 'enum mjtIntegrator_'
|     `-Enum 0x594698 'mjtIntegrator_'
|-EnumDecl 0x594a98 <line:160:9, line:163:1> line:160:14 mjtCone_
| |-EnumConstantDecl 0x594bc8 <line:161:3, col:26> col:3 mjCONE_PYRAMIDAL 'int'
| | |-ConstantExpr 0x594ba8 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x594b88 <col:26> 'int' 0
| | `-FullComment 0x5d6e40 <col:37, col:46>
| |   `-ParagraphComment 0x5d6e10 <col:37, col:46>
| |     `-TextComment 0x5d6de0 <col:37, col:46> Text=" pyramidal"
| `-EnumConstantDecl 0x594c78 <line:162:3> col:3 mjCONE_ELLIPTIC 'int'
|   `-FullComment 0x5d6f10 <col:37, col:45>
|     `-ParagraphComment 0x5d6ee0 <col:37, col:45>
|       `-TextComment 0x5d6eb0 <col:37, col:45> Text=" elliptic"
|-TypedefDecl 0x594d28 <line:160:1, line:163:3> col:3 mjtCone 'enum mjtCone_':'enum mjtCone_'
| `-ElaboratedType 0x594cd0 'enum mjtCone_' sugar
|   `-EnumType 0x594b40 'enum mjtCone_'
|     `-Enum 0x594a98 'mjtCone_'
|-EnumDecl 0x594d98 <line:166:9, line:170:1> line:166:14 mjtJacobian_
| |-EnumConstantDecl 0x594ec8 <line:167:3, col:26> col:3 mjJAC_DENSE 'int'
| | |-ConstantExpr 0x594ea8 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x594e88 <col:26> 'int' 0
| | `-FullComment 0x5d6fe0 <col:37, col:42>
| |   `-ParagraphComment 0x5d6fb0 <col:37, col:42>
| |     `-TextComment 0x5d6f80 <col:37, col:42> Text=" dense"
| |-EnumConstantDecl 0x594f48 <line:168:3> col:3 mjJAC_SPARSE 'int'
| | `-FullComment 0x5d70b0 <col:37, col:43>
| |   `-ParagraphComment 0x5d7080 <col:37, col:43>
| |     `-TextComment 0x5d7050 <col:37, col:43> Text=" sparse"
| `-EnumConstantDecl 0x594ff8 <line:169:3> col:3 mjJAC_AUTO 'int'
|   `-FullComment 0x5d71d0 <col:37, col:69>
|     `-ParagraphComment 0x5d71a0 <col:37, col:69>
|       |-TextComment 0x5d7120 <col:37, col:48> Text=" dense if nv"
|       |-TextComment 0x5d7140 <col:49> Text="<"
|       `-TextComment 0x5d7160 <col:50, col:69> Text="60, sparse otherwise"
|-TypedefDecl 0x5950a8 <line:166:1, line:170:3> col:3 mjtJacobian 'enum mjtJacobian_':'enum mjtJacobian_'
| `-ElaboratedType 0x595050 'enum mjtJacobian_' sugar
|   `-EnumType 0x594e40 'enum mjtJacobian_'
|     `-Enum 0x594d98 'mjtJacobian_'
|-EnumDecl 0x595118 <line:173:9, line:177:1> line:173:14 mjtSolver_
| |-EnumConstantDecl 0x595248 <line:174:3, col:26> col:3 mjSOL_PGS 'int'
| | |-ConstantExpr 0x595228 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x595208 <col:26> 'int' 0
| | `-FullComment 0x5d72a0 <col:37, col:50>
| |   `-ParagraphComment 0x5d7270 <col:37, col:50>
| |     `-TextComment 0x5d7240 <col:37, col:50> Text=" PGS    (dual)"
| |-EnumConstantDecl 0x5952c8 <line:175:3> col:3 mjSOL_CG 'int'
| | `-FullComment 0x5d7370 <col:37, col:52>
| |   `-ParagraphComment 0x5d7340 <col:37, col:52>
| |     `-TextComment 0x5d7310 <col:37, col:52> Text=" CG     (primal)"
| `-EnumConstantDecl 0x595378 <line:176:3> col:3 mjSOL_NEWTON 'int'
|   `-FullComment 0x5d7440 <col:37, col:52>
|     `-ParagraphComment 0x5d7410 <col:37, col:52>
|       `-TextComment 0x5d73e0 <col:37, col:52> Text=" Newton (primal)"
|-TypedefDecl 0x595428 <line:173:1, line:177:3> col:3 mjtSolver 'enum mjtSolver_':'enum mjtSolver_'
| `-ElaboratedType 0x5953d0 'enum mjtSolver_' sugar
|   `-EnumType 0x5951c0 'enum mjtSolver_'
|     `-Enum 0x595118 'mjtSolver_'
|-EnumDecl 0x595498 <line:180:9, line:187:1> line:180:14 mjtEq_
| |-EnumConstantDecl 0x597800 <line:181:3, col:25> col:3 mjEQ_CONNECT 'int'
| | |-ConstantExpr 0x5955a8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x595588 <col:25> 'int' 0
| | `-FullComment 0x5d7510 <col:37, col:79>
| |   `-ParagraphComment 0x5d74e0 <col:37, col:79>
| |     `-TextComment 0x5d74b0 <col:37, col:79> Text=" connect two bodies at a point (ball joint)"
| |-EnumConstantDecl 0x597878 <line:182:3> col:3 mjEQ_WELD 'int'
| | `-FullComment 0x5d75e0 <col:37, col:88>
| |   `-ParagraphComment 0x5d75b0 <col:37, col:88>
| |     `-TextComment 0x5d7580 <col:37, col:88> Text=" fix relative position and orientation of two bodies"
| |-EnumConstantDecl 0x5978f8 <line:183:3> col:3 mjEQ_JOINT 'int'
| | `-FullComment 0x5d76c0 <col:37, col:86>
| |   `-ParagraphComment 0x5d7690 <col:37, col:86>
| |     `-TextComment 0x5d7660 <col:37, col:86> Text=" couple the values of two scalar joints with cubic"
| |-EnumConstantDecl 0x597978 <line:184:3> col:3 mjEQ_TENDON 'int'
| | `-FullComment 0x5d7790 <col:37, col:81>
| |   `-ParagraphComment 0x5d7760 <col:37, col:81>
| |     `-TextComment 0x5d7730 <col:37, col:81> Text=" couple the lengths of two tendons with cubic"
| |-EnumConstantDecl 0x5979f8 <line:185:3> col:3 mjEQ_FLEX 'int'
| | `-FullComment 0x5d7860 <col:37, col:67>
| |   `-ParagraphComment 0x5d7830 <col:37, col:67>
| |     `-TextComment 0x5d7800 <col:37, col:67> Text=" fix all edge lengths of a flex"
| `-EnumConstantDecl 0x597aa8 <line:186:3> col:3 mjEQ_DISTANCE 'int'
|   `-FullComment 0x5d7930 <col:37, col:77>
|     `-ParagraphComment 0x5d7900 <col:37, col:77>
|       `-TextComment 0x5d78d0 <col:37, col:77> Text=" unsupported, will cause an error if used"
|-TypedefDecl 0x597b58 <line:180:1, line:187:3> col:3 mjtEq 'enum mjtEq_':'enum mjtEq_'
| `-ElaboratedType 0x597b00 'enum mjtEq_' sugar
|   `-EnumType 0x595540 'enum mjtEq_'
|     `-Enum 0x595498 'mjtEq_'
|-EnumDecl 0x597bc8 <line:190:9, line:197:1> line:190:14 mjtWrap_
| |-EnumConstantDecl 0x597cf8 <line:191:3, col:25> col:3 mjWRAP_NONE 'int'
| | |-ConstantExpr 0x597cd8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x597cb8 <col:25> 'int' 0
| | `-FullComment 0x5d7a00 <col:37, col:48>
| |   `-ParagraphComment 0x5d79d0 <col:37, col:48>
| |     `-TextComment 0x5d79a0 <col:37, col:48> Text=" null object"
| |-EnumConstantDecl 0x597d78 <line:192:3> col:3 mjWRAP_JOINT 'int'
| | `-FullComment 0x5d7ad0 <col:37, col:56>
| |   `-ParagraphComment 0x5d7aa0 <col:37, col:56>
| |     `-TextComment 0x5d7a70 <col:37, col:56> Text=" constant moment arm"
| |-EnumConstantDecl 0x597df8 <line:193:3> col:3 mjWRAP_PULLEY 'int'
| | `-FullComment 0x5d7ba0 <col:37, col:64>
| |   `-ParagraphComment 0x5d7b70 <col:37, col:64>
| |     `-TextComment 0x5d7b40 <col:37, col:64> Text=" pulley used to split tendon"
| |-EnumConstantDecl 0x597e78 <line:194:3> col:3 mjWRAP_SITE 'int'
| | `-FullComment 0x5d7c70 <col:37, col:54>
| |   `-ParagraphComment 0x5d7c40 <col:37, col:54>
| |     `-TextComment 0x5d7c10 <col:37, col:54> Text=" pass through site"
| |-EnumConstantDecl 0x597ef8 <line:195:3> col:3 mjWRAP_SPHERE 'int'
| | `-FullComment 0x5d7d40 <col:37, col:55>
| |   `-ParagraphComment 0x5d7d10 <col:37, col:55>
| |     `-TextComment 0x5d7ce0 <col:37, col:55> Text=" wrap around sphere"
| `-EnumConstantDecl 0x597fa8 <line:196:3> col:3 mjWRAP_CYLINDER 'int'
|   `-FullComment 0x5d7e10 <col:37, col:68>
|     `-ParagraphComment 0x5d7de0 <col:37, col:68>
|       `-TextComment 0x5d7db0 <col:37, col:68> Text=" wrap around (infinite) cylinder"
|-TypedefDecl 0x598058 <line:190:1, line:197:3> col:3 mjtWrap 'enum mjtWrap_':'enum mjtWrap_'
| `-ElaboratedType 0x598000 'enum mjtWrap_' sugar
|   `-EnumType 0x597c70 'enum mjtWrap_'
|     `-Enum 0x597bc8 'mjtWrap_'
|-EnumDecl 0x5980c8 <line:200:9, line:209:1> line:200:14 mjtTrn_
| |-EnumConstantDecl 0x5981f8 <line:201:3, col:25> col:3 mjTRN_JOINT 'int'
| | |-ConstantExpr 0x5981d8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x5981b8 <col:25> 'int' 0
| | `-FullComment 0x5d7ee0 <col:37, col:51>
| |   `-ParagraphComment 0x5d7eb0 <col:37, col:51>
| |     `-TextComment 0x5d7e80 <col:37, col:51> Text=" force on joint"
| |-EnumConstantDecl 0x598278 <line:202:3> col:3 mjTRN_JOINTINPARENT 'int'
| | `-FullComment 0x5d7fb0 <col:37, col:78>
| |   `-ParagraphComment 0x5d7f80 <col:37, col:78>
| |     `-TextComment 0x5d7f50 <col:37, col:78> Text=" force on joint, expressed in parent frame"
| |-EnumConstantDecl 0x5982f8 <line:203:3> col:3 mjTRN_SLIDERCRANK 'int'
| | `-FullComment 0x5d8080 <col:37, col:67>
| |   `-ParagraphComment 0x5d8050 <col:37, col:67>
| |     `-TextComment 0x5d8020 <col:37, col:67> Text=" force via slider-crank linkage"
| |-EnumConstantDecl 0x598378 <line:204:3> col:3 mjTRN_TENDON 'int'
| | `-FullComment 0x5d8150 <col:37, col:52>
| |   `-ParagraphComment 0x5d8120 <col:37, col:52>
| |     `-TextComment 0x5d80f0 <col:37, col:52> Text=" force on tendon"
| |-EnumConstantDecl 0x5983f8 <line:205:3> col:3 mjTRN_SITE 'int'
| | `-FullComment 0x5d8220 <col:37, col:50>
| |   `-ParagraphComment 0x5d81f0 <col:37, col:50>
| |     `-TextComment 0x5d81c0 <col:37, col:50> Text=" force on site"
| |-EnumConstantDecl 0x598478 <line:206:3> col:3 mjTRN_BODY 'int'
| | `-FullComment 0x5d82f0 <col:37, col:69>
| |   `-ParagraphComment 0x5d82c0 <col:37, col:69>
| |     `-TextComment 0x5d8290 <col:37, col:69> Text=" adhesion force on a body's geoms"
| `-EnumConstantDecl 0x598568 <line:208:3, col:25> col:3 mjTRN_UNDEFINED 'int'
|   |-ConstantExpr 0x598548 <col:25> 'int'
|   | |-value: Int 1000
|   | `-IntegerLiteral 0x5984f8 <col:25> 'int' 1000
|   `-FullComment 0x5d83c0 <col:37, col:64>
|     `-ParagraphComment 0x5d8390 <col:37, col:64>
|       `-TextComment 0x5d8360 <col:37, col:64> Text=" undefined transmission type"
|-TypedefDecl 0x598618 <line:200:1, line:209:3> col:3 mjtTrn 'enum mjtTrn_':'enum mjtTrn_'
| `-ElaboratedType 0x5985c0 'enum mjtTrn_' sugar
|   `-EnumType 0x598170 'enum mjtTrn_'
|     `-Enum 0x5980c8 'mjtTrn_'
|-EnumDecl 0x598688 <line:212:9, line:219:1> line:212:14 mjtDyn_
| |-EnumConstantDecl 0x598890 <line:213:3, col:25> col:3 mjDYN_NONE 'int'
| | |-ConstantExpr 0x598798 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x598778 <col:25> 'int' 0
| | `-FullComment 0x5d8490 <col:37, col:79>
| |   `-ParagraphComment 0x5d8460 <col:37, col:79>
| |     `-TextComment 0x5d8430 <col:37, col:79> Text=" no internal dynamics; ctrl specifies force"
| |-EnumConstantDecl 0x598908 <line:214:3> col:3 mjDYN_INTEGRATOR 'int'
| | `-FullComment 0x5d8560 <col:37, col:58>
| |   `-ParagraphComment 0x5d8530 <col:37, col:58>
| |     `-TextComment 0x5d8500 <col:37, col:58> Text=" integrator: da/dt = u"
| |-EnumConstantDecl 0x598988 <line:215:3> col:3 mjDYN_FILTER 'int'
| | `-FullComment 0x5d9650 <col:37, col:71>
| |   `-ParagraphComment 0x5d8600 <col:37, col:71>
| |     `-TextComment 0x5d85d0 <col:37, col:71> Text=" linear filter: da/dt = (u-a) / tau"
| |-EnumConstantDecl 0x598a08 <line:216:3> col:3 mjDYN_FILTEREXACT 'int'
| | `-FullComment 0x5d9720 <col:37, col:95>
| |   `-ParagraphComment 0x5d96f0 <col:37, col:95>
| |     `-TextComment 0x5d96c0 <col:37, col:95> Text=" linear filter: da/dt = (u-a) / tau, with exact integration"
| |-EnumConstantDecl 0x598a88 <line:217:3> col:3 mjDYN_MUSCLE 'int'
| | `-FullComment 0x5d97f0 <col:37, col:85>
| |   `-ParagraphComment 0x5d97c0 <col:37, col:85>
| |     `-TextComment 0x5d9790 <col:37, col:85> Text=" piece-wise linear filter with two time constants"
| `-EnumConstantDecl 0x598b38 <line:218:3> col:3 mjDYN_USER 'int'
|   `-FullComment 0x5d98c0 <col:37, col:63>
|     `-ParagraphComment 0x5d9890 <col:37, col:63>
|       `-TextComment 0x5d9860 <col:37, col:63> Text=" user-defined dynamics type"
|-TypedefDecl 0x598be8 <line:212:1, line:219:3> col:3 mjtDyn 'enum mjtDyn_':'enum mjtDyn_'
| `-ElaboratedType 0x598b90 'enum mjtDyn_' sugar
|   `-EnumType 0x598730 'enum mjtDyn_'
|     `-Enum 0x598688 'mjtDyn_'
|-EnumDecl 0x598c58 <line:222:9, line:227:1> line:222:14 mjtGain_
| |-EnumConstantDecl 0x598d88 <line:223:3, col:25> col:3 mjGAIN_FIXED 'int'
| | |-ConstantExpr 0x598d68 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x598d48 <col:25> 'int' 0
| | `-FullComment 0x5d9990 <col:37, col:47>
| |   `-ParagraphComment 0x5d9960 <col:37, col:47>
| |     `-TextComment 0x5d9930 <col:37, col:47> Text=" fixed gain"
| |-EnumConstantDecl 0x598e08 <line:224:3> col:3 mjGAIN_AFFINE 'int'
| | `-FullComment 0x5d9a60 <col:37, col:68>
| |   `-ParagraphComment 0x5d9a30 <col:37, col:68>
| |     `-TextComment 0x5d9a00 <col:37, col:68> Text=" const + kp*length + kv*velocity"
| |-EnumConstantDecl 0x598e88 <line:225:3> col:3 mjGAIN_MUSCLE 'int'
| | `-FullComment 0x5d9b30 <col:37, col:82>
| |   `-ParagraphComment 0x5d9b00 <col:37, col:82>
| |     `-TextComment 0x5d9ad0 <col:37, col:82> Text=" muscle FLV curve computed by mju_muscleGain()"
| `-EnumConstantDecl 0x598f38 <line:226:3> col:3 mjGAIN_USER 'int'
|   `-FullComment 0x5d9c00 <col:37, col:59>
|     `-ParagraphComment 0x5d9bd0 <col:37, col:59>
|       `-TextComment 0x5d9ba0 <col:37, col:59> Text=" user-defined gain type"
|-TypedefDecl 0x598fe8 <line:222:1, line:227:3> col:3 mjtGain 'enum mjtGain_':'enum mjtGain_'
| `-ElaboratedType 0x598f90 'enum mjtGain_' sugar
|   `-EnumType 0x598d00 'enum mjtGain_'
|     `-Enum 0x598c58 'mjtGain_'
|-EnumDecl 0x599058 <line:230:9, line:235:1> line:230:14 mjtBias_
| |-EnumConstantDecl 0x599188 <line:231:3, col:25> col:3 mjBIAS_NONE 'int'
| | |-ConstantExpr 0x599168 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x599148 <col:25> 'int' 0
| | `-FullComment 0x5d9cd0 <col:37, col:44>
| |   `-ParagraphComment 0x5d9ca0 <col:37, col:44>
| |     `-TextComment 0x5d9c70 <col:37, col:44> Text=" no bias"
| |-EnumConstantDecl 0x599208 <line:232:3> col:3 mjBIAS_AFFINE 'int'
| | `-FullComment 0x5d9da0 <col:37, col:68>
| |   `-ParagraphComment 0x5d9d70 <col:37, col:68>
| |     `-TextComment 0x5d9d40 <col:37, col:68> Text=" const + kp*length + kv*velocity"
| |-EnumConstantDecl 0x599288 <line:233:3> col:3 mjBIAS_MUSCLE 'int'
| | `-FullComment 0x5d9e70 <col:37, col:86>
| |   `-ParagraphComment 0x5d9e40 <col:37, col:86>
| |     `-TextComment 0x5d9e10 <col:37, col:86> Text=" muscle passive force computed by mju_muscleBias()"
| `-EnumConstantDecl 0x599338 <line:234:3> col:3 mjBIAS_USER 'int'
|   `-FullComment 0x5d9f40 <col:37, col:59>
|     `-ParagraphComment 0x5d9f10 <col:37, col:59>
|       `-TextComment 0x5d9ee0 <col:37, col:59> Text=" user-defined bias type"
|-TypedefDecl 0x5993e8 <line:230:1, line:235:3> col:3 mjtBias 'enum mjtBias_':'enum mjtBias_'
| `-ElaboratedType 0x599390 'enum mjtBias_' sugar
|   `-EnumType 0x599100 'enum mjtBias_'
|     `-Enum 0x599058 'mjtBias_'
|-EnumDecl 0x599458 <line:238:9, line:270:1> line:238:14 mjtObj_
| |-EnumConstantDecl 0x599588 <line:239:3, col:25> col:3 mjOBJ_UNKNOWN 'int'
| | |-ConstantExpr 0x599568 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x599548 <col:25> 'int' 0
| | `-FullComment 0x5da010 <col:37, col:56>
| |   `-ParagraphComment 0x5d9fe0 <col:37, col:56>
| |     `-TextComment 0x5d9fb0 <col:37, col:56> Text=" unknown object type"
| |-EnumConstantDecl 0x599608 <line:240:3> col:3 mjOBJ_BODY 'int'
| | `-FullComment 0x5da0e0 <col:37, col:41>
| |   `-ParagraphComment 0x5da0b0 <col:37, col:41>
| |     `-TextComment 0x5da080 <col:37, col:41> Text=" body"
| |-EnumConstantDecl 0x599688 <line:241:3> col:3 mjOBJ_XBODY 'int'
| | `-FullComment 0x5da1b0 <col:37, col:90>
| |   `-ParagraphComment 0x5da180 <col:37, col:90>
| |     `-TextComment 0x5da150 <col:37, col:90> Text=" body, used to access regular frame instead of i-frame"
| |-EnumConstantDecl 0x599708 <line:242:3> col:3 mjOBJ_JOINT 'int'
| | `-FullComment 0x5da280 <col:37, col:42>
| |   `-ParagraphComment 0x5da250 <col:37, col:42>
| |     `-TextComment 0x5da220 <col:37, col:42> Text=" joint"
| |-EnumConstantDecl 0x599788 <line:243:3> col:3 mjOBJ_DOF 'int'
| | `-FullComment 0x5da350 <col:37, col:40>
| |   `-ParagraphComment 0x5da320 <col:37, col:40>
| |     `-TextComment 0x5da2f0 <col:37, col:40> Text=" dof"
| |-EnumConstantDecl 0x599808 <line:244:3> col:3 mjOBJ_GEOM 'int'
| | `-FullComment 0x5da420 <col:37, col:41>
| |   `-ParagraphComment 0x5da3f0 <col:37, col:41>
| |     `-TextComment 0x5da3c0 <col:37, col:41> Text=" geom"
| |-EnumConstantDecl 0x599e60 <line:245:3> col:3 mjOBJ_SITE 'int'
| | `-FullComment 0x5da4f0 <col:37, col:41>
| |   `-ParagraphComment 0x5da4c0 <col:37, col:41>
| |     `-TextComment 0x5da490 <col:37, col:41> Text=" site"
| |-EnumConstantDecl 0x599ed8 <line:246:3> col:3 mjOBJ_CAMERA 'int'
| | `-FullComment 0x5da5c0 <col:37, col:43>
| |   `-ParagraphComment 0x5da590 <col:37, col:43>
| |     `-TextComment 0x5da560 <col:37, col:43> Text=" camera"
| |-EnumConstantDecl 0x599f58 <line:247:3> col:3 mjOBJ_LIGHT 'int'
| | `-FullComment 0x5da6b0 <col:37, col:42>
| |   `-ParagraphComment 0x5da680 <col:37, col:42>
| |     `-TextComment 0x5da650 <col:37, col:42> Text=" light"
| |-EnumConstantDecl 0x599fd8 <line:248:3> col:3 mjOBJ_FLEX 'int'
| | `-FullComment 0x5da780 <col:37, col:41>
| |   `-ParagraphComment 0x5da750 <col:37, col:41>
| |     `-TextComment 0x5da720 <col:37, col:41> Text=" flex"
| |-EnumConstantDecl 0x59a058 <line:249:3> col:3 mjOBJ_MESH 'int'
| | `-FullComment 0x5da850 <col:37, col:41>
| |   `-ParagraphComment 0x5da820 <col:37, col:41>
| |     `-TextComment 0x5da7f0 <col:37, col:41> Text=" mesh"
| |-EnumConstantDecl 0x59a0d8 <line:250:3> col:3 mjOBJ_SKIN 'int'
| | `-FullComment 0x5da920 <col:37, col:41>
| |   `-ParagraphComment 0x5da8f0 <col:37, col:41>
| |     `-TextComment 0x5da8c0 <col:37, col:41> Text=" skin"
| |-EnumConstantDecl 0x59a158 <line:251:3> col:3 mjOBJ_HFIELD 'int'
| | `-FullComment 0x5da9f0 <col:37, col:48>
| |   `-ParagraphComment 0x5da9c0 <col:37, col:48>
| |     `-TextComment 0x5da990 <col:37, col:48> Text=" heightfield"
| |-EnumConstantDecl 0x59a1d8 <line:252:3> col:3 mjOBJ_TEXTURE 'int'
| | `-FullComment 0x5daac0 <col:37, col:44>
| |   `-ParagraphComment 0x5daa90 <col:37, col:44>
| |     `-TextComment 0x5daa60 <col:37, col:44> Text=" texture"
| |-EnumConstantDecl 0x59a258 <line:253:3> col:3 mjOBJ_MATERIAL 'int'
| | `-FullComment 0x5dab90 <col:37, col:59>
| |   `-ParagraphComment 0x5dab60 <col:37, col:59>
| |     `-TextComment 0x5dab30 <col:37, col:59> Text=" material for rendering"
| |-EnumConstantDecl 0x59a2d8 <line:254:3> col:3 mjOBJ_PAIR 'int'
| | `-FullComment 0x5dac60 <col:37, col:57>
| |   `-ParagraphComment 0x5dac30 <col:37, col:57>
| |     `-TextComment 0x5dac00 <col:37, col:57> Text=" geom pair to include"
| |-EnumConstantDecl 0x59a358 <line:255:3> col:3 mjOBJ_EXCLUDE 'int'
| | `-FullComment 0x5dad30 <col:37, col:57>
| |   `-ParagraphComment 0x5dad00 <col:37, col:57>
| |     `-TextComment 0x5dacd0 <col:37, col:57> Text=" body pair to exclude"
| |-EnumConstantDecl 0x59a3d8 <line:256:3> col:3 mjOBJ_EQUALITY 'int'
| | `-FullComment 0x5dae00 <col:37, col:56>
| |   `-ParagraphComment 0x5dadd0 <col:37, col:56>
| |     `-TextComment 0x5dada0 <col:37, col:56> Text=" equality constraint"
| |-EnumConstantDecl 0x59a458 <line:257:3> col:3 mjOBJ_TENDON 'int'
| | `-FullComment 0x5daed0 <col:37, col:43>
| |   `-ParagraphComment 0x5daea0 <col:37, col:43>
| |     `-TextComment 0x5dae70 <col:37, col:43> Text=" tendon"
| |-EnumConstantDecl 0x59a4d8 <line:258:3> col:3 mjOBJ_ACTUATOR 'int'
| | `-FullComment 0x5dafa0 <col:37, col:45>
| |   `-ParagraphComment 0x5daf70 <col:37, col:45>
| |     `-TextComment 0x5daf40 <col:37, col:45> Text=" actuator"
| |-EnumConstantDecl 0x59a558 <line:259:3> col:3 mjOBJ_SENSOR 'int'
| | `-FullComment 0x5db070 <col:37, col:43>
| |   `-ParagraphComment 0x5db040 <col:37, col:43>
| |     `-TextComment 0x5db010 <col:37, col:43> Text=" sensor"
| |-EnumConstantDecl 0x59a5d8 <line:260:3> col:3 mjOBJ_NUMERIC 'int'
| | `-FullComment 0x5db140 <col:37, col:44>
| |   `-ParagraphComment 0x5db110 <col:37, col:44>
| |     `-TextComment 0x5db0e0 <col:37, col:44> Text=" numeric"
| |-EnumConstantDecl 0x59a658 <line:261:3> col:3 mjOBJ_TEXT 'int'
| | `-FullComment 0x5db210 <col:37, col:41>
| |   `-ParagraphComment 0x5db1e0 <col:37, col:41>
| |     `-TextComment 0x5db1b0 <col:37, col:41> Text=" text"
| |-EnumConstantDecl 0x59a6d8 <line:262:3> col:3 mjOBJ_TUPLE 'int'
| | `-FullComment 0x5db2e0 <col:37, col:42>
| |   `-ParagraphComment 0x5db2b0 <col:37, col:42>
| |     `-TextComment 0x5db280 <col:37, col:42> Text=" tuple"
| |-EnumConstantDecl 0x59a758 <line:263:3> col:3 mjOBJ_KEY 'int'
| | `-FullComment 0x5db3b0 <col:37, col:45>
| |   `-ParagraphComment 0x5db380 <col:37, col:45>
| |     `-TextComment 0x5db350 <col:37, col:45> Text=" keyframe"
| |-EnumConstantDecl 0x59a7d8 <line:264:3> col:3 mjOBJ_PLUGIN 'int'
| | `-FullComment 0x5db480 <col:37, col:52>
| |   `-ParagraphComment 0x5db450 <col:37, col:52>
| |     `-TextComment 0x5db420 <col:37, col:52> Text=" plugin instance"
| |-EnumConstantDecl 0x59a858 <line:266:3> col:3 mjNOBJECT 'int'
| | `-FullComment 0x5db550 <col:37, col:59>
| |   `-ParagraphComment 0x5db520 <col:37, col:59>
| |     `-TextComment 0x5db4f0 <col:37, col:59> Text=" number of object types"
| `-EnumConstantDecl 0x59a978 <line:269:3, col:25> col:3 mjOBJ_FRAME 'int'
|   |-ConstantExpr 0x59a958 <col:25> 'int'
|   | |-value: Int 100
|   | `-IntegerLiteral 0x59a908 <col:25> 'int' 100
|   `-FullComment 0x5db620 <col:37, col:42>
|     `-ParagraphComment 0x5db5f0 <col:37, col:42>
|       `-TextComment 0x5db5c0 <col:37, col:42> Text=" frame"
|-TypedefDecl 0x59aa28 <line:238:1, line:270:3> col:3 mjtObj 'enum mjtObj_':'enum mjtObj_'
| `-ElaboratedType 0x59a9d0 'enum mjtObj_' sugar
|   `-EnumType 0x599500 'enum mjtObj_'
|     `-Enum 0x599458 'mjtObj_'
|-EnumDecl 0x59aa98 <line:273:9, line:282:1> line:273:14 mjtConstraint_
| |-EnumConstantDecl 0x59abc8 <line:274:3, col:25> col:3 mjCNSTR_EQUALITY 'int'
| | |-ConstantExpr 0x59aba8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x59ab88 <col:25> 'int' 0
| | `-FullComment 0x5db700 <col:37, col:56>
| |   `-ParagraphComment 0x5db6d0 <col:37, col:56>
| |     `-TextComment 0x5db6a0 <col:37, col:56> Text=" equality constraint"
| |-EnumConstantDecl 0x59ac48 <line:275:3> col:3 mjCNSTR_FRICTION_DOF 'int'
| | `-FullComment 0x5db7d0 <col:37, col:49>
| |   `-ParagraphComment 0x5db7a0 <col:37, col:49>
| |     `-TextComment 0x5db770 <col:37, col:49> Text=" dof friction"
| |-EnumConstantDecl 0x59acc8 <line:276:3> col:3 mjCNSTR_FRICTION_TENDON 'int'
| | `-FullComment 0x5db8a0 <col:37, col:52>
| |   `-ParagraphComment 0x5db870 <col:37, col:52>
| |     `-TextComment 0x5db840 <col:37, col:52> Text=" tendon friction"
| |-EnumConstantDecl 0x59ad48 <line:277:3> col:3 mjCNSTR_LIMIT_JOINT 'int'
| | `-FullComment 0x5db970 <col:37, col:48>
| |   `-ParagraphComment 0x5db940 <col:37, col:48>
| |     `-TextComment 0x5db910 <col:37, col:48> Text=" joint limit"
| |-EnumConstantDecl 0x59adc8 <line:278:3> col:3 mjCNSTR_LIMIT_TENDON 'int'
| | `-FullComment 0x5dba40 <col:37, col:49>
| |   `-ParagraphComment 0x5dba10 <col:37, col:49>
| |     `-TextComment 0x5db9e0 <col:37, col:49> Text=" tendon limit"
| |-EnumConstantDecl 0x59cdc0 <line:279:3> col:3 mjCNSTR_CONTACT_FRICTIONLESS 'int'
| | `-FullComment 0x5dbb10 <col:37, col:57>
| |   `-ParagraphComment 0x5dbae0 <col:37, col:57>
| |     `-TextComment 0x5dbab0 <col:37, col:57> Text=" frictionless contact"
| |-EnumConstantDecl 0x59ce38 <line:280:3> col:3 mjCNSTR_CONTACT_PYRAMIDAL 'int'
| | `-FullComment 0x5dbbe0 <col:37, col:80>
| |   `-ParagraphComment 0x5dbbb0 <col:37, col:80>
| |     `-TextComment 0x5dbb80 <col:37, col:80> Text=" frictional contact, pyramidal friction cone"
| `-EnumConstantDecl 0x59cee8 <line:281:3> col:3 mjCNSTR_CONTACT_ELLIPTIC 'int'
|   `-FullComment 0x5dbcb0 <col:37, col:79>
|     `-ParagraphComment 0x5dbc80 <col:37, col:79>
|       `-TextComment 0x5dbc50 <col:37, col:79> Text=" frictional contact, elliptic friction cone"
|-TypedefDecl 0x59cf98 <line:273:1, line:282:3> col:3 mjtConstraint 'enum mjtConstraint_':'enum mjtConstraint_'
| `-ElaboratedType 0x59cf40 'enum mjtConstraint_' sugar
|   `-EnumType 0x59ab40 'enum mjtConstraint_'
|     `-Enum 0x59aa98 'mjtConstraint_'
|-EnumDecl 0x59d008 <line:285:9, line:291:1> line:285:14 mjtConstraintState_
| |-EnumConstantDecl 0x59d138 <line:286:3, col:28> col:3 mjCNSTRSTATE_SATISFIED 'int'
| | |-ConstantExpr 0x59d118 <col:28> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x59d0f8 <col:28> 'int' 0
| | `-FullComment 0x5dbd80 <col:39, col:87>
| |   `-ParagraphComment 0x5dbd50 <col:39, col:87>
| |     `-TextComment 0x5dbd20 <col:39, col:87> Text=" constraint satisfied, zero cost (limit, contact)"
| |-EnumConstantDecl 0x59d1b8 <line:287:3> col:3 mjCNSTRSTATE_QUADRATIC 'int'
| | `-FullComment 0x5dbe50 <col:39, col:90>
| |   `-ParagraphComment 0x5dbe20 <col:39, col:90>
| |     `-TextComment 0x5dbdf0 <col:39, col:90> Text=" quadratic cost (equality, friction, limit, contact)"
| |-EnumConstantDecl 0x59d238 <line:288:3> col:3 mjCNSTRSTATE_LINEARNEG 'int'
| | `-FullComment 0x5dbf20 <col:39, col:76>
| |   `-ParagraphComment 0x5dbef0 <col:39, col:76>
| |     `-TextComment 0x5dbec0 <col:39, col:76> Text=" linear cost, negative side (friction)"
| |-EnumConstantDecl 0x59d2b8 <line:289:3> col:3 mjCNSTRSTATE_LINEARPOS 'int'
| | `-FullComment 0x5dbff0 <col:39, col:76>
| |   `-ParagraphComment 0x5dbfc0 <col:39, col:76>
| |     `-TextComment 0x5dbf90 <col:39, col:76> Text=" linear cost, positive side (friction)"
| `-EnumConstantDecl 0x59d368 <line:290:3> col:3 mjCNSTRSTATE_CONE 'int'
|   `-FullComment 0x5dc0c0 <col:39, col:87>
|     `-ParagraphComment 0x5dc090 <col:39, col:87>
|       `-TextComment 0x5dc060 <col:39, col:87> Text=" squared distance to cone cost (elliptic contact)"
|-TypedefDecl 0x59d418 <line:285:1, line:291:3> col:3 mjtConstraintState 'enum mjtConstraintState_':'enum mjtConstraintState_'
| `-ElaboratedType 0x59d3c0 'enum mjtConstraintState_' sugar
|   `-EnumType 0x59d0b0 'enum mjtConstraintState_'
|     `-Enum 0x59d008 'mjtConstraintState_'
|-EnumDecl 0x59d488 <line:294:9, line:357:1> line:294:14 mjtSensor_
| |-EnumConstantDecl 0x59d5e8 <line:296:3, col:25> col:3 mjSENS_TOUCH 'int'
| | |-ConstantExpr 0x59d5c8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x59d5a8 <col:25> 'int' 0
| | `-FullComment 0x5dc190 <col:37, col:89>
| |   `-ParagraphComment 0x5dc160 <col:37, col:89>
| |     `-TextComment 0x5dc130 <col:37, col:89> Text=" scalar contact normal forces summed over sensor zone"
| |-EnumConstantDecl 0x59d668 <line:297:3> col:3 mjSENS_ACCELEROMETER 'int'
| | `-FullComment 0x5dc260 <col:37, col:75>
| |   `-ParagraphComment 0x5dc230 <col:37, col:75>
| |     `-TextComment 0x5dc200 <col:37, col:75> Text=" 3D linear acceleration, in local frame"
| |-EnumConstantDecl 0x59d6e8 <line:298:3> col:3 mjSENS_VELOCIMETER 'int'
| | `-FullComment 0x5dc330 <col:37, col:71>
| |   `-ParagraphComment 0x5dc300 <col:37, col:71>
| |     `-TextComment 0x5dc2d0 <col:37, col:71> Text=" 3D linear velocity, in local frame"
| |-EnumConstantDecl 0x59d768 <line:299:3> col:3 mjSENS_GYRO 'int'
| | `-FullComment 0x5dc400 <col:37, col:72>
| |   `-ParagraphComment 0x5dc3d0 <col:37, col:72>
| |     `-TextComment 0x5dc3a0 <col:37, col:72> Text=" 3D angular velocity, in local frame"
| |-EnumConstantDecl 0x59d7e8 <line:300:3> col:3 mjSENS_FORCE 'int'
| | `-FullComment 0x5dc4d0 <col:37, col:85>
| |   `-ParagraphComment 0x5dc4a0 <col:37, col:85>
| |     `-TextComment 0x5dc470 <col:37, col:85> Text=" 3D force between site's body and its parent body"
| |-EnumConstantDecl 0x59d868 <line:301:3> col:3 mjSENS_TORQUE 'int'
| | `-FullComment 0x5dc5a0 <col:37, col:86>
| |   `-ParagraphComment 0x5dc570 <col:37, col:86>
| |     `-TextComment 0x5dc540 <col:37, col:86> Text=" 3D torque between site's body and its parent body"
| |-EnumConstantDecl 0x59d8e8 <line:302:3> col:3 mjSENS_MAGNETOMETER 'int'
| | `-FullComment 0x5dc680 <col:37, col:52>
| |   `-ParagraphComment 0x5dc640 <col:37, col:52>
| |     `-TextComment 0x5dc610 <col:37, col:52> Text=" 3D magnetometer"
| |-EnumConstantDecl 0x59d968 <line:303:3> col:3 mjSENS_RANGEFINDER 'int'
| | `-FullComment 0x5dc750 <col:37, col:89>
| |   `-ParagraphComment 0x5dc720 <col:37, col:89>
| |     `-TextComment 0x5dc6f0 <col:37, col:89> Text=" scalar distance to nearest geom or site along z-axis"
| |-EnumConstantDecl 0x59d9e8 <line:304:3> col:3 mjSENS_CAMPROJECTION 'int'
| | `-FullComment 0x5dc820 <col:37, col:84>
| |   `-ParagraphComment 0x5dc7f0 <col:37, col:84>
| |     `-TextComment 0x5dc7c0 <col:37, col:84> Text=" pixel coordinates of a site in the camera image"
| |-EnumConstantDecl 0x59da98 <line:307:3> col:3 mjSENS_JOINTPOS 'int'
| | `-FullComment 0x5dc8f0 <col:37, col:81>
| |   `-ParagraphComment 0x5dc8c0 <col:37, col:81>
| |     `-TextComment 0x5dc890 <col:37, col:81> Text=" scalar joint position (hinge and slide only)"
| |-EnumConstantDecl 0x59db18 <line:308:3> col:3 mjSENS_JOINTVEL 'int'
| | `-FullComment 0x5dc9c0 <col:37, col:81>
| |   `-ParagraphComment 0x5dc990 <col:37, col:81>
| |     `-TextComment 0x5dc960 <col:37, col:81> Text=" scalar joint velocity (hinge and slide only)"
| |-EnumConstantDecl 0x59db98 <line:309:3> col:3 mjSENS_TENDONPOS 'int'
| | `-FullComment 0x5dca90 <col:37, col:59>
| |   `-ParagraphComment 0x5dca60 <col:37, col:59>
| |     `-TextComment 0x5dca30 <col:37, col:59> Text=" scalar tendon position"
| |-EnumConstantDecl 0x59dc18 <line:310:3> col:3 mjSENS_TENDONVEL 'int'
| | `-FullComment 0x5dcb60 <col:37, col:59>
| |   `-ParagraphComment 0x5dcb30 <col:37, col:59>
| |     `-TextComment 0x5dcb00 <col:37, col:59> Text=" scalar tendon velocity"
| |-EnumConstantDecl 0x59dc98 <line:311:3> col:3 mjSENS_ACTUATORPOS 'int'
| | `-FullComment 0x5dcc30 <col:37, col:61>
| |   `-ParagraphComment 0x5dcc00 <col:37, col:61>
| |     `-TextComment 0x5dcbd0 <col:37, col:61> Text=" scalar actuator position"
| |-EnumConstantDecl 0x59dd18 <line:312:3> col:3 mjSENS_ACTUATORVEL 'int'
| | `-FullComment 0x5dcd00 <col:37, col:61>
| |   `-ParagraphComment 0x5dccd0 <col:37, col:61>
| |     `-TextComment 0x5dcca0 <col:37, col:61> Text=" scalar actuator velocity"
| |-EnumConstantDecl 0x59e490 <line:313:3> col:3 mjSENS_ACTUATORFRC 'int'
| | `-FullComment 0x5dcdd0 <col:37, col:58>
| |   `-ParagraphComment 0x5dcda0 <col:37, col:58>
| |     `-TextComment 0x5dcd70 <col:37, col:58> Text=" scalar actuator force"
| |-EnumConstantDecl 0x59e508 <line:314:3> col:3 mjSENS_JOINTACTFRC 'int'
| | `-FullComment 0x5dcea0 <col:37, col:81>
| |   `-ParagraphComment 0x5dce70 <col:37, col:81>
| |     `-TextComment 0x5dce40 <col:37, col:81> Text=" scalar actuator force, measured at the joint"
| |-EnumConstantDecl 0x59e5b8 <line:317:3> col:3 mjSENS_BALLQUAT 'int'
| | `-FullComment 0x5dcf70 <col:37, col:61>
| |   `-ParagraphComment 0x5dcf40 <col:37, col:61>
| |     `-TextComment 0x5dcf10 <col:37, col:61> Text=" 4D ball joint quaternion"
| |-EnumConstantDecl 0x59e638 <line:318:3> col:3 mjSENS_BALLANGVEL 'int'
| | `-FullComment 0x5dd040 <col:37, col:67>
| |   `-ParagraphComment 0x5dd010 <col:37, col:67>
| |     `-TextComment 0x5dcfe0 <col:37, col:67> Text=" 3D ball joint angular velocity"
| |-EnumConstantDecl 0x59e6e8 <line:321:3> col:3 mjSENS_JOINTLIMITPOS 'int'
| | `-FullComment 0x5dd110 <col:37, col:64>
| |   `-ParagraphComment 0x5dd0e0 <col:37, col:64>
| |     `-TextComment 0x5dd0b0 <col:37, col:64> Text=" joint limit distance-margin"
| |-EnumConstantDecl 0x59e768 <line:322:3> col:3 mjSENS_JOINTLIMITVEL 'int'
| | `-FullComment 0x5dd1e0 <col:37, col:57>
| |   `-ParagraphComment 0x5dd1b0 <col:37, col:57>
| |     `-TextComment 0x5dd180 <col:37, col:57> Text=" joint limit velocity"
| |-EnumConstantDecl 0x59e7e8 <line:323:3> col:3 mjSENS_JOINTLIMITFRC 'int'
| | `-FullComment 0x5dd2b0 <col:37, col:54>
| |   `-ParagraphComment 0x5dd280 <col:37, col:54>
| |     `-TextComment 0x5dd250 <col:37, col:54> Text=" joint limit force"
| |-EnumConstantDecl 0x59e868 <line:324:3> col:3 mjSENS_TENDONLIMITPOS 'int'
| | `-FullComment 0x5dd380 <col:37, col:65>
| |   `-ParagraphComment 0x5dd350 <col:37, col:65>
| |     `-TextComment 0x5dd320 <col:37, col:65> Text=" tendon limit distance-margin"
| |-EnumConstantDecl 0x59e8e8 <line:325:3> col:3 mjSENS_TENDONLIMITVEL 'int'
| | `-FullComment 0x5dd450 <col:37, col:58>
| |   `-ParagraphComment 0x5dd420 <col:37, col:58>
| |     `-TextComment 0x5dd3f0 <col:37, col:58> Text=" tendon limit velocity"
| |-EnumConstantDecl 0x59e968 <line:326:3> col:3 mjSENS_TENDONLIMITFRC 'int'
| | `-FullComment 0x5dd520 <col:37, col:55>
| |   `-ParagraphComment 0x5dd4f0 <col:37, col:55>
| |     `-TextComment 0x5dd4c0 <col:37, col:55> Text=" tendon limit force"
| |-EnumConstantDecl 0x59ea18 <line:329:3> col:3 mjSENS_FRAMEPOS 'int'
| | `-FullComment 0x5dd5f0 <col:37, col:48>
| |   `-ParagraphComment 0x5dd5c0 <col:37, col:48>
| |     `-TextComment 0x5dd590 <col:37, col:48> Text=" 3D position"
| |-EnumConstantDecl 0x59ea98 <line:330:3> col:3 mjSENS_FRAMEQUAT 'int'
| | `-FullComment 0x5dd6e0 <col:37, col:67>
| |   `-ParagraphComment 0x5dd6b0 <col:37, col:67>
| |     `-TextComment 0x5dd680 <col:37, col:67> Text=" 4D unit quaternion orientation"
| |-EnumConstantDecl 0x59eb18 <line:331:3> col:3 mjSENS_FRAMEXAXIS 'int'
| | `-FullComment 0x5dd7b0 <col:37, col:77>
| |   `-ParagraphComment 0x5dd780 <col:37, col:77>
| |     `-TextComment 0x5dd750 <col:37, col:77> Text=" 3D unit vector: x-axis of object's frame"
| |-EnumConstantDecl 0x59eb98 <line:332:3> col:3 mjSENS_FRAMEYAXIS 'int'
| | `-FullComment 0x5dd880 <col:37, col:77>
| |   `-ParagraphComment 0x5dd850 <col:37, col:77>
| |     `-TextComment 0x5dd820 <col:37, col:77> Text=" 3D unit vector: y-axis of object's frame"
| |-EnumConstantDecl 0x59ec18 <line:333:3> col:3 mjSENS_FRAMEZAXIS 'int'
| | `-FullComment 0x5dd950 <col:37, col:77>
| |   `-ParagraphComment 0x5dd920 <col:37, col:77>
| |     `-TextComment 0x5dd8f0 <col:37, col:77> Text=" 3D unit vector: z-axis of object's frame"
| |-EnumConstantDecl 0x59ec98 <line:334:3> col:3 mjSENS_FRAMELINVEL 'int'
| | `-FullComment 0x5dda20 <col:37, col:55>
| |   `-ParagraphComment 0x5dd9f0 <col:37, col:55>
| |     `-TextComment 0x5dd9c0 <col:37, col:55> Text=" 3D linear velocity"
| |-EnumConstantDecl 0x59ed18 <line:335:3> col:3 mjSENS_FRAMEANGVEL 'int'
| | `-FullComment 0x5ddaf0 <col:37, col:56>
| |   `-ParagraphComment 0x5ddac0 <col:37, col:56>
| |     `-TextComment 0x5dda90 <col:37, col:56> Text=" 3D angular velocity"
| |-EnumConstantDecl 0x59ed98 <line:336:3> col:3 mjSENS_FRAMELINACC 'int'
| | `-FullComment 0x5ddbc0 <col:37, col:59>
| |   `-ParagraphComment 0x5ddb90 <col:37, col:59>
| |     `-TextComment 0x5ddb60 <col:37, col:59> Text=" 3D linear acceleration"
| |-EnumConstantDecl 0x59ee18 <line:337:3> col:3 mjSENS_FRAMEANGACC 'int'
| | `-FullComment 0x5ddc90 <col:37, col:60>
| |   `-ParagraphComment 0x5ddc60 <col:37, col:60>
| |     `-TextComment 0x5ddc30 <col:37, col:60> Text=" 3D angular acceleration"
| |-EnumConstantDecl 0x59eec8 <line:340:3> col:3 mjSENS_SUBTREECOM 'int'
| | `-FullComment 0x5ddd60 <col:37, col:65>
| |   `-ParagraphComment 0x5ddd30 <col:37, col:65>
| |     `-TextComment 0x5ddd00 <col:37, col:65> Text=" 3D center of mass of subtree"
| |-EnumConstantDecl 0x59ef48 <line:341:3> col:3 mjSENS_SUBTREELINVEL 'int'
| | `-FullComment 0x5dde30 <col:37, col:66>
| |   `-ParagraphComment 0x5dde00 <col:37, col:66>
| |     `-TextComment 0x5dddd0 <col:37, col:66> Text=" 3D linear velocity of subtree"
| |-EnumConstantDecl 0x59efc8 <line:342:3> col:3 mjSENS_SUBTREEANGMOM 'int'
| | `-FullComment 0x5ddf00 <col:37, col:67>
| |   `-ParagraphComment 0x5dded0 <col:37, col:67>
| |     `-TextComment 0x5ddea0 <col:37, col:67> Text=" 3D angular momentum of subtree"
| |-EnumConstantDecl 0x59f078 <line:345:3> col:3 mjSENS_GEOMDIST 'int'
| | `-FullComment 0x5ddfd0 <col:37, col:70>
| |   `-ParagraphComment 0x5ddfa0 <col:37, col:70>
| |     `-TextComment 0x5ddf70 <col:37, col:70> Text=" signed distance between two geoms"
| |-EnumConstantDecl 0x59f0f8 <line:346:3> col:3 mjSENS_GEOMNORMAL 'int'
| | `-FullComment 0x5de0a0 <col:37, col:71>
| |   `-ParagraphComment 0x5de070 <col:37, col:71>
| |     `-TextComment 0x5de040 <col:37, col:71> Text=" normal direction between two geoms"
| |-EnumConstantDecl 0x59f178 <line:347:3> col:3 mjSENS_GEOMFROMTO 'int'
| | `-FullComment 0x5de170 <col:37, col:62>
| |   `-ParagraphComment 0x5de140 <col:37, col:62>
| |     `-TextComment 0x5de110 <col:37, col:62> Text=" segment between two geoms"
| |-EnumConstantDecl 0x59f228 <line:350:3> col:3 mjSENS_CLOCK 'int'
| | `-FullComment 0x5de240 <col:37, col:52>
| |   `-ParagraphComment 0x5de210 <col:37, col:52>
| |     `-TextComment 0x5de1e0 <col:37, col:52> Text=" simulation time"
| |-EnumConstantDecl 0x59f2d8 <line:353:3> col:3 mjSENS_PLUGIN 'int'
| | `-FullComment 0x5de310 <col:37, col:54>
| |   `-ParagraphComment 0x5de2e0 <col:37, col:54>
| |     `-TextComment 0x5de2b0 <col:37, col:54> Text=" plugin-controlled"
| `-EnumConstantDecl 0x59f3b8 <line:356:3> col:3 mjSENS_USER 'int'
|   `-FullComment 0x5de3e0 <col:37, col:81>
|     `-ParagraphComment 0x5de3b0 <col:37, col:81>
|       `-TextComment 0x5de380 <col:37, col:81> Text=" sensor data provided by mjcb_sensor callback"
|-TypedefDecl 0x59f9a0 <line:294:1, line:357:3> col:3 mjtSensor 'enum mjtSensor_':'enum mjtSensor_'
| `-ElaboratedType 0x59f410 'enum mjtSensor_' sugar
|   `-EnumType 0x59d530 'enum mjtSensor_'
|     `-Enum 0x59d488 'mjtSensor_'
|-EnumDecl 0x59fa10 <line:360:9, line:365:1> line:360:14 mjtStage_
| |-EnumConstantDecl 0x59fb38 <line:361:3, col:25> col:3 mjSTAGE_NONE 'int'
| | |-ConstantExpr 0x59fb18 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x59faf8 <col:25> 'int' 0
| | `-FullComment 0x5de4b0 <col:37, col:52>
| |   `-ParagraphComment 0x5de480 <col:37, col:52>
| |     `-TextComment 0x5de450 <col:37, col:52> Text=" no computations"
| |-EnumConstantDecl 0x59fbb8 <line:362:3> col:3 mjSTAGE_POS 'int'
| | `-FullComment 0x5de580 <col:37, col:68>
| |   `-ParagraphComment 0x5de550 <col:37, col:68>
| |     `-TextComment 0x5de520 <col:37, col:68> Text=" position-dependent computations"
| |-EnumConstantDecl 0x59fc38 <line:363:3> col:3 mjSTAGE_VEL 'int'
| | `-FullComment 0x5de650 <col:37, col:68>
| |   `-ParagraphComment 0x5de620 <col:37, col:68>
| |     `-TextComment 0x5de5f0 <col:37, col:68> Text=" velocity-dependent computations"
| `-EnumConstantDecl 0x59fce8 <line:364:3> col:3 mjSTAGE_ACC 'int'
|   `-FullComment 0x5d86d0 <col:37, col:78>
|     `-ParagraphComment 0x5d86a0 <col:37, col:78>
|       `-TextComment 0x5d8670 <col:37, col:78> Text=" acceleration/force-dependent computations"
|-TypedefDecl 0x59fd98 <line:360:1, line:365:3> col:3 mjtStage 'enum mjtStage_':'enum mjtStage_'
| `-ElaboratedType 0x59fd40 'enum mjtStage_' sugar
|   `-EnumType 0x59fab0 'enum mjtStage_'
|     `-Enum 0x59fa10 'mjtStage_'
|-EnumDecl 0x59fe08 <line:368:9, line:373:1> line:368:14 mjtDataType_
| |-EnumConstantDecl 0x59ff38 <line:369:3, col:25> col:3 mjDATATYPE_REAL 'int'
| | |-ConstantExpr 0x59ff18 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x59fef8 <col:25> 'int' 0
| | `-FullComment 0x5d87a0 <col:37, col:64>
| |   `-ParagraphComment 0x5d8770 <col:37, col:64>
| |     `-TextComment 0x5d8740 <col:37, col:64> Text=" real values, no constraints"
| |-EnumConstantDecl 0x59ffb8 <line:370:3> col:3 mjDATATYPE_POSITIVE 'int'
| | `-FullComment 0x5d8870 <col:37, col:77>
| |   `-ParagraphComment 0x5d8840 <col:37, col:77>
| |     `-TextComment 0x5d8810 <col:37, col:77> Text=" positive values; 0 or negative: inactive"
| |-EnumConstantDecl 0x5a0038 <line:371:3> col:3 mjDATATYPE_AXIS 'int'
| | `-FullComment 0x5d8940 <col:37, col:51>
| |   `-ParagraphComment 0x5d8910 <col:37, col:51>
| |     `-TextComment 0x5d88e0 <col:37, col:51> Text=" 3D unit vector"
| `-EnumConstantDecl 0x5a00e8 <line:372:3> col:3 mjDATATYPE_QUATERNION 'int'
|   `-FullComment 0x5d8a10 <col:37, col:52>
|     `-ParagraphComment 0x5d89e0 <col:37, col:52>
|       `-TextComment 0x5d89b0 <col:37, col:52> Text=" unit quaternion"
|-TypedefDecl 0x5a0198 <line:368:1, line:373:3> col:3 mjtDataType 'enum mjtDataType_':'enum mjtDataType_'
| `-ElaboratedType 0x5a0140 'enum mjtDataType_' sugar
|   `-EnumType 0x59feb0 'enum mjtDataType_'
|     `-Enum 0x59fe08 'mjtDataType_'
|-EnumDecl 0x5a0208 <line:376:9, line:382:1> line:376:14 mjtSameFrame_
| |-EnumConstantDecl 0x5a0338 <line:377:3, col:25> col:3 mjSAMEFRAME_NONE 'int'
| | |-ConstantExpr 0x5a0318 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x5a02f8 <col:25> 'int' 0
| | `-FullComment 0x5d8ae0 <col:37, col:49>
| |   `-ParagraphComment 0x5d8ab0 <col:37, col:49>
| |     `-TextComment 0x5d8a80 <col:37, col:49> Text=" no alignment"
| |-EnumConstantDecl 0x5a03b8 <line:378:3> col:3 mjSAMEFRAME_BODY 'int'
| | `-FullComment 0x5d8bb0 <col:37, col:64>
| |   `-ParagraphComment 0x5d8b80 <col:37, col:64>
| |     `-TextComment 0x5d8b50 <col:37, col:64> Text=" frame is same as body frame"
| |-EnumConstantDecl 0x5a0438 <line:379:3> col:3 mjSAMEFRAME_INERTIA 'int'
| | `-FullComment 0x5d8c80 <col:37, col:68>
| |   `-ParagraphComment 0x5d8c50 <col:37, col:68>
| |     `-TextComment 0x5d8c20 <col:37, col:68> Text=" frame is same as inertial frame"
| |-EnumConstantDecl 0x5a04b8 <line:380:3> col:3 mjSAMEFRAME_BODYROT 'int'
| | `-FullComment 0x5d8d50 <col:37, col:82>
| |   `-ParagraphComment 0x5d8d20 <col:37, col:82>
| |     `-TextComment 0x5d8cf0 <col:37, col:82> Text=" frame orientation is same as body orientation"
| `-EnumConstantDecl 0x5a0568 <line:381:3> col:3 mjSAMEFRAME_INERTIAROT 'int'
|   `-FullComment 0x5d8e20 <col:37, col:85>
|     `-ParagraphComment 0x5d8df0 <col:37, col:85>
|       `-TextComment 0x5d8dc0 <col:37, col:85> Text=" frame orientation is same as inertia orientation"
|-TypedefDecl 0x5a0618 <line:376:1, line:382:3> col:3 mjtSameFrame 'enum mjtSameFrame_':'enum mjtSameFrame_'
| `-ElaboratedType 0x5a05c0 'enum mjtSameFrame_' sugar
|   `-EnumType 0x5a02b0 'enum mjtSameFrame_'
|     `-Enum 0x5a0208 'mjtSameFrame_'
|-EnumDecl 0x5a0688 <line:385:9, line:390:1> line:385:14 mjtLRMode_
| |-EnumConstantDecl 0x5a07b8 <line:386:3, col:21> col:3 mjLRMODE_NONE 'int'
| | |-ConstantExpr 0x5a0798 <col:21> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x5a0778 <col:21> 'int' 0
| | `-FullComment 0x5d8ef0 <col:37, col:65>
| |   `-ParagraphComment 0x5d8ec0 <col:37, col:65>
| |     `-TextComment 0x5d8e90 <col:37, col:65> Text=" do not process any actuators"
| |-EnumConstantDecl 0x5a0838 <line:387:3> col:3 mjLRMODE_MUSCLE 'int'
| | `-FullComment 0x5d8fc0 <col:37, col:61>
| |   `-ParagraphComment 0x5d8f90 <col:37, col:61>
| |     `-TextComment 0x5d8f60 <col:37, col:61> Text=" process muscle actuators"
| |-EnumConstantDecl 0x5a08b8 <line:388:3> col:3 mjLRMODE_MUSCLEUSER 'int'
| | `-FullComment 0x5d9090 <col:37, col:70>
| |   `-ParagraphComment 0x5d9060 <col:37, col:70>
| |     `-TextComment 0x5d9030 <col:37, col:70> Text=" process muscle and user actuators"
| `-EnumConstantDecl 0x5a1f00 <line:389:3> col:3 mjLRMODE_ALL 'int'
|   `-FullComment 0x5d9160 <col:37, col:58>
|     `-ParagraphComment 0x5d9130 <col:37, col:58>
|       `-TextComment 0x5d9100 <col:37, col:58> Text=" process all actuators"
|-TypedefDecl 0x5a1fa8 <line:385:1, line:390:3> col:3 mjtLRMode 'enum mjtLRMode_':'enum mjtLRMode_'
| `-ElaboratedType 0x5a1f50 'enum mjtLRMode_' sugar
|   `-EnumType 0x5a0730 'enum mjtLRMode_'
|     `-Enum 0x5a0688 'mjtLRMode_'
|-EnumDecl 0x5a2018 <line:393:9, line:399:1> line:393:14 mjtFlexSelf_
| |-EnumConstantDecl 0x5a2148 <line:394:3, col:23> col:3 mjFLEXSELF_NONE 'int'
| | |-ConstantExpr 0x5a2128 <col:23> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x5a2108 <col:23> 'int' 0
| | `-FullComment 0x5d9230 <col:37, col:55>
| |   `-ParagraphComment 0x5d9200 <col:37, col:55>
| |     `-TextComment 0x5d91d0 <col:37, col:55> Text=" no self-collisions"
| |-EnumConstantDecl 0x5a21c8 <line:395:3> col:3 mjFLEXSELF_NARROW 'int'
| | `-FullComment 0x5d9300 <col:37, col:78>
| |   `-ParagraphComment 0x5d92d0 <col:37, col:78>
| |     `-TextComment 0x5d92a0 <col:37, col:78> Text=" skip midphase, go directly to narrowphase"
| |-EnumConstantDecl 0x5a2248 <line:396:3> col:3 mjFLEXSELF_BVH 'int'
| | `-FullComment 0x5d93d0 <col:37, col:78>
| |   `-ParagraphComment 0x5d93a0 <col:37, col:78>
| |     `-TextComment 0x5d9370 <col:37, col:78> Text=" use BVH in midphase (if midphase enabled)"
| |-EnumConstantDecl 0x5a22c8 <line:397:3> col:3 mjFLEXSELF_SAP 'int'
| | `-FullComment 0x5d94a0 <col:37, col:56>
| |   `-ParagraphComment 0x5d9470 <col:37, col:56>
| |     `-TextComment 0x5d9440 <col:37, col:56> Text=" use SAP in midphase"
| `-EnumConstantDecl 0x5a2378 <line:398:3> col:3 mjFLEXSELF_AUTO 'int'
|   `-FullComment 0x5d9570 <col:37, col:77>
|     `-ParagraphComment 0x5d9540 <col:37, col:77>
|       `-TextComment 0x5d9510 <col:37, col:77> Text=" choose between BVH and SAP automatically"
|-TypedefDecl 0x5a2428 <line:393:1, line:399:3> col:3 mjtFlexSelf 'enum mjtFlexSelf_':'enum mjtFlexSelf_'
| `-ElaboratedType 0x5a23d0 'enum mjtFlexSelf_' sugar
|   `-EnumType 0x5a20c0 'enum mjtFlexSelf_'
|     `-Enum 0x5a2018 'mjtFlexSelf_'
|-RecordDecl 0x5a24c0 <line:404:1, line:418:1> line:404:8 invalid struct mjLROpt_ definition
| |-FullComment 0x5e06b0 <line:402:3, col:100>
| | `-ParagraphComment 0x5d9610 <col:3, col:100>
| |   `-TextComment 0x5d95e0 <col:3, col:100> Text="---------------------------------- mjLROpt -------------------------------------------------------"
| |-FieldDecl 0x5a25d0 <line:406:3, col:7> col:7 mode 'int'
| | `-FullComment 0x5e0780 <col:37, col:75>
| |   `-ParagraphComment 0x5e0750 <col:37, col:75>
| |     `-TextComment 0x5e0720 <col:37, col:75> Text=" which actuators to process (mjtLRMode)"
| |-FieldDecl 0x5a2660 <line:407:3, col:7> col:7 useexisting 'int'
| | `-FullComment 0x5e0850 <col:37, col:75>
| |   `-ParagraphComment 0x5e0820 <col:37, col:75>
| |     `-TextComment 0x5e07f0 <col:37, col:75> Text=" use existing length range if available"
| |-FieldDecl 0x5a26f0 <line:408:3, col:7> col:7 uselimit 'int'
| | `-FullComment 0x5e0920 <col:37, col:77>
| |   `-ParagraphComment 0x5e08f0 <col:37, col:77>
| |     `-TextComment 0x5e08c0 <col:37, col:77> Text=" use joint and tendon limits if available"
| |-FieldDecl 0x5a27c8 <line:411:3, col:10> col:10 invalid accel 'int'
| | `-FullComment 0x5e09f0 <col:37, col:78>
| |   `-ParagraphComment 0x5e09c0 <col:37, col:78>
| |     `-TextComment 0x5e0990 <col:37, col:78> Text=" target acceleration used to compute force"
| |-FieldDecl 0x5a2860 <line:412:3, col:10> col:10 invalid maxforce 'int'
| | `-FullComment 0x5e0ac0 <col:37, col:63>
| |   `-ParagraphComment 0x5e0a90 <col:37, col:63>
| |     `-TextComment 0x5e0a60 <col:37, col:63> Text=" maximum force; 0: no limit"
| |-FieldDecl 0x5a28f0 <line:413:3, col:10> col:10 invalid timeconst 'int'
| | `-FullComment 0x5e0b90 <col:37, col:83>
| |   `-ParagraphComment 0x5e0b60 <col:37, col:83>
| |     `-TextComment 0x5e0b30 <col:37, col:83> Text=" time constant for velocity reduction; min 0.01"
| |-FieldDecl 0x5a2980 <line:414:3, col:10> col:10 invalid timestep 'int'
| | `-FullComment 0x5e0c60 <col:37, col:82>
| |   `-ParagraphComment 0x5e0c30 <col:37, col:82>
| |     `-TextComment 0x5e0c00 <col:37, col:82> Text=" simulation timestep; 0: use mjOption.timestep"
| |-FieldDecl 0x5a2a10 <line:415:3, col:10> col:10 invalid inttotal 'int'
| | `-FullComment 0x5e0d30 <col:37, col:67>
| |   `-ParagraphComment 0x5e0d00 <col:37, col:67>
| |     `-TextComment 0x5e0cd0 <col:37, col:67> Text=" total simulation time interval"
| |-FieldDecl 0x5a2aa0 <line:416:3, col:10> col:10 invalid interval 'int'
| | `-FullComment 0x5e0e00 <col:37, col:74>
| |   `-ParagraphComment 0x5e0dd0 <col:37, col:74>
| |     `-TextComment 0x5e0da0 <col:37, col:74> Text=" evaluation time interval (at the end)"
| `-FieldDecl 0x5a2b30 <line:417:3, col:10> col:10 invalid tolrange 'int'
|   `-FullComment 0x5e0ed0 <col:37, col:78>
|     `-ParagraphComment 0x5e0ea0 <col:37, col:78>
|       `-TextComment 0x5e0e70 <col:37, col:78> Text=" convergence tolerance (relative to range)"
|-TypedefDecl 0x5a2c00 <line:419:1, col:25> col:25 mjLROpt 'struct mjLROpt_':'struct mjLROpt_'
| `-ElaboratedType 0x5a2bb0 'struct mjLROpt_' sugar
|   `-RecordType 0x5a2540 'struct mjLROpt_'
|     `-Record 0x5a24c0 'mjLROpt_'
|-RecordDecl 0x5a2c88 <line:424:1, line:426:1> line:424:8 struct mjVFS_ definition
| |-FullComment 0x5e0fa0 <line:422:3, col:100>
| | `-ParagraphComment 0x5e0f70 <col:3, col:100>
| |   `-TextComment 0x5e0f40 <col:3, col:100> Text="---------------------------------- mjVFS ---------------------------------------------------------"
| `-FieldDecl 0x5a2d70 <line:425:3, col:9> col:9 impl_ 'void *'
|   `-FullComment 0x5e1070 <col:49, col:79>
|     `-ParagraphComment 0x5e1040 <col:49, col:79>
|       `-TextComment 0x5e1010 <col:49, col:79> Text=" internal pointer to VFS memory"
|-TypedefDecl 0x5a2e40 <line:427:1, col:23> col:23 mjVFS 'struct mjVFS_':'struct mjVFS_'
| `-ElaboratedType 0x5a2df0 'struct mjVFS_' sugar
|   `-RecordType 0x5a2d10 'struct mjVFS_'
|     `-Record 0x5a2c88 'mjVFS_'
|-RecordDecl 0x5a5d30 <line:431:1, line:472:1> line:431:8 invalid struct mjOption_ definition
| |-FullComment 0x5e1140 <line:429:3, col:100>
| | `-ParagraphComment 0x5e1110 <col:3, col:100>
| |   `-TextComment 0x5e10e0 <col:3, col:100> Text="---------------------------------- mjOption ------------------------------------------------------"
| |-FieldDecl 0x5a5e40 <line:433:3, col:10> col:10 invalid timestep 'int'
| | `-FullComment 0x5e1210 <col:37, col:45>
| |   `-ParagraphComment 0x5e11e0 <col:37, col:45>
| |     `-TextComment 0x5e11b0 <col:37, col:45> Text=" timestep"
| |-FieldDecl 0x5a5ed0 <line:434:3, col:10> col:10 invalid apirate 'int'
| | `-FullComment 0x5e12e0 <col:37, col:68>
| |   `-ParagraphComment 0x5e12b0 <col:37, col:68>
| |     `-TextComment 0x5e1280 <col:37, col:68> Text=" update rate for remote API (Hz)"
| |-FieldDecl 0x5a5f90 <line:437:3, col:10> col:10 invalid impratio 'int'
| | `-FullComment 0x5e13b0 <col:37, col:82>
| |   `-ParagraphComment 0x5e1380 <col:37, col:82>
| |     `-TextComment 0x5e1350 <col:37, col:82> Text=" ratio of friction-to-normal contact impedance"
| |-FieldDecl 0x5a6020 <line:438:3, col:10> col:10 invalid tolerance 'int'
| | `-FullComment 0x5e1480 <col:37, col:58>
| |   `-ParagraphComment 0x5e1450 <col:37, col:58>
| |     `-TextComment 0x5e1420 <col:37, col:58> Text=" main solver tolerance"
| |-FieldDecl 0x5a60b0 <line:439:3, col:10> col:10 invalid ls_tolerance 'int'
| | `-FullComment 0x5e1550 <col:37, col:67>
| |   `-ParagraphComment 0x5e1520 <col:37, col:67>
| |     `-TextComment 0x5e14f0 <col:37, col:67> Text=" CG/Newton linesearch tolerance"
| |-FieldDecl 0x5a6140 <line:440:3, col:10> col:10 invalid noslip_tolerance 'int'
| | `-FullComment 0x5e1620 <col:37, col:60>
| |   `-ParagraphComment 0x5e15f0 <col:37, col:60>
| |     `-TextComment 0x5e15c0 <col:37, col:60> Text=" noslip solver tolerance"
| |-FieldDecl 0x5a61d0 <line:441:3, col:10> col:10 invalid ccd_tolerance 'int'
| | `-FullComment 0x5e1710 <col:37, col:70>
| |   `-ParagraphComment 0x5e16e0 <col:37, col:70>
| |     `-TextComment 0x5e16b0 <col:37, col:70> Text=" convex collision solver tolerance"
| |-FieldDecl 0x5a6320 <line:444:3, <invalid sloc>> col:10 invalid gravity 'int[3]'
| | `-FullComment 0x5e17e0 <col:37, col:63>
| |   `-ParagraphComment 0x5e17b0 <col:37, col:63>
| |     `-TextComment 0x5e1780 <col:37, col:63> Text=" gravitational acceleration"
| |-FieldDecl 0x5a6400 <line:445:3, <invalid sloc>> col:10 invalid wind 'int[3]'
| | `-FullComment 0x5e18b0 <col:37, col:72>
| |   `-ParagraphComment 0x5e1880 <col:37, col:72>
| |     `-TextComment 0x5e1850 <col:37, col:72> Text=" wind (for lift, drag and viscosity)"
| |-FieldDecl 0x5a64e0 <line:446:3, <invalid sloc>> col:10 invalid magnetic 'int[3]'
| | `-FullComment 0x5e1980 <col:37, col:57>
| |   `-ParagraphComment 0x5e1950 <col:37, col:57>
| |     `-TextComment 0x5e1920 <col:37, col:57> Text=" global magnetic flux"
| |-FieldDecl 0x5a6570 <line:447:3, col:10> col:10 invalid density 'int'
| | `-FullComment 0x5e1a50 <col:37, col:54>
| |   `-ParagraphComment 0x5e1a20 <col:37, col:54>
| |     `-TextComment 0x5e19f0 <col:37, col:54> Text=" density of medium"
| |-FieldDecl 0x5a6600 <line:448:3, col:10> col:10 invalid viscosity 'int'
| | `-FullComment 0x5e1b20 <col:37, col:56>
| |   `-ParagraphComment 0x5e1af0 <col:37, col:56>
| |     `-TextComment 0x5e1ac0 <col:37, col:56> Text=" viscosity of medium"
| |-FieldDecl 0x5a66c0 <line:451:3, col:10> col:10 invalid o_margin 'int'
| | `-FullComment 0x5e1bf0 <col:37, col:43>
| |   `-ParagraphComment 0x5e1bc0 <col:37, col:43>
| |     `-TextComment 0x5e1b90 <col:37, col:43> Text=" margin"
| |-FieldDecl 0x5a67a0 <line:452:3, <invalid sloc>> col:10 invalid o_solref 'int[2]'
| | `-FullComment 0x5e1cc0 <col:37, col:43>
| |   `-ParagraphComment 0x5e1c90 <col:37, col:43>
| |     `-TextComment 0x5e1c60 <col:37, col:43> Text=" solref"
| |-FieldDecl 0x5a68c0 <line:453:3, <invalid sloc>> col:10 invalid o_solimp 'int[5]'
| | `-FullComment 0x5e1d90 <col:37, col:43>
| |   `-ParagraphComment 0x5e1d60 <col:37, col:43>
| |     `-TextComment 0x5e1d30 <col:37, col:43> Text=" solimp"
| |-FieldDecl 0x5a69a0 <line:454:3, <invalid sloc>> col:10 invalid o_friction 'int[5]'
| | `-FullComment 0x5e1e60 <col:37, col:45>
| |   `-ParagraphComment 0x5e1e30 <col:37, col:45>
| |     `-TextComment 0x5e1e00 <col:37, col:45> Text=" friction"
| |-FieldDecl 0x5a6a60 <line:457:3, col:7> col:7 integrator 'int'
| | `-FullComment 0x5e1f30 <col:37, col:69>
| |   `-ParagraphComment 0x5e1f00 <col:37, col:69>
| |     `-TextComment 0x5e1ed0 <col:37, col:69> Text=" integration mode (mjtIntegrator)"
| |-FieldDecl 0x5a6af0 <line:458:3, col:7> col:7 cone 'int'
| | `-FullComment 0x5e2000 <col:37, col:68>
| |   `-ParagraphComment 0x5e1fd0 <col:37, col:68>
| |     `-TextComment 0x5e1fa0 <col:37, col:68> Text=" type of friction cone (mjtCone)"
| |-FieldDecl 0x5a6b80 <line:459:3, col:7> col:7 jacobian 'int'
| | `-FullComment 0x5e20d0 <col:37, col:67>
| |   `-ParagraphComment 0x5e20a0 <col:37, col:67>
| |     `-TextComment 0x5e2070 <col:37, col:67> Text=" type of Jacobian (mjtJacobian)"
| |-FieldDecl 0x5a6c10 <line:460:3, col:7> col:7 solver 'int'
| | `-FullComment 0x5e21a0 <col:37, col:65>
| |   `-ParagraphComment 0x5e2170 <col:37, col:65>
| |     `-TextComment 0x5e2140 <col:37, col:65> Text=" solver algorithm (mjtSolver)"
| |-FieldDecl 0x5a6ca0 <line:461:3, col:7> col:7 iterations 'int'
| | `-FullComment 0x5e2270 <col:37, col:77>
| |   `-ParagraphComment 0x5e2240 <col:37, col:77>
| |     `-TextComment 0x5e2210 <col:37, col:77> Text=" maximum number of main solver iterations"
| |-FieldDecl 0x5a6d40 <line:462:3, col:7> col:7 ls_iterations 'int'
| | `-FullComment 0x5e2340 <col:37, col:86>
| |   `-ParagraphComment 0x5e2310 <col:37, col:86>
| |     `-TextComment 0x5e22e0 <col:37, col:86> Text=" maximum number of CG/Newton linesearch iterations"
| |-FieldDecl 0x5a6dd0 <line:463:3, col:7> col:7 noslip_iterations 'int'
| | `-FullComment 0x5e2410 <col:37, col:79>
| |   `-ParagraphComment 0x5e23e0 <col:37, col:79>
| |     `-TextComment 0x5e23b0 <col:37, col:79> Text=" maximum number of noslip solver iterations"
| |-FieldDecl 0x5a6e60 <line:464:3, col:7> col:7 ccd_iterations 'int'
| | `-FullComment 0x5e24e0 <col:37, col:89>
| |   `-ParagraphComment 0x5e24b0 <col:37, col:89>
| |     `-TextComment 0x5e2480 <col:37, col:89> Text=" maximum number of convex collision solver iterations"
| |-FieldDecl 0x5a6ef0 <line:465:3, col:7> col:7 disableflags 'int'
| | `-FullComment 0x5e25b0 <col:37, col:78>
| |   `-ParagraphComment 0x5e2580 <col:37, col:78>
| |     `-TextComment 0x5e2550 <col:37, col:78> Text=" bit flags for disabling standard features"
| |-FieldDecl 0x5a6f80 <line:466:3, col:7> col:7 enableflags 'int'
| | `-FullComment 0x5e2680 <col:37, col:77>
| |   `-ParagraphComment 0x5e2650 <col:37, col:77>
| |     `-TextComment 0x5e2620 <col:37, col:77> Text=" bit flags for enabling optional features"
| |-FieldDecl 0x5a7010 <line:467:3, col:7> col:7 disableactuator 'int'
| | `-FullComment 0x5e2760 <col:37, col:82>
| |   `-ParagraphComment 0x5e2730 <col:37, col:82>
| |     `-TextComment 0x5e2700 <col:37, col:82> Text=" bit flags for disabling actuators by group id"
| |-FieldDecl 0x5a70d0 <line:470:3, col:7> col:7 sdf_initpoints 'int'
| | `-FullComment 0x5e2830 <col:37, col:83>
| |   `-ParagraphComment 0x5e2800 <col:37, col:83>
| |     `-TextComment 0x5e27d0 <col:37, col:83> Text=" number of starting points for gradient descent"
| `-FieldDecl 0x5a7160 <line:471:3, col:7> col:7 sdf_iterations 'int'
|   `-FullComment 0x5e2900 <col:37, col:82>
|     `-ParagraphComment 0x5e28d0 <col:37, col:82>
|       `-TextComment 0x5e28a0 <col:37, col:82> Text=" max number of iterations for gradient descent"
|-TypedefDecl 0x5a7230 <line:473:1, col:26> col:26 referenced mjOption 'struct mjOption_':'struct mjOption_'
| `-ElaboratedType 0x5a71e0 'struct mjOption_' sugar
|   `-RecordType 0x5a5db0 'struct mjOption_'
|     `-Record 0x5a5d30 'mjOption_'
|-RecordDecl 0x5a72b8 <line:478:1, line:572:1> line:478:8 struct mjVisual_ definition
| |-FullComment 0x5e29d0 <line:476:3, col:100>
| | `-ParagraphComment 0x5e29a0 <col:3, col:100>
| |   `-TextComment 0x5e2970 <col:3, col:100> Text="---------------------------------- mjVisual ------------------------------------------------------"
| |-RecordDecl 0x5a7388 <line:479:3, line:492:3> line:479:3 struct definition
| | |-FieldDecl 0x5a7470 <line:480:5, col:9> col:9 orthographic 'int'
| | | `-FullComment 0x5e2aa0 <col:37, col:84>
| | |   `-ParagraphComment 0x5e2a70 <col:37, col:84>
| | |     `-TextComment 0x5e2a40 <col:37, col:84> Text=" is the free camera orthographic (0: no, 1: yes)"
| | |-FieldDecl 0x5a7500 <line:481:5, col:11> col:11 fovy 'float'
| | | `-FullComment 0x5e2b70 <col:37, col:100>
| | |   `-ParagraphComment 0x5e2b40 <col:37, col:100>
| | |     `-TextComment 0x5e2b10 <col:37, col:100> Text=" y field-of-view of free camera (orthographic ? length : degree)"
| | |-FieldDecl 0x5a7590 <line:482:5, col:11> col:11 ipd 'float'
| | | `-FullComment 0x5e2c40 <col:37, col:76>
| | |   `-ParagraphComment 0x5e2c10 <col:37, col:76>
| | |     `-TextComment 0x5e2be0 <col:37, col:76> Text=" inter-pupilary distance for free camera"
| | |-FieldDecl 0x5a7620 <line:483:5, col:11> col:11 azimuth 'float'
| | | `-FullComment 0x5e2d10 <col:37, col:77>
| | |   `-ParagraphComment 0x5e2ce0 <col:37, col:77>
| | |     `-TextComment 0x5e2cb0 <col:37, col:77> Text=" initial azimuth of free camera (degrees)"
| | |-FieldDecl 0x5a76b0 <line:484:5, col:11> col:11 elevation 'float'
| | | `-FullComment 0x5e2de0 <col:37, col:79>
| | |   `-ParagraphComment 0x5e2db0 <col:37, col:79>
| | |     `-TextComment 0x5e2d80 <col:37, col:79> Text=" initial elevation of free camera (degrees)"
| | |-FieldDecl 0x5a7740 <line:485:5, col:11> col:11 linewidth 'float'
| | | `-FullComment 0x5e2eb0 <col:37, col:79>
| | |   `-ParagraphComment 0x5e2e80 <col:37, col:79>
| | |     `-TextComment 0x5e2e50 <col:37, col:79> Text=" line width for wireframe and ray rendering"
| | |-FieldDecl 0x5a77d0 <line:486:5, col:11> col:11 glow 'float'
| | | `-FullComment 0x5e2f80 <col:37, col:71>
| | |   `-ParagraphComment 0x5e2f50 <col:37, col:71>
| | |     `-TextComment 0x5e2f20 <col:37, col:71> Text=" glow coefficient for selected body"
| | |-FieldDecl 0x5a7860 <line:487:5, col:11> col:11 realtime 'float'
| | | `-FullComment 0x5e3050 <col:37, col:76>
| | |   `-ParagraphComment 0x5e3020 <col:37, col:76>
| | |     `-TextComment 0x5e2ff0 <col:37, col:76> Text=" initial real-time factor (1: real time)"
| | |-FieldDecl 0x5a78f0 <line:488:5, col:11> col:11 offwidth 'int'
| | | `-FullComment 0x5e3120 <col:37, col:62>
| | |   `-ParagraphComment 0x5e30f0 <col:37, col:62>
| | |     `-TextComment 0x5e30c0 <col:37, col:62> Text=" width of offscreen buffer"
| | |-FieldDecl 0x5a7980 <line:489:5, col:11> col:11 offheight 'int'
| | | `-FullComment 0x5e31f0 <col:37, col:63>
| | |   `-ParagraphComment 0x5e31c0 <col:37, col:63>
| | |     `-TextComment 0x5e3190 <col:37, col:63> Text=" height of offscreen buffer"
| | |-FieldDecl 0x5a7a10 <line:490:5, col:11> col:11 ellipsoidinertia 'int'
| | | `-FullComment 0x5e32c0 <col:37, col:90>
| | |   `-ParagraphComment 0x5e3290 <col:37, col:90>
| | |     `-TextComment 0x5e3260 <col:37, col:90> Text=" geom for inertia visualization (0: box, 1: ellipsoid)"
| | `-FieldDecl 0x5a7aa0 <line:491:5, col:11> col:11 bvactive 'int'
| |   `-FullComment 0x5e3390 <col:37, col:86>
| |     `-ParagraphComment 0x5e3360 <col:37, col:86>
| |       `-TextComment 0x5e3330 <col:37, col:86> Text=" visualize active bounding volumes (0: no, 1: yes)"
| |-FieldDecl 0x5a7b78 <line:479:3, line:492:5> col:5 global 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:479:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:479:3)'
| |-RecordDecl 0x5a7bc8 <line:494:3, line:500:3> line:494:3 struct definition
| | |-FieldDecl 0x5a7cb0 <line:495:5, col:11> col:11 shadowsize 'int'
| | | `-FullComment 0x5e3460 <col:37, col:62>
| | |   `-ParagraphComment 0x5e3430 <col:37, col:62>
| | |     `-TextComment 0x5e3400 <col:37, col:62> Text=" size of shadowmap texture"
| | |-FieldDecl 0x5a8f20 <line:496:5, col:11> col:11 offsamples 'int'
| | | `-FullComment 0x5e3530 <col:37, col:83>
| | |   `-ParagraphComment 0x5e3500 <col:37, col:83>
| | |     `-TextComment 0x5e34d0 <col:37, col:83> Text=" number of multisamples for offscreen rendering"
| | |-FieldDecl 0x5a8fb0 <line:497:5, col:11> col:11 numslices 'int'
| | | `-FullComment 0x5e3600 <col:37, col:78>
| | |   `-ParagraphComment 0x5e35d0 <col:37, col:78>
| | |     `-TextComment 0x5e35a0 <col:37, col:78> Text=" number of slices for builtin geom drawing"
| | |-FieldDecl 0x5a9040 <line:498:5, col:11> col:11 numstacks 'int'
| | | `-FullComment 0x5e36e0 <col:37, col:78>
| | |   `-ParagraphComment 0x5e36a0 <col:37, col:78>
| | |     `-TextComment 0x5e3670 <col:37, col:78> Text=" number of stacks for builtin geom drawing"
| | `-FieldDecl 0x5a90d0 <line:499:5, col:11> col:11 numquads 'int'
| |   `-FullComment 0x5e37b0 <col:37, col:70>
| |     `-ParagraphComment 0x5e3780 <col:37, col:70>
| |       `-TextComment 0x5e3750 <col:37, col:70> Text=" number of quads for box rendering"
| |-FieldDecl 0x5a91a8 <line:494:3, line:500:5> col:5 quality 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:494:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:494:3)'
| |-RecordDecl 0x5a91f8 <line:502:3, line:507:3> line:502:3 struct definition
| | |-FieldDecl 0x5a9370 <line:503:5, col:20> col:11 ambient 'float[3]'
| | | `-FullComment 0x5e3880 <col:37, col:58>
| | |   `-ParagraphComment 0x5e3850 <col:37, col:58>
| | |     `-TextComment 0x5e3820 <col:37, col:58> Text=" ambient rgb (alpha=1)"
| | |-FieldDecl 0x5a9450 <line:504:5, col:20> col:11 diffuse 'float[3]'
| | | `-FullComment 0x5e3950 <col:37, col:58>
| | |   `-ParagraphComment 0x5e3920 <col:37, col:58>
| | |     `-TextComment 0x5e38f0 <col:37, col:58> Text=" diffuse rgb (alpha=1)"
| | |-FieldDecl 0x5a9530 <line:505:5, col:21> col:11 specular 'float[3]'
| | | `-FullComment 0x5e3a20 <col:37, col:59>
| | |   `-ParagraphComment 0x5e39f0 <col:37, col:59>
| | |     `-TextComment 0x5e39c0 <col:37, col:59> Text=" specular rgb (alpha=1)"
| | `-FieldDecl 0x5a95c0 <line:506:5, col:11> col:11 active 'int'
| |   `-FullComment 0x5e3af0 <col:37, col:56>
| |     `-ParagraphComment 0x5e3ac0 <col:37, col:56>
| |       `-TextComment 0x5e3a90 <col:37, col:56> Text=" is headlight active"
| |-FieldDecl 0x5a9698 <line:502:3, line:507:5> col:5 headlight 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:502:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:502:3)'
| |-RecordDecl 0x5a96e8 <line:509:3, line:523:3> line:509:3 struct definition
| | |-FieldDecl 0x5a97d0 <line:510:5, col:11> col:11 stiffness 'float'
| | | `-FullComment 0x5e3bc0 <col:37, col:80>
| | |   `-ParagraphComment 0x5e3b90 <col:37, col:80>
| | |     `-TextComment 0x5e3b60 <col:37, col:80> Text=" mouse perturbation stiffness (space->force)"
| | |-FieldDecl 0x5a9860 <line:511:5, col:11> col:11 stiffnessrot 'float'
| | | `-FullComment 0x5e3c90 <col:37, col:81>
| | |   `-ParagraphComment 0x5e3c60 <col:37, col:81>
| | |     `-TextComment 0x5e3c30 <col:37, col:81> Text=" mouse perturbation stiffness (space->torque)"
| | |-FieldDecl 0x5a98f0 <line:512:5, col:11> col:11 force 'float'
| | | `-FullComment 0x5e3d60 <col:37, col:68>
| | |   `-ParagraphComment 0x5e3d30 <col:37, col:68>
| | |     `-TextComment 0x5e3d00 <col:37, col:68> Text=" from force units to space units"
| | |-FieldDecl 0x5a9980 <line:513:5, col:11> col:11 torque 'float'
| | | `-FullComment 0x5e3e30 <col:37, col:69>
| | |   `-ParagraphComment 0x5e3e00 <col:37, col:69>
| | |     `-TextComment 0x5e3dd0 <col:37, col:69> Text=" from torque units to space units"
| | |-FieldDecl 0x5a9a10 <line:514:5, col:11> col:11 alpha 'float'
| | | `-FullComment 0x5e3f00 <col:37, col:83>
| | |   `-ParagraphComment 0x5e3ed0 <col:37, col:83>
| | |     `-TextComment 0x5e3ea0 <col:37, col:83> Text=" scale geom alphas when transparency is enabled"
| | |-FieldDecl 0x5a9aa0 <line:515:5, col:11> col:11 fogstart 'float'
| | | `-FullComment 0x5e3fd0 <col:37, col:88>
| | |   `-ParagraphComment 0x5e3fa0 <col:37, col:88>
| | |     `-TextComment 0x5e3f70 <col:37, col:88> Text=" OpenGL fog starts at fogstart * mjModel.stat.extent"
| | |-FieldDecl 0x5a9b30 <line:516:5, col:11> col:11 fogend 'float'
| | | `-FullComment 0x5e40a0 <col:37, col:84>
| | |   `-ParagraphComment 0x5e4070 <col:37, col:84>
| | |     `-TextComment 0x5e4040 <col:37, col:84> Text=" OpenGL fog ends at fogend * mjModel.stat.extent"
| | |-FieldDecl 0x5a9bc0 <line:517:5, col:11> col:11 znear 'float'
| | | `-FullComment 0x5e4170 <col:37, col:86>
| | |   `-ParagraphComment 0x5e4140 <col:37, col:86>
| | |     `-TextComment 0x5e4110 <col:37, col:86> Text=" near clipping plane = znear * mjModel.stat.extent"
| | |-FieldDecl 0x5a9c50 <line:518:5, col:11> col:11 zfar 'float'
| | | `-FullComment 0x5e4240 <col:37, col:84>
| | |   `-ParagraphComment 0x5e4210 <col:37, col:84>
| | |     `-TextComment 0x5e41e0 <col:37, col:84> Text=" far clipping plane = zfar * mjModel.stat.extent"
| | |-FieldDecl 0x5a9ce0 <line:519:5, col:11> col:11 haze 'float'
| | | `-FullComment 0x5e4310 <col:37, col:47>
| | |   `-ParagraphComment 0x5e42e0 <col:37, col:47>
| | |     `-TextComment 0x5e42b0 <col:37, col:47> Text=" haze ratio"
| | |-FieldDecl 0x5a9d70 <line:520:5, col:11> col:11 shadowclip 'float'
| | | `-FullComment 0x5e43e0 <col:37, col:88>
| | |   `-ParagraphComment 0x5e43b0 <col:37, col:88>
| | |     `-TextComment 0x5e4380 <col:37, col:88> Text=" directional light: shadowclip * mjModel.stat.extent"
| | |-FieldDecl 0x5a9e00 <line:521:5, col:11> col:11 shadowscale 'float'
| | | `-FullComment 0x5e44b0 <col:37, col:75>
| | |   `-ParagraphComment 0x5e4480 <col:37, col:75>
| | |     `-TextComment 0x5e4450 <col:37, col:75> Text=" spot light: shadowscale * light.cutoff"
| | `-FieldDecl 0x5a9e90 <line:522:5, col:11> col:11 actuatortendon 'float'
| |   `-FullComment 0x5e4580 <col:37, col:55>
| |     `-ParagraphComment 0x5e4550 <col:37, col:55>
| |       `-TextComment 0x5e4520 <col:37, col:55> Text=" scale tendon width"
| |-FieldDecl 0x5aa548 <line:509:3, line:523:5> col:5 map 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:509:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:509:3)'
| |-RecordDecl 0x5aa598 <line:525:3, line:543:3> line:525:3 struct definition
| | |-FieldDecl 0x5aa680 <line:526:5, col:11> col:11 forcewidth 'float'
| | | `-FullComment 0x5e4650 <col:37, col:57>
| | |   `-ParagraphComment 0x5e4620 <col:37, col:57>
| | |     `-TextComment 0x5e45f0 <col:37, col:57> Text=" width of force arrow"
| | |-FieldDecl 0x5aa710 <line:527:5, col:11> col:11 contactwidth 'float'
| | | `-FullComment 0x5e4740 <col:37, col:50>
| | |   `-ParagraphComment 0x5e4710 <col:37, col:50>
| | |     `-TextComment 0x5e46e0 <col:37, col:50> Text=" contact width"
| | |-FieldDecl 0x5aa7a0 <line:528:5, col:11> col:11 contactheight 'float'
| | | `-FullComment 0x5e4810 <col:37, col:51>
| | |   `-ParagraphComment 0x5e47e0 <col:37, col:51>
| | |     `-TextComment 0x5e47b0 <col:37, col:51> Text=" contact height"
| | |-FieldDecl 0x5aa830 <line:529:5, col:11> col:11 connect 'float'
| | | `-FullComment 0x5e48e0 <col:37, col:62>
| | |   `-ParagraphComment 0x5e48b0 <col:37, col:62>
| | |     `-TextComment 0x5e4880 <col:37, col:62> Text=" autoconnect capsule width"
| | |-FieldDecl 0x5aa8c0 <line:530:5, col:11> col:11 com 'float'
| | | `-FullComment 0x5e49b0 <col:37, col:47>
| | |   `-ParagraphComment 0x5e4980 <col:37, col:47>
| | |     `-TextComment 0x5e4950 <col:37, col:47> Text=" com radius"
| | |-FieldDecl 0x5aa950 <line:531:5, col:11> col:11 camera 'float'
| | | `-FullComment 0x5e4a80 <col:37, col:50>
| | |   `-ParagraphComment 0x5e4a50 <col:37, col:50>
| | |     `-TextComment 0x5e4a20 <col:37, col:50> Text=" camera object"
| | |-FieldDecl 0x5aa9e0 <line:532:5, col:11> col:11 light 'float'
| | | `-FullComment 0x5e4b50 <col:37, col:49>
| | |   `-ParagraphComment 0x5e4b20 <col:37, col:49>
| | |     `-TextComment 0x5e4af0 <col:37, col:49> Text=" light object"
| | |-FieldDecl 0x5aaa70 <line:533:5, col:11> col:11 selectpoint 'float'
| | | `-FullComment 0x5e4c20 <col:37, col:52>
| | |   `-ParagraphComment 0x5e4bf0 <col:37, col:52>
| | |     `-TextComment 0x5e4bc0 <col:37, col:52> Text=" selection point"
| | |-FieldDecl 0x5aab00 <line:534:5, col:11> col:11 jointlength 'float'
| | | `-FullComment 0x5e4cf0 <col:37, col:49>
| | |   `-ParagraphComment 0x5e4cc0 <col:37, col:49>
| | |     `-TextComment 0x5e4c90 <col:37, col:49> Text=" joint length"
| | |-FieldDecl 0x5aab90 <line:535:5, col:11> col:11 jointwidth 'float'
| | | `-FullComment 0x5e4dc0 <col:37, col:48>
| | |   `-ParagraphComment 0x5e4d90 <col:37, col:48>
| | |     `-TextComment 0x5e4d60 <col:37, col:48> Text=" joint width"
| | |-FieldDecl 0x5aac20 <line:536:5, col:11> col:11 actuatorlength 'float'
| | | `-FullComment 0x5e4e90 <col:37, col:52>
| | |   `-ParagraphComment 0x5e4e60 <col:37, col:52>
| | |     `-TextComment 0x5e4e30 <col:37, col:52> Text=" actuator length"
| | |-FieldDecl 0x5aacb0 <line:537:5, col:11> col:11 actuatorwidth 'float'
| | | `-FullComment 0x5e4f60 <col:37, col:51>
| | |   `-ParagraphComment 0x5e4f30 <col:37, col:51>
| | |     `-TextComment 0x5e4f00 <col:37, col:51> Text=" actuator width"
| | |-FieldDecl 0x5aad40 <line:538:5, col:11> col:11 framelength 'float'
| | | `-FullComment 0x5e5030 <col:37, col:58>
| | |   `-ParagraphComment 0x5e5000 <col:37, col:58>
| | |     `-TextComment 0x5e4fd0 <col:37, col:58> Text=" bodyframe axis length"
| | |-FieldDecl 0x5aadd0 <line:539:5, col:11> col:11 framewidth 'float'
| | | `-FullComment 0x5e5100 <col:37, col:57>
| | |   `-ParagraphComment 0x5e50d0 <col:37, col:57>
| | |     `-TextComment 0x5e50a0 <col:37, col:57> Text=" bodyframe axis width"
| | |-FieldDecl 0x5aae60 <line:540:5, col:11> col:11 constraint 'float'
| | | `-FullComment 0x5e51d0 <col:37, col:53>
| | |   `-ParagraphComment 0x5e51a0 <col:37, col:53>
| | |     `-TextComment 0x5e5170 <col:37, col:53> Text=" constraint width"
| | |-FieldDecl 0x5aaef0 <line:541:5, col:11> col:11 slidercrank 'float'
| | | `-FullComment 0x5e52a0 <col:37, col:54>
| | |   `-ParagraphComment 0x5e5270 <col:37, col:54>
| | |     `-TextComment 0x5e5240 <col:37, col:54> Text=" slidercrank width"
| | `-FieldDecl 0x5aaf80 <line:542:5, col:11> col:11 frustum 'float'
| |   `-FullComment 0x5e5370 <col:37, col:55>
| |     `-ParagraphComment 0x5e5340 <col:37, col:55>
| |       `-TextComment 0x5e5310 <col:37, col:55> Text=" frustum zfar plane"
| |-FieldDecl 0x5ab058 <line:525:3, line:543:5> col:5 scale 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:525:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:525:3)'
| |-RecordDecl 0x5ab0a8 <line:545:3, line:571:3> line:545:3 struct definition
| | |-FieldDecl 0x5ab220 <line:546:5, col:16> col:11 fog 'float[4]'
| | | `-FullComment 0x5e5440 <col:37, col:40>
| | |   `-ParagraphComment 0x5e5410 <col:37, col:40>
| | |     `-TextComment 0x5e53e0 <col:37, col:40> Text=" fog"
| | |-FieldDecl 0x5ab300 <line:547:5, col:17> col:11 haze 'float[4]'
| | | `-FullComment 0x5e5510 <col:37, col:41>
| | |   `-ParagraphComment 0x5e54e0 <col:37, col:41>
| | |     `-TextComment 0x5e54b0 <col:37, col:41> Text=" haze"
| | |-FieldDecl 0x5ab3e0 <line:548:5, col:18> col:11 force 'float[4]'
| | | `-FullComment 0x5e55e0 <col:37, col:51>
| | |   `-ParagraphComment 0x5e55b0 <col:37, col:51>
| | |     `-TextComment 0x5e5580 <col:37, col:51> Text=" external force"
| | |-FieldDecl 0x5abbc0 <line:549:5, col:20> col:11 inertia 'float[4]'
| | | `-FullComment 0x5e56b0 <col:37, col:48>
| | |   `-ParagraphComment 0x5e5680 <col:37, col:48>
| | |     `-TextComment 0x5e5650 <col:37, col:48> Text=" inertia box"
| | |-FieldDecl 0x5abca0 <line:550:5, col:18> col:11 joint 'float[4]'
| | | `-FullComment 0x5e5790 <col:37, col:42>
| | |   `-ParagraphComment 0x5e5760 <col:37, col:42>
| | |     `-TextComment 0x5e5730 <col:37, col:42> Text=" joint"
| | |-FieldDecl 0x5abd80 <line:551:5, col:21> col:11 actuator 'float[4]'
| | | `-FullComment 0x5e5860 <col:37, col:54>
| | |   `-ParagraphComment 0x5e5830 <col:37, col:54>
| | |     `-TextComment 0x5e5800 <col:37, col:54> Text=" actuator, neutral"
| | |-FieldDecl 0x5abe60 <line:552:5, col:29> col:11 actuatornegative 'float[4]'
| | | `-FullComment 0x5e5930 <col:37, col:61>
| | |   `-ParagraphComment 0x5e5900 <col:37, col:61>
| | |     `-TextComment 0x5e58d0 <col:37, col:61> Text=" actuator, negative limit"
| | |-FieldDecl 0x5abf40 <line:553:5, col:29> col:11 actuatorpositive 'float[4]'
| | | `-FullComment 0x5e5a00 <col:37, col:61>
| | |   `-ParagraphComment 0x5e59d0 <col:37, col:61>
| | |     `-TextComment 0x5e59a0 <col:37, col:61> Text=" actuator, positive limit"
| | |-FieldDecl 0x5ac020 <line:554:5, col:16> col:11 com 'float[4]'
| | | `-FullComment 0x5e5ad0 <col:37, col:51>
| | |   `-ParagraphComment 0x5e5aa0 <col:37, col:51>
| | |     `-TextComment 0x5e5a70 <col:37, col:51> Text=" center of mass"
| | |-FieldDecl 0x5ac100 <line:555:5, col:19> col:11 camera 'float[4]'
| | | `-FullComment 0x5e5ba0 <col:37, col:50>
| | |   `-ParagraphComment 0x5e5b70 <col:37, col:50>
| | |     `-TextComment 0x5e5b40 <col:37, col:50> Text=" camera object"
| | |-FieldDecl 0x5ac1e0 <line:556:5, col:18> col:11 light 'float[4]'
| | | `-FullComment 0x5e5c70 <col:37, col:49>
| | |   `-ParagraphComment 0x5e5c40 <col:37, col:49>
| | |     `-TextComment 0x5e5c10 <col:37, col:49> Text=" light object"
| | |-FieldDecl 0x5ac2c0 <line:557:5, col:24> col:11 selectpoint 'float[4]'
| | | `-FullComment 0x5e5d40 <col:37, col:52>
| | |   `-ParagraphComment 0x5e5d10 <col:37, col:52>
| | |     `-TextComment 0x5e5ce0 <col:37, col:52> Text=" selection point"
| | |-FieldDecl 0x5ac3a0 <line:558:5, col:20> col:11 connect 'float[4]'
| | | `-FullComment 0x5e5e10 <col:37, col:49>
| | |   `-ParagraphComment 0x5e5de0 <col:37, col:49>
| | |     `-TextComment 0x5e5db0 <col:37, col:49> Text=" auto connect"
| | |-FieldDecl 0x5ac480 <line:559:5, col:25> col:11 contactpoint 'float[4]'
| | | `-FullComment 0x5e5ee0 <col:37, col:50>
| | |   `-ParagraphComment 0x5e5eb0 <col:37, col:50>
| | |     `-TextComment 0x5e5e80 <col:37, col:50> Text=" contact point"
| | |-FieldDecl 0x5ac560 <line:560:5, col:25> col:11 contactforce 'float[4]'
| | | `-FullComment 0x5e5fb0 <col:37, col:50>
| | |   `-ParagraphComment 0x5e5f80 <col:37, col:50>
| | |     `-TextComment 0x5e5f50 <col:37, col:50> Text=" contact force"
| | |-FieldDecl 0x5ac640 <line:561:5, col:28> col:11 contactfriction 'float[4]'
| | | `-FullComment 0x5e6080 <col:37, col:59>
| | |   `-ParagraphComment 0x5e6050 <col:37, col:59>
| | |     `-TextComment 0x5e6020 <col:37, col:59> Text=" contact friction force"
| | |-FieldDecl 0x5ac720 <line:562:5, col:26> col:11 contacttorque 'float[4]'
| | | `-FullComment 0x5e6150 <col:37, col:51>
| | |   `-ParagraphComment 0x5e6120 <col:37, col:51>
| | |     `-TextComment 0x5e60f0 <col:37, col:51> Text=" contact torque"
| | |-FieldDecl 0x5ac800 <line:563:5, col:23> col:11 contactgap 'float[4]'
| | | `-FullComment 0x5e6220 <col:37, col:57>
| | |   `-ParagraphComment 0x5e61f0 <col:37, col:57>
| | |     `-TextComment 0x5e61c0 <col:37, col:57> Text=" contact point in gap"
| | |-FieldDecl 0x5ac8e0 <line:564:5, col:24> col:11 rangefinder 'float[4]'
| | | `-FullComment 0x5e62f0 <col:37, col:52>
| | |   `-ParagraphComment 0x5e62c0 <col:37, col:52>
| | |     `-TextComment 0x5e6290 <col:37, col:52> Text=" rangefinder ray"
| | |-FieldDecl 0x5ac9c0 <line:565:5, col:23> col:11 constraint 'float[4]'
| | | `-FullComment 0x5e63c0 <col:37, col:47>
| | |   `-ParagraphComment 0x5e6390 <col:37, col:47>
| | |     `-TextComment 0x5e6360 <col:37, col:47> Text=" constraint"
| | |-FieldDecl 0x5acaa0 <line:566:5, col:24> col:11 slidercrank 'float[4]'
| | | `-FullComment 0x5e6490 <col:37, col:48>
| | |   `-ParagraphComment 0x5e6460 <col:37, col:48>
| | |     `-TextComment 0x5e6430 <col:37, col:48> Text=" slidercrank"
| | |-FieldDecl 0x5ad050 <line:567:5, col:24> col:11 crankbroken 'float[4]'
| | | `-FullComment 0x5e6560 <col:37, col:77>
| | |   `-ParagraphComment 0x5e6530 <col:37, col:77>
| | |     `-TextComment 0x5e6500 <col:37, col:77> Text=" used when crank must be stretched/broken"
| | |-FieldDecl 0x5ad130 <line:568:5, col:20> col:11 frustum 'float[4]'
| | | `-FullComment 0x5e6630 <col:37, col:51>
| | |   `-ParagraphComment 0x5e6600 <col:37, col:51>
| | |     `-TextComment 0x5e65d0 <col:37, col:51> Text=" camera frustum"
| | |-FieldDecl 0x5ad210 <line:569:5, col:15> col:11 bv 'float[4]'
| | | `-FullComment 0x5e6710 <col:37, col:52>
| | |   `-ParagraphComment 0x5e66d0 <col:37, col:52>
| | |     `-TextComment 0x5e66a0 <col:37, col:52> Text=" bounding volume"
| | `-FieldDecl 0x5ad2f0 <line:570:5, col:21> col:11 bvactive 'float[4]'
| |   `-FullComment 0x5e67e0 <col:37, col:59>
| |     `-ParagraphComment 0x5e67b0 <col:37, col:59>
| |       `-TextComment 0x5e6780 <col:37, col:59> Text=" active bounding volume"
| `-FieldDecl 0x5ad3c8 <line:545:3, line:571:5> col:5 rgba 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:545:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:545:3)'
|-TypedefDecl 0x5ad520 <line:573:1, col:26> col:26 referenced mjVisual 'struct mjVisual_':'struct mjVisual_'
| `-ElaboratedType 0x5ad4d0 'struct mjVisual_' sugar
|   `-RecordType 0x5a7340 'struct mjVisual_'
|     `-Record 0x5a72b8 'mjVisual_'
|-RecordDecl 0x5ad5a8 <line:578:1, line:584:1> line:578:8 invalid struct mjStatistic_ definition
| |-FullComment 0x5e68b0 <line:576:3, col:100>
| | `-ParagraphComment 0x5e6880 <col:3, col:100>
| |   `-TextComment 0x5e6850 <col:3, col:100> Text="---------------------------------- mjStatistic ---------------------------------------------------"
| |-FieldDecl 0x5ad690 <line:579:3, col:10> col:10 invalid meaninertia 'int'
| | `-FullComment 0x5e6980 <col:37, col:58>
| |   `-ParagraphComment 0x5e6950 <col:37, col:58>
| |     `-TextComment 0x5e6920 <col:37, col:58> Text=" mean diagonal inertia"
| |-FieldDecl 0x5ad720 <line:580:3, col:10> col:10 invalid meanmass 'int'
| | `-FullComment 0x5e6a50 <col:37, col:51>
| |   `-ParagraphComment 0x5e6a20 <col:37, col:51>
| |     `-TextComment 0x5e69f0 <col:37, col:51> Text=" mean body mass"
| |-FieldDecl 0x5ad7b0 <line:581:3, col:10> col:10 invalid meansize 'int'
| | `-FullComment 0x5e6b20 <col:37, col:51>
| |   `-ParagraphComment 0x5e6af0 <col:37, col:51>
| |     `-TextComment 0x5e6ac0 <col:37, col:51> Text=" mean body size"
| |-FieldDecl 0x5ad840 <line:582:3, col:10> col:10 invalid extent 'int'
| | `-FullComment 0x5e6bf0 <col:37, col:51>
| |   `-ParagraphComment 0x5e6bc0 <col:37, col:51>
| |     `-TextComment 0x5e6b90 <col:37, col:51> Text=" spatial extent"
| `-FieldDecl 0x5ad920 <line:583:3, <invalid sloc>> col:10 invalid center 'int[3]'
|   `-FullComment 0x5e6cc0 <col:37, col:52>
|     `-ParagraphComment 0x5e6c90 <col:37, col:52>
|       `-TextComment 0x5e6c60 <col:37, col:52> Text=" center of model"
|-TypedefDecl 0x5ad9f0 <line:585:1, col:29> col:29 referenced mjStatistic 'struct mjStatistic_':'struct mjStatistic_'
| `-ElaboratedType 0x5ad9a0 'struct mjStatistic_' sugar
|   `-RecordType 0x5ad630 'struct mjStatistic_'
|     `-Record 0x5ad5a8 'mjStatistic_'
|-RecordDecl 0x5ada78 <line:590:1, line:1131:1> line:590:8 invalid struct mjModel_ definition
| |-FullComment 0x5e6d90 <line:588:3, col:100>
| | `-ParagraphComment 0x5e6d60 <col:3, col:100>
| |   `-TextComment 0x5e6d30 <col:3, col:100> Text="---------------------------------- mjModel -------------------------------------------------------"
| |-FieldDecl 0x5adb90 <line:594:3, col:7> col:7 nq 'int'
| | `-FullComment 0x5e6e60 <col:37, col:82>
| |   `-ParagraphComment 0x5e6e30 <col:37, col:82>
| |     `-TextComment 0x5e6e00 <col:37, col:82> Text=" number of generalized coordinates = dim(qpos)"
| |-FieldDecl 0x5adc20 <line:595:3, col:7> col:7 nv 'int'
| | `-FullComment 0x5e6f30 <col:37, col:77>
| |   `-ParagraphComment 0x5e6f00 <col:37, col:77>
| |     `-TextComment 0x5e6ed0 <col:37, col:77> Text=" number of degrees of freedom = dim(qvel)"
| |-FieldDecl 0x5adcb0 <line:596:3, col:7> col:7 nu 'int'
| | `-FullComment 0x5e7000 <col:37, col:77>
| |   `-ParagraphComment 0x5e6fd0 <col:37, col:77>
| |     `-TextComment 0x5e6fa0 <col:37, col:77> Text=" number of actuators/controls = dim(ctrl)"
| |-FieldDecl 0x5add40 <line:597:3, col:7> col:7 na 'int'
| | `-FullComment 0x5e70d0 <col:37, col:75>
| |   `-ParagraphComment 0x5e70a0 <col:37, col:75>
| |     `-TextComment 0x5e7070 <col:37, col:75> Text=" number of activation states = dim(act)"
| |-FieldDecl 0x5addd0 <line:598:3, col:7> col:7 nbody 'int'
| | `-FullComment 0x5e71a0 <col:37, col:53>
| |   `-ParagraphComment 0x5e7170 <col:37, col:53>
| |     `-TextComment 0x5e7140 <col:37, col:53> Text=" number of bodies"
| |-FieldDecl 0x5ade60 <line:599:3, col:7> col:7 nbvh 'int'
| | `-FullComment 0x5e7270 <col:37, col:83>
| |   `-ParagraphComment 0x5e7240 <col:37, col:83>
| |     `-TextComment 0x5e7210 <col:37, col:83> Text=" number of total bounding volumes in all bodies"
| |-FieldDecl 0x5adef0 <line:600:3, col:7> col:7 nbvhstatic 'int'
| | `-FullComment 0x5e7340 <col:37, col:95>
| |   `-ParagraphComment 0x5e7310 <col:37, col:95>
| |     `-TextComment 0x5e72e0 <col:37, col:95> Text=" number of static bounding volumes (aabb stored in mjModel)"
| |-FieldDecl 0x5adf80 <line:601:3, col:7> col:7 nbvhdynamic 'int'
| | `-FullComment 0x5e7410 <col:37, col:95>
| |   `-ParagraphComment 0x5e73e0 <col:37, col:95>
| |     `-TextComment 0x5e73b0 <col:37, col:95> Text=" number of dynamic bounding volumes (aabb stored in mjData)"
| |-FieldDecl 0x5af5f0 <line:602:3, col:7> col:7 njnt 'int'
| | `-FullComment 0x5e74e0 <col:37, col:53>
| |   `-ParagraphComment 0x5e74b0 <col:37, col:53>
| |     `-TextComment 0x5e7480 <col:37, col:53> Text=" number of joints"
| |-FieldDecl 0x5af680 <line:603:3, col:7> col:7 ngeom 'int'
| | `-FullComment 0x5e75b0 <col:37, col:52>
| |   `-ParagraphComment 0x5e7580 <col:37, col:52>
| |     `-TextComment 0x5e7550 <col:37, col:52> Text=" number of geoms"
| |-FieldDecl 0x5af710 <line:604:3, col:7> col:7 nsite 'int'
| | `-FullComment 0x5e7680 <col:37, col:52>
| |   `-ParagraphComment 0x5e7650 <col:37, col:52>
| |     `-TextComment 0x5e7620 <col:37, col:52> Text=" number of sites"
| |-FieldDecl 0x5af7a0 <line:605:3, col:7> col:7 ncam 'int'
| | `-FullComment 0x5e7770 <col:37, col:54>
| |   `-ParagraphComment 0x5e7740 <col:37, col:54>
| |     `-TextComment 0x5e7710 <col:37, col:54> Text=" number of cameras"
| |-FieldDecl 0x5af830 <line:606:3, col:7> col:7 nlight 'int'
| | `-FullComment 0x5e7840 <col:37, col:53>
| |   `-ParagraphComment 0x5e7810 <col:37, col:53>
| |     `-TextComment 0x5e77e0 <col:37, col:53> Text=" number of lights"
| |-FieldDecl 0x5af8c0 <line:607:3, col:7> col:7 nflex 'int'
| | `-FullComment 0x5e7910 <col:37, col:53>
| |   `-ParagraphComment 0x5e78e0 <col:37, col:53>
| |     `-TextComment 0x5e78b0 <col:37, col:53> Text=" number of flexes"
| |-FieldDecl 0x5af950 <line:608:3, col:7> col:7 nflexvert 'int'
| | `-FullComment 0x5e79e0 <col:37, col:69>
| |   `-ParagraphComment 0x5e79b0 <col:37, col:69>
| |     `-TextComment 0x5e7980 <col:37, col:69> Text=" number of vertices in all flexes"
| |-FieldDecl 0x5af9e0 <line:609:3, col:7> col:7 nflexedge 'int'
| | `-FullComment 0x5e7ab0 <col:37, col:66>
| |   `-ParagraphComment 0x5e7a80 <col:37, col:66>
| |     `-TextComment 0x5e7a50 <col:37, col:66> Text=" number of edges in all flexes"
| |-FieldDecl 0x5afa70 <line:610:3, col:7> col:7 nflexelem 'int'
| | `-FullComment 0x5e7b80 <col:37, col:69>
| |   `-ParagraphComment 0x5e7b50 <col:37, col:69>
| |     `-TextComment 0x5e7b20 <col:37, col:69> Text=" number of elements in all flexes"
| |-FieldDecl 0x5afb00 <line:611:3, col:7> col:7 nflexelemdata 'int'
| | `-FullComment 0x5e7c50 <col:37, col:79>
| |   `-ParagraphComment 0x5e7c20 <col:37, col:79>
| |     `-TextComment 0x5e7bf0 <col:37, col:79> Text=" number of element vertex ids in all flexes"
| |-FieldDecl 0x5afb90 <line:612:3, col:7> col:7 nflexelemedge 'int'
| | `-FullComment 0x5e7d20 <col:37, col:77>
| |   `-ParagraphComment 0x5e7cf0 <col:37, col:77>
| |     `-TextComment 0x5e7cc0 <col:37, col:77> Text=" number of element edge ids in all flexes"
| |-FieldDecl 0x5afc20 <line:613:3, col:7> col:7 nflexshelldata 'int'
| | `-FullComment 0x5e7df0 <col:37, col:86>
| |   `-ParagraphComment 0x5e7dc0 <col:37, col:86>
| |     `-TextComment 0x5e7d90 <col:37, col:86> Text=" number of shell fragment vertex ids in all flexes"
| |-FieldDecl 0x5afcb0 <line:614:3, col:7> col:7 nflexevpair 'int'
| | `-FullComment 0x5e7ec0 <col:37, col:81>
| |   `-ParagraphComment 0x5e7e90 <col:37, col:81>
| |     `-TextComment 0x5e7e60 <col:37, col:81> Text=" number of element-vertex pairs in all flexes"
| |-FieldDecl 0x5afd40 <line:615:3, col:7> col:7 nflextexcoord 'int'
| | `-FullComment 0x5e7f90 <col:37, col:80>
| |   `-ParagraphComment 0x5e7f60 <col:37, col:80>
| |     `-TextComment 0x5e7f30 <col:37, col:80> Text=" number of vertices with texture coordinates"
| |-FieldDecl 0x5afdd0 <line:616:3, col:7> col:7 nmesh 'int'
| | `-FullComment 0x5e8060 <col:37, col:53>
| |   `-ParagraphComment 0x5e8030 <col:37, col:53>
| |     `-TextComment 0x5e8000 <col:37, col:53> Text=" number of meshes"
| |-FieldDecl 0x5afe60 <line:617:3, col:7> col:7 nmeshvert 'int'
| | `-FullComment 0x5e8130 <col:37, col:69>
| |   `-ParagraphComment 0x5e8100 <col:37, col:69>
| |     `-TextComment 0x5e80d0 <col:37, col:69> Text=" number of vertices in all meshes"
| |-FieldDecl 0x5afef0 <line:618:3, col:7> col:7 nmeshnormal 'int'
| | `-FullComment 0x5e8200 <col:37, col:68>
| |   `-ParagraphComment 0x5e81d0 <col:37, col:68>
| |     `-TextComment 0x5e81a0 <col:37, col:68> Text=" number of normals in all meshes"
| |-FieldDecl 0x5aff80 <line:619:3, col:7> col:7 nmeshtexcoord 'int'
| | `-FullComment 0x5e82d0 <col:37, col:70>
| |   `-ParagraphComment 0x5e82a0 <col:37, col:70>
| |     `-TextComment 0x5e8270 <col:37, col:70> Text=" number of texcoords in all meshes"
| |-FieldDecl 0x5b0010 <line:620:3, col:7> col:7 nmeshface 'int'
| | `-FullComment 0x5e83a0 <col:37, col:77>
| |   `-ParagraphComment 0x5e8370 <col:37, col:77>
| |     `-TextComment 0x5e8340 <col:37, col:77> Text=" number of triangular faces in all meshes"
| |-FieldDecl 0x5b00a0 <line:621:3, col:7> col:7 nmeshgraph 'int'
| | `-FullComment 0x5e8470 <col:37, col:74>
| |   `-ParagraphComment 0x5e8440 <col:37, col:74>
| |     `-TextComment 0x5e8410 <col:37, col:74> Text=" number of ints in mesh auxiliary data"
| |-FieldDecl 0x5b0130 <line:622:3, col:7> col:7 nskin 'int'
| | `-FullComment 0x5e8540 <col:37, col:52>
| |   `-ParagraphComment 0x5e8510 <col:37, col:52>
| |     `-TextComment 0x5e84e0 <col:37, col:52> Text=" number of skins"
| |-FieldDecl 0x5b01c0 <line:623:3, col:7> col:7 nskinvert 'int'
| | `-FullComment 0x5e8610 <col:37, col:68>
| |   `-ParagraphComment 0x5e85e0 <col:37, col:68>
| |     `-TextComment 0x5e85b0 <col:37, col:68> Text=" number of vertices in all skins"
| |-FieldDecl 0x5b0250 <line:624:3, col:7> col:7 nskintexvert 'int'
| | `-FullComment 0x5e86e0 <col:37, col:82>
| |   `-ParagraphComment 0x5e86b0 <col:37, col:82>
| |     `-TextComment 0x5e8680 <col:37, col:82> Text=" number of vertiex with texcoords in all skins"
| |-FieldDecl 0x5b02e0 <line:625:3, col:7> col:7 nskinface 'int'
| | `-FullComment 0x5e87c0 <col:37, col:76>
| |   `-ParagraphComment 0x5e8790 <col:37, col:76>
| |     `-TextComment 0x5e8760 <col:37, col:76> Text=" number of triangular faces in all skins"
| |-FieldDecl 0x5b0370 <line:626:3, col:7> col:7 nskinbone 'int'
| | `-FullComment 0x5e8890 <col:37, col:65>
| |   `-ParagraphComment 0x5e8860 <col:37, col:65>
| |     `-TextComment 0x5e8830 <col:37, col:65> Text=" number of bones in all skins"
| |-FieldDecl 0x5b0400 <line:627:3, col:7> col:7 nskinbonevert 'int'
| | `-FullComment 0x5e8960 <col:37, col:73>
| |   `-ParagraphComment 0x5e8930 <col:37, col:73>
| |     `-TextComment 0x5e8900 <col:37, col:73> Text=" number of vertices in all skin bones"
| |-FieldDecl 0x5b0490 <line:628:3, col:7> col:7 nhfield 'int'
| | `-FullComment 0x5e8a30 <col:37, col:59>
| |   `-ParagraphComment 0x5e8a00 <col:37, col:59>
| |     `-TextComment 0x5e89d0 <col:37, col:59> Text=" number of heightfields"
| |-FieldDecl 0x5b0520 <line:629:3, col:7> col:7 nhfielddata 'int'
| | `-FullComment 0x5e8b00 <col:37, col:78>
| |   `-ParagraphComment 0x5e8ad0 <col:37, col:78>
| |     `-TextComment 0x5e8aa0 <col:37, col:78> Text=" number of data points in all heightfields"
| |-FieldDecl 0x5b1110 <line:630:3, col:7> col:7 ntex 'int'
| | `-FullComment 0x5e8bd0 <col:37, col:55>
| |   `-ParagraphComment 0x5e8ba0 <col:37, col:55>
| |     `-TextComment 0x5e8b70 <col:37, col:55> Text=" number of textures"
| |-FieldDecl 0x5b11a0 <line:631:3, col:7> col:7 ntexdata 'int'
| | `-FullComment 0x5e8ca0 <col:37, col:72>
| |   `-ParagraphComment 0x5e8c70 <col:37, col:72>
| |     `-TextComment 0x5e8c40 <col:37, col:72> Text=" number of bytes in texture rgb data"
| |-FieldDecl 0x5b1230 <line:632:3, col:7> col:7 nmat 'int'
| | `-FullComment 0x5e8d70 <col:37, col:56>
| |   `-ParagraphComment 0x5e8d40 <col:37, col:56>
| |     `-TextComment 0x5e8d10 <col:37, col:56> Text=" number of materials"
| |-FieldDecl 0x5b12c0 <line:633:3, col:7> col:7 npair 'int'
| | `-FullComment 0x5e8e40 <col:37, col:68>
| |   `-ParagraphComment 0x5e8e10 <col:37, col:68>
| |     `-TextComment 0x5e8de0 <col:37, col:68> Text=" number of predefined geom pairs"
| |-FieldDecl 0x5b1350 <line:634:3, col:7> col:7 nexclude 'int'
| | `-FullComment 0x5e8f10 <col:37, col:66>
| |   `-ParagraphComment 0x5e8ee0 <col:37, col:66>
| |     `-TextComment 0x5e8eb0 <col:37, col:66> Text=" number of excluded geom pairs"
| |-FieldDecl 0x5b13e0 <line:635:3, col:7> col:7 neq 'int'
| | `-FullComment 0x5e8fe0 <col:37, col:67>
| |   `-ParagraphComment 0x5e8fb0 <col:37, col:67>
| |     `-TextComment 0x5e8f80 <col:37, col:67> Text=" number of equality constraints"
| |-FieldDecl 0x5b1470 <line:636:3, col:7> col:7 ntendon 'int'
| | `-FullComment 0x5e90b0 <col:37, col:54>
| |   `-ParagraphComment 0x5e9080 <col:37, col:54>
| |     `-TextComment 0x5e9050 <col:37, col:54> Text=" number of tendons"
| |-FieldDecl 0x5b1500 <line:637:3, col:7> col:7 nwrap 'int'
| | `-FullComment 0x5e9180 <col:37, col:79>
| |   `-ParagraphComment 0x5e9150 <col:37, col:79>
| |     `-TextComment 0x5e9120 <col:37, col:79> Text=" number of wrap objects in all tendon paths"
| |-FieldDecl 0x5b1590 <line:638:3, col:7> col:7 nsensor 'int'
| | `-FullComment 0x5e9250 <col:37, col:54>
| |   `-ParagraphComment 0x5e9220 <col:37, col:54>
| |     `-TextComment 0x5e91f0 <col:37, col:54> Text=" number of sensors"
| |-FieldDecl 0x5b1620 <line:639:3, col:7> col:7 nnumeric 'int'
| | `-FullComment 0x5e9320 <col:37, col:68>
| |   `-ParagraphComment 0x5e92f0 <col:37, col:68>
| |     `-TextComment 0x5e92c0 <col:37, col:68> Text=" number of numeric custom fields"
| |-FieldDecl 0x5b16b0 <line:640:3, col:7> col:7 nnumericdata 'int'
| | `-FullComment 0x5e93f0 <col:37, col:76>
| |   `-ParagraphComment 0x5e93c0 <col:37, col:76>
| |     `-TextComment 0x5e9390 <col:37, col:76> Text=" number of mjtNums in all numeric fields"
| |-FieldDecl 0x5b1740 <line:641:3, col:7> col:7 ntext 'int'
| | `-FullComment 0x5e94c0 <col:37, col:65>
| |   `-ParagraphComment 0x5e9490 <col:37, col:65>
| |     `-TextComment 0x5e9460 <col:37, col:65> Text=" number of text custom fields"
| |-FieldDecl 0x5b17d0 <line:642:3, col:7> col:7 ntextdata 'int'
| | `-FullComment 0x5e9590 <col:37, col:74>
| |   `-ParagraphComment 0x5e9560 <col:37, col:74>
| |     `-TextComment 0x5e9530 <col:37, col:74> Text=" number of mjtBytes in all text fields"
| |-FieldDecl 0x5b1860 <line:643:3, col:7> col:7 ntuple 'int'
| | `-FullComment 0x5e9660 <col:37, col:66>
| |   `-ParagraphComment 0x5e9630 <col:37, col:66>
| |     `-TextComment 0x5e9600 <col:37, col:66> Text=" number of tuple custom fields"
| |-FieldDecl 0x5b18f0 <line:644:3, col:7> col:7 ntupledata 'int'
| | `-FullComment 0x5de6a0 <col:37, col:74>
| |   `-ParagraphComment 0x5e9700 <col:37, col:74>
| |     `-TextComment 0x5e96d0 <col:37, col:74> Text=" number of objects in all tuple fields"
| |-FieldDecl 0x5b1980 <line:645:3, col:7> col:7 nkey 'int'
| | `-FullComment 0x5de770 <col:37, col:56>
| |   `-ParagraphComment 0x5de740 <col:37, col:56>
| |     `-TextComment 0x5de710 <col:37, col:56> Text=" number of keyframes"
| |-FieldDecl 0x5b1a10 <line:646:3, col:7> col:7 nmocap 'int'
| | `-FullComment 0x5de840 <col:37, col:59>
| |   `-ParagraphComment 0x5de810 <col:37, col:59>
| |     `-TextComment 0x5de7e0 <col:37, col:59> Text=" number of mocap bodies"
| |-FieldDecl 0x5b1aa0 <line:647:3, col:7> col:7 nplugin 'int'
| | `-FullComment 0x5de910 <col:37, col:63>
| |   `-ParagraphComment 0x5de8e0 <col:37, col:63>
| |     `-TextComment 0x5de8b0 <col:37, col:63> Text=" number of plugin instances"
| |-FieldDecl 0x5b1b30 <line:648:3, col:7> col:7 npluginattr 'int'
| | `-FullComment 0x5de9e0 <col:37, col:84>
| |   `-ParagraphComment 0x5de9b0 <col:37, col:84>
| |     `-TextComment 0x5de980 <col:37, col:84> Text=" number of chars in all plugin config attributes"
| |-FieldDecl 0x5b1bc0 <line:649:3, col:7> col:7 nuser_body 'int'
| | `-FullComment 0x5deab0 <col:37, col:67>
| |   `-ParagraphComment 0x5dea80 <col:37, col:67>
| |     `-TextComment 0x5dea50 <col:37, col:67> Text=" number of mjtNums in body_user"
| |-FieldDecl 0x5b1c50 <line:650:3, col:7> col:7 nuser_jnt 'int'
| | `-FullComment 0x5deb80 <col:37, col:66>
| |   `-ParagraphComment 0x5deb50 <col:37, col:66>
| |     `-TextComment 0x5deb20 <col:37, col:66> Text=" number of mjtNums in jnt_user"
| |-FieldDecl 0x5b1ce0 <line:651:3, col:7> col:7 nuser_geom 'int'
| | `-FullComment 0x5dec50 <col:37, col:67>
| |   `-ParagraphComment 0x5dec20 <col:37, col:67>
| |     `-TextComment 0x5debf0 <col:37, col:67> Text=" number of mjtNums in geom_user"
| |-FieldDecl 0x5b1d70 <line:652:3, col:7> col:7 nuser_site 'int'
| | `-FullComment 0x5ded20 <col:37, col:67>
| |   `-ParagraphComment 0x5decf0 <col:37, col:67>
| |     `-TextComment 0x5decc0 <col:37, col:67> Text=" number of mjtNums in site_user"
| |-FieldDecl 0x5b1e00 <line:653:3, col:7> col:7 nuser_cam 'int'
| | `-FullComment 0x5dedf0 <col:37, col:66>
| |   `-ParagraphComment 0x5dedc0 <col:37, col:66>
| |     `-TextComment 0x5ded90 <col:37, col:66> Text=" number of mjtNums in cam_user"
| |-FieldDecl 0x5b1e90 <line:654:3, col:7> col:7 nuser_tendon 'int'
| | `-FullComment 0x5deec0 <col:37, col:69>
| |   `-ParagraphComment 0x5dee90 <col:37, col:69>
| |     `-TextComment 0x5dee60 <col:37, col:69> Text=" number of mjtNums in tendon_user"
| |-FieldDecl 0x5b1f20 <line:655:3, col:7> col:7 nuser_actuator 'int'
| | `-FullComment 0x5def90 <col:37, col:71>
| |   `-ParagraphComment 0x5def60 <col:37, col:71>
| |     `-TextComment 0x5def30 <col:37, col:71> Text=" number of mjtNums in actuator_user"
| |-FieldDecl 0x5b1fb0 <line:656:3, col:7> col:7 nuser_sensor 'int'
| | `-FullComment 0x5df060 <col:37, col:69>
| |   `-ParagraphComment 0x5df030 <col:37, col:69>
| |     `-TextComment 0x5df000 <col:37, col:69> Text=" number of mjtNums in sensor_user"
| |-FieldDecl 0x5b2040 <line:657:3, col:7> col:7 nnames 'int'
| | `-FullComment 0x5df130 <col:37, col:65>
| |   `-ParagraphComment 0x5df100 <col:37, col:65>
| |     `-TextComment 0x5df0d0 <col:37, col:65> Text=" number of chars in all names"
| |-FieldDecl 0x5b2820 <line:658:3, col:7> col:7 nnames_map 'int'
| | `-FullComment 0x5df200 <col:37, col:74>
| |   `-ParagraphComment 0x5df1d0 <col:37, col:74>
| |     `-TextComment 0x5df1a0 <col:37, col:74> Text=" number of slots in the names hash map"
| |-FieldDecl 0x5b28b0 <line:659:3, col:7> col:7 npaths 'int'
| | `-FullComment 0x5df2d0 <col:37, col:65>
| |   `-ParagraphComment 0x5df2a0 <col:37, col:65>
| |     `-TextComment 0x5df270 <col:37, col:65> Text=" number of chars in all paths"
| |-FieldDecl 0x5b2970 <line:662:3, col:7> col:7 nM 'int'
| | `-FullComment 0x5df3a0 <col:37, col:81>
| |   `-ParagraphComment 0x5df370 <col:37, col:81>
| |     `-TextComment 0x5df340 <col:37, col:81> Text=" number of non-zeros in sparse inertia matrix"
| |-FieldDecl 0x5b2a00 <line:663:3, col:7> col:7 nB 'int'
| | `-FullComment 0x5df470 <col:37, col:82>
| |   `-ParagraphComment 0x5df440 <col:37, col:82>
| |     `-TextComment 0x5df410 <col:37, col:82> Text=" number of non-zeros in sparse body-dof matrix"
| |-FieldDecl 0x5b2a90 <line:664:3, col:7> col:7 nC 'int'
| | `-FullComment 0x5df540 <col:37, col:89>
| |   `-ParagraphComment 0x5df510 <col:37, col:89>
| |     `-TextComment 0x5df4e0 <col:37, col:89> Text=" number of non-zeros in sparse reduced dof-dof matrix"
| |-FieldDecl 0x5b2b20 <line:665:3, col:7> col:7 nD 'int'
| | `-FullComment 0x5df610 <col:37, col:81>
| |   `-ParagraphComment 0x5df5e0 <col:37, col:81>
| |     `-TextComment 0x5df5b0 <col:37, col:81> Text=" number of non-zeros in sparse dof-dof matrix"
| |-FieldDecl 0x5b2bb0 <line:666:3, col:7> col:7 ntree 'int'
| | `-FullComment 0x5ed7a0 <col:37, col:79>
| |   `-ParagraphComment 0x5ed770 <col:37, col:79>
| |     `-TextComment 0x5ed740 <col:37, col:79> Text=" number of kinematic trees under world body"
| |-FieldDecl 0x5b2c40 <line:667:3, col:7> col:7 ngravcomp 'int'
| | `-FullComment 0x5ed870 <col:37, col:75>
| |   `-ParagraphComment 0x5ed840 <col:37, col:75>
| |     `-TextComment 0x5ed810 <col:37, col:75> Text=" number of bodies with nonzero gravcomp"
| |-FieldDecl 0x5b2cd0 <line:668:3, col:7> col:7 nemax 'int'
| | `-FullComment 0x5ed940 <col:37, col:81>
| |   `-ParagraphComment 0x5ed910 <col:37, col:81>
| |     `-TextComment 0x5ed8e0 <col:37, col:81> Text=" number of potential equality-constraint rows"
| |-FieldDecl 0x5b2d60 <line:669:3, col:7> col:7 njmax 'int'
| | `-FullComment 0x5eda10 <col:37, col:84>
| |   `-ParagraphComment 0x5ed9e0 <col:37, col:84>
| |     `-TextComment 0x5ed9b0 <col:37, col:84> Text=" number of available rows in constraint Jacobian"
| |-FieldDecl 0x5b2df0 <line:670:3, col:7> col:7 nconmax 'int'
| | `-FullComment 0x5edae0 <col:37, col:81>
| |   `-ParagraphComment 0x5edab0 <col:37, col:81>
| |     `-TextComment 0x5eda80 <col:37, col:81> Text=" number of potential contacts in contact list"
| |-FieldDecl 0x5b2e80 <line:671:3, col:7> col:7 nuserdata 'int'
| | `-FullComment 0x5edbb0 <col:37, col:76>
| |   `-ParagraphComment 0x5edb80 <col:37, col:76>
| |     `-TextComment 0x5edb50 <col:37, col:76> Text=" number of mjtNums reserved for the user"
| |-FieldDecl 0x5b2f10 <line:672:3, col:7> col:7 nsensordata 'int'
| | `-FullComment 0x5edc80 <col:37, col:76>
| |   `-ParagraphComment 0x5edc50 <col:37, col:76>
| |     `-TextComment 0x5edc20 <col:37, col:76> Text=" number of mjtNums in sensor data vector"
| |-FieldDecl 0x5b2fa0 <line:673:3, col:7> col:7 npluginstate 'int'
| | `-FullComment 0x5edd50 <col:37, col:77>
| |   `-ParagraphComment 0x5edd20 <col:37, col:77>
| |     `-TextComment 0x5edcf0 <col:37, col:77> Text=" number of mjtNums in plugin state vector"
| |-FieldDecl 0x5b3050 <line:675:3, col:10> col:10 narena 'size_t':'unsigned long'
| | `-FullComment 0x5ede20 <col:37, col:93>
| |   `-ParagraphComment 0x5eddf0 <col:37, col:93>
| |     `-TextComment 0x5eddc0 <col:37, col:93> Text=" number of bytes in the mjData arena (inclusive of stack)"
| |-FieldDecl 0x5b30d8 <line:676:3, col:10> col:10 nbuffer 'size_t':'unsigned long'
| | `-FullComment 0x5edef0 <col:37, col:62>
| |   `-ParagraphComment 0x5edec0 <col:37, col:62>
| |     `-TextComment 0x5ede90 <col:37, col:62> Text=" number of bytes in buffer"
| |-FieldDecl 0x5b31c0 <line:680:3, col:12> col:12 invalid opt 'mjOption':'struct mjOption_'
| | `-FullComment 0x5edfc0 <col:37, col:52>
| |   `-ParagraphComment 0x5edf90 <col:37, col:52>
| |     `-TextComment 0x5edf60 <col:37, col:52> Text=" physics options"
| |-FieldDecl 0x5b3270 <line:681:3, col:12> col:12 vis 'mjVisual':'struct mjVisual_'
| | `-FullComment 0x5ee090 <col:37, col:58>
| |   `-ParagraphComment 0x5ee060 <col:37, col:58>
| |     `-TextComment 0x5ee030 <col:37, col:58> Text=" visualization options"
| |-FieldDecl 0x5b3320 <line:682:3, col:15> col:15 invalid stat 'mjStatistic':'struct mjStatistic_'
| | `-FullComment 0x5ee160 <col:37, col:53>
| |   `-ParagraphComment 0x5ee130 <col:37, col:53>
| |     `-TextComment 0x5ee100 <col:37, col:53> Text=" model statistics"
| |-FieldDecl 0x5b3410 <line:687:3, col:13> col:13 buffer 'void *'
| | `-FullComment 0x5ee230 <col:37, col:87>
| |   `-ParagraphComment 0x5ee200 <col:37, col:87>
| |     `-TextComment 0x5ee1d0 <col:37, col:87> Text=" main buffer; all pointers point in it    (nbuffer)"
| |-FieldDecl 0x5b3500 <line:690:3, col:13> col:13 invalid qpos0 'int *'
| | `-FullComment 0x5ee300 <col:37, col:86>
| |   `-ParagraphComment 0x5ee2d0 <col:37, col:86>
| |     `-TextComment 0x5ee2a0 <col:37, col:86> Text=" qpos values at default pose              (nq x 1)"
| |-FieldDecl 0x5b3590 <line:691:3, col:13> col:13 invalid qpos_spring 'int *'
| | `-FullComment 0x5ee3d0 <col:37, col:86>
| |   `-ParagraphComment 0x5ee3a0 <col:37, col:86>
| |     `-TextComment 0x5ee370 <col:37, col:86> Text=" reference pose for springs               (nq x 1)"
| |-FieldDecl 0x5b3650 <line:694:3, col:13> col:13 body_parentid 'int *'
| | `-FullComment 0x5ee4a0 <col:37, col:89>
| |   `-ParagraphComment 0x5ee470 <col:37, col:89>
| |     `-TextComment 0x5ee440 <col:37, col:89> Text=" id of body's parent                      (nbody x 1)"
| |-FieldDecl 0x5b36e0 <line:695:3, col:13> col:13 body_rootid 'int *'
| | `-FullComment 0x5ee570 <col:37, col:89>
| |   `-ParagraphComment 0x5ee540 <col:37, col:89>
| |     `-TextComment 0x5ee510 <col:37, col:89> Text=" id of root above body                    (nbody x 1)"
| |-FieldDecl 0x5b3770 <line:696:3, col:13> col:13 body_weldid 'int *'
| | `-FullComment 0x5ee640 <col:37, col:89>
| |   `-ParagraphComment 0x5ee610 <col:37, col:89>
| |     `-TextComment 0x5ee5e0 <col:37, col:89> Text=" id of body that this body is welded to   (nbody x 1)"
| |-FieldDecl 0x5b5000 <line:697:3, col:13> col:13 body_mocapid 'int *'
| | `-FullComment 0x5ee710 <col:37, col:89>
| |   `-ParagraphComment 0x5ee6e0 <col:37, col:89>
| |     `-TextComment 0x5ee6b0 <col:37, col:89> Text=" id of mocap data; -1: none               (nbody x 1)"
| |-FieldDecl 0x5b5090 <line:698:3, col:13> col:13 body_jntnum 'int *'
| | `-FullComment 0x5ee7f0 <col:37, col:89>
| |   `-ParagraphComment 0x5ee7c0 <col:37, col:89>
| |     `-TextComment 0x5ee790 <col:37, col:89> Text=" number of joints for this body           (nbody x 1)"
| |-FieldDecl 0x5b5120 <line:699:3, col:13> col:13 body_jntadr 'int *'
| | `-FullComment 0x5ee8c0 <col:37, col:89>
| |   `-ParagraphComment 0x5ee890 <col:37, col:89>
| |     `-TextComment 0x5ee860 <col:37, col:89> Text=" start addr of joints; -1: no joints      (nbody x 1)"
| |-FieldDecl 0x5b51b0 <line:700:3, col:13> col:13 body_dofnum 'int *'
| | `-FullComment 0x5ee990 <col:37, col:89>
| |   `-ParagraphComment 0x5ee960 <col:37, col:89>
| |     `-TextComment 0x5ee930 <col:37, col:89> Text=" number of motion degrees of freedom      (nbody x 1)"
| |-FieldDecl 0x5b5240 <line:701:3, col:13> col:13 body_dofadr 'int *'
| | `-FullComment 0x5eea60 <col:37, col:89>
| |   `-ParagraphComment 0x5eea30 <col:37, col:89>
| |     `-TextComment 0x5eea00 <col:37, col:89> Text=" start addr of dofs; -1: no dofs          (nbody x 1)"
| |-FieldDecl 0x5b52d0 <line:702:3, col:13> col:13 body_treeid 'int *'
| | `-FullComment 0x5eeb30 <col:37, col:89>
| |   `-ParagraphComment 0x5eeb00 <col:37, col:89>
| |     `-TextComment 0x5eead0 <col:37, col:89> Text=" id of body's kinematic tree; -1: static  (nbody x 1)"
| |-FieldDecl 0x5b5360 <line:703:3, col:13> col:13 body_geomnum 'int *'
| | `-FullComment 0x5eec00 <col:37, col:89>
| |   `-ParagraphComment 0x5eebd0 <col:37, col:89>
| |     `-TextComment 0x5eeba0 <col:37, col:89> Text=" number of geoms                          (nbody x 1)"
| |-FieldDecl 0x5b53f0 <line:704:3, col:13> col:13 body_geomadr 'int *'
| | `-FullComment 0x5eecd0 <col:37, col:89>
| |   `-ParagraphComment 0x5eeca0 <col:37, col:89>
| |     `-TextComment 0x5eec70 <col:37, col:89> Text=" start addr of geoms; -1: no geoms        (nbody x 1)"
| |-FieldDecl 0x5b5480 <line:705:3, col:13> col:13 invalid body_simple 'int *'
| | `-FullComment 0x5eeda0 <col:37, col:89>
| |   `-ParagraphComment 0x5eed70 <col:37, col:89>
| |     `-TextComment 0x5eed40 <col:37, col:89> Text=" 1: diag M; 2: diag M, sliders only       (nbody x 1)"
| |-FieldDecl 0x5b5510 <line:706:3, col:13> col:13 invalid body_sameframe 'int *'
| | `-FullComment 0x5eee70 <col:37, col:89>
| |   `-ParagraphComment 0x5eee40 <col:37, col:89>
| |     `-TextComment 0x5eee10 <col:37, col:89> Text=" same frame as inertia (mjtSameframe)     (nbody x 1)"
| |-FieldDecl 0x5b55a0 <line:707:3, col:13> col:13 invalid body_pos 'int *'
| | `-FullComment 0x5eef40 <col:37, col:89>
| |   `-ParagraphComment 0x5eef10 <col:37, col:89>
| |     `-TextComment 0x5eeee0 <col:37, col:89> Text=" position offset rel. to parent body      (nbody x 3)"
| |-FieldDecl 0x5b5630 <line:708:3, col:13> col:13 invalid body_quat 'int *'
| | `-FullComment 0x5ef010 <col:37, col:89>
| |   `-ParagraphComment 0x5eefe0 <col:37, col:89>
| |     `-TextComment 0x5eefb0 <col:37, col:89> Text=" orientation offset rel. to parent body   (nbody x 4)"
| |-FieldDecl 0x5b56c0 <line:709:3, col:13> col:13 invalid body_ipos 'int *'
| | `-FullComment 0x5ef0e0 <col:37, col:89>
| |   `-ParagraphComment 0x5ef0b0 <col:37, col:89>
| |     `-TextComment 0x5ef080 <col:37, col:89> Text=" local position of center of mass         (nbody x 3)"
| |-FieldDecl 0x5b5750 <line:710:3, col:13> col:13 invalid body_iquat 'int *'
| | `-FullComment 0x5ef1b0 <col:37, col:89>
| |   `-ParagraphComment 0x5ef180 <col:37, col:89>
| |     `-TextComment 0x5ef150 <col:37, col:89> Text=" local orientation of inertia ellipsoid   (nbody x 4)"
| |-FieldDecl 0x5b57e0 <line:711:3, col:13> col:13 invalid body_mass 'int *'
| | `-FullComment 0x5ef280 <col:37, col:89>
| |   `-ParagraphComment 0x5ef250 <col:37, col:89>
| |     `-TextComment 0x5ef220 <col:37, col:89> Text=" mass                                     (nbody x 1)"
| |-FieldDecl 0x5b5870 <line:712:3, col:13> col:13 invalid body_subtreemass 'int *'
| | `-FullComment 0x5ef350 <col:37, col:89>
| |   `-ParagraphComment 0x5ef320 <col:37, col:89>
| |     `-TextComment 0x5ef2f0 <col:37, col:89> Text=" mass of subtree starting at this body    (nbody x 1)"
| |-FieldDecl 0x5b5900 <line:713:3, col:13> col:13 invalid body_inertia 'int *'
| | `-FullComment 0x5ef420 <col:37, col:89>
| |   `-ParagraphComment 0x5ef3f0 <col:37, col:89>
| |     `-TextComment 0x5ef3c0 <col:37, col:89> Text=" diagonal inertia in ipos/iquat frame     (nbody x 3)"
| |-FieldDecl 0x5b5990 <line:714:3, col:13> col:13 invalid body_invweight0 'int *'
| | `-FullComment 0x5ef4f0 <col:37, col:89>
| |   `-ParagraphComment 0x5ef4c0 <col:37, col:89>
| |     `-TextComment 0x5ef490 <col:37, col:89> Text=" mean inv inert in qpos0 (trn, rot)       (nbody x 2)"
| |-FieldDecl 0x5b5a20 <line:715:3, col:13> col:13 invalid body_gravcomp 'int *'
| | `-FullComment 0x5ef5c0 <col:37, col:89>
| |   `-ParagraphComment 0x5ef590 <col:37, col:89>
| |     `-TextComment 0x5ef560 <col:37, col:89> Text=" antigravity force, units of body weight  (nbody x 1)"
| |-FieldDecl 0x5b5ab0 <line:716:3, col:13> col:13 invalid body_margin 'int *'
| | `-FullComment 0x5ef690 <col:37, col:89>
| |   `-ParagraphComment 0x5ef660 <col:37, col:89>
| |     `-TextComment 0x5ef630 <col:37, col:89> Text=" MAX over all geom margins                (nbody x 1)"
| |-FieldDecl 0x5b5b40 <line:717:3, col:13> col:13 invalid body_user 'int *'
| | `-FullComment 0x5ef770 <col:37, col:98>
| |   `-ParagraphComment 0x5ef730 <col:37, col:98>
| |     `-TextComment 0x5ef700 <col:37, col:98> Text=" user data                                (nbody x nuser_body)"
| |-FieldDecl 0x5b5bd0 <line:718:3, col:13> col:13 body_plugin 'int *'
| | `-FullComment 0x5ef840 <col:37, col:89>
| |   `-ParagraphComment 0x5ef810 <col:37, col:89>
| |     `-TextComment 0x5ef7e0 <col:37, col:89> Text=" plugin instance id; -1: not in use       (nbody x 1)"
| |-FieldDecl 0x5b5c60 <line:719:3, col:13> col:13 body_contype 'int *'
| | `-FullComment 0x5ef910 <col:37, col:89>
| |   `-ParagraphComment 0x5ef8e0 <col:37, col:89>
| |     `-TextComment 0x5ef8b0 <col:37, col:89> Text=" OR over all geom contypes                (nbody x 1)"
| |-FieldDecl 0x5b5cf0 <line:720:3, col:13> col:13 body_conaffinity 'int *'
| | `-FullComment 0x5ef9e0 <col:37, col:89>
| |   `-ParagraphComment 0x5ef9b0 <col:37, col:89>
| |     `-TextComment 0x5ef980 <col:37, col:89> Text=" OR over all geom conaffinities           (nbody x 1)"
| |-FieldDecl 0x5b5d80 <line:721:3, col:13> col:13 body_bvhadr 'int *'
| | `-FullComment 0x5efab0 <col:37, col:89>
| |   `-ParagraphComment 0x5efa80 <col:37, col:89>
| |     `-TextComment 0x5efa50 <col:37, col:89> Text=" address of bvh root                      (nbody x 1)"
| |-FieldDecl 0x5b5e10 <line:722:3, col:13> col:13 body_bvhnum 'int *'
| | `-FullComment 0x5efb80 <col:37, col:89>
| |   `-ParagraphComment 0x5efb50 <col:37, col:89>
| |     `-TextComment 0x5efb20 <col:37, col:89> Text=" number of bounding volumes               (nbody x 1)"
| |-FieldDecl 0x5b5ed0 <line:725:3, col:13> col:13 bvh_depth 'int *'
| | `-FullComment 0x5efc50 <col:37, col:88>
| |   `-ParagraphComment 0x5efc20 <col:37, col:88>
| |     `-TextComment 0x5efbf0 <col:37, col:88> Text=" depth in the bounding volume hierarchy   (nbvh x 1)"
| |-FieldDecl 0x5b5f60 <line:726:3, col:13> col:13 bvh_child 'int *'
| | `-FullComment 0x5efd20 <col:37, col:88>
| |   `-ParagraphComment 0x5efcf0 <col:37, col:88>
| |     `-TextComment 0x5efcc0 <col:37, col:88> Text=" left and right children in tree          (nbvh x 2)"
| |-FieldDecl 0x5b6f60 <line:727:3, col:13> col:13 bvh_nodeid 'int *'
| | `-FullComment 0x5efdf0 <col:37, col:88>
| |   `-ParagraphComment 0x5efdc0 <col:37, col:88>
| |     `-TextComment 0x5efd90 <col:37, col:88> Text=" geom or elem id of node; -1: non-leaf    (nbvh x 1)"
| |-FieldDecl 0x5b6ff0 <line:728:3, col:13> col:13 invalid bvh_aabb 'int *'
| | `-FullComment 0x5efec0 <col:37, col:94>
| |   `-ParagraphComment 0x5efe90 <col:37, col:94>
| |     `-TextComment 0x5efe60 <col:37, col:94> Text=" local bounding box (center, size)        (nbvhstatic x 6)"
| |-FieldDecl 0x5b70b0 <line:731:3, col:13> col:13 jnt_type 'int *'
| | `-FullComment 0x5eff90 <col:37, col:88>
| |   `-ParagraphComment 0x5eff60 <col:37, col:88>
| |     `-TextComment 0x5eff30 <col:37, col:88> Text=" type of joint (mjtJoint)                 (njnt x 1)"
| |-FieldDecl 0x5b7140 <line:732:3, col:13> col:13 jnt_qposadr 'int *'
| | `-FullComment 0x5f0060 <col:37, col:88>
| |   `-ParagraphComment 0x5f0030 <col:37, col:88>
| |     `-TextComment 0x5f0000 <col:37, col:88> Text=" start addr in 'qpos' for joint's data    (njnt x 1)"
| |-FieldDecl 0x5b71d0 <line:733:3, col:13> col:13 jnt_dofadr 'int *'
| | `-FullComment 0x5f0130 <col:37, col:88>
| |   `-ParagraphComment 0x5f0100 <col:37, col:88>
| |     `-TextComment 0x5f00d0 <col:37, col:88> Text=" start addr in 'qvel' for joint's data    (njnt x 1)"
| |-FieldDecl 0x5b7260 <line:734:3, col:13> col:13 jnt_bodyid 'int *'
| | `-FullComment 0x5f0200 <col:37, col:88>
| |   `-ParagraphComment 0x5f01d0 <col:37, col:88>
| |     `-TextComment 0x5f01a0 <col:37, col:88> Text=" id of joint's body                       (njnt x 1)"
| |-FieldDecl 0x5b72f0 <line:735:3, col:13> col:13 jnt_group 'int *'
| | `-FullComment 0x5f02d0 <col:37, col:88>
| |   `-ParagraphComment 0x5f02a0 <col:37, col:88>
| |     `-TextComment 0x5f0270 <col:37, col:88> Text=" group for visibility                     (njnt x 1)"
| |-FieldDecl 0x5b7380 <line:736:3, col:13> col:13 invalid jnt_limited 'int *'
| | `-FullComment 0x5f03a0 <col:37, col:88>
| |   `-ParagraphComment 0x5f0370 <col:37, col:88>
| |     `-TextComment 0x5f0340 <col:37, col:88> Text=" does joint have limits                   (njnt x 1)"
| |-FieldDecl 0x5b7410 <line:737:3, col:13> col:13 invalid jnt_actfrclimited 'int *'
| | `-FullComment 0x5f0470 <col:37, col:88>
| |   `-ParagraphComment 0x5f0440 <col:37, col:88>
| |     `-TextComment 0x5f0410 <col:37, col:88> Text=" does joint have actuator force limits    (njnt x 1)"
| |-FieldDecl 0x5b74a0 <line:738:3, col:13> col:13 invalid jnt_actgravcomp 'int *'
| | `-FullComment 0x5f0540 <col:37, col:88>
| |   `-ParagraphComment 0x5f0510 <col:37, col:88>
| |     `-TextComment 0x5f04e0 <col:37, col:88> Text=" is gravcomp force applied via actuators  (njnt x 1)"
| |-FieldDecl 0x5b7530 <line:739:3, col:13> col:13 invalid jnt_solref 'int *'
| | `-FullComment 0x5f0610 <col:37, col:93>
| |   `-ParagraphComment 0x5f05e0 <col:37, col:93>
| |     `-TextComment 0x5f05b0 <col:37, col:93> Text=" constraint solver reference: limit       (njnt x mjNREF)"
| |-FieldDecl 0x5b75c0 <line:740:3, col:13> col:13 invalid jnt_solimp 'int *'
| | `-FullComment 0x5f06e0 <col:37, col:93>
| |   `-ParagraphComment 0x5f06b0 <col:37, col:93>
| |     `-TextComment 0x5f0680 <col:37, col:93> Text=" constraint solver impedance: limit       (njnt x mjNIMP)"
| |-FieldDecl 0x5b7650 <line:741:3, col:13> col:13 invalid jnt_pos 'int *'
| | `-FullComment 0x5f07d0 <col:37, col:88>
| |   `-ParagraphComment 0x5f07a0 <col:37, col:88>
| |     `-TextComment 0x5f0770 <col:37, col:88> Text=" local anchor position                    (njnt x 3)"
| |-FieldDecl 0x5b76e0 <line:742:3, col:13> col:13 invalid jnt_axis 'int *'
| | `-FullComment 0x5f08a0 <col:37, col:88>
| |   `-ParagraphComment 0x5f0870 <col:37, col:88>
| |     `-TextComment 0x5f0840 <col:37, col:88> Text=" local joint axis                         (njnt x 3)"
| |-FieldDecl 0x5b7770 <line:743:3, col:13> col:13 invalid jnt_stiffness 'int *'
| | `-FullComment 0x5f0970 <col:37, col:88>
| |   `-ParagraphComment 0x5f0940 <col:37, col:88>
| |     `-TextComment 0x5f0910 <col:37, col:88> Text=" stiffness coefficient                    (njnt x 1)"
| |-FieldDecl 0x5b7800 <line:744:3, col:13> col:13 invalid jnt_range 'int *'
| | `-FullComment 0x5f0a40 <col:37, col:88>
| |   `-ParagraphComment 0x5f0a10 <col:37, col:88>
| |     `-TextComment 0x5f09e0 <col:37, col:88> Text=" joint limits                             (njnt x 2)"
| |-FieldDecl 0x5b7890 <line:745:3, col:13> col:13 invalid jnt_actfrcrange 'int *'
| | `-FullComment 0x5f0b10 <col:37, col:88>
| |   `-ParagraphComment 0x5f0ae0 <col:37, col:88>
| |     `-TextComment 0x5f0ab0 <col:37, col:88> Text=" range of total actuator force            (njnt x 2)"
| |-FieldDecl 0x5b7920 <line:746:3, col:13> col:13 invalid jnt_margin 'int *'
| | `-FullComment 0x5f0be0 <col:37, col:88>
| |   `-ParagraphComment 0x5f0bb0 <col:37, col:88>
| |     `-TextComment 0x5f0b80 <col:37, col:88> Text=" min distance for limit detection         (njnt x 1)"
| |-FieldDecl 0x5b79b0 <line:747:3, col:13> col:13 invalid jnt_user 'int *'
| | `-FullComment 0x5f0cb0 <col:37, col:96>
| |   `-ParagraphComment 0x5f0c80 <col:37, col:96>
| |     `-TextComment 0x5f0c50 <col:37, col:96> Text=" user data                                (njnt x nuser_jnt)"
| |-FieldDecl 0x5b7a70 <line:750:3, col:13> col:13 dof_bodyid 'int *'
| | `-FullComment 0x5f0d80 <col:37, col:86>
| |   `-ParagraphComment 0x5f0d50 <col:37, col:86>
| |     `-TextComment 0x5f0d20 <col:37, col:86> Text=" id of dof's body                         (nv x 1)"
| |-FieldDecl 0x5b7b00 <line:751:3, col:13> col:13 dof_jntid 'int *'
| | `-FullComment 0x5f0e50 <col:37, col:86>
| |   `-ParagraphComment 0x5f0e20 <col:37, col:86>
| |     `-TextComment 0x5f0df0 <col:37, col:86> Text=" id of dof's joint                        (nv x 1)"
| |-FieldDecl 0x5b7b90 <line:752:3, col:13> col:13 dof_parentid 'int *'
| | `-FullComment 0x5f0f20 <col:37, col:86>
| |   `-ParagraphComment 0x5f0ef0 <col:37, col:86>
| |     `-TextComment 0x5f0ec0 <col:37, col:86> Text=" id of dof's parent; -1: none             (nv x 1)"
| |-FieldDecl 0x5b7c20 <line:753:3, col:13> col:13 dof_treeid 'int *'
| | `-FullComment 0x5f0ff0 <col:37, col:86>
| |   `-ParagraphComment 0x5f0fc0 <col:37, col:86>
| |     `-TextComment 0x5f0f90 <col:37, col:86> Text=" id of dof's kinematic tree               (nv x 1)"
| |-FieldDecl 0x5b7cb0 <line:754:3, col:13> col:13 dof_Madr 'int *'
| | `-FullComment 0x5f10c0 <col:37, col:86>
| |   `-ParagraphComment 0x5f1090 <col:37, col:86>
| |     `-TextComment 0x5f1060 <col:37, col:86> Text=" dof address in M-diagonal                (nv x 1)"
| |-FieldDecl 0x5b7d40 <line:755:3, col:13> col:13 dof_simplenum 'int *'
| | `-FullComment 0x5f1190 <col:37, col:86>
| |   `-ParagraphComment 0x5f1160 <col:37, col:86>
| |     `-TextComment 0x5f1130 <col:37, col:86> Text=" number of consecutive simple dofs        (nv x 1)"
| |-FieldDecl 0x5b7dd0 <line:756:3, col:13> col:13 invalid dof_solref 'int *'
| | `-FullComment 0x5f1260 <col:37, col:91>
| |   `-ParagraphComment 0x5f1230 <col:37, col:91>
| |     `-TextComment 0x5f1200 <col:37, col:91> Text=" constraint solver reference:frictionloss (nv x mjNREF)"
| |-FieldDecl 0x5b7e60 <line:757:3, col:13> col:13 invalid dof_solimp 'int *'
| | `-FullComment 0x5f1330 <col:37, col:91>
| |   `-ParagraphComment 0x5f1300 <col:37, col:91>
| |     `-TextComment 0x5f12d0 <col:37, col:91> Text=" constraint solver impedance:frictionloss (nv x mjNIMP)"
| |-FieldDecl 0x5b7ef0 <line:758:3, col:13> col:13 invalid dof_frictionloss 'int *'
| | `-FullComment 0x5f1400 <col:37, col:86>
| |   `-ParagraphComment 0x5f13d0 <col:37, col:86>
| |     `-TextComment 0x5f13a0 <col:37, col:86> Text=" dof friction loss                        (nv x 1)"
| |-FieldDecl 0x5b86f0 <line:759:3, col:13> col:13 invalid dof_armature 'int *'
| | `-FullComment 0x5f14d0 <col:37, col:86>
| |   `-ParagraphComment 0x5f14a0 <col:37, col:86>
| |     `-TextComment 0x5f1470 <col:37, col:86> Text=" dof armature inertia/mass                (nv x 1)"
| |-FieldDecl 0x5b8780 <line:760:3, col:13> col:13 invalid dof_damping 'int *'
| | `-FullComment 0x5f15a0 <col:37, col:86>
| |   `-ParagraphComment 0x5f1570 <col:37, col:86>
| |     `-TextComment 0x5f1540 <col:37, col:86> Text=" damping coefficient                      (nv x 1)"
| |-FieldDecl 0x5b8810 <line:761:3, col:13> col:13 invalid dof_invweight0 'int *'
| | `-FullComment 0x5f1670 <col:37, col:86>
| |   `-ParagraphComment 0x5f1640 <col:37, col:86>
| |     `-TextComment 0x5f1610 <col:37, col:86> Text=" diag. inverse inertia in qpos0           (nv x 1)"
| |-FieldDecl 0x5b88a0 <line:762:3, col:13> col:13 invalid dof_M0 'int *'
| | `-FullComment 0x5f1740 <col:37, col:86>
| |   `-ParagraphComment 0x5f1710 <col:37, col:86>
| |     `-TextComment 0x5f16e0 <col:37, col:86> Text=" diag. inertia in qpos0                   (nv x 1)"
| |-FieldDecl 0x5b8960 <line:765:3, col:13> col:13 geom_type 'int *'
| | `-FullComment 0x5f1820 <col:37, col:89>
| |   `-ParagraphComment 0x5f17f0 <col:37, col:89>
| |     `-TextComment 0x5f17c0 <col:37, col:89> Text=" geometric type (mjtGeom)                 (ngeom x 1)"
| |-FieldDecl 0x5b89f0 <line:766:3, col:13> col:13 geom_contype 'int *'
| | `-FullComment 0x5f18f0 <col:37, col:89>
| |   `-ParagraphComment 0x5f18c0 <col:37, col:89>
| |     `-TextComment 0x5f1890 <col:37, col:89> Text=" geom contact type                        (ngeom x 1)"
| |-FieldDecl 0x5b8a80 <line:767:3, col:13> col:13 geom_conaffinity 'int *'
| | `-FullComment 0x5f19c0 <col:37, col:89>
| |   `-ParagraphComment 0x5f1990 <col:37, col:89>
| |     `-TextComment 0x5f1960 <col:37, col:89> Text=" geom contact affinity                    (ngeom x 1)"
| |-FieldDecl 0x5b8b10 <line:768:3, col:13> col:13 geom_condim 'int *'
| | `-FullComment 0x5f1a90 <col:37, col:89>
| |   `-ParagraphComment 0x5f1a60 <col:37, col:89>
| |     `-TextComment 0x5f1a30 <col:37, col:89> Text=" contact dimensionality (1, 3, 4, 6)      (ngeom x 1)"
| |-FieldDecl 0x5b8ba0 <line:769:3, col:13> col:13 geom_bodyid 'int *'
| | `-FullComment 0x5f1b60 <col:37, col:89>
| |   `-ParagraphComment 0x5f1b30 <col:37, col:89>
| |     `-TextComment 0x5f1b00 <col:37, col:89> Text=" id of geom's body                        (ngeom x 1)"
| |-FieldDecl 0x5b8c30 <line:770:3, col:13> col:13 geom_dataid 'int *'
| | `-FullComment 0x5f1c30 <col:37, col:89>
| |   `-ParagraphComment 0x5f1c00 <col:37, col:89>
| |     `-TextComment 0x5f1bd0 <col:37, col:89> Text=" id of geom's mesh/hfield; -1: none       (ngeom x 1)"
| |-FieldDecl 0x5b8cc0 <line:771:3, col:13> col:13 geom_matid 'int *'
| | `-FullComment 0x5f1d00 <col:37, col:89>
| |   `-ParagraphComment 0x5f1cd0 <col:37, col:89>
| |     `-TextComment 0x5f1ca0 <col:37, col:89> Text=" material id for rendering; -1: none      (ngeom x 1)"
| |-FieldDecl 0x5b8d50 <line:772:3, col:13> col:13 geom_group 'int *'
| | `-FullComment 0x5f1dd0 <col:37, col:89>
| |   `-ParagraphComment 0x5f1da0 <col:37, col:89>
| |     `-TextComment 0x5f1d70 <col:37, col:89> Text=" group for visibility                     (ngeom x 1)"
| |-FieldDecl 0x5b8de0 <line:773:3, col:13> col:13 geom_priority 'int *'
| | `-FullComment 0x5f1ea0 <col:37, col:89>
| |   `-ParagraphComment 0x5f1e70 <col:37, col:89>
| |     `-TextComment 0x5f1e40 <col:37, col:89> Text=" geom contact priority                    (ngeom x 1)"
| |-FieldDecl 0x5b8e70 <line:774:3, col:13> col:13 geom_plugin 'int *'
| | `-FullComment 0x5f1f70 <col:37, col:89>
| |   `-ParagraphComment 0x5f1f40 <col:37, col:89>
| |     `-TextComment 0x5f1f10 <col:37, col:89> Text=" plugin instance id; -1: not in use       (ngeom x 1)"
| |-FieldDecl 0x5b8f00 <line:775:3, col:13> col:13 invalid geom_sameframe 'int *'
| | `-FullComment 0x5f2040 <col:37, col:89>
| |   `-ParagraphComment 0x5f2010 <col:37, col:89>
| |     `-TextComment 0x5f1fe0 <col:37, col:89> Text=" same frame as body (mjtSameframe)        (ngeom x 1)"
| |-FieldDecl 0x5b8f90 <line:776:3, col:13> col:13 invalid geom_solmix 'int *'
| | `-FullComment 0x5f2110 <col:37, col:89>
| |   `-ParagraphComment 0x5f20e0 <col:37, col:89>
| |     `-TextComment 0x5f20b0 <col:37, col:89> Text=" mixing coef for solref/imp in geom pair  (ngeom x 1)"
| |-FieldDecl 0x5b9020 <line:777:3, col:13> col:13 invalid geom_solref 'int *'
| | `-FullComment 0x5f21e0 <col:37, col:94>
| |   `-ParagraphComment 0x5f21b0 <col:37, col:94>
| |     `-TextComment 0x5f2180 <col:37, col:94> Text=" constraint solver reference: contact     (ngeom x mjNREF)"
| |-FieldDecl 0x5b90b0 <line:778:3, col:13> col:13 invalid geom_solimp 'int *'
| | `-FullComment 0x5f22b0 <col:37, col:94>
| |   `-ParagraphComment 0x5f2280 <col:37, col:94>
| |     `-TextComment 0x5f2250 <col:37, col:94> Text=" constraint solver impedance: contact     (ngeom x mjNIMP)"
| |-FieldDecl 0x5b9140 <line:779:3, col:13> col:13 invalid geom_size 'int *'
| | `-FullComment 0x5f2380 <col:37, col:89>
| |   `-ParagraphComment 0x5f2350 <col:37, col:89>
| |     `-TextComment 0x5f2320 <col:37, col:89> Text=" geom-specific size parameters            (ngeom x 3)"
| |-FieldDecl 0x5b91d0 <line:780:3, col:13> col:13 invalid geom_aabb 'int *'
| | `-FullComment 0x5f2450 <col:37, col:89>
| |   `-ParagraphComment 0x5f2420 <col:37, col:89>
| |     `-TextComment 0x5f23f0 <col:37, col:89> Text=" bounding box, (center, size)             (ngeom x 6)"
| |-FieldDecl 0x5b9260 <line:781:3, col:13> col:13 invalid geom_rbound 'int *'
| | `-FullComment 0x5f2520 <col:37, col:89>
| |   `-ParagraphComment 0x5f24f0 <col:37, col:89>
| |     `-TextComment 0x5f24c0 <col:37, col:89> Text=" radius of bounding sphere                (ngeom x 1)"
| |-FieldDecl 0x5b92f0 <line:782:3, col:13> col:13 invalid geom_pos 'int *'
| | `-FullComment 0x5f25f0 <col:37, col:89>
| |   `-ParagraphComment 0x5f25c0 <col:37, col:89>
| |     `-TextComment 0x5f2590 <col:37, col:89> Text=" local position offset rel. to body       (ngeom x 3)"
| |-FieldDecl 0x5b9380 <line:783:3, col:13> col:13 invalid geom_quat 'int *'
| | `-FullComment 0x5f26c0 <col:37, col:89>
| |   `-ParagraphComment 0x5f2690 <col:37, col:89>
| |     `-TextComment 0x5f2660 <col:37, col:89> Text=" local orientation offset rel. to body    (ngeom x 4)"
| |-FieldDecl 0x5b9410 <line:784:3, col:13> col:13 invalid geom_friction 'int *'
| | `-FullComment 0x5f27a0 <col:37, col:89>
| |   `-ParagraphComment 0x5f2760 <col:37, col:89>
| |     `-TextComment 0x5f2730 <col:37, col:89> Text=" friction for (slide, spin, roll)         (ngeom x 3)"
| |-FieldDecl 0x5b94a0 <line:785:3, col:13> col:13 invalid geom_margin 'int *'
| | `-FullComment 0x5f28c0 <col:37, col:89>
| |   `-ParagraphComment 0x5f2890 <col:37, col:89>
| |     |-TextComment 0x5f2810 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x5f2830 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x5f2850 <col:67, col:89> Text="            (ngeom x 1)"
| |-FieldDecl 0x5b9530 <line:786:3, col:13> col:13 invalid geom_gap 'int *'
| | `-FullComment 0x5f29e0 <col:37, col:89>
| |   `-ParagraphComment 0x5f29b0 <col:37, col:89>
| |     |-TextComment 0x5f2930 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x5f2950 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x5f2970 <col:70, col:89> Text="-gap     (ngeom x 1)"
| |-FieldDecl 0x5b95c0 <line:787:3, col:13> col:13 invalid geom_fluid 'int *'
| | `-FullComment 0x5f2ab0 <col:37, col:96>
| |   `-ParagraphComment 0x5f2a80 <col:37, col:96>
| |     `-TextComment 0x5f2a50 <col:37, col:96> Text=" fluid interaction parameters             (ngeom x mjNFLUID)"
| |-FieldDecl 0x5b9650 <line:788:3, col:13> col:13 invalid geom_user 'int *'
| | `-FullComment 0x5f2b80 <col:37, col:98>
| |   `-ParagraphComment 0x5f2b50 <col:37, col:98>
| |     `-TextComment 0x5f2b20 <col:37, col:98> Text=" user data                                (ngeom x nuser_geom)"
| |-FieldDecl 0x5bae80 <line:789:3, col:13> col:13 geom_rgba 'float *'
| | `-FullComment 0x5f2c50 <col:37, col:89>
| |   `-ParagraphComment 0x5f2c20 <col:37, col:89>
| |     `-TextComment 0x5f2bf0 <col:37, col:89> Text=" rgba when material is omitted            (ngeom x 4)"
| |-FieldDecl 0x5baf40 <line:792:3, col:13> col:13 site_type 'int *'
| | `-FullComment 0x5f2d20 <col:37, col:89>
| |   `-ParagraphComment 0x5f2cf0 <col:37, col:89>
| |     `-TextComment 0x5f2cc0 <col:37, col:89> Text=" geom type for rendering (mjtGeom)        (nsite x 1)"
| |-FieldDecl 0x5bafd0 <line:793:3, col:13> col:13 site_bodyid 'int *'
| | `-FullComment 0x5f2df0 <col:37, col:89>
| |   `-ParagraphComment 0x5f2dc0 <col:37, col:89>
| |     `-TextComment 0x5f2d90 <col:37, col:89> Text=" id of site's body                        (nsite x 1)"
| |-FieldDecl 0x5bb060 <line:794:3, col:13> col:13 site_matid 'int *'
| | `-FullComment 0x5f2ec0 <col:37, col:89>
| |   `-ParagraphComment 0x5f2e90 <col:37, col:89>
| |     `-TextComment 0x5f2e60 <col:37, col:89> Text=" material id for rendering; -1: none      (nsite x 1)"
| |-FieldDecl 0x5bb0f0 <line:795:3, col:13> col:13 site_group 'int *'
| | `-FullComment 0x5f2f90 <col:37, col:89>
| |   `-ParagraphComment 0x5f2f60 <col:37, col:89>
| |     `-TextComment 0x5f2f30 <col:37, col:89> Text=" group for visibility                     (nsite x 1)"
| |-FieldDecl 0x5bb180 <line:796:3, col:13> col:13 invalid site_sameframe 'int *'
| | `-FullComment 0x5f3060 <col:37, col:89>
| |   `-ParagraphComment 0x5f3030 <col:37, col:89>
| |     `-TextComment 0x5f3000 <col:37, col:89> Text=" same frame as body (mjtSameframe)        (nsite x 1)"
| |-FieldDecl 0x5bb210 <line:797:3, col:13> col:13 invalid site_size 'int *'
| | `-FullComment 0x5f3130 <col:37, col:89>
| |   `-ParagraphComment 0x5f3100 <col:37, col:89>
| |     `-TextComment 0x5f30d0 <col:37, col:89> Text=" geom size for rendering                  (nsite x 3)"
| |-FieldDecl 0x5bb2a0 <line:798:3, col:13> col:13 invalid site_pos 'int *'
| | `-FullComment 0x5f3200 <col:37, col:89>
| |   `-ParagraphComment 0x5f31d0 <col:37, col:89>
| |     `-TextComment 0x5f31a0 <col:37, col:89> Text=" local position offset rel. to body       (nsite x 3)"
| |-FieldDecl 0x5bb330 <line:799:3, col:13> col:13 invalid site_quat 'int *'
| | `-FullComment 0x5f32d0 <col:37, col:89>
| |   `-ParagraphComment 0x5f32a0 <col:37, col:89>
| |     `-TextComment 0x5f3270 <col:37, col:89> Text=" local orientation offset rel. to body    (nsite x 4)"
| |-FieldDecl 0x5bb3c0 <line:800:3, col:13> col:13 invalid site_user 'int *'
| | `-FullComment 0x5f33a0 <col:37, col:98>
| |   `-ParagraphComment 0x5f3370 <col:37, col:98>
| |     `-TextComment 0x5f3340 <col:37, col:98> Text=" user data                                (nsite x nuser_site)"
| |-FieldDecl 0x5bb450 <line:801:3, col:13> col:13 site_rgba 'float *'
| | `-FullComment 0x5f3470 <col:37, col:89>
| |   `-ParagraphComment 0x5f3440 <col:37, col:89>
| |     `-TextComment 0x5f3410 <col:37, col:89> Text=" rgba when material is omitted            (nsite x 4)"
| |-FieldDecl 0x5bb510 <line:804:3, col:13> col:13 cam_mode 'int *'
| | `-FullComment 0x5f3540 <col:37, col:88>
| |   `-ParagraphComment 0x5f3510 <col:37, col:88>
| |     `-TextComment 0x5f34e0 <col:37, col:88> Text=" camera tracking mode (mjtCamLight)       (ncam x 1)"
| |-FieldDecl 0x5bb5a0 <line:805:3, col:13> col:13 cam_bodyid 'int *'
| | `-FullComment 0x5f3610 <col:37, col:88>
| |   `-ParagraphComment 0x5f35e0 <col:37, col:88>
| |     `-TextComment 0x5f35b0 <col:37, col:88> Text=" id of camera's body                      (ncam x 1)"
| |-FieldDecl 0x5bb630 <line:806:3, col:13> col:13 cam_targetbodyid 'int *'
| | `-FullComment 0x5f36e0 <col:37, col:88>
| |   `-ParagraphComment 0x5f36b0 <col:37, col:88>
| |     `-TextComment 0x5f3680 <col:37, col:88> Text=" id of targeted body; -1: none            (ncam x 1)"
| |-FieldDecl 0x5bb6c0 <line:807:3, col:13> col:13 invalid cam_pos 'int *'
| | `-FullComment 0x5f37d0 <col:37, col:88>
| |   `-ParagraphComment 0x5f37a0 <col:37, col:88>
| |     `-TextComment 0x5f3750 <col:37, col:88> Text=" position rel. to body frame              (ncam x 3)"
| |-FieldDecl 0x5bb750 <line:808:3, col:13> col:13 invalid cam_quat 'int *'
| | `-FullComment 0x5f38a0 <col:37, col:88>
| |   `-ParagraphComment 0x5f3870 <col:37, col:88>
| |     `-TextComment 0x5f3840 <col:37, col:88> Text=" orientation rel. to body frame           (ncam x 4)"
| |-FieldDecl 0x5bb7e0 <line:809:3, col:13> col:13 invalid cam_poscom0 'int *'
| | `-FullComment 0x5f3970 <col:37, col:88>
| |   `-ParagraphComment 0x5f3940 <col:37, col:88>
| |     `-TextComment 0x5f3910 <col:37, col:88> Text=" global position rel. to sub-com in qpos0 (ncam x 3)"
| |-FieldDecl 0x5bb870 <line:810:3, col:13> col:13 invalid cam_pos0 'int *'
| | `-FullComment 0x5f3a40 <col:37, col:88>
| |   `-ParagraphComment 0x5f3a10 <col:37, col:88>
| |     `-TextComment 0x5f39e0 <col:37, col:88> Text=" global position rel. to body in qpos0    (ncam x 3)"
| |-FieldDecl 0x5bb900 <line:811:3, col:13> col:13 invalid cam_mat0 'int *'
| | `-FullComment 0x5f3b10 <col:37, col:88>
| |   `-ParagraphComment 0x5f3ae0 <col:37, col:88>
| |     `-TextComment 0x5f3ab0 <col:37, col:88> Text=" global orientation in qpos0              (ncam x 9)"
| |-FieldDecl 0x5bb990 <line:812:3, col:13> col:13 cam_orthographic 'int *'
| | `-FullComment 0x5f3be0 <col:37, col:88>
| |   `-ParagraphComment 0x5f3bb0 <col:37, col:88>
| |     `-TextComment 0x5f3b80 <col:37, col:88> Text=" orthographic camera; 0: no, 1: yes       (ncam x 1)"
| |-FieldDecl 0x5bba20 <line:813:3, col:13> col:13 invalid cam_fovy 'int *'
| | `-FullComment 0x5f3cb0 <col:37, col:88>
| |   `-ParagraphComment 0x5f3c80 <col:37, col:88>
| |     `-TextComment 0x5f3c50 <col:37, col:88> Text=" y field-of-view (ortho ? len : deg)      (ncam x 1)"
| |-FieldDecl 0x5bbab0 <line:814:3, col:13> col:13 invalid cam_ipd 'int *'
| | `-FullComment 0x5f3d80 <col:37, col:88>
| |   `-ParagraphComment 0x5f3d50 <col:37, col:88>
| |     `-TextComment 0x5f3d20 <col:37, col:88> Text=" inter-pupilary distance                  (ncam x 1)"
| |-FieldDecl 0x5bbb40 <line:815:3, col:13> col:13 cam_resolution 'int *'
| | `-FullComment 0x5f3e50 <col:37, col:88>
| |   `-ParagraphComment 0x5f3e20 <col:37, col:88>
| |     `-TextComment 0x5f3df0 <col:37, col:88> Text=" resolution: pixels [width, height]       (ncam x 2)"
| |-FieldDecl 0x5bbbd0 <line:816:3, col:13> col:13 cam_sensorsize 'float *'
| | `-FullComment 0x5f3f20 <col:37, col:88>
| |   `-ParagraphComment 0x5f3ef0 <col:37, col:88>
| |     `-TextComment 0x5f3ec0 <col:37, col:88> Text=" sensor size: length [width, height]      (ncam x 2)"
| |-FieldDecl 0x5bbc60 <line:817:3, col:13> col:13 cam_intrinsic 'float *'
| | `-FullComment 0x5f3ff0 <col:37, col:88>
| |   `-ParagraphComment 0x5f3fc0 <col:37, col:88>
| |     `-TextComment 0x5f3f90 <col:37, col:88> Text=" [focal length; principal point]          (ncam x 4)"
| |-FieldDecl 0x5bbcf0 <line:818:3, col:13> col:13 invalid cam_user 'int *'
| | `-FullComment 0x5f40c0 <col:37, col:96>
| |   `-ParagraphComment 0x5f4090 <col:37, col:96>
| |     `-TextComment 0x5f4060 <col:37, col:96> Text=" user data                                (ncam x nuser_cam)"
| |-FieldDecl 0x5bbdb0 <line:821:3, col:13> col:13 light_mode 'int *'
| | `-FullComment 0x5f4190 <col:37, col:90>
| |   `-ParagraphComment 0x5f4160 <col:37, col:90>
| |     `-TextComment 0x5f4130 <col:37, col:90> Text=" light tracking mode (mjtCamLight)        (nlight x 1)"
| |-FieldDecl 0x5bd3f0 <line:822:3, col:13> col:13 light_bodyid 'int *'
| | `-FullComment 0x5f4260 <col:37, col:90>
| |   `-ParagraphComment 0x5f4230 <col:37, col:90>
| |     `-TextComment 0x5f4200 <col:37, col:90> Text=" id of light's body                       (nlight x 1)"
| |-FieldDecl 0x5bd480 <line:823:3, col:13> col:13 light_targetbodyid 'int *'
| | `-FullComment 0x5f4330 <col:37, col:90>
| |   `-ParagraphComment 0x5f4300 <col:37, col:90>
| |     `-TextComment 0x5f42d0 <col:37, col:90> Text=" id of targeted body; -1: none            (nlight x 1)"
| |-FieldDecl 0x5bd510 <line:824:3, col:13> col:13 invalid light_directional 'int *'
| | `-FullComment 0x5f4400 <col:37, col:90>
| |   `-ParagraphComment 0x5f43d0 <col:37, col:90>
| |     `-TextComment 0x5f43a0 <col:37, col:90> Text=" directional light                        (nlight x 1)"
| |-FieldDecl 0x5bd5a0 <line:825:3, col:13> col:13 invalid light_castshadow 'int *'
| | `-FullComment 0x5f44d0 <col:37, col:90>
| |   `-ParagraphComment 0x5f44a0 <col:37, col:90>
| |     `-TextComment 0x5f4470 <col:37, col:90> Text=" does light cast shadows                  (nlight x 1)"
| |-FieldDecl 0x5bd630 <line:826:3, col:13> col:13 light_bulbradius 'float *'
| | `-FullComment 0x5f45a0 <col:37, col:90>
| |   `-ParagraphComment 0x5f4570 <col:37, col:90>
| |     `-TextComment 0x5f4540 <col:37, col:90> Text=" light radius for soft shadows            (nlight x 1)"
| |-FieldDecl 0x5bd6c0 <line:827:3, col:13> col:13 invalid light_active 'int *'
| | `-FullComment 0x5f4670 <col:37, col:90>
| |   `-ParagraphComment 0x5f4640 <col:37, col:90>
| |     `-TextComment 0x5f4610 <col:37, col:90> Text=" is light on                              (nlight x 1)"
| |-FieldDecl 0x5bd750 <line:828:3, col:13> col:13 invalid light_pos 'int *'
| | `-FullComment 0x5f4740 <col:37, col:90>
| |   `-ParagraphComment 0x5f4710 <col:37, col:90>
| |     `-TextComment 0x5f46e0 <col:37, col:90> Text=" position rel. to body frame              (nlight x 3)"
| |-FieldDecl 0x5bd7e0 <line:829:3, col:13> col:13 invalid light_dir 'int *'
| | `-FullComment 0x5f4850 <col:37, col:90>
| |   `-ParagraphComment 0x5f4820 <col:37, col:90>
| |     `-TextComment 0x5f47f0 <col:37, col:90> Text=" direction rel. to body frame             (nlight x 3)"
| |-FieldDecl 0x5bd870 <line:830:3, col:13> col:13 invalid light_poscom0 'int *'
| | `-FullComment 0x5f4920 <col:37, col:90>
| |   `-ParagraphComment 0x5f48f0 <col:37, col:90>
| |     `-TextComment 0x5f48c0 <col:37, col:90> Text=" global position rel. to sub-com in qpos0 (nlight x 3)"
| |-FieldDecl 0x5bd900 <line:831:3, col:13> col:13 invalid light_pos0 'int *'
| | `-FullComment 0x5f49f0 <col:37, col:90>
| |   `-ParagraphComment 0x5f49c0 <col:37, col:90>
| |     `-TextComment 0x5f4990 <col:37, col:90> Text=" global position rel. to body in qpos0    (nlight x 3)"
| |-FieldDecl 0x5bd990 <line:832:3, col:13> col:13 invalid light_dir0 'int *'
| | `-FullComment 0x5f4ac0 <col:37, col:90>
| |   `-ParagraphComment 0x5f4a90 <col:37, col:90>
| |     `-TextComment 0x5f4a60 <col:37, col:90> Text=" global direction in qpos0                (nlight x 3)"
| |-FieldDecl 0x5bda20 <line:833:3, col:13> col:13 light_attenuation 'float *'
| | `-FullComment 0x5f4b90 <col:37, col:90>
| |   `-ParagraphComment 0x5f4b60 <col:37, col:90>
| |     `-TextComment 0x5f4b30 <col:37, col:90> Text=" OpenGL attenuation (quadratic model)     (nlight x 3)"
| |-FieldDecl 0x5bdab0 <line:834:3, col:13> col:13 light_cutoff 'float *'
| | `-FullComment 0x5f4c60 <col:37, col:90>
| |   `-ParagraphComment 0x5f4c30 <col:37, col:90>
| |     `-TextComment 0x5f4c00 <col:37, col:90> Text=" OpenGL cutoff                            (nlight x 1)"
| |-FieldDecl 0x5bdb40 <line:835:3, col:13> col:13 light_exponent 'float *'
| | `-FullComment 0x5f4d30 <col:37, col:90>
| |   `-ParagraphComment 0x5f4d00 <col:37, col:90>
| |     `-TextComment 0x5f4cd0 <col:37, col:90> Text=" OpenGL exponent                          (nlight x 1)"
| |-FieldDecl 0x5bdbd0 <line:836:3, col:13> col:13 light_ambient 'float *'
| | `-FullComment 0x5f4e00 <col:37, col:90>
| |   `-ParagraphComment 0x5f4dd0 <col:37, col:90>
| |     `-TextComment 0x5f4da0 <col:37, col:90> Text=" ambient rgb (alpha=1)                    (nlight x 3)"
| |-FieldDecl 0x5bdc60 <line:837:3, col:13> col:13 light_diffuse 'float *'
| | `-FullComment 0x5f4ed0 <col:37, col:90>
| |   `-ParagraphComment 0x5f4ea0 <col:37, col:90>
| |     `-TextComment 0x5f4e70 <col:37, col:90> Text=" diffuse rgb (alpha=1)                    (nlight x 3)"
| |-FieldDecl 0x5bdcf0 <line:838:3, col:13> col:13 light_specular 'float *'
| | `-FullComment 0x5f4fa0 <col:37, col:90>
| |   `-ParagraphComment 0x5f4f70 <col:37, col:90>
| |     `-TextComment 0x5f4f40 <col:37, col:90> Text=" specular rgb (alpha=1)                   (nlight x 3)"
| |-FieldDecl 0x5bddb0 <line:841:3, col:13> col:13 flex_contype 'int *'
| | `-FullComment 0x5f5070 <col:37, col:89>
| |   `-ParagraphComment 0x5f5040 <col:37, col:89>
| |     `-TextComment 0x5f5010 <col:37, col:89> Text=" flex contact type                        (nflex x 1)"
| |-FieldDecl 0x5bde40 <line:842:3, col:13> col:13 flex_conaffinity 'int *'
| | `-FullComment 0x5f5140 <col:37, col:89>
| |   `-ParagraphComment 0x5f5110 <col:37, col:89>
| |     `-TextComment 0x5f50e0 <col:37, col:89> Text=" flex contact affinity                    (nflex x 1)"
| |-FieldDecl 0x5bded0 <line:843:3, col:13> col:13 flex_condim 'int *'
| | `-FullComment 0x5f5210 <col:37, col:89>
| |   `-ParagraphComment 0x5f51e0 <col:37, col:89>
| |     `-TextComment 0x5f51b0 <col:37, col:89> Text=" contact dimensionality (1, 3, 4, 6)      (nflex x 1)"
| |-FieldDecl 0x5bdf60 <line:844:3, col:13> col:13 flex_priority 'int *'
| | `-FullComment 0x5f52e0 <col:37, col:89>
| |   `-ParagraphComment 0x5f52b0 <col:37, col:89>
| |     `-TextComment 0x5f5280 <col:37, col:89> Text=" flex contact priority                    (nflex x 1)"
| |-FieldDecl 0x5bdff0 <line:845:3, col:13> col:13 invalid flex_solmix 'int *'
| | `-FullComment 0x5f53b0 <col:37, col:89>
| |   `-ParagraphComment 0x5f5380 <col:37, col:89>
| |     `-TextComment 0x5f5350 <col:37, col:89> Text=" mix coef for solref/imp in contact pair  (nflex x 1)"
| |-FieldDecl 0x5be080 <line:846:3, col:13> col:13 invalid flex_solref 'int *'
| | `-FullComment 0x5f5480 <col:37, col:94>
| |   `-ParagraphComment 0x5f5450 <col:37, col:94>
| |     `-TextComment 0x5f5420 <col:37, col:94> Text=" constraint solver reference: contact     (nflex x mjNREF)"
| |-FieldDecl 0x5be110 <line:847:3, col:13> col:13 invalid flex_solimp 'int *'
| | `-FullComment 0x5f5550 <col:37, col:94>
| |   `-ParagraphComment 0x5f5520 <col:37, col:94>
| |     `-TextComment 0x5f54f0 <col:37, col:94> Text=" constraint solver impedance: contact     (nflex x mjNIMP)"
| |-FieldDecl 0x5be1a0 <line:848:3, col:13> col:13 invalid flex_friction 'int *'
| | `-FullComment 0x5f5620 <col:37, col:89>
| |   `-ParagraphComment 0x5f55f0 <col:37, col:89>
| |     `-TextComment 0x5f55c0 <col:37, col:89> Text=" friction for (slide, spin, roll)         (nflex x 3)"
| |-FieldDecl 0x5be230 <line:849:3, col:13> col:13 invalid flex_margin 'int *'
| | `-FullComment 0x5f5740 <col:37, col:89>
| |   `-ParagraphComment 0x5f5710 <col:37, col:89>
| |     |-TextComment 0x5f5690 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x5f56b0 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x5f56d0 <col:67, col:89> Text="            (nflex x 1)"
| |-FieldDecl 0x5be2c0 <line:850:3, col:13> col:13 invalid flex_gap 'int *'
| | `-FullComment 0x5f5870 <col:37, col:89>
| |   `-ParagraphComment 0x5f5840 <col:37, col:89>
| |     |-TextComment 0x5f57c0 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x5f57e0 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x5f5800 <col:70, col:89> Text="-gap     (nflex x 1)"
| |-FieldDecl 0x5be350 <line:851:3, col:13> col:13 invalid flex_internal 'int *'
| | `-FullComment 0x5f5940 <col:37, col:89>
| |   `-ParagraphComment 0x5f5910 <col:37, col:89>
| |     `-TextComment 0x5f58e0 <col:37, col:89> Text=" internal flex collision enabled          (nflex x 1)"
| |-FieldDecl 0x5bf550 <line:852:3, col:13> col:13 flex_selfcollide 'int *'
| | `-FullComment 0x5f5a10 <col:37, col:89>
| |   `-ParagraphComment 0x5f59e0 <col:37, col:89>
| |     `-TextComment 0x5f59b0 <col:37, col:89> Text=" self collision mode (mjtFlexSelf)        (nflex x 1)"
| |-FieldDecl 0x5bf5e0 <line:853:3, col:13> col:13 flex_activelayers 'int *'
| | `-FullComment 0x5f5ae0 <col:37, col:89>
| |   `-ParagraphComment 0x5f5ab0 <col:37, col:89>
| |     `-TextComment 0x5f5a80 <col:37, col:89> Text=" number of active element layers, 3D only (nflex x 1)"
| |-FieldDecl 0x5bf6a0 <line:856:3, col:13> col:13 flex_dim 'int *'
| | `-FullComment 0x5f5bb0 <col:37, col:89>
| |   `-ParagraphComment 0x5f5b80 <col:37, col:89>
| |     `-TextComment 0x5f5b50 <col:37, col:89> Text=" 1: lines, 2: triangles, 3: tetrahedra    (nflex x 1)"
| |-FieldDecl 0x5bf730 <line:857:3, col:13> col:13 flex_matid 'int *'
| | `-FullComment 0x5f5c80 <col:37, col:89>
| |   `-ParagraphComment 0x5f5c50 <col:37, col:89>
| |     `-TextComment 0x5f5c20 <col:37, col:89> Text=" material id for rendering                (nflex x 1)"
| |-FieldDecl 0x5bf7c0 <line:858:3, col:13> col:13 flex_group 'int *'
| | `-FullComment 0x5f5d50 <col:37, col:89>
| |   `-ParagraphComment 0x5f5d20 <col:37, col:89>
| |     `-TextComment 0x5f5cf0 <col:37, col:89> Text=" group for visibility                     (nflex x 1)"
| |-FieldDecl 0x5bf850 <line:859:3, col:13> col:13 flex_vertadr 'int *'
| | `-FullComment 0x5f5e20 <col:37, col:89>
| |   `-ParagraphComment 0x5f5df0 <col:37, col:89>
| |     `-TextComment 0x5f5dc0 <col:37, col:89> Text=" first vertex address                     (nflex x 1)"
| |-FieldDecl 0x5bf8e0 <line:860:3, col:13> col:13 flex_vertnum 'int *'
| | `-FullComment 0x5f5ef0 <col:37, col:89>
| |   `-ParagraphComment 0x5f5ec0 <col:37, col:89>
| |     `-TextComment 0x5f5e90 <col:37, col:89> Text=" number of vertices                       (nflex x 1)"
| |-FieldDecl 0x5bf970 <line:861:3, col:13> col:13 flex_edgeadr 'int *'
| | `-FullComment 0x5f5fc0 <col:37, col:89>
| |   `-ParagraphComment 0x5f5f90 <col:37, col:89>
| |     `-TextComment 0x5f5f60 <col:37, col:89> Text=" first edge address                       (nflex x 1)"
| |-FieldDecl 0x5bfa00 <line:862:3, col:13> col:13 flex_edgenum 'int *'
| | `-FullComment 0x5f6090 <col:37, col:89>
| |   `-ParagraphComment 0x5f6060 <col:37, col:89>
| |     `-TextComment 0x5f6030 <col:37, col:89> Text=" number of edges                          (nflex x 1)"
| |-FieldDecl 0x5bfa90 <line:863:3, col:13> col:13 flex_elemadr 'int *'
| | `-FullComment 0x5f6160 <col:37, col:89>
| |   `-ParagraphComment 0x5f6130 <col:37, col:89>
| |     `-TextComment 0x5f6100 <col:37, col:89> Text=" first element address                    (nflex x 1)"
| |-FieldDecl 0x5bfb20 <line:864:3, col:13> col:13 flex_elemnum 'int *'
| | `-FullComment 0x5f6230 <col:37, col:89>
| |   `-ParagraphComment 0x5f6200 <col:37, col:89>
| |     `-TextComment 0x5f61d0 <col:37, col:89> Text=" number of elements                       (nflex x 1)"
| |-FieldDecl 0x5bfbb0 <line:865:3, col:13> col:13 flex_elemdataadr 'int *'
| | `-FullComment 0x5f6300 <col:37, col:89>
| |   `-ParagraphComment 0x5f62d0 <col:37, col:89>
| |     `-TextComment 0x5f62a0 <col:37, col:89> Text=" first element vertex id address          (nflex x 1)"
| |-FieldDecl 0x5bfc40 <line:866:3, col:13> col:13 flex_elemedgeadr 'int *'
| | `-FullComment 0x5f63d0 <col:37, col:89>
| |   `-ParagraphComment 0x5f63a0 <col:37, col:89>
| |     `-TextComment 0x5f6370 <col:37, col:89> Text=" first element edge id address            (nflex x 1)"
| |-FieldDecl 0x5bfcd0 <line:867:3, col:13> col:13 flex_shellnum 'int *'
| | `-FullComment 0x5f64a0 <col:37, col:89>
| |   `-ParagraphComment 0x5f6470 <col:37, col:89>
| |     `-TextComment 0x5f6440 <col:37, col:89> Text=" number of shells                         (nflex x 1)"
| |-FieldDecl 0x5bfd60 <line:868:3, col:13> col:13 flex_shelldataadr 'int *'
| | `-FullComment 0x5f6570 <col:37, col:89>
| |   `-ParagraphComment 0x5f6540 <col:37, col:89>
| |     `-TextComment 0x5f6510 <col:37, col:89> Text=" first shell data address                 (nflex x 1)"
| |-FieldDecl 0x5bfdf0 <line:869:3, col:13> col:13 flex_evpairadr 'int *'
| | `-FullComment 0x5f6640 <col:37, col:89>
| |   `-ParagraphComment 0x5f6610 <col:37, col:89>
| |     `-TextComment 0x5f65e0 <col:37, col:89> Text=" first evpair address                     (nflex x 1)"
| |-FieldDecl 0x5bfe80 <line:870:3, col:13> col:13 flex_evpairnum 'int *'
| | `-FullComment 0x5f6710 <col:37, col:89>
| |   `-ParagraphComment 0x5f66e0 <col:37, col:89>
| |     `-TextComment 0x5f66b0 <col:37, col:89> Text=" number of evpairs                        (nflex x 1)"
| |-FieldDecl 0x5bff10 <line:871:3, col:13> col:13 flex_texcoordadr 'int *'
| | `-FullComment 0x5f6800 <col:37, col:89>
| |   `-ParagraphComment 0x5f67d0 <col:37, col:89>
| |     `-TextComment 0x5f6780 <col:37, col:89> Text=" address in flex_texcoord; -1: none       (nflex x 1)"
| |-FieldDecl 0x5bffa0 <line:872:3, col:13> col:13 flex_vertbodyid 'int *'
| | `-FullComment 0x5f68d0 <col:37, col:93>
| |   `-ParagraphComment 0x5f68a0 <col:37, col:93>
| |     `-TextComment 0x5f6870 <col:37, col:93> Text=" vertex body ids                          (nflexvert x 1)"
| |-FieldDecl 0x5c0030 <line:873:3, col:13> col:13 flex_edge 'int *'
| | `-FullComment 0x5f69a0 <col:37, col:93>
| |   `-ParagraphComment 0x5f6970 <col:37, col:93>
| |     `-TextComment 0x5f6940 <col:37, col:93> Text=" edge vertex ids (2 per edge)             (nflexedge x 2)"
| |-FieldDecl 0x5c00c0 <line:874:3, col:13> col:13 flex_elem 'int *'
| | `-FullComment 0x5f6a70 <col:37, col:97>
| |   `-ParagraphComment 0x5f6a40 <col:37, col:97>
| |     `-TextComment 0x5f6a10 <col:37, col:97> Text=" element vertex ids (dim+1 per elem)      (nflexelemdata x 1)"
| |-FieldDecl 0x5c0150 <line:875:3, col:13> col:13 flex_elemedge 'int *'
| | `-FullComment 0x5f6b40 <col:37, col:97>
| |   `-ParagraphComment 0x5f6b10 <col:37, col:97>
| |     `-TextComment 0x5f6ae0 <col:37, col:97> Text=" element edge ids                         (nflexelemedge x 1)"
| |-FieldDecl 0x5c01e0 <line:876:3, col:13> col:13 flex_elemlayer 'int *'
| | `-FullComment 0x5f6c10 <col:37, col:93>
| |   `-ParagraphComment 0x5f6be0 <col:37, col:93>
| |     `-TextComment 0x5f6bb0 <col:37, col:93> Text=" element distance from surface, 3D only   (nflexelem x 1)"
| |-FieldDecl 0x5c0270 <line:877:3, col:13> col:13 flex_shell 'int *'
| | `-FullComment 0x5f6ce0 <col:37, col:98>
| |   `-ParagraphComment 0x5f6cb0 <col:37, col:98>
| |     `-TextComment 0x5f6c80 <col:37, col:98> Text=" shell fragment vertex ids (dim per frag) (nflexshelldata x 1)"
| |-FieldDecl 0x5c0300 <line:878:3, col:13> col:13 flex_evpair 'int *'
| | `-FullComment 0x5f6db0 <col:37, col:95>
| |   `-ParagraphComment 0x5f6d80 <col:37, col:95>
| |     `-TextComment 0x5f6d50 <col:37, col:95> Text=" (element, vertex) collision pairs        (nflexevpair x 2)"
| |-FieldDecl 0x5c0390 <line:879:3, col:13> col:13 invalid flex_vert 'int *'
| | `-FullComment 0x5f6e80 <col:37, col:93>
| |   `-ParagraphComment 0x5f6e50 <col:37, col:93>
| |     `-TextComment 0x5f6e20 <col:37, col:93> Text=" vertex positions in local body frames    (nflexvert x 3)"
| |-FieldDecl 0x5c0420 <line:880:3, col:13> col:13 invalid flex_xvert0 'int *'
| | `-FullComment 0x5f6f50 <col:37, col:93>
| |   `-ParagraphComment 0x5f6f20 <col:37, col:93>
| |     `-TextComment 0x5f6ef0 <col:37, col:93> Text=" Cartesian vertex positions in qpos0      (nflexvert x 3)"
| |-FieldDecl 0x5c04b0 <line:881:3, col:13> col:13 invalid flexedge_length0 'int *'
| | `-FullComment 0x5f7020 <col:37, col:93>
| |   `-ParagraphComment 0x5f6ff0 <col:37, col:93>
| |     `-TextComment 0x5f6fc0 <col:37, col:93> Text=" edge lengths in qpos0                    (nflexedge x 1)"
| |-FieldDecl 0x5c0ca0 <line:882:3, col:13> col:13 invalid flexedge_invweight0 'int *'
| | `-FullComment 0x5f70f0 <col:37, col:93>
| |   `-ParagraphComment 0x5f70c0 <col:37, col:93>
| |     `-TextComment 0x5f7090 <col:37, col:93> Text=" edge inv. weight in qpos0                (nflexedge x 1)"
| |-FieldDecl 0x5c0d30 <line:883:3, col:13> col:13 invalid flex_radius 'int *'
| | `-FullComment 0x5f71c0 <col:37, col:89>
| |   `-ParagraphComment 0x5f7190 <col:37, col:89>
| |     `-TextComment 0x5f7160 <col:37, col:89> Text=" radius around primitive element          (nflex x 1)"
| |-FieldDecl 0x5c0dc0 <line:884:3, col:13> col:13 invalid flex_stiffness 'int *'
| | `-FullComment 0x5f7290 <col:37, col:94>
| |   `-ParagraphComment 0x5f7260 <col:37, col:94>
| |     `-TextComment 0x5f7230 <col:37, col:94> Text=" finite element stiffness matrix          (nflexelem x 21)"
| |-FieldDecl 0x5c0e50 <line:885:3, col:13> col:13 invalid flex_damping 'int *'
| | `-FullComment 0x5f7360 <col:37, col:89>
| |   `-ParagraphComment 0x5f7330 <col:37, col:89>
| |     `-TextComment 0x5f7300 <col:37, col:89> Text=" Rayleigh's damping coefficient           (nflex x 1)"
| |-FieldDecl 0x5c0ee0 <line:886:3, col:13> col:13 invalid flex_edgestiffness 'int *'
| | `-FullComment 0x5f7430 <col:37, col:89>
| |   `-ParagraphComment 0x5f7400 <col:37, col:89>
| |     `-TextComment 0x5f73d0 <col:37, col:89> Text=" edge stiffness                           (nflex x 1)"
| |-FieldDecl 0x5c0f70 <line:887:3, col:13> col:13 invalid flex_edgedamping 'int *'
| | `-FullComment 0x5f7500 <col:37, col:89>
| |   `-ParagraphComment 0x5f74d0 <col:37, col:89>
| |     `-TextComment 0x5f74a0 <col:37, col:89> Text=" edge damping                             (nflex x 1)"
| |-FieldDecl 0x5c1000 <line:888:3, col:13> col:13 invalid flex_edgeequality 'int *'
| | `-FullComment 0x5f75d0 <col:37, col:89>
| |   `-ParagraphComment 0x5f75a0 <col:37, col:89>
| |     `-TextComment 0x5f7570 <col:37, col:89> Text=" is edge equality constraint defined      (nflex x 1)"
| |-FieldDecl 0x5c1090 <line:889:3, col:13> col:13 invalid flex_rigid 'int *'
| | `-FullComment 0x5f76a0 <col:37, col:89>
| |   `-ParagraphComment 0x5f7670 <col:37, col:89>
| |     `-TextComment 0x5f7640 <col:37, col:89> Text=" are all verices in the same body         (nflex x 1)"
| |-FieldDecl 0x5c1120 <line:890:3, col:13> col:13 invalid flexedge_rigid 'int *'
| | `-FullComment 0x5f7770 <col:37, col:93>
| |   `-ParagraphComment 0x5f7740 <col:37, col:93>
| |     `-TextComment 0x5f7710 <col:37, col:93> Text=" are both edge vertices in same body      (nflexedge x 1)"
| |-FieldDecl 0x5c11b0 <line:891:3, col:13> col:13 invalid flex_centered 'int *'
| | `-FullComment 0x5f7880 <col:37, col:89>
| |   `-ParagraphComment 0x5f7850 <col:37, col:89>
| |     `-TextComment 0x5f7820 <col:37, col:89> Text=" are all vertex coordinates (0,0,0)       (nflex x 1)"
| |-FieldDecl 0x5c1240 <line:892:3, col:13> col:13 invalid flex_flatskin 'int *'
| | `-FullComment 0x5f7950 <col:37, col:89>
| |   `-ParagraphComment 0x5f7920 <col:37, col:89>
| |     `-TextComment 0x5f78f0 <col:37, col:89> Text=" render flex skin with flat shading       (nflex x 1)"
| |-FieldDecl 0x5c12d0 <line:893:3, col:13> col:13 flex_bvhadr 'int *'
| | `-FullComment 0x5f7a20 <col:37, col:89>
| |   `-ParagraphComment 0x5f79f0 <col:37, col:89>
| |     `-TextComment 0x5f79c0 <col:37, col:89> Text=" address of bvh root; -1: no bvh          (nflex x 1)"
| |-FieldDecl 0x5c1360 <line:894:3, col:13> col:13 flex_bvhnum 'int *'
| | `-FullComment 0x5f7af0 <col:37, col:89>
| |   `-ParagraphComment 0x5f7ac0 <col:37, col:89>
| |     `-TextComment 0x5f7a90 <col:37, col:89> Text=" number of bounding volumes               (nflex x 1)"
| |-FieldDecl 0x5c13f0 <line:895:3, col:13> col:13 flex_rgba 'float *'
| | `-FullComment 0x5f7bc0 <col:37, col:89>
| |   `-ParagraphComment 0x5f7b90 <col:37, col:89>
| |     `-TextComment 0x5f7b60 <col:37, col:89> Text=" rgba when material is omitted            (nflex x 4)"
| |-FieldDecl 0x5c1480 <line:896:3, col:13> col:13 flex_texcoord 'float *'
| | `-FullComment 0x5f7c90 <col:37, col:97>
| |   `-ParagraphComment 0x5f7c60 <col:37, col:97>
| |     `-TextComment 0x5f7c30 <col:37, col:97> Text=" vertex texture coordinates               (nflextexcoord x 2)"
| |-FieldDecl 0x5c1540 <line:899:3, col:13> col:13 mesh_vertadr 'int *'
| | `-FullComment 0x5f7d60 <col:37, col:89>
| |   `-ParagraphComment 0x5f7d30 <col:37, col:89>
| |     `-TextComment 0x5f7d00 <col:37, col:89> Text=" first vertex address                     (nmesh x 1)"
| |-FieldDecl 0x5c15d0 <line:900:3, col:13> col:13 mesh_vertnum 'int *'
| | `-FullComment 0x5f7e30 <col:37, col:89>
| |   `-ParagraphComment 0x5f7e00 <col:37, col:89>
| |     `-TextComment 0x5f7dd0 <col:37, col:89> Text=" number of vertices                       (nmesh x 1)"
| |-FieldDecl 0x5c1660 <line:901:3, col:13> col:13 mesh_faceadr 'int *'
| | `-FullComment 0x5f7f00 <col:37, col:89>
| |   `-ParagraphComment 0x5f7ed0 <col:37, col:89>
| |     `-TextComment 0x5f7ea0 <col:37, col:89> Text=" first face address                       (nmesh x 1)"
| |-FieldDecl 0x5c16f0 <line:902:3, col:13> col:13 mesh_facenum 'int *'
| | `-FullComment 0x5f7fd0 <col:37, col:89>
| |   `-ParagraphComment 0x5f7fa0 <col:37, col:89>
| |     `-TextComment 0x5f7f70 <col:37, col:89> Text=" number of faces                          (nmesh x 1)"
| |-FieldDecl 0x5c1780 <line:903:3, col:13> col:13 mesh_bvhadr 'int *'
| | `-FullComment 0x5f80a0 <col:37, col:89>
| |   `-ParagraphComment 0x5f8070 <col:37, col:89>
| |     `-TextComment 0x5f8040 <col:37, col:89> Text=" address of bvh root                      (nmesh x 1)"
| |-FieldDecl 0x5c1810 <line:904:3, col:13> col:13 mesh_bvhnum 'int *'
| | `-FullComment 0x5f8170 <col:37, col:89>
| |   `-ParagraphComment 0x5f8140 <col:37, col:89>
| |     `-TextComment 0x5f8110 <col:37, col:89> Text=" number of bvh                            (nmesh x 1)"
| |-FieldDecl 0x5c18a0 <line:905:3, col:13> col:13 mesh_normaladr 'int *'
| | `-FullComment 0x5f8240 <col:37, col:89>
| |   `-ParagraphComment 0x5f8210 <col:37, col:89>
| |     `-TextComment 0x5f81e0 <col:37, col:89> Text=" first normal address                     (nmesh x 1)"
| |-FieldDecl 0x5c1930 <line:906:3, col:13> col:13 mesh_normalnum 'int *'
| | `-FullComment 0x5f8310 <col:37, col:89>
| |   `-ParagraphComment 0x5f82e0 <col:37, col:89>
| |     `-TextComment 0x5f82b0 <col:37, col:89> Text=" number of normals                        (nmesh x 1)"
| |-FieldDecl 0x5c19c0 <line:907:3, col:13> col:13 mesh_texcoordadr 'int *'
| | `-FullComment 0x5f83e0 <col:37, col:89>
| |   `-ParagraphComment 0x5f83b0 <col:37, col:89>
| |     `-TextComment 0x5f8380 <col:37, col:89> Text=" texcoord data address; -1: no texcoord   (nmesh x 1)"
| |-FieldDecl 0x5c1a50 <line:908:3, col:13> col:13 mesh_texcoordnum 'int *'
| | `-FullComment 0x5f84b0 <col:37, col:89>
| |   `-ParagraphComment 0x5f8480 <col:37, col:89>
| |     `-TextComment 0x5f8450 <col:37, col:89> Text=" number of texcoord                       (nmesh x 1)"
| |-FieldDecl 0x5c1ae0 <line:909:3, col:13> col:13 mesh_graphadr 'int *'
| | `-FullComment 0x5f8580 <col:37, col:89>
| |   `-ParagraphComment 0x5f8550 <col:37, col:89>
| |     `-TextComment 0x5f8520 <col:37, col:89> Text=" graph data address; -1: no graph         (nmesh x 1)"
| |-FieldDecl 0x5c1b70 <line:910:3, col:13> col:13 mesh_vert 'float *'
| | `-FullComment 0x5f8650 <col:37, col:93>
| |   `-ParagraphComment 0x5f8620 <col:37, col:93>
| |     `-TextComment 0x5f85f0 <col:37, col:93> Text=" vertex positions for all meshes          (nmeshvert x 3)"
| |-FieldDecl 0x5c1c00 <line:911:3, col:13> col:13 mesh_normal 'float *'
| | `-FullComment 0x5f8720 <col:37, col:95>
| |   `-ParagraphComment 0x5f86f0 <col:37, col:95>
| |     `-TextComment 0x5f86c0 <col:37, col:95> Text=" normals for all meshes                   (nmeshnormal x 3)"
| |-FieldDecl 0x5c23f0 <line:912:3, col:13> col:13 mesh_texcoord 'float *'
| | `-FullComment 0x5f8800 <col:37, col:97>
| |   `-ParagraphComment 0x5f87c0 <col:37, col:97>
| |     `-TextComment 0x5f8790 <col:37, col:97> Text=" vertex texcoords for all meshes          (nmeshtexcoord x 2)"
| |-FieldDecl 0x5c2480 <line:913:3, col:13> col:13 mesh_face 'int *'
| | `-FullComment 0x5f88d0 <col:37, col:93>
| |   `-ParagraphComment 0x5f88a0 <col:37, col:93>
| |     `-TextComment 0x5f8870 <col:37, col:93> Text=" vertex face data                         (nmeshface x 3)"
| |-FieldDecl 0x5c2510 <line:914:3, col:13> col:13 mesh_facenormal 'int *'
| | `-FullComment 0x5f89a0 <col:37, col:93>
| |   `-ParagraphComment 0x5f8970 <col:37, col:93>
| |     `-TextComment 0x5f8940 <col:37, col:93> Text=" normal face data                         (nmeshface x 3)"
| |-FieldDecl 0x5c25a0 <line:915:3, col:13> col:13 mesh_facetexcoord 'int *'
| | `-FullComment 0x5f8a70 <col:37, col:93>
| |   `-ParagraphComment 0x5f8a40 <col:37, col:93>
| |     `-TextComment 0x5f8a10 <col:37, col:93> Text=" texture face data                        (nmeshface x 3)"
| |-FieldDecl 0x5c2630 <line:916:3, col:13> col:13 mesh_graph 'int *'
| | `-FullComment 0x5f8b40 <col:37, col:94>
| |   `-ParagraphComment 0x5f8b10 <col:37, col:94>
| |     `-TextComment 0x5f8ae0 <col:37, col:94> Text=" convex graph data                        (nmeshgraph x 1)"
| |-FieldDecl 0x5c26c0 <line:917:3, col:13> col:13 invalid mesh_scale 'int *'
| | `-FullComment 0x5f8c10 <col:37, col:89>
| |   `-ParagraphComment 0x5f8be0 <col:37, col:89>
| |     `-TextComment 0x5f8bb0 <col:37, col:89> Text=" scaling applied to asset vertices        (nmesh x 3)"
| |-FieldDecl 0x5c2750 <line:918:3, col:13> col:13 invalid mesh_pos 'int *'
| | `-FullComment 0x5f8ce0 <col:37, col:89>
| |   `-ParagraphComment 0x5f8cb0 <col:37, col:89>
| |     `-TextComment 0x5f8c80 <col:37, col:89> Text=" translation applied to asset vertices    (nmesh x 3)"
| |-FieldDecl 0x5c27e0 <line:919:3, col:13> col:13 invalid mesh_quat 'int *'
| | `-FullComment 0x5f8db0 <col:37, col:89>
| |   `-ParagraphComment 0x5f8d80 <col:37, col:89>
| |     `-TextComment 0x5f8d50 <col:37, col:89> Text=" rotation applied to asset vertices       (nmesh x 4)"
| |-FieldDecl 0x5c2870 <line:920:3, col:13> col:13 mesh_pathadr 'int *'
| | `-FullComment 0x5f8e80 <col:37, col:89>
| |   `-ParagraphComment 0x5f8e50 <col:37, col:89>
| |     `-TextComment 0x5f8e20 <col:37, col:89> Text=" address of asset path for mesh; -1: none (nmesh x 1)"
| |-FieldDecl 0x5c2930 <line:923:3, col:13> col:13 skin_matid 'int *'
| | `-FullComment 0x5f8f50 <col:37, col:89>
| |   `-ParagraphComment 0x5f8f20 <col:37, col:89>
| |     `-TextComment 0x5f8ef0 <col:37, col:89> Text=" skin material id; -1: none               (nskin x 1)"
| |-FieldDecl 0x5c29c0 <line:924:3, col:13> col:13 skin_group 'int *'
| | `-FullComment 0x5f9020 <col:37, col:89>
| |   `-ParagraphComment 0x5f8ff0 <col:37, col:89>
| |     `-TextComment 0x5f8fc0 <col:37, col:89> Text=" group for visibility                     (nskin x 1)"
| |-FieldDecl 0x5c2a50 <line:925:3, col:13> col:13 skin_rgba 'float *'
| | `-FullComment 0x5f90f0 <col:37, col:89>
| |   `-ParagraphComment 0x5f90c0 <col:37, col:89>
| |     `-TextComment 0x5f9090 <col:37, col:89> Text=" skin rgba                                (nskin x 4)"
| |-FieldDecl 0x5c2ae0 <line:926:3, col:13> col:13 skin_inflate 'float *'
| | `-FullComment 0x5f91c0 <col:37, col:89>
| |   `-ParagraphComment 0x5f9190 <col:37, col:89>
| |     `-TextComment 0x5f9160 <col:37, col:89> Text=" inflate skin in normal direction         (nskin x 1)"
| |-FieldDecl 0x5c2b70 <line:927:3, col:13> col:13 skin_vertadr 'int *'
| | `-FullComment 0x5f9290 <col:37, col:89>
| |   `-ParagraphComment 0x5f9260 <col:37, col:89>
| |     `-TextComment 0x5f9230 <col:37, col:89> Text=" first vertex address                     (nskin x 1)"
| |-FieldDecl 0x5c2c00 <line:928:3, col:13> col:13 skin_vertnum 'int *'
| | `-FullComment 0x5f9360 <col:37, col:89>
| |   `-ParagraphComment 0x5f9330 <col:37, col:89>
| |     `-TextComment 0x5f9300 <col:37, col:89> Text=" number of vertices                       (nskin x 1)"
| |-FieldDecl 0x5c2c90 <line:929:3, col:13> col:13 skin_texcoordadr 'int *'
| | `-FullComment 0x5f9430 <col:37, col:89>
| |   `-ParagraphComment 0x5f9400 <col:37, col:89>
| |     `-TextComment 0x5f93d0 <col:37, col:89> Text=" texcoord data address; -1: no texcoord   (nskin x 1)"
| |-FieldDecl 0x5c2d20 <line:930:3, col:13> col:13 skin_faceadr 'int *'
| | `-FullComment 0x5f9500 <col:37, col:89>
| |   `-ParagraphComment 0x5f94d0 <col:37, col:89>
| |     `-TextComment 0x5f94a0 <col:37, col:89> Text=" first face address                       (nskin x 1)"
| |-FieldDecl 0x5c2db0 <line:931:3, col:13> col:13 skin_facenum 'int *'
| | `-FullComment 0x5f95d0 <col:37, col:89>
| |   `-ParagraphComment 0x5f95a0 <col:37, col:89>
| |     `-TextComment 0x5f9570 <col:37, col:89> Text=" number of faces                          (nskin x 1)"
| |-FieldDecl 0x5c2e40 <line:932:3, col:13> col:13 skin_boneadr 'int *'
| | `-FullComment 0x5f96a0 <col:37, col:89>
| |   `-ParagraphComment 0x5f9670 <col:37, col:89>
| |     `-TextComment 0x5f9640 <col:37, col:89> Text=" first bone in skin                       (nskin x 1)"
| |-FieldDecl 0x5c2ed0 <line:933:3, col:13> col:13 skin_bonenum 'int *'
| | `-FullComment 0x5f9770 <col:37, col:89>
| |   `-ParagraphComment 0x5f9740 <col:37, col:89>
| |     `-TextComment 0x5f9710 <col:37, col:89> Text=" number of bones in skin                  (nskin x 1)"
| |-FieldDecl 0x5c2f60 <line:934:3, col:13> col:13 skin_vert 'float *'
| | `-FullComment 0x5f9860 <col:37, col:93>
| |   `-ParagraphComment 0x5f9830 <col:37, col:93>
| |     `-TextComment 0x5f9800 <col:37, col:93> Text=" vertex positions for all skin meshes     (nskinvert x 3)"
| |-FieldDecl 0x5c2ff0 <line:935:3, col:13> col:13 skin_texcoord 'float *'
| | `-FullComment 0x5f9930 <col:37, col:96>
| |   `-ParagraphComment 0x5f9900 <col:37, col:96>
| |     `-TextComment 0x5f98d0 <col:37, col:96> Text=" vertex texcoords for all skin meshes     (nskintexvert x 2)"
| |-FieldDecl 0x5c3080 <line:936:3, col:13> col:13 skin_face 'int *'
| | `-FullComment 0x5f9a00 <col:37, col:93>
| |   `-ParagraphComment 0x5f99d0 <col:37, col:93>
| |     `-TextComment 0x5f99a0 <col:37, col:93> Text=" triangle faces for all skin meshes       (nskinface x 3)"
| |-FieldDecl 0x5c3110 <line:937:3, col:13> col:13 skin_bonevertadr 'int *'
| | `-FullComment 0x5f9ad0 <col:37, col:93>
| |   `-ParagraphComment 0x5f9aa0 <col:37, col:93>
| |     `-TextComment 0x5f9a70 <col:37, col:93> Text=" first vertex in each bone                (nskinbone x 1)"
| |-FieldDecl 0x5c31a0 <line:938:3, col:13> col:13 skin_bonevertnum 'int *'
| | `-FullComment 0x5f9ba0 <col:37, col:93>
| |   `-ParagraphComment 0x5f9b70 <col:37, col:93>
| |     `-TextComment 0x5f9b40 <col:37, col:93> Text=" number of vertices in each bone          (nskinbone x 1)"
| |-FieldDecl 0x5c3230 <line:939:3, col:13> col:13 skin_bonebindpos 'float *'
| | `-FullComment 0x5f9c70 <col:37, col:93>
| |   `-ParagraphComment 0x5f9c40 <col:37, col:93>
| |     `-TextComment 0x5f9c10 <col:37, col:93> Text=" bind pos of each bone                    (nskinbone x 3)"
| |-FieldDecl 0x5c32c0 <line:940:3, col:13> col:13 skin_bonebindquat 'float *'
| | `-FullComment 0x5f9d40 <col:37, col:93>
| |   `-ParagraphComment 0x5f9d10 <col:37, col:93>
| |     `-TextComment 0x5f9ce0 <col:37, col:93> Text=" bind quat of each bone                   (nskinbone x 4)"
| |-FieldDecl 0x5c3350 <line:941:3, col:13> col:13 skin_bonebodyid 'int *'
| | `-FullComment 0x5f9e10 <col:37, col:93>
| |   `-ParagraphComment 0x5f9de0 <col:37, col:93>
| |     `-TextComment 0x5f9db0 <col:37, col:93> Text=" body id of each bone                     (nskinbone x 1)"
| |-FieldDecl 0x5c4b50 <line:942:3, col:13> col:13 skin_bonevertid 'int *'
| | `-FullComment 0x5f9ee0 <col:37, col:97>
| |   `-ParagraphComment 0x5f9eb0 <col:37, col:97>
| |     `-TextComment 0x5f9e80 <col:37, col:97> Text=" mesh ids of vertices in each bone        (nskinbonevert x 1)"
| |-FieldDecl 0x5c4be0 <line:943:3, col:13> col:13 skin_bonevertweight 'float *'
| | `-FullComment 0x5f9fb0 <col:37, col:97>
| |   `-ParagraphComment 0x5f9f80 <col:37, col:97>
| |     `-TextComment 0x5f9f50 <col:37, col:97> Text=" weights of vertices in each bone         (nskinbonevert x 1)"
| |-FieldDecl 0x5c4c70 <line:944:3, col:13> col:13 skin_pathadr 'int *'
| | `-FullComment 0x5fa080 <col:37, col:89>
| |   `-ParagraphComment 0x5fa050 <col:37, col:89>
| |     `-TextComment 0x5fa020 <col:37, col:89> Text=" address of asset path for skin; -1: none (nskin x 1)"
| |-FieldDecl 0x5c4d30 <line:947:3, col:13> col:13 invalid hfield_size 'int *'
| | `-FullComment 0x5fa150 <col:37, col:91>
| |   `-ParagraphComment 0x5fa120 <col:37, col:91>
| |     `-TextComment 0x5fa0f0 <col:37, col:91> Text=" (x, y, z_top, z_bottom)                  (nhfield x 4)"
| |-FieldDecl 0x5c4dc0 <line:948:3, col:13> col:13 hfield_nrow 'int *'
| | `-FullComment 0x5fa220 <col:37, col:91>
| |   `-ParagraphComment 0x5fa1f0 <col:37, col:91>
| |     `-TextComment 0x5fa1c0 <col:37, col:91> Text=" number of rows in grid                   (nhfield x 1)"
| |-FieldDecl 0x5c4e50 <line:949:3, col:13> col:13 hfield_ncol 'int *'
| | `-FullComment 0x5fa2f0 <col:37, col:91>
| |   `-ParagraphComment 0x5fa2c0 <col:37, col:91>
| |     `-TextComment 0x5fa290 <col:37, col:91> Text=" number of columns in grid                (nhfield x 1)"
| |-FieldDecl 0x5c4ee0 <line:950:3, col:13> col:13 hfield_adr 'int *'
| | `-FullComment 0x5fa3c0 <col:37, col:91>
| |   `-ParagraphComment 0x5fa390 <col:37, col:91>
| |     `-TextComment 0x5fa360 <col:37, col:91> Text=" address in hfield_data                   (nhfield x 1)"
| |-FieldDecl 0x5c4f70 <line:951:3, col:13> col:13 hfield_data 'float *'
| | `-FullComment 0x5fa490 <col:37, col:95>
| |   `-ParagraphComment 0x5fa460 <col:37, col:95>
| |     `-TextComment 0x5fa430 <col:37, col:95> Text=" elevation data                           (nhfielddata x 1)"
| |-FieldDecl 0x5c5000 <line:952:3, col:13> col:13 hfield_pathadr 'int *'
| | `-FullComment 0x5fa560 <col:37, col:91>
| |   `-ParagraphComment 0x5fa530 <col:37, col:91>
| |     `-TextComment 0x5fa500 <col:37, col:91> Text=" address of hfield asset path; -1: none   (nhfield x 1)"
| |-FieldDecl 0x5c50c0 <line:955:3, col:13> col:13 tex_type 'int *'
| | `-FullComment 0x5fa630 <col:37, col:88>
| |   `-ParagraphComment 0x5fa600 <col:37, col:88>
| |     `-TextComment 0x5fa5d0 <col:37, col:88> Text=" texture type (mjtTexture)                (ntex x 1)"
| |-FieldDecl 0x5c5150 <line:956:3, col:13> col:13 tex_height 'int *'
| | `-FullComment 0x5fa700 <col:37, col:88>
| |   `-ParagraphComment 0x5fa6d0 <col:37, col:88>
| |     `-TextComment 0x5fa6a0 <col:37, col:88> Text=" number of rows in texture image          (ntex x 1)"
| |-FieldDecl 0x5c51e0 <line:957:3, col:13> col:13 tex_width 'int *'
| | `-FullComment 0x5fa7d0 <col:37, col:88>
| |   `-ParagraphComment 0x5fa7a0 <col:37, col:88>
| |     `-TextComment 0x5fa770 <col:37, col:88> Text=" number of columns in texture image       (ntex x 1)"
| |-FieldDecl 0x5c5270 <line:958:3, col:13> col:13 tex_nchannel 'int *'
| | `-FullComment 0x5fa8b0 <col:37, col:88>
| |   `-ParagraphComment 0x5fa880 <col:37, col:88>
| |     `-TextComment 0x5fa850 <col:37, col:88> Text=" number of channels in texture image      (ntex x 1)"
| |-FieldDecl 0x5c5300 <line:959:3, col:13> col:13 tex_adr 'int *'
| | `-FullComment 0x5fa980 <col:37, col:88>
| |   `-ParagraphComment 0x5fa950 <col:37, col:88>
| |     `-TextComment 0x5fa920 <col:37, col:88> Text=" start address in tex_data                (ntex x 1)"
| |-FieldDecl 0x5c5390 <line:960:3, col:13> col:13 invalid tex_data 'int *'
| | `-FullComment 0x5faa50 <col:37, col:92>
| |   `-ParagraphComment 0x5faa20 <col:37, col:92>
| |     `-TextComment 0x5fa9f0 <col:37, col:92> Text=" pixel values                             (ntexdata x 1)"
| |-FieldDecl 0x5c5420 <line:961:3, col:13> col:13 tex_pathadr 'int *'
| | `-FullComment 0x5fab20 <col:37, col:88>
| |   `-ParagraphComment 0x5faaf0 <col:37, col:88>
| |     `-TextComment 0x5faac0 <col:37, col:88> Text=" address of texture asset path; -1: none  (ntex x 1)"
| |-FieldDecl 0x5c54e0 <line:964:3, col:13> col:13 mat_texid 'int *'
| | `-FullComment 0x5fabf0 <col:37, col:97>
| |   `-ParagraphComment 0x5fabc0 <col:37, col:97>
| |     `-TextComment 0x5fab90 <col:37, col:97> Text=" indices of textures; -1: none            (nmat x mjNTEXROLE)"
| |-FieldDecl 0x5c5570 <line:965:3, col:13> col:13 invalid mat_texuniform 'int *'
| | `-FullComment 0x5facc0 <col:37, col:88>
| |   `-ParagraphComment 0x5fac90 <col:37, col:88>
| |     `-TextComment 0x5fac60 <col:37, col:88> Text=" make texture cube uniform                (nmat x 1)"
| |-FieldDecl 0x5c5600 <line:966:3, col:13> col:13 mat_texrepeat 'float *'
| | `-FullComment 0x5fad90 <col:37, col:88>
| |   `-ParagraphComment 0x5fad60 <col:37, col:88>
| |     `-TextComment 0x5fad30 <col:37, col:88> Text=" texture repetition for 2d mapping        (nmat x 2)"
| |-FieldDecl 0x5c5690 <line:967:3, col:13> col:13 mat_emission 'float *'
| | `-FullComment 0x5fae60 <col:37, col:88>
| |   `-ParagraphComment 0x5fae30 <col:37, col:88>
| |     `-TextComment 0x5fae00 <col:37, col:88> Text=" emission (x rgb)                         (nmat x 1)"
| |-FieldDecl 0x5c5720 <line:968:3, col:13> col:13 mat_specular 'float *'
| | `-FullComment 0x5faf30 <col:37, col:88>
| |   `-ParagraphComment 0x5faf00 <col:37, col:88>
| |     `-TextComment 0x5faed0 <col:37, col:88> Text=" specular (x white)                       (nmat x 1)"
| |-FieldDecl 0x5c57b0 <line:969:3, col:13> col:13 mat_shininess 'float *'
| | `-FullComment 0x5fb000 <col:37, col:88>
| |   `-ParagraphComment 0x5fafd0 <col:37, col:88>
| |     `-TextComment 0x5fafa0 <col:37, col:88> Text=" shininess coef                           (nmat x 1)"
| |-FieldDecl 0x5c5840 <line:970:3, col:13> col:13 mat_reflectance 'float *'
| | `-FullComment 0x5fb0d0 <col:37, col:88>
| |   `-ParagraphComment 0x5fb0a0 <col:37, col:88>
| |     `-TextComment 0x5fb070 <col:37, col:88> Text=" reflectance (0: disable)                 (nmat x 1)"
| |-FieldDecl 0x5c58d0 <line:971:3, col:13> col:13 mat_metallic 'float *'
| | `-FullComment 0x5fb1a0 <col:37, col:88>
| |   `-ParagraphComment 0x5fb170 <col:37, col:88>
| |     `-TextComment 0x5fb140 <col:37, col:88> Text=" metallic coef                            (nmat x 1)"
| |-FieldDecl 0x5c5960 <line:972:3, col:13> col:13 mat_roughness 'float *'
| | `-FullComment 0x5fb270 <col:37, col:88>
| |   `-ParagraphComment 0x5fb240 <col:37, col:88>
| |     `-TextComment 0x5fb210 <col:37, col:88> Text=" roughness coef                           (nmat x 1)"
| |-FieldDecl 0x5c59f0 <line:973:3, col:13> col:13 mat_rgba 'float *'
| | `-FullComment 0x5fb340 <col:37, col:88>
| |   `-ParagraphComment 0x5fb310 <col:37, col:88>
| |     `-TextComment 0x5fb2e0 <col:37, col:88> Text=" rgba                                     (nmat x 4)"
| |-FieldDecl 0x5c5ab0 <line:976:3, col:13> col:13 pair_dim 'int *'
| | `-FullComment 0x5fb410 <col:37, col:89>
| |   `-ParagraphComment 0x5fb3e0 <col:37, col:89>
| |     `-TextComment 0x5fb3b0 <col:37, col:89> Text=" contact dimensionality                   (npair x 1)"
| |-FieldDecl 0x5c6320 <line:977:3, col:13> col:13 pair_geom1 'int *'
| | `-FullComment 0x5fb4e0 <col:37, col:89>
| |   `-ParagraphComment 0x5fb4b0 <col:37, col:89>
| |     `-TextComment 0x5fb480 <col:37, col:89> Text=" id of geom1                              (npair x 1)"
| |-FieldDecl 0x5c63b0 <line:978:3, col:13> col:13 pair_geom2 'int *'
| | `-FullComment 0x5fb5b0 <col:37, col:89>
| |   `-ParagraphComment 0x5fb580 <col:37, col:89>
| |     `-TextComment 0x5fb550 <col:37, col:89> Text=" id of geom2                              (npair x 1)"
| |-FieldDecl 0x5c6440 <line:979:3, col:13> col:13 pair_signature 'int *'
| | `-FullComment 0x5fb6f0 <col:37, col:89>
| |   `-ParagraphComment 0x5fb6c0 <col:37, col:89>
| |     |-TextComment 0x5fb620 <col:37, col:43> Text=" body1 "
| |     |-TextComment 0x5fb640 <col:44> Text="<"
| |     |-TextComment 0x5fb660 <col:45> Text="<"
| |     `-TextComment 0x5fb680 <col:46, col:89> Text=" 16 + body2                      (npair x 1)"
| |-FieldDecl 0x5c64d0 <line:980:3, col:13> col:13 invalid pair_solref 'int *'
| | `-FullComment 0x5fb7c0 <col:37, col:94>
| |   `-ParagraphComment 0x5fb790 <col:37, col:94>
| |     `-TextComment 0x5fb760 <col:37, col:94> Text=" solver reference: contact normal         (npair x mjNREF)"
| |-FieldDecl 0x5c6560 <line:981:3, col:13> col:13 invalid pair_solreffriction 'int *'
| | `-FullComment 0x5fb8c0 <col:37, col:94>
| |   `-ParagraphComment 0x5fb890 <col:37, col:94>
| |     `-TextComment 0x5fb860 <col:37, col:94> Text=" solver reference: contact friction       (npair x mjNREF)"
| |-FieldDecl 0x5c65f0 <line:982:3, col:13> col:13 invalid pair_solimp 'int *'
| | `-FullComment 0x5fb990 <col:37, col:94>
| |   `-ParagraphComment 0x5fb960 <col:37, col:94>
| |     `-TextComment 0x5fb930 <col:37, col:94> Text=" solver impedance: contact                (npair x mjNIMP)"
| |-FieldDecl 0x5c6680 <line:983:3, col:13> col:13 invalid pair_margin 'int *'
| | `-FullComment 0x5fbab0 <col:37, col:89>
| |   `-ParagraphComment 0x5fba80 <col:37, col:89>
| |     |-TextComment 0x5fba00 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x5fba20 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x5fba40 <col:67, col:89> Text="            (npair x 1)"
| |-FieldDecl 0x5c6710 <line:984:3, col:13> col:13 invalid pair_gap 'int *'
| | `-FullComment 0x5fbbd0 <col:37, col:89>
| |   `-ParagraphComment 0x5fbba0 <col:37, col:89>
| |     |-TextComment 0x5fbb20 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x5fbb40 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x5fbb60 <col:70, col:89> Text="-gap     (npair x 1)"
| |-FieldDecl 0x5c67a0 <line:985:3, col:13> col:13 invalid pair_friction 'int *'
| | `-FullComment 0x5fbca0 <col:37, col:89>
| |   `-ParagraphComment 0x5fbc70 <col:37, col:89>
| |     `-TextComment 0x5fbc40 <col:37, col:89> Text=" tangent1, 2, spin, roll1, 2              (npair x 5)"
| |-FieldDecl 0x5c6860 <line:988:3, col:13> col:13 exclude_signature 'int *'
| | `-FullComment 0x5fbde0 <col:37, col:92>
| |   `-ParagraphComment 0x5fbdb0 <col:37, col:92>
| |     |-TextComment 0x5fbd10 <col:37, col:43> Text=" body1 "
| |     |-TextComment 0x5fbd30 <col:44> Text="<"
| |     |-TextComment 0x5fbd50 <col:45> Text="<"
| |     `-TextComment 0x5fbd70 <col:46, col:92> Text=" 16 + body2                      (nexclude x 1)"
| |-FieldDecl 0x5c6920 <line:991:3, col:13> col:13 eq_type 'int *'
| | `-FullComment 0x5fbeb0 <col:37, col:87>
| |   `-ParagraphComment 0x5fbe80 <col:37, col:87>
| |     `-TextComment 0x5fbe50 <col:37, col:87> Text=" constraint type (mjtEq)                  (neq x 1)"
| |-FieldDecl 0x5c69b0 <line:992:3, col:13> col:13 eq_obj1id 'int *'
| | `-FullComment 0x5fbf80 <col:37, col:87>
| |   `-ParagraphComment 0x5fbf50 <col:37, col:87>
| |     `-TextComment 0x5fbf20 <col:37, col:87> Text=" id of object 1                           (neq x 1)"
| |-FieldDecl 0x5c6a40 <line:993:3, col:13> col:13 eq_obj2id 'int *'
| | `-FullComment 0x5fc050 <col:37, col:87>
| |   `-ParagraphComment 0x5fc020 <col:37, col:87>
| |     `-TextComment 0x5fbff0 <col:37, col:87> Text=" id of object 2                           (neq x 1)"
| |-FieldDecl 0x5c6ad0 <line:994:3, col:13> col:13 eq_objtype 'int *'
| | `-FullComment 0x5fc120 <col:37, col:87>
| |   `-ParagraphComment 0x5fc0f0 <col:37, col:87>
| |     `-TextComment 0x5fc0c0 <col:37, col:87> Text=" type of both objects (mjtObj)            (neq x 1)"
| |-FieldDecl 0x5c6b60 <line:995:3, col:13> col:13 invalid eq_active0 'int *'
| | `-FullComment 0x5fc1f0 <col:37, col:87>
| |   `-ParagraphComment 0x5fc1c0 <col:37, col:87>
| |     `-TextComment 0x5fc190 <col:37, col:87> Text=" initial enable/disable constraint state  (neq x 1)"
| |-FieldDecl 0x5c6bf0 <line:996:3, col:13> col:13 invalid eq_solref 'int *'
| | `-FullComment 0x5fc2c0 <col:37, col:92>
| |   `-ParagraphComment 0x5fc290 <col:37, col:92>
| |     `-TextComment 0x5fc260 <col:37, col:92> Text=" constraint solver reference              (neq x mjNREF)"
| |-FieldDecl 0x5c6c80 <line:997:3, col:13> col:13 invalid eq_solimp 'int *'
| | `-FullComment 0x5fc390 <col:37, col:92>
| |   `-ParagraphComment 0x5fc360 <col:37, col:92>
| |     `-TextComment 0x5fc330 <col:37, col:92> Text=" constraint solver impedance              (neq x mjNIMP)"
| |-FieldDecl 0x5c6d10 <line:998:3, col:13> col:13 invalid eq_data 'int *'
| | `-FullComment 0x5fc460 <col:37, col:95>
| |   `-ParagraphComment 0x5fc430 <col:37, col:95>
| |     `-TextComment 0x5fc400 <col:37, col:95> Text=" numeric data for constraint              (neq x mjNEQDATA)"
| |-FieldDecl 0x5c6dd0 <line:1001:3, col:13> col:13 tendon_adr 'int *'
| | `-FullComment 0x5fc530 <col:37, col:91>
| |   `-ParagraphComment 0x5fc500 <col:37, col:91>
| |     `-TextComment 0x5fc4d0 <col:37, col:91> Text=" address of first object in tendon's path (ntendon x 1)"
| |-FieldDecl 0x5c6e60 <line:1002:3, col:13> col:13 tendon_num 'int *'
| | `-FullComment 0x5fc600 <col:37, col:91>
| |   `-ParagraphComment 0x5fc5d0 <col:37, col:91>
| |     `-TextComment 0x5fc5a0 <col:37, col:91> Text=" number of objects in tendon's path       (ntendon x 1)"
| |-FieldDecl 0x5c6ef0 <line:1003:3, col:13> col:13 tendon_matid 'int *'
| | `-FullComment 0x5fc6d0 <col:37, col:91>
| |   `-ParagraphComment 0x5fc6a0 <col:37, col:91>
| |     `-TextComment 0x5fc670 <col:37, col:91> Text=" material id for rendering                (ntendon x 1)"
| |-FieldDecl 0x5c6f80 <line:1004:3, col:13> col:13 tendon_group 'int *'
| | `-FullComment 0x5fc7a0 <col:37, col:91>
| |   `-ParagraphComment 0x5fc770 <col:37, col:91>
| |     `-TextComment 0x5fc740 <col:37, col:91> Text=" group for visibility                     (ntendon x 1)"
| |-FieldDecl 0x5c7010 <line:1005:3, col:13> col:13 invalid tendon_limited 'int *'
| | `-FullComment 0x5fc890 <col:37, col:91>
| |   `-ParagraphComment 0x5fc860 <col:37, col:91>
| |     `-TextComment 0x5fc830 <col:37, col:91> Text=" does tendon have length limits           (ntendon x 1)"
| |-FieldDecl 0x5c70a0 <line:1006:3, col:13> col:13 invalid tendon_width 'int *'
| | `-FullComment 0x5fc960 <col:37, col:91>
| |   `-ParagraphComment 0x5fc930 <col:37, col:91>
| |     `-TextComment 0x5fc900 <col:37, col:91> Text=" width for rendering                      (ntendon x 1)"
| |-FieldDecl 0x5c7130 <line:1007:3, col:13> col:13 invalid tendon_solref_lim 'int *'
| | `-FullComment 0x5fca30 <col:37, col:96>
| |   `-ParagraphComment 0x5fca00 <col:37, col:96>
| |     `-TextComment 0x5fc9d0 <col:37, col:96> Text=" constraint solver reference: limit       (ntendon x mjNREF)"
| |-FieldDecl 0x5c71c0 <line:1008:3, col:13> col:13 invalid tendon_solimp_lim 'int *'
| | `-FullComment 0x5fcb00 <col:37, col:96>
| |   `-ParagraphComment 0x5fcad0 <col:37, col:96>
| |     `-TextComment 0x5fcaa0 <col:37, col:96> Text=" constraint solver impedance: limit       (ntendon x mjNIMP)"
| |-FieldDecl 0x5c7250 <line:1009:3, col:13> col:13 invalid tendon_solref_fri 'int *'
| | `-FullComment 0x5fcbd0 <col:37, col:96>
| |   `-ParagraphComment 0x5fcba0 <col:37, col:96>
| |     `-TextComment 0x5fcb70 <col:37, col:96> Text=" constraint solver reference: friction    (ntendon x mjNREF)"
| |-FieldDecl 0x5c8ac0 <line:1010:3, col:13> col:13 invalid tendon_solimp_fri 'int *'
| | `-FullComment 0x5fcca0 <col:37, col:96>
| |   `-ParagraphComment 0x5fcc70 <col:37, col:96>
| |     `-TextComment 0x5fcc40 <col:37, col:96> Text=" constraint solver impedance: friction    (ntendon x mjNIMP)"
| |-FieldDecl 0x5c8b50 <line:1011:3, col:13> col:13 invalid tendon_range 'int *'
| | `-FullComment 0x5fcd70 <col:37, col:91>
| |   `-ParagraphComment 0x5fcd40 <col:37, col:91>
| |     `-TextComment 0x5fcd10 <col:37, col:91> Text=" tendon length limits                     (ntendon x 2)"
| |-FieldDecl 0x5c8be0 <line:1012:3, col:13> col:13 invalid tendon_margin 'int *'
| | `-FullComment 0x5fce40 <col:37, col:91>
| |   `-ParagraphComment 0x5fce10 <col:37, col:91>
| |     `-TextComment 0x5fcde0 <col:37, col:91> Text=" min distance for limit detection         (ntendon x 1)"
| |-FieldDecl 0x5c8c70 <line:1013:3, col:13> col:13 invalid tendon_stiffness 'int *'
| | `-FullComment 0x5fcf10 <col:37, col:91>
| |   `-ParagraphComment 0x5fcee0 <col:37, col:91>
| |     `-TextComment 0x5fceb0 <col:37, col:91> Text=" stiffness coefficient                    (ntendon x 1)"
| |-FieldDecl 0x5c8d00 <line:1014:3, col:13> col:13 invalid tendon_damping 'int *'
| | `-FullComment 0x5fcfe0 <col:37, col:91>
| |   `-ParagraphComment 0x5fcfb0 <col:37, col:91>
| |     `-TextComment 0x5fcf80 <col:37, col:91> Text=" damping coefficient                      (ntendon x 1)"
| |-FieldDecl 0x5c8d90 <line:1015:3, col:13> col:13 invalid tendon_frictionloss 'int *'
| | `-FullComment 0x5fd0b0 <col:37, col:91>
| |   `-ParagraphComment 0x5fd080 <col:37, col:91>
| |     `-TextComment 0x5fd050 <col:37, col:91> Text=" loss due to friction                     (ntendon x 1)"
| |-FieldDecl 0x5c8e20 <line:1016:3, col:13> col:13 invalid tendon_lengthspring 'int *'
| | `-FullComment 0x5fd180 <col:37, col:91>
| |   `-ParagraphComment 0x5fd150 <col:37, col:91>
| |     `-TextComment 0x5fd120 <col:37, col:91> Text=" spring resting length range              (ntendon x 2)"
| |-FieldDecl 0x5c8eb0 <line:1017:3, col:13> col:13 invalid tendon_length0 'int *'
| | `-FullComment 0x5fd250 <col:37, col:91>
| |   `-ParagraphComment 0x5fd220 <col:37, col:91>
| |     `-TextComment 0x5fd1f0 <col:37, col:91> Text=" tendon length in qpos0                   (ntendon x 1)"
| |-FieldDecl 0x5c8f40 <line:1018:3, col:13> col:13 invalid tendon_invweight0 'int *'
| | `-FullComment 0x5fd320 <col:37, col:91>
| |   `-ParagraphComment 0x5fd2f0 <col:37, col:91>
| |     `-TextComment 0x5fd2c0 <col:37, col:91> Text=" inv. weight in qpos0                     (ntendon x 1)"
| |-FieldDecl 0x5c8fd0 <line:1019:3, col:13> col:13 invalid tendon_user 'int *'
| | `-FullComment 0x5fd3f0 <col:37, col:102>
| |   `-ParagraphComment 0x5fd3c0 <col:37, col:102>
| |     `-TextComment 0x5fd390 <col:37, col:102> Text=" user data                                (ntendon x nuser_tendon)"
| |-FieldDecl 0x5c9060 <line:1020:3, col:13> col:13 tendon_rgba 'float *'
| | `-FullComment 0x5fd4c0 <col:37, col:91>
| |   `-ParagraphComment 0x5fd490 <col:37, col:91>
| |     `-TextComment 0x5fd460 <col:37, col:91> Text=" rgba when material is omitted            (ntendon x 4)"
| |-FieldDecl 0x5c9120 <line:1023:3, col:13> col:13 wrap_type 'int *'
| | `-FullComment 0x5fd590 <col:37, col:89>
| |   `-ParagraphComment 0x5fd560 <col:37, col:89>
| |     `-TextComment 0x5fd530 <col:37, col:89> Text=" wrap object type (mjtWrap)               (nwrap x 1)"
| |-FieldDecl 0x5c91b0 <line:1024:3, col:13> col:13 wrap_objid 'int *'
| | `-FullComment 0x5fd660 <col:37, col:89>
| |   `-ParagraphComment 0x5fd630 <col:37, col:89>
| |     `-TextComment 0x5fd600 <col:37, col:89> Text=" object id: geom, site, joint             (nwrap x 1)"
| |-FieldDecl 0x5c9240 <line:1025:3, col:13> col:13 invalid wrap_prm 'int *'
| | `-FullComment 0x5fd730 <col:37, col:89>
| |   `-ParagraphComment 0x5fd700 <col:37, col:89>
| |     `-TextComment 0x5fd6d0 <col:37, col:89> Text=" divisor, joint coef, or site id          (nwrap x 1)"
| |-FieldDecl 0x5c9300 <line:1028:3, col:13> col:13 actuator_trntype 'int *'
| | `-FullComment 0x5fd800 <col:37, col:86>
| |   `-ParagraphComment 0x5fd7d0 <col:37, col:86>
| |     `-TextComment 0x5fd7a0 <col:37, col:86> Text=" transmission type (mjtTrn)               (nu x 1)"
| |-FieldDecl 0x5c9390 <line:1029:3, col:13> col:13 actuator_dyntype 'int *'
| | `-FullComment 0x5fd8e0 <col:37, col:86>
| |   `-ParagraphComment 0x5fd8b0 <col:37, col:86>
| |     `-TextComment 0x5fd880 <col:37, col:86> Text=" dynamics type (mjtDyn)                   (nu x 1)"
| |-FieldDecl 0x5c9420 <line:1030:3, col:13> col:13 actuator_gaintype 'int *'
| | `-FullComment 0x5fd9b0 <col:37, col:86>
| |   `-ParagraphComment 0x5fd980 <col:37, col:86>
| |     `-TextComment 0x5fd950 <col:37, col:86> Text=" gain type (mjtGain)                      (nu x 1)"
| |-FieldDecl 0x5c94b0 <line:1031:3, col:13> col:13 actuator_biastype 'int *'
| | `-FullComment 0x5fda80 <col:37, col:86>
| |   `-ParagraphComment 0x5fda50 <col:37, col:86>
| |     `-TextComment 0x5fda20 <col:37, col:86> Text=" bias type (mjtBias)                      (nu x 1)"
| |-FieldDecl 0x5c9540 <line:1032:3, col:13> col:13 actuator_trnid 'int *'
| | `-FullComment 0x5fdb50 <col:37, col:86>
| |   `-ParagraphComment 0x5fdb20 <col:37, col:86>
| |     `-TextComment 0x5fdaf0 <col:37, col:86> Text=" transmission id: joint, tendon, site     (nu x 2)"
| |-FieldDecl 0x5c95d0 <line:1033:3, col:13> col:13 actuator_actadr 'int *'
| | `-FullComment 0x5fdc20 <col:37, col:86>
| |   `-ParagraphComment 0x5fdbf0 <col:37, col:86>
| |     `-TextComment 0x5fdbc0 <col:37, col:86> Text=" first activation address; -1: stateless  (nu x 1)"
| |-FieldDecl 0x5c9660 <line:1034:3, col:13> col:13 actuator_actnum 'int *'
| | `-FullComment 0x5fdcf0 <col:37, col:86>
| |   `-ParagraphComment 0x5fdcc0 <col:37, col:86>
| |     `-TextComment 0x5fdc90 <col:37, col:86> Text=" number of activation variables           (nu x 1)"
| |-FieldDecl 0x5c96f0 <line:1035:3, col:13> col:13 actuator_group 'int *'
| | `-FullComment 0x5fddc0 <col:37, col:86>
| |   `-ParagraphComment 0x5fdd90 <col:37, col:86>
| |     `-TextComment 0x5fdd60 <col:37, col:86> Text=" group for visibility                     (nu x 1)"
| |-FieldDecl 0x5c9780 <line:1036:3, col:13> col:13 invalid actuator_ctrllimited 'int *'
| | `-FullComment 0x5fde90 <col:37, col:86>
| |   `-ParagraphComment 0x5fde60 <col:37, col:86>
| |     `-TextComment 0x5fde30 <col:37, col:86> Text=" is control limited                       (nu x 1)"
| |-FieldDecl 0x5c9810 <line:1037:3, col:13> col:13 invalid actuator_forcelimited 'int *'
| | `-FullComment 0x5fdf60 <col:37, col:86>
| |   `-ParagraphComment 0x5fdf30 <col:37, col:86>
| |     `-TextComment 0x5fdf00 <col:37, col:86> Text=" is force limited                         (nu x 1)"
| |-FieldDecl 0x5c98a0 <line:1038:3, col:13> col:13 invalid actuator_actlimited 'int *'
| | `-FullComment 0x5fe030 <col:37, col:86>
| |   `-ParagraphComment 0x5fe000 <col:37, col:86>
| |     `-TextComment 0x5fdfd0 <col:37, col:86> Text=" is activation limited                    (nu x 1)"
| |-FieldDecl 0x5c9930 <line:1039:3, col:13> col:13 invalid actuator_dynprm 'int *'
| | `-FullComment 0x5fe100 <col:37, col:91>
| |   `-ParagraphComment 0x5fe0d0 <col:37, col:91>
| |     `-TextComment 0x5fe0a0 <col:37, col:91> Text=" dynamics parameters                      (nu x mjNDYN)"
| |-FieldDecl 0x5c99c0 <line:1040:3, col:13> col:13 invalid actuator_gainprm 'int *'
| | `-FullComment 0x5fe1d0 <col:37, col:92>
| |   `-ParagraphComment 0x5fe1a0 <col:37, col:92>
| |     `-TextComment 0x5fe170 <col:37, col:92> Text=" gain parameters                          (nu x mjNGAIN)"
| |-FieldDecl 0x5c9a50 <line:1041:3, col:13> col:13 invalid actuator_biasprm 'int *'
| | `-FullComment 0x5fe2a0 <col:37, col:92>
| |   `-ParagraphComment 0x5fe270 <col:37, col:92>
| |     `-TextComment 0x5fe240 <col:37, col:92> Text=" bias parameters                          (nu x mjNBIAS)"
| |-FieldDecl 0x5cc020 <line:1042:3, col:13> col:13 invalid actuator_actearly 'int *'
| | `-FullComment 0x5fe370 <col:37, col:86>
| |   `-ParagraphComment 0x5fe340 <col:37, col:86>
| |     `-TextComment 0x5fe310 <col:37, col:86> Text=" step activation before force             (nu x 1)"
| |-FieldDecl 0x5cc0b0 <line:1043:3, col:13> col:13 invalid actuator_ctrlrange 'int *'
| | `-FullComment 0x5fe440 <col:37, col:86>
| |   `-ParagraphComment 0x5fe410 <col:37, col:86>
| |     `-TextComment 0x5fe3e0 <col:37, col:86> Text=" range of controls                        (nu x 2)"
| |-FieldDecl 0x5cc140 <line:1044:3, col:13> col:13 invalid actuator_forcerange 'int *'
| | `-FullComment 0x5fe510 <col:37, col:86>
| |   `-ParagraphComment 0x5fe4e0 <col:37, col:86>
| |     `-TextComment 0x5fe4b0 <col:37, col:86> Text=" range of forces                          (nu x 2)"
| |-FieldDecl 0x5cc1d0 <line:1045:3, col:13> col:13 invalid actuator_actrange 'int *'
| | `-FullComment 0x5fe5e0 <col:37, col:86>
| |   `-ParagraphComment 0x5fe5b0 <col:37, col:86>
| |     `-TextComment 0x5fe580 <col:37, col:86> Text=" range of activations                     (nu x 2)"
| |-FieldDecl 0x5cc260 <line:1046:3, col:13> col:13 invalid actuator_gear 'int *'
| | `-FullComment 0x5fe6b0 <col:37, col:86>
| |   `-ParagraphComment 0x5fe680 <col:37, col:86>
| |     `-TextComment 0x5fe650 <col:37, col:86> Text=" scale length and transmitted force       (nu x 6)"
| |-FieldDecl 0x5cc2f0 <line:1047:3, col:13> col:13 invalid actuator_cranklength 'int *'
| | `-FullComment 0x5fe780 <col:37, col:86>
| |   `-ParagraphComment 0x5fe750 <col:37, col:86>
| |     `-TextComment 0x5fe720 <col:37, col:86> Text=" crank length for slider-crank            (nu x 1)"
| |-FieldDecl 0x5cc380 <line:1048:3, col:13> col:13 invalid actuator_acc0 'int *'
| | `-FullComment 0x5fe860 <col:37, col:86>
| |   `-ParagraphComment 0x5fe820 <col:37, col:86>
| |     `-TextComment 0x5fe7f0 <col:37, col:86> Text=" acceleration from unit force in qpos0    (nu x 1)"
| |-FieldDecl 0x5cc410 <line:1049:3, col:13> col:13 invalid actuator_length0 'int *'
| | `-FullComment 0x5fe930 <col:37, col:86>
| |   `-ParagraphComment 0x5fe900 <col:37, col:86>
| |     `-TextComment 0x5fe8d0 <col:37, col:86> Text=" actuator length in qpos0                 (nu x 1)"
| |-FieldDecl 0x5cc4a0 <line:1050:3, col:13> col:13 invalid actuator_lengthrange 'int *'
| | `-FullComment 0x5fea00 <col:37, col:86>
| |   `-ParagraphComment 0x5fe9d0 <col:37, col:86>
| |     `-TextComment 0x5fe9a0 <col:37, col:86> Text=" feasible actuator length range           (nu x 2)"
| |-FieldDecl 0x5cc530 <line:1051:3, col:13> col:13 invalid actuator_user 'int *'
| | `-FullComment 0x5fead0 <col:37, col:99>
| |   `-ParagraphComment 0x5feaa0 <col:37, col:99>
| |     `-TextComment 0x5fea70 <col:37, col:99> Text=" user data                                (nu x nuser_actuator)"
| |-FieldDecl 0x5cc5c0 <line:1052:3, col:13> col:13 actuator_plugin 'int *'
| | `-FullComment 0x5feba0 <col:37, col:86>
| |   `-ParagraphComment 0x5feb70 <col:37, col:86>
| |     `-TextComment 0x5feb40 <col:37, col:86> Text=" plugin instance id; -1: not a plugin     (nu x 1)"
| |-FieldDecl 0x5cc680 <line:1055:3, col:13> col:13 sensor_type 'int *'
| | `-FullComment 0x5fec70 <col:37, col:91>
| |   `-ParagraphComment 0x5fec40 <col:37, col:91>
| |     `-TextComment 0x5fec10 <col:37, col:91> Text=" sensor type (mjtSensor)                  (nsensor x 1)"
| |-FieldDecl 0x5cc710 <line:1056:3, col:13> col:13 sensor_datatype 'int *'
| | `-FullComment 0x5fed40 <col:37, col:91>
| |   `-ParagraphComment 0x5fed10 <col:37, col:91>
| |     `-TextComment 0x5fece0 <col:37, col:91> Text=" numeric data type (mjtDataType)          (nsensor x 1)"
| |-FieldDecl 0x5cc7a0 <line:1057:3, col:13> col:13 sensor_needstage 'int *'
| | `-FullComment 0x5fee10 <col:37, col:91>
| |   `-ParagraphComment 0x5fede0 <col:37, col:91>
| |     `-TextComment 0x5fedb0 <col:37, col:91> Text=" required compute stage (mjtStage)        (nsensor x 1)"
| |-FieldDecl 0x5cc830 <line:1058:3, col:13> col:13 sensor_objtype 'int *'
| | `-FullComment 0x5feee0 <col:37, col:91>
| |   `-ParagraphComment 0x5feeb0 <col:37, col:91>
| |     `-TextComment 0x5fee80 <col:37, col:91> Text=" type of sensorized object (mjtObj)       (nsensor x 1)"
| |-FieldDecl 0x5cc8c0 <line:1059:3, col:13> col:13 sensor_objid 'int *'
| | `-FullComment 0x5fefb0 <col:37, col:91>
| |   `-ParagraphComment 0x5fef80 <col:37, col:91>
| |     `-TextComment 0x5fef50 <col:37, col:91> Text=" id of sensorized object                  (nsensor x 1)"
| |-FieldDecl 0x5cc950 <line:1060:3, col:13> col:13 sensor_reftype 'int *'
| | `-FullComment 0x5ff080 <col:37, col:91>
| |   `-ParagraphComment 0x5ff050 <col:37, col:91>
| |     `-TextComment 0x5ff020 <col:37, col:91> Text=" type of reference frame (mjtObj)         (nsensor x 1)"
| |-FieldDecl 0x5cc9e0 <line:1061:3, col:13> col:13 sensor_refid 'int *'
| | `-FullComment 0x5ff150 <col:37, col:91>
| |   `-ParagraphComment 0x5ff120 <col:37, col:91>
| |     `-TextComment 0x5ff0f0 <col:37, col:91> Text=" id of reference frame; -1: global frame  (nsensor x 1)"
| |-FieldDecl 0x5cca70 <line:1062:3, col:13> col:13 sensor_dim 'int *'
| | `-FullComment 0x5ff220 <col:37, col:91>
| |   `-ParagraphComment 0x5ff1f0 <col:37, col:91>
| |     `-TextComment 0x5ff1c0 <col:37, col:91> Text=" number of scalar outputs                 (nsensor x 1)"
| |-FieldDecl 0x5ccb00 <line:1063:3, col:13> col:13 sensor_adr 'int *'
| | `-FullComment 0x5ff2f0 <col:37, col:91>
| |   `-ParagraphComment 0x5ff2c0 <col:37, col:91>
| |     `-TextComment 0x5ff290 <col:37, col:91> Text=" address in sensor array                  (nsensor x 1)"
| |-FieldDecl 0x5ccb90 <line:1064:3, col:13> col:13 invalid sensor_cutoff 'int *'
| | `-FullComment 0x5ff3c0 <col:37, col:91>
| |   `-ParagraphComment 0x5ff390 <col:37, col:91>
| |     `-TextComment 0x5ff360 <col:37, col:91> Text=" cutoff for real and positive; 0: ignore  (nsensor x 1)"
| |-FieldDecl 0x5ccc20 <line:1065:3, col:13> col:13 invalid sensor_noise 'int *'
| | `-FullComment 0x5ff490 <col:37, col:91>
| |   `-ParagraphComment 0x5ff460 <col:37, col:91>
| |     `-TextComment 0x5ff430 <col:37, col:91> Text=" noise standard deviation                 (nsensor x 1)"
| |-FieldDecl 0x5cccb0 <line:1066:3, col:13> col:13 invalid sensor_user 'int *'
| | `-FullComment 0x5ff560 <col:37, col:102>
| |   `-ParagraphComment 0x5ff530 <col:37, col:102>
| |     `-TextComment 0x5ff500 <col:37, col:102> Text=" user data                                (nsensor x nuser_sensor)"
| |-FieldDecl 0x5ccd40 <line:1067:3, col:13> col:13 sensor_plugin 'int *'
| | `-FullComment 0x5ff630 <col:37, col:91>
| |   `-ParagraphComment 0x5ff600 <col:37, col:91>
| |     `-TextComment 0x5ff5d0 <col:37, col:91> Text=" plugin instance id; -1: not a plugin     (nsensor x 1)"
| |-FieldDecl 0x5cce00 <line:1070:3, col:13> col:13 plugin 'int *'
| | `-FullComment 0x5ff700 <col:37, col:91>
| |   `-ParagraphComment 0x5ff6d0 <col:37, col:91>
| |     `-TextComment 0x5ff6a0 <col:37, col:91> Text=" globally registered plugin slot number   (nplugin x 1)"
| |-FieldDecl 0x5cce90 <line:1071:3, col:13> col:13 plugin_stateadr 'int *'
| | `-FullComment 0x5ff7d0 <col:37, col:91>
| |   `-ParagraphComment 0x5ff7a0 <col:37, col:91>
| |     `-TextComment 0x5ff770 <col:37, col:91> Text=" address in the plugin state array        (nplugin x 1)"
| |-FieldDecl 0x5ccf20 <line:1072:3, col:13> col:13 plugin_statenum 'int *'
| | `-FullComment 0x5ff8c0 <col:37, col:91>
| |   `-ParagraphComment 0x5ff890 <col:37, col:91>
| |     `-TextComment 0x5ff860 <col:37, col:91> Text=" number of states in the plugin instance  (nplugin x 1)"
| |-FieldDecl 0x5ccff0 <line:1073:3, col:13> col:13 plugin_attr 'char *'
| | `-FullComment 0x5ff990 <col:37, col:95>
| |   `-ParagraphComment 0x5ff960 <col:37, col:95>
| |     `-TextComment 0x5ff930 <col:37, col:95> Text=" config attributes of plugin instances    (npluginattr x 1)"
| |-FieldDecl 0x5cd080 <line:1074:3, col:13> col:13 plugin_attradr 'int *'
| | `-FullComment 0x5ffa60 <col:37, col:91>
| |   `-ParagraphComment 0x5ffa30 <col:37, col:91>
| |     `-TextComment 0x5ffa00 <col:37, col:91> Text=" address to each instance's config attrib (nplugin x 1)"
| |-FieldDecl 0x5cd140 <line:1077:3, col:13> col:13 numeric_adr 'int *'
| | `-FullComment 0x5ffb30 <col:37, col:92>
| |   `-ParagraphComment 0x5ffb00 <col:37, col:92>
| |     `-TextComment 0x5ffad0 <col:37, col:92> Text=" address of field in numeric_data         (nnumeric x 1)"
| |-FieldDecl 0x5cd1d0 <line:1078:3, col:13> col:13 numeric_size 'int *'
| | `-FullComment 0x5ffc00 <col:37, col:92>
| |   `-ParagraphComment 0x5ffbd0 <col:37, col:92>
| |     `-TextComment 0x5ffba0 <col:37, col:92> Text=" size of numeric field                    (nnumeric x 1)"
| |-FieldDecl 0x5cd260 <line:1079:3, col:13> col:13 invalid numeric_data 'int *'
| | `-FullComment 0x5ffcd0 <col:37, col:96>
| |   `-ParagraphComment 0x5ffca0 <col:37, col:96>
| |     `-TextComment 0x5ffc70 <col:37, col:96> Text=" array of all numeric fields              (nnumericdata x 1)"
| |-FieldDecl 0x5cd320 <line:1082:3, col:13> col:13 text_adr 'int *'
| | `-FullComment 0x5ffda0 <col:37, col:89>
| |   `-ParagraphComment 0x5ffd70 <col:37, col:89>
| |     `-TextComment 0x5ffd40 <col:37, col:89> Text=" address of text in text_data             (ntext x 1)"
| |-FieldDecl 0x5cd3b0 <line:1083:3, col:13> col:13 text_size 'int *'
| | `-FullComment 0x5ffe70 <col:37, col:89>
| |   `-ParagraphComment 0x5ffe40 <col:37, col:89>
| |     `-TextComment 0x5ffe10 <col:37, col:89> Text=" size of text field (strlen+1)            (ntext x 1)"
| |-FieldDecl 0x5cd440 <line:1084:3, col:13> col:13 text_data 'char *'
| | `-FullComment 0x5fff40 <col:37, col:93>
| |   `-ParagraphComment 0x5fff10 <col:37, col:93>
| |     `-TextComment 0x5ffee0 <col:37, col:93> Text=" array of all text fields (0-terminated)  (ntextdata x 1)"
| |-FieldDecl 0x5cd500 <line:1087:3, col:13> col:13 tuple_adr 'int *'
| | `-FullComment 0x600010 <col:37, col:90>
| |   `-ParagraphComment 0x5fffe0 <col:37, col:90>
| |     `-TextComment 0x5fffb0 <col:37, col:90> Text=" address of text in text_data             (ntuple x 1)"
| |-FieldDecl 0x5cd590 <line:1088:3, col:13> col:13 tuple_size 'int *'
| | `-FullComment 0x6000e0 <col:37, col:90>
| |   `-ParagraphComment 0x6000b0 <col:37, col:90>
| |     `-TextComment 0x600080 <col:37, col:90> Text=" number of objects in tuple               (ntuple x 1)"
| |-FieldDecl 0x5cd620 <line:1089:3, col:13> col:13 tuple_objtype 'int *'
| | `-FullComment 0x6001b0 <col:37, col:94>
| |   `-ParagraphComment 0x600180 <col:37, col:94>
| |     `-TextComment 0x600150 <col:37, col:94> Text=" array of object types in all tuples      (ntupledata x 1)"
| |-FieldDecl 0x5cd6b0 <line:1090:3, col:13> col:13 tuple_objid 'int *'
| | `-FullComment 0x600280 <col:37, col:94>
| |   `-ParagraphComment 0x600250 <col:37, col:94>
| |     `-TextComment 0x600220 <col:37, col:94> Text=" array of object ids in all tuples        (ntupledata x 1)"
| |-FieldDecl 0x5cd740 <line:1091:3, col:13> col:13 invalid tuple_objprm 'int *'
| | `-FullComment 0x600350 <col:37, col:94>
| |   `-ParagraphComment 0x600320 <col:37, col:94>
| |     `-TextComment 0x6002f0 <col:37, col:94> Text=" array of object params in all tuples     (ntupledata x 1)"
| |-FieldDecl 0x5cd800 <line:1094:3, col:13> col:13 invalid key_time 'int *'
| | `-FullComment 0x600420 <col:37, col:88>
| |   `-ParagraphComment 0x6003f0 <col:37, col:88>
| |     `-TextComment 0x6003c0 <col:37, col:88> Text=" key time                                 (nkey x 1)"
| |-FieldDecl 0x5cd890 <line:1095:3, col:13> col:13 invalid key_qpos 'int *'
| | `-FullComment 0x6004f0 <col:37, col:89>
| |   `-ParagraphComment 0x6004c0 <col:37, col:89>
| |     `-TextComment 0x600490 <col:37, col:89> Text=" key position                             (nkey x nq)"
| |-FieldDecl 0x5cd920 <line:1096:3, col:13> col:13 invalid key_qvel 'int *'
| | `-FullComment 0x6005c0 <col:37, col:89>
| |   `-ParagraphComment 0x600590 <col:37, col:89>
| |     `-TextComment 0x600560 <col:37, col:89> Text=" key velocity                             (nkey x nv)"
| |-FieldDecl 0x5cd9b0 <line:1097:3, col:13> col:13 invalid key_act 'int *'
| | `-FullComment 0x600690 <col:37, col:89>
| |   `-ParagraphComment 0x600660 <col:37, col:89>
| |     `-TextComment 0x600630 <col:37, col:89> Text=" key activation                           (nkey x na)"
| |-FieldDecl 0x5cda40 <line:1098:3, col:13> col:13 invalid key_mpos 'int *'
| | `-FullComment 0x600760 <col:37, col:95>
| |   `-ParagraphComment 0x600730 <col:37, col:95>
| |     `-TextComment 0x600700 <col:37, col:95> Text=" key mocap position                       (nkey x nmocap*3)"
| |-FieldDecl 0x5cdad0 <line:1099:3, col:13> col:13 invalid key_mquat 'int *'
| | `-FullComment 0x600830 <col:37, col:95>
| |   `-ParagraphComment 0x600800 <col:37, col:95>
| |     `-TextComment 0x6007d0 <col:37, col:95> Text=" key mocap quaternion                     (nkey x nmocap*4)"
| |-FieldDecl 0x5cdb60 <line:1100:3, col:13> col:13 invalid key_ctrl 'int *'
| | `-FullComment 0x5e97d0 <col:37, col:89>
| |   `-ParagraphComment 0x5e97a0 <col:37, col:89>
| |     `-TextComment 0x5e9770 <col:37, col:89> Text=" key control                              (nkey x nu)"
| |-FieldDecl 0x5cdc20 <line:1103:3, col:13> col:13 name_bodyadr 'int *'
| | `-FullComment 0x5e98a0 <col:37, col:89>
| |   `-ParagraphComment 0x5e9870 <col:37, col:89>
| |     `-TextComment 0x5e9840 <col:37, col:89> Text=" body name pointers                       (nbody x 1)"
| |-FieldDecl 0x5cdcb0 <line:1104:3, col:13> col:13 name_jntadr 'int *'
| | `-FullComment 0x5e9970 <col:37, col:88>
| |   `-ParagraphComment 0x5e9940 <col:37, col:88>
| |     `-TextComment 0x5e9910 <col:37, col:88> Text=" joint name pointers                      (njnt x 1)"
| |-FieldDecl 0x5cdd40 <line:1105:3, col:13> col:13 name_geomadr 'int *'
| | `-FullComment 0x5e9a40 <col:37, col:89>
| |   `-ParagraphComment 0x5e9a10 <col:37, col:89>
| |     `-TextComment 0x5e99e0 <col:37, col:89> Text=" geom name pointers                       (ngeom x 1)"
| |-FieldDecl 0x5cddd0 <line:1106:3, col:13> col:13 name_siteadr 'int *'
| | `-FullComment 0x5e9b10 <col:37, col:89>
| |   `-ParagraphComment 0x5e9ae0 <col:37, col:89>
| |     `-TextComment 0x5e9ab0 <col:37, col:89> Text=" site name pointers                       (nsite x 1)"
| |-FieldDecl 0x5cde60 <line:1107:3, col:13> col:13 name_camadr 'int *'
| | `-FullComment 0x5e9be0 <col:37, col:88>
| |   `-ParagraphComment 0x5e9bb0 <col:37, col:88>
| |     `-TextComment 0x5e9b80 <col:37, col:88> Text=" camera name pointers                     (ncam x 1)"
| |-FieldDecl 0x5cdef0 <line:1108:3, col:13> col:13 name_lightadr 'int *'
| | `-FullComment 0x5e9cb0 <col:37, col:90>
| |   `-ParagraphComment 0x5e9c80 <col:37, col:90>
| |     `-TextComment 0x5e9c50 <col:37, col:90> Text=" light name pointers                      (nlight x 1)"
| |-FieldDecl 0x5cdf80 <line:1109:3, col:13> col:13 name_flexadr 'int *'
| | `-FullComment 0x5e9d80 <col:37, col:89>
| |   `-ParagraphComment 0x5e9d50 <col:37, col:89>
| |     `-TextComment 0x5e9d20 <col:37, col:89> Text=" flex name pointers                       (nflex x 1)"
| |-FieldDecl 0x5cf1d0 <line:1110:3, col:13> col:13 name_meshadr 'int *'
| | `-FullComment 0x5e9e50 <col:37, col:89>
| |   `-ParagraphComment 0x5e9e20 <col:37, col:89>
| |     `-TextComment 0x5e9df0 <col:37, col:89> Text=" mesh name pointers                       (nmesh x 1)"
| |-FieldDecl 0x5cf260 <line:1111:3, col:13> col:13 name_skinadr 'int *'
| | `-FullComment 0x5e9f20 <col:37, col:89>
| |   `-ParagraphComment 0x5e9ef0 <col:37, col:89>
| |     `-TextComment 0x5e9ec0 <col:37, col:89> Text=" skin name pointers                       (nskin x 1)"
| |-FieldDecl 0x5cf2f0 <line:1112:3, col:13> col:13 name_hfieldadr 'int *'
| | `-FullComment 0x5e9ff0 <col:37, col:91>
| |   `-ParagraphComment 0x5e9fc0 <col:37, col:91>
| |     `-TextComment 0x5e9f90 <col:37, col:91> Text=" hfield name pointers                     (nhfield x 1)"
| |-FieldDecl 0x5cf380 <line:1113:3, col:13> col:13 name_texadr 'int *'
| | `-FullComment 0x5ea0c0 <col:37, col:88>
| |   `-ParagraphComment 0x5ea090 <col:37, col:88>
| |     `-TextComment 0x5ea060 <col:37, col:88> Text=" texture name pointers                    (ntex x 1)"
| |-FieldDecl 0x5cf410 <line:1114:3, col:13> col:13 name_matadr 'int *'
| | `-FullComment 0x5ea190 <col:37, col:88>
| |   `-ParagraphComment 0x5ea160 <col:37, col:88>
| |     `-TextComment 0x5ea130 <col:37, col:88> Text=" material name pointers                   (nmat x 1)"
| |-FieldDecl 0x5cf4a0 <line:1115:3, col:13> col:13 name_pairadr 'int *'
| | `-FullComment 0x5ea260 <col:37, col:89>
| |   `-ParagraphComment 0x5ea230 <col:37, col:89>
| |     `-TextComment 0x5ea200 <col:37, col:89> Text=" geom pair name pointers                  (npair x 1)"
| |-FieldDecl 0x5cf530 <line:1116:3, col:13> col:13 name_excludeadr 'int *'
| | `-FullComment 0x5ea330 <col:37, col:92>
| |   `-ParagraphComment 0x5ea300 <col:37, col:92>
| |     `-TextComment 0x5ea2d0 <col:37, col:92> Text=" exclude name pointers                    (nexclude x 1)"
| |-FieldDecl 0x5cf5c0 <line:1117:3, col:13> col:13 name_eqadr 'int *'
| | `-FullComment 0x5ea400 <col:37, col:87>
| |   `-ParagraphComment 0x5ea3d0 <col:37, col:87>
| |     `-TextComment 0x5ea3a0 <col:37, col:87> Text=" equality constraint name pointers        (neq x 1)"
| |-FieldDecl 0x5cf650 <line:1118:3, col:13> col:13 name_tendonadr 'int *'
| | `-FullComment 0x5ea4d0 <col:37, col:91>
| |   `-ParagraphComment 0x5ea4a0 <col:37, col:91>
| |     `-TextComment 0x5ea470 <col:37, col:91> Text=" tendon name pointers                     (ntendon x 1)"
| |-FieldDecl 0x5cf6e0 <line:1119:3, col:13> col:13 name_actuatoradr 'int *'
| | `-FullComment 0x5ea5a0 <col:37, col:86>
| |   `-ParagraphComment 0x5ea570 <col:37, col:86>
| |     `-TextComment 0x5ea540 <col:37, col:86> Text=" actuator name pointers                   (nu x 1)"
| |-FieldDecl 0x5cf770 <line:1120:3, col:13> col:13 name_sensoradr 'int *'
| | `-FullComment 0x5ea670 <col:37, col:91>
| |   `-ParagraphComment 0x5ea640 <col:37, col:91>
| |     `-TextComment 0x5ea610 <col:37, col:91> Text=" sensor name pointers                     (nsensor x 1)"
| |-FieldDecl 0x5cf800 <line:1121:3, col:13> col:13 name_numericadr 'int *'
| | `-FullComment 0x5ea750 <col:37, col:92>
| |   `-ParagraphComment 0x5ea710 <col:37, col:92>
| |     `-TextComment 0x5ea6e0 <col:37, col:92> Text=" numeric name pointers                    (nnumeric x 1)"
| |-FieldDecl 0x5cf890 <line:1122:3, col:13> col:13 name_textadr 'int *'
| | `-FullComment 0x5ea820 <col:37, col:89>
| |   `-ParagraphComment 0x5ea7f0 <col:37, col:89>
| |     `-TextComment 0x5ea7c0 <col:37, col:89> Text=" text name pointers                       (ntext x 1)"
| |-FieldDecl 0x5cf920 <line:1123:3, col:13> col:13 name_tupleadr 'int *'
| | `-FullComment 0x5ea8f0 <col:37, col:90>
| |   `-ParagraphComment 0x5ea8c0 <col:37, col:90>
| |     `-TextComment 0x5ea890 <col:37, col:90> Text=" tuple name pointers                      (ntuple x 1)"
| |-FieldDecl 0x5cf9b0 <line:1124:3, col:13> col:13 name_keyadr 'int *'
| | `-FullComment 0x5ea9c0 <col:37, col:88>
| |   `-ParagraphComment 0x5ea990 <col:37, col:88>
| |     `-TextComment 0x5ea960 <col:37, col:88> Text=" keyframe name pointers                   (nkey x 1)"
| |-FieldDecl 0x5cfa40 <line:1125:3, col:13> col:13 name_pluginadr 'int *'
| | `-FullComment 0x5eaa90 <col:37, col:91>
| |   `-ParagraphComment 0x5eaa60 <col:37, col:91>
| |     `-TextComment 0x5eaa30 <col:37, col:91> Text=" plugin instance name pointers            (nplugin x 1)"
| |-FieldDecl 0x5cfad0 <line:1126:3, col:13> col:13 names 'char *'
| | `-FullComment 0x5eab60 <col:37, col:90>
| |   `-ParagraphComment 0x5eab30 <col:37, col:90>
| |     `-TextComment 0x5eab00 <col:37, col:90> Text=" names of all objects, 0-terminated       (nnames x 1)"
| |-FieldDecl 0x5cfb60 <line:1127:3, col:13> col:13 names_map 'int *'
| | `-FullComment 0x5eac30 <col:37, col:94>
| |   `-ParagraphComment 0x5eac00 <col:37, col:94>
| |     `-TextComment 0x5eabd0 <col:37, col:94> Text=" internal hash map of names               (nnames_map x 1)"
| `-FieldDecl 0x5cfc20 <line:1130:3, col:13> col:13 paths 'char *'
|   `-FullComment 0x5ead00 <col:37, col:90>
|     `-ParagraphComment 0x5eacd0 <col:37, col:90>
|       `-TextComment 0x5eaca0 <col:37, col:90> Text=" paths to assets, 0-terminated            (npaths x 1)"
`-TypedefDecl 0x5cfcf0 <line:1132:1, col:25> col:25 mjModel 'struct mjModel_':'struct mjModel_'
  `-ElaboratedType 0x5cfca0 'struct mjModel_' sugar
    `-RecordType 0x5adb00 'struct mjModel_'
      `-Record 0x5ada78 'mjModel_'