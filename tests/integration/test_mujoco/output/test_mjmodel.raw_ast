TranslationUnitDecl 0x1ecf6358 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ecf71a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ecf6920 '__int128'
|-TypedefDecl 0x1ecf7210 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ecf6940 'unsigned __int128'
|-TypedefDecl 0x1ed98bd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ecf72f0 'struct __NSConstantString_tag'
|   `-Record 0x1ecf7268 '__NSConstantString_tag'
|-TypedefDecl 0x1ed98c40 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x1ecf6ae0 '__SVInt8_t'
|-TypedefDecl 0x1ed98ca8 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1ecf6b00 '__SVInt16_t'
|-TypedefDecl 0x1ed98d10 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1ecf6b20 '__SVInt32_t'
|-TypedefDecl 0x1ed98d78 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1ecf6b40 '__SVInt64_t'
|-TypedefDecl 0x1ed98de0 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x1ecf6b60 '__SVUint8_t'
|-TypedefDecl 0x1ed98e48 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x1ecf6b80 '__SVUint16_t'
|-TypedefDecl 0x1ed98eb0 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x1ecf6ba0 '__SVUint32_t'
|-TypedefDecl 0x1ed98f18 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x1ecf6bc0 '__SVUint64_t'
|-TypedefDecl 0x1ed98f80 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x1ecf6be0 '__SVFloat16_t'
|-TypedefDecl 0x1ed98fe8 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1ecf6c00 '__SVFloat32_t'
|-TypedefDecl 0x1ed99050 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1ecf6c20 '__SVFloat64_t'
|-TypedefDecl 0x1ed990b8 <<invalid sloc>> <invalid sloc> implicit __SVBFloat16_t '__SVBFloat16_t'
| `-BuiltinType 0x1ecf6c40 '__SVBFloat16_t'
|-TypedefDecl 0x1ed99120 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x1ecf6c60 '__clang_svint8x2_t'
|-TypedefDecl 0x1ed99188 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x1ecf6c80 '__clang_svint16x2_t'
|-TypedefDecl 0x1ed991f0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x1ecf6ca0 '__clang_svint32x2_t'
|-TypedefDecl 0x1ed99258 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x1ecf6cc0 '__clang_svint64x2_t'
|-TypedefDecl 0x1ed992c0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x1ecf6ce0 '__clang_svuint8x2_t'
|-TypedefDecl 0x1ed99328 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1ecf6d00 '__clang_svuint16x2_t'
|-TypedefDecl 0x1ed99390 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1ecf6d20 '__clang_svuint32x2_t'
|-TypedefDecl 0x1ed993f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1ecf6d40 '__clang_svuint64x2_t'
|-TypedefDecl 0x1ed99460 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x1ecf6d60 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1ed994c8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x1ecf6d80 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1ed99530 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x1ecf6da0 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1ed99598 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x1ecf6dc0 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1ed99600 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x1ecf6de0 '__clang_svint8x3_t'
|-TypedefDecl 0x1ed99668 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1ecf6e00 '__clang_svint16x3_t'
|-TypedefDecl 0x1ed996d0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1ecf6e20 '__clang_svint32x3_t'
|-TypedefDecl 0x1ed99738 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1ecf6e40 '__clang_svint64x3_t'
|-TypedefDecl 0x1ed997a0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x1ecf6e60 '__clang_svuint8x3_t'
|-TypedefDecl 0x1ed99808 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x1ecf6e80 '__clang_svuint16x3_t'
|-TypedefDecl 0x1ed99870 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x1ecf6ea0 '__clang_svuint32x3_t'
|-TypedefDecl 0x1ed998d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x1ecf6ec0 '__clang_svuint64x3_t'
|-TypedefDecl 0x1ed99940 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x1ecf6ee0 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1ed999a8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1ecf6f00 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1ed99e30 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1ecf6f20 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1ed99e98 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1ecf6f40 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1ed99f00 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x1ecf6f60 '__clang_svint8x4_t'
|-TypedefDecl 0x1ed99f68 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x1ecf6f80 '__clang_svint16x4_t'
|-TypedefDecl 0x1ed99fd0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x1ecf6fa0 '__clang_svint32x4_t'
|-TypedefDecl 0x1ed9a038 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x1ecf6fc0 '__clang_svint64x4_t'
|-TypedefDecl 0x1ed9a0a0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x1ecf6fe0 '__clang_svuint8x4_t'
|-TypedefDecl 0x1ed9a108 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1ecf7000 '__clang_svuint16x4_t'
|-TypedefDecl 0x1ed9a170 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1ecf7020 '__clang_svuint32x4_t'
|-TypedefDecl 0x1ed9a1d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1ecf7040 '__clang_svuint64x4_t'
|-TypedefDecl 0x1ed9a240 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x1ecf7060 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1ed9a2a8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x1ecf7080 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1ed9a310 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x1ecf70a0 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1ed9a378 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x1ecf70c0 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1ed9a3e0 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x1ecf70e0 '__SVBool_t'
|-TypedefDecl 0x1ed9a480 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ed9a440 'char *'
|   `-BuiltinType 0x1ecf6400 'char'
|-TypedefDecl 0x1ed9a7e8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct std::__va_list'
| `-RecordType 0x1ed9a560 'struct std::__va_list'
|   `-Record 0x1ed9a4d8 '__va_list'
|-TypedefDecl 0x1ed9a880 </usr/lib/llvm-14/lib/clang/14.0.0/include/stddef.h:35:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1ed9a8f0 <line:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1ed9a960 <line:74:1, col:24> col:24 wchar_t 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-RecordDecl 0x1ed9a9b8 </usr/lib/llvm-14/lib/clang/14.0.0/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
| |-FieldDecl 0x1ed9aab0 <line:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| | `-AlignedAttr 0x1ed9ab20 <line:21:22, col:56> aligned
| |   `-ConstantExpr 0x1ed9ab00 <col:34, col:55> 'unsigned long'
| |     |-value: Int 8
| |     `-UnaryExprOrTypeTraitExpr 0x1ed9aa78 <col:34, col:55> 'unsigned long' __alignof 'long long'
| `-FieldDecl 0x1ed9abd0 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
|   `-AlignedAttr 0x1ed9ac40 <line:23:22, col:58> aligned
|     `-ConstantExpr 0x1ed9ac20 <col:34, col:57> 'unsigned long'
|       |-value: Int 16
|       `-UnaryExprOrTypeTraitExpr 0x1ed9ab98 <col:34, col:57> 'unsigned long' __alignof 'long double'
|-TypedefDecl 0x1ed9acf8 <line:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
| `-ElaboratedType 0x1ed9aca0 'struct max_align_t' sugar
|   `-RecordType 0x1ed9aa40 'max_align_t'
|     `-Record 0x1ed9a9b8 ''
|-TypedefDecl 0x1ed9ad80 </usr/include/aarch64-linux-gnu/bits/types.h:31:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x1ecf64c0 'unsigned char'
|-TypedefDecl 0x1edeadc0 <line:32:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x1ecf64e0 'unsigned short'
|-TypedefDecl 0x1edeae30 <line:33:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edeaea0 <line:34:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edeaf10 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x1ecf6420 'signed char'
|-TypedefDecl 0x1edeaf80 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x1ecf64c0 'unsigned char'
|-TypedefDecl 0x1edeaff0 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x1ecf6440 'short'
|-TypedefDecl 0x1edeb060 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x1ecf64e0 'unsigned short'
|-TypedefDecl 0x1edeb0d0 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x1ecf6460 'int'
|-TypedefDecl 0x1edeb140 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edeb1b0 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edeb220 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edeb2b0 <line:52:1, col:18> col:18 referenced __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x1edeb280 '__int8_t' sugar
|   |-Typedef 0x1edeaf10 '__int8_t'
|   `-BuiltinType 0x1ecf6420 'signed char'
|-TypedefDecl 0x1edeb340 <line:53:1, col:19> col:19 referenced __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x1edeb310 '__uint8_t' sugar
|   |-Typedef 0x1edeaf80 '__uint8_t'
|   `-BuiltinType 0x1ecf64c0 'unsigned char'
|-TypedefDecl 0x1edeb3d0 <line:54:1, col:19> col:19 referenced __int_least16_t '__int16_t':'short'
| `-TypedefType 0x1edeb3a0 '__int16_t' sugar
|   |-Typedef 0x1edeaff0 '__int16_t'
|   `-BuiltinType 0x1ecf6440 'short'
|-TypedefDecl 0x1edeb460 <line:55:1, col:20> col:20 referenced __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x1edeb430 '__uint16_t' sugar
|   |-Typedef 0x1edeb060 '__uint16_t'
|   `-BuiltinType 0x1ecf64e0 'unsigned short'
|-TypedefDecl 0x1edeb4f0 <line:56:1, col:19> col:19 referenced __int_least32_t '__int32_t':'int'
| `-TypedefType 0x1edeb4c0 '__int32_t' sugar
|   |-Typedef 0x1edeb0d0 '__int32_t'
|   `-BuiltinType 0x1ecf6460 'int'
|-TypedefDecl 0x1edeb580 <line:57:1, col:20> col:20 referenced __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x1edeb550 '__uint32_t' sugar
|   |-Typedef 0x1edeb140 '__uint32_t'
|   `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edeb610 <line:58:1, col:19> col:19 referenced __int_least64_t '__int64_t':'long'
| `-TypedefType 0x1edeb5e0 '__int64_t' sugar
|   |-Typedef 0x1edeb1b0 '__int64_t'
|   `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edeb6a0 <line:59:1, col:20> col:20 referenced __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x1edeb670 '__uint64_t' sugar
|   |-Typedef 0x1edeb220 '__uint64_t'
|   `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edeb710 <line:63:1, col:18> col:18 __quad_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edeb780 <line:64:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edeb7f0 <line:72:1, col:18> col:18 referenced __intmax_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edeb860 <line:73:1, col:27> col:27 referenced __uintmax_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edeb8d0 <line:137:22, line:145:25> col:25 __dev_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edeb940 <line:137:22, line:146:25> col:25 __uid_t 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edeb9b0 <line:137:22, line:147:25> col:25 __gid_t 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edeba20 <line:137:22, line:148:25> col:25 __ino_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edeba90 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edebb00 <line:137:22, line:150:26> col:26 __mode_t 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edebb70 <line:137:22, line:151:27> col:27 __nlink_t 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edebbe0 <line:137:22, line:152:25> col:25 __off_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edebc50 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edebcc0 <line:137:22, line:154:25> col:25 __pid_t 'int'
| `-BuiltinType 0x1ecf6460 'int'
|-RecordDecl 0x1edebd18 </usr/include/aarch64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0x1edf4e70 <col:33, col:44> col:37 __val 'int[2]'
|-TypedefDecl 0x1edf4f18 </usr/include/aarch64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x1edf4ec0 'struct __fsid_t' sugar
|   `-RecordType 0x1edebda0 '__fsid_t'
|     `-Record 0x1edebd18 ''
|-TypedefDecl 0x1edf4fa0 <line:137:22, line:156:27> col:27 __clock_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf5010 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf5080 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf50f0 <line:137:22, line:159:24> col:24 __id_t 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edf5160 <line:137:22, line:160:26> col:26 __time_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf51d0 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edf5240 <line:137:22, line:162:31> col:31 __suseconds_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf52b0 <line:137:22, line:163:33> col:33 __suseconds64_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf5320 <line:137:22, line:165:27> col:27 __daddr_t 'int'
| `-BuiltinType 0x1ecf6460 'int'
|-TypedefDecl 0x1edf5390 <line:137:22, line:166:25> col:25 __key_t 'int'
| `-BuiltinType 0x1ecf6460 'int'
|-TypedefDecl 0x1edf5400 <line:137:22, line:169:29> col:29 __clockid_t 'int'
| `-BuiltinType 0x1ecf6460 'int'
|-TypedefDecl 0x1edf5470 <line:137:22, line:172:27> col:27 __timer_t 'void *'
| `-PointerType 0x1ecf7100 'void *'
|   `-BuiltinType 0x1ecf63c0 'void'
|-TypedefDecl 0x1edf54e0 <line:137:22, line:175:29> col:29 __blksize_t 'int'
| `-BuiltinType 0x1ecf6460 'int'
|-TypedefDecl 0x1edf5550 <line:137:22, line:180:28> col:28 __blkcnt_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf55c0 <line:137:22, line:181:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf5630 <line:137:22, line:184:30> col:30 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf56a0 <line:137:22, line:185:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf5710 <line:137:22, line:188:30> col:30 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf5780 <line:137:22, line:189:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf57f0 <line:137:22, line:192:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf5860 <line:137:22, line:194:27> col:27 __ssize_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf58d0 <line:137:22, line:197:33> col:33 __syscall_slong_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf5940 <line:137:22, line:199:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf59d0 <line:203:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x1edf59a0 '__off64_t' sugar
|   |-Typedef 0x1edebc50 '__off64_t'
|   `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf5a40 <line:204:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x1ed9a440 'char *'
|   `-BuiltinType 0x1ecf6400 'char'
|-TypedefDecl 0x1edf5ab0 <line:137:22, line:207:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf5b20 <line:137:22, line:210:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edf5b90 <line:215:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x1ecf6460 'int'
|-TypedefDecl 0x1edf5bf8 </usr/include/aarch64-linux-gnu/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| `-TypedefType 0x1edeb280 '__int8_t' sugar
|   |-Typedef 0x1edeaf10 '__int8_t'
|   `-BuiltinType 0x1ecf6420 'signed char'
|-TypedefDecl 0x1edf5c60 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| `-TypedefType 0x1edeb3a0 '__int16_t' sugar
|   |-Typedef 0x1edeaff0 '__int16_t'
|   `-BuiltinType 0x1ecf6440 'short'
|-TypedefDecl 0x1edf5cc8 <line:26:1, col:19> col:19 int32_t '__int32_t':'int'
| `-TypedefType 0x1edeb4c0 '__int32_t' sugar
|   |-Typedef 0x1edeb0d0 '__int32_t'
|   `-BuiltinType 0x1ecf6460 'int'
|-TypedefDecl 0x1edf5d30 <line:27:1, col:19> col:19 int64_t '__int64_t':'long'
| `-TypedefType 0x1edeb5e0 '__int64_t' sugar
|   |-Typedef 0x1edeb1b0 '__int64_t'
|   `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf8ec0 </usr/include/aarch64-linux-gnu/bits/stdint-uintn.h:24:1, col:19> col:19 uint8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x1edeb310 '__uint8_t' sugar
|   |-Typedef 0x1edeaf80 '__uint8_t'
|   `-BuiltinType 0x1ecf64c0 'unsigned char'
|-TypedefDecl 0x1edf8f28 <line:25:1, col:20> col:20 uint16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x1edeb430 '__uint16_t' sugar
|   |-Typedef 0x1edeb060 '__uint16_t'
|   `-BuiltinType 0x1ecf64e0 'unsigned short'
|-TypedefDecl 0x1edf8f90 <line:26:1, col:20> col:20 uint32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x1edeb550 '__uint32_t' sugar
|   |-Typedef 0x1edeb140 '__uint32_t'
|   `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edf8ff8 <line:27:1, col:20> col:20 uint64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x1edeb670 '__uint64_t' sugar
|   |-Typedef 0x1edeb220 '__uint64_t'
|   `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf9080 </usr/include/stdint.h:43:1, col:24> col:24 int_least8_t '__int_least8_t':'signed char'
| `-TypedefType 0x1edf9050 '__int_least8_t' sugar
|   |-Typedef 0x1edeb2b0 '__int_least8_t'
|   `-TypedefType 0x1edeb280 '__int8_t' sugar
|     |-Typedef 0x1edeaf10 '__int8_t'
|     `-BuiltinType 0x1ecf6420 'signed char'
|-TypedefDecl 0x1edf9110 <line:44:1, col:25> col:25 int_least16_t '__int_least16_t':'short'
| `-TypedefType 0x1edf90e0 '__int_least16_t' sugar
|   |-Typedef 0x1edeb3d0 '__int_least16_t'
|   `-TypedefType 0x1edeb3a0 '__int16_t' sugar
|     |-Typedef 0x1edeaff0 '__int16_t'
|     `-BuiltinType 0x1ecf6440 'short'
|-TypedefDecl 0x1edf91a0 <line:45:1, col:25> col:25 int_least32_t '__int_least32_t':'int'
| `-TypedefType 0x1edf9170 '__int_least32_t' sugar
|   |-Typedef 0x1edeb4f0 '__int_least32_t'
|   `-TypedefType 0x1edeb4c0 '__int32_t' sugar
|     |-Typedef 0x1edeb0d0 '__int32_t'
|     `-BuiltinType 0x1ecf6460 'int'
|-TypedefDecl 0x1edf9230 <line:46:1, col:25> col:25 int_least64_t '__int_least64_t':'long'
| `-TypedefType 0x1edf9200 '__int_least64_t' sugar
|   |-Typedef 0x1edeb610 '__int_least64_t'
|   `-TypedefType 0x1edeb5e0 '__int64_t' sugar
|     |-Typedef 0x1edeb1b0 '__int64_t'
|     `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf92c0 <line:49:1, col:25> col:25 uint_least8_t '__uint_least8_t':'unsigned char'
| `-TypedefType 0x1edf9290 '__uint_least8_t' sugar
|   |-Typedef 0x1edeb340 '__uint_least8_t'
|   `-TypedefType 0x1edeb310 '__uint8_t' sugar
|     |-Typedef 0x1edeaf80 '__uint8_t'
|     `-BuiltinType 0x1ecf64c0 'unsigned char'
|-TypedefDecl 0x1edf9350 <line:50:1, col:26> col:26 uint_least16_t '__uint_least16_t':'unsigned short'
| `-TypedefType 0x1edf9320 '__uint_least16_t' sugar
|   |-Typedef 0x1edeb460 '__uint_least16_t'
|   `-TypedefType 0x1edeb430 '__uint16_t' sugar
|     |-Typedef 0x1edeb060 '__uint16_t'
|     `-BuiltinType 0x1ecf64e0 'unsigned short'
|-TypedefDecl 0x1edf93e0 <line:51:1, col:26> col:26 uint_least32_t '__uint_least32_t':'unsigned int'
| `-TypedefType 0x1edf93b0 '__uint_least32_t' sugar
|   |-Typedef 0x1edeb580 '__uint_least32_t'
|   `-TypedefType 0x1edeb550 '__uint32_t' sugar
|     |-Typedef 0x1edeb140 '__uint32_t'
|     `-BuiltinType 0x1ecf6500 'unsigned int'
|-TypedefDecl 0x1edf9470 <line:52:1, col:26> col:26 uint_least64_t '__uint_least64_t':'unsigned long'
| `-TypedefType 0x1edf9440 '__uint_least64_t' sugar
|   |-Typedef 0x1edeb6a0 '__uint_least64_t'
|   `-TypedefType 0x1edeb670 '__uint64_t' sugar
|     |-Typedef 0x1edeb220 '__uint64_t'
|     `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf94e0 <line:58:1, col:22> col:22 int_fast8_t 'signed char'
| `-BuiltinType 0x1ecf6420 'signed char'
|-TypedefDecl 0x1edf9550 <line:60:1, col:19> col:19 int_fast16_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf95c0 <line:61:1, col:19> col:19 int_fast32_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf9630 <line:62:1, col:19> col:19 int_fast64_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf96a0 <line:71:1, col:24> col:24 uint_fast8_t 'unsigned char'
| `-BuiltinType 0x1ecf64c0 'unsigned char'
|-TypedefDecl 0x1edf9710 <line:73:1, col:27> col:27 uint_fast16_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf9780 <line:74:1, col:27> col:27 uint_fast32_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf97f0 <line:75:1, col:27> col:27 uint_fast64_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf9860 <line:87:1, col:19> col:19 intptr_t 'long'
| `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf98d0 <line:90:1, col:27> col:27 uintptr_t 'unsigned long'
| `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf9960 <line:101:1, col:21> col:21 intmax_t '__intmax_t':'long'
| `-TypedefType 0x1edf9930 '__intmax_t' sugar
|   |-Typedef 0x1edeb7f0 '__intmax_t'
|   `-BuiltinType 0x1ecf6480 'long'
|-TypedefDecl 0x1edf99f0 <line:102:1, col:22> col:22 uintmax_t '__uintmax_t':'unsigned long'
| `-TypedefType 0x1edf99c0 '__uintmax_t' sugar
|   |-Typedef 0x1edeb860 '__uintmax_t'
|   `-BuiltinType 0x1ecf6520 'unsigned long'
|-TypedefDecl 0x1edf9af0 </home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjtnum.h:22:3, col:18> col:18 referenced mjtNum 'double'
| `-BuiltinType 0x1ecf6580 'double'
|-TypedefDecl 0x1edf9c20 <line:41:1, col:23> col:23 referenced mjtByte 'unsigned char'
| |-BuiltinType 0x1ecf64c0 'unsigned char'
| `-FullComment 0x1ee45180 <line:39:3, col:100>
|   `-ParagraphComment 0x1ee45150 <col:3, col:100>
|     `-TextComment 0x1ee45120 <col:3, col:100> Text="-------------------------------------- byte definition -------------------------------------------"
|-EnumDecl 0x1ee01e98 </home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:48:9, line:67:1> line:48:14 mjtDisableBit_
| |-FullComment 0x1ee45250 <line:46:3, col:100>
| | `-ParagraphComment 0x1ee45220 <col:3, col:100>
| |   `-TextComment 0x1ee451f0 <col:3, col:100> Text="---------------------------------- enum types (mjt) ----------------------------------------------"
| |-EnumConstantDecl 0x1ee02008 <line:49:3, col:28> col:3 mjDSBL_CONSTRAINT 'int'
| | |-ConstantExpr 0x1ee01fe8 <col:25, col:28> 'int'
| | | |-value: Int 1
| | | `-BinaryOperator 0x1ee01fc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee01f88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee01fa8 <col:28> 'int' 0
| | `-FullComment 0x1ee45320 <col:37, col:61>
| |   `-ParagraphComment 0x1ee452f0 <col:37, col:61>
| |     `-TextComment 0x1ee452c0 <col:37, col:61> Text=" entire constraint solver"
| |-EnumConstantDecl 0x1ee02108 <line:50:3, col:28> col:3 mjDSBL_EQUALITY 'int'
| | |-ConstantExpr 0x1ee020e8 <col:25, col:28> 'int'
| | | |-value: Int 2
| | | `-BinaryOperator 0x1ee020c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02088 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee020a8 <col:28> 'int' 1
| | `-FullComment 0x1ee453f0 <col:37, col:57>
| |   `-ParagraphComment 0x1ee453c0 <col:37, col:57>
| |     `-TextComment 0x1ee45390 <col:37, col:57> Text=" equality constraints"
| |-EnumConstantDecl 0x1ee02208 <line:51:3, col:28> col:3 mjDSBL_FRICTIONLOSS 'int'
| | |-ConstantExpr 0x1ee021e8 <col:25, col:28> 'int'
| | | |-value: Int 4
| | | `-BinaryOperator 0x1ee021c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02188 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee021a8 <col:28> 'int' 2
| | `-FullComment 0x1ee454c0 <col:37, col:78>
| |   `-ParagraphComment 0x1ee45490 <col:37, col:78>
| |     `-TextComment 0x1ee45460 <col:37, col:78> Text=" joint and tendon frictionloss constraints"
| |-EnumConstantDecl 0x1ee02308 <line:52:3, col:28> col:3 mjDSBL_LIMIT 'int'
| | |-ConstantExpr 0x1ee022e8 <col:25, col:28> 'int'
| | | |-value: Int 8
| | | `-BinaryOperator 0x1ee022c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02288 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee022a8 <col:28> 'int' 3
| | `-FullComment 0x1ee45590 <col:37, col:71>
| |   `-ParagraphComment 0x1ee45560 <col:37, col:71>
| |     `-TextComment 0x1ee45530 <col:37, col:71> Text=" joint and tendon limit constraints"
| |-EnumConstantDecl 0x1ee02408 <line:53:3, col:28> col:3 mjDSBL_CONTACT 'int'
| | |-ConstantExpr 0x1ee023e8 <col:25, col:28> 'int'
| | | |-value: Int 16
| | | `-BinaryOperator 0x1ee023c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02388 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee023a8 <col:28> 'int' 4
| | `-FullComment 0x1ee480f0 <col:37, col:56>
| |   `-ParagraphComment 0x1ee45630 <col:37, col:56>
| |     `-TextComment 0x1ee45600 <col:37, col:56> Text=" contact constraints"
| |-EnumConstantDecl 0x1ee02508 <line:54:3, col:28> col:3 mjDSBL_PASSIVE 'int'
| | |-ConstantExpr 0x1ee024e8 <col:25, col:28> 'int'
| | | |-value: Int 32
| | | `-BinaryOperator 0x1ee024c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02488 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee024a8 <col:28> 'int' 5
| | `-FullComment 0x1ee481c0 <col:37, col:51>
| |   `-ParagraphComment 0x1ee48190 <col:37, col:51>
| |     `-TextComment 0x1ee48160 <col:37, col:51> Text=" passive forces"
| |-EnumConstantDecl 0x1ee02608 <line:55:3, col:28> col:3 mjDSBL_GRAVITY 'int'
| | |-ConstantExpr 0x1ee025e8 <col:25, col:28> 'int'
| | | |-value: Int 64
| | | `-BinaryOperator 0x1ee025c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02588 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee025a8 <col:28> 'int' 6
| | `-FullComment 0x1ee48290 <col:37, col:57>
| |   `-ParagraphComment 0x1ee48260 <col:37, col:57>
| |     `-TextComment 0x1ee48230 <col:37, col:57> Text=" gravitational forces"
| |-EnumConstantDecl 0x1ee02708 <line:56:3, col:28> col:3 mjDSBL_CLAMPCTRL 'int'
| | |-ConstantExpr 0x1ee026e8 <col:25, col:28> 'int'
| | | |-value: Int 128
| | | `-BinaryOperator 0x1ee026c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02688 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee026a8 <col:28> 'int' 7
| | `-FullComment 0x1ee48360 <col:37, col:69>
| |   `-ParagraphComment 0x1ee48330 <col:37, col:69>
| |     `-TextComment 0x1ee48300 <col:37, col:69> Text=" clamp control to specified range"
| |-EnumConstantDecl 0x1ee02808 <line:57:3, col:28> col:3 mjDSBL_WARMSTART 'int'
| | |-ConstantExpr 0x1ee027e8 <col:25, col:28> 'int'
| | | |-value: Int 256
| | | `-BinaryOperator 0x1ee027c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02788 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee027a8 <col:28> 'int' 8
| | `-FullComment 0x1ee48430 <col:37, col:64>
| |   `-ParagraphComment 0x1ee48400 <col:37, col:64>
| |     `-TextComment 0x1ee483d0 <col:37, col:64> Text=" warmstart constraint solver"
| |-EnumConstantDecl 0x1ee02908 <line:58:3, col:28> col:3 mjDSBL_FILTERPARENT 'int'
| | |-ConstantExpr 0x1ee028e8 <col:25, col:28> 'int'
| | | |-value: Int 512
| | | `-BinaryOperator 0x1ee028c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02888 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee028a8 <col:28> 'int' 9
| | `-FullComment 0x1ee48500 <col:37, col:71>
| |   `-ParagraphComment 0x1ee484d0 <col:37, col:71>
| |     `-TextComment 0x1ee484a0 <col:37, col:71> Text=" remove collisions with parent body"
| |-EnumConstantDecl 0x1ee02a08 <line:59:3, col:28> col:3 mjDSBL_ACTUATION 'int'
| | |-ConstantExpr 0x1ee029e8 <col:25, col:28> 'int'
| | | |-value: Int 1024
| | | `-BinaryOperator 0x1ee029c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02988 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee029a8 <col:28> 'int' 10
| | `-FullComment 0x1ee485d0 <col:37, col:59>
| |   `-ParagraphComment 0x1ee485a0 <col:37, col:59>
| |     `-TextComment 0x1ee48570 <col:37, col:59> Text=" apply actuation forces"
| |-EnumConstantDecl 0x1ee02b08 <line:60:3, col:28> col:3 mjDSBL_REFSAFE 'int'
| | |-ConstantExpr 0x1ee02ae8 <col:25, col:28> 'int'
| | | |-value: Int 2048
| | | `-BinaryOperator 0x1ee02ac8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02a88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee02aa8 <col:28> 'int' 11
| | `-FullComment 0x1ee486a0 <col:37, col:79>
| |   `-ParagraphComment 0x1ee48670 <col:37, col:79>
| |     `-TextComment 0x1ee48640 <col:37, col:79> Text=" integrator safety: make ref[0]>=2*timestep"
| |-EnumConstantDecl 0x1ee02c08 <line:61:3, col:28> col:3 mjDSBL_SENSOR 'int'
| | |-ConstantExpr 0x1ee02be8 <col:25, col:28> 'int'
| | | |-value: Int 4096
| | | `-BinaryOperator 0x1ee02bc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02b88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee02ba8 <col:28> 'int' 12
| | `-FullComment 0x1ee48770 <col:37, col:44>
| |   `-ParagraphComment 0x1ee48740 <col:37, col:44>
| |     `-TextComment 0x1ee48710 <col:37, col:44> Text=" sensors"
| |-EnumConstantDecl 0x1ee05e70 <line:62:3, col:28> col:3 mjDSBL_MIDPHASE 'int'
| | |-ConstantExpr 0x1ee02ce8 <col:25, col:28> 'int'
| | | |-value: Int 8192
| | | `-BinaryOperator 0x1ee02cc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee02c88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee02ca8 <col:28> 'int' 13
| | `-FullComment 0x1ee48840 <col:37, col:66>
| |   `-ParagraphComment 0x1ee48810 <col:37, col:66>
| |     `-TextComment 0x1ee487e0 <col:37, col:66> Text=" mid-phase collision filtering"
| |-EnumConstantDecl 0x1ee05f68 <line:63:3, col:28> col:3 mjDSBL_EULERDAMP 'int'
| | |-ConstantExpr 0x1ee05f48 <col:25, col:28> 'int'
| | | |-value: Int 16384
| | | `-BinaryOperator 0x1ee05f28 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee05ee8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee05f08 <col:28> 'int' 14
| | `-FullComment 0x1ee48910 <col:37, col:94>
| |   `-ParagraphComment 0x1ee488e0 <col:37, col:94>
| |     `-TextComment 0x1ee488b0 <col:37, col:94> Text=" implicit integration of joint damping in Euler integrator"
| |-EnumConstantDecl 0x1ee06068 <line:64:3, col:28> col:3 mjDSBL_AUTORESET 'int'
| | |-ConstantExpr 0x1ee06048 <col:25, col:28> 'int'
| | | |-value: Int 32768
| | | `-BinaryOperator 0x1ee06028 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee05fe8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee06008 <col:28> 'int' 15
| | `-FullComment 0x1ee489e0 <col:37, col:87>
| |   `-ParagraphComment 0x1ee489b0 <col:37, col:87>
| |     `-TextComment 0x1ee48980 <col:37, col:87> Text=" automatic reset when numerical issues are detected"
| `-EnumConstantDecl 0x1ee06158 <line:66:3, col:25> col:3 mjNDISABLE 'int'
|   |-ConstantExpr 0x1ee06138 <col:25> 'int'
|   | |-value: Int 16
|   | `-IntegerLiteral 0x1ee060e8 <col:25> 'int' 16
|   `-FullComment 0x1ee48ab0 <col:37, col:60>
|     `-ParagraphComment 0x1ee48a80 <col:37, col:60>
|       `-TextComment 0x1ee48a50 <col:37, col:60> Text=" number of disable flags"
|-TypedefDecl 0x1ee06208 <line:48:1, line:67:3> col:3 mjtDisableBit 'enum mjtDisableBit_':'enum mjtDisableBit_'
| |-ElaboratedType 0x1ee061b0 'enum mjtDisableBit_' sugar
| | `-EnumType 0x1ee01f40 'enum mjtDisableBit_'
| |   `-Enum 0x1ee01e98 'mjtDisableBit_'
| `-FullComment 0x1ee48b80 <line:46:3, col:100>
|   `-ParagraphComment 0x1ee48b50 <col:3, col:100>
|     `-TextComment 0x1ee48b20 <col:3, col:100> Text="---------------------------------- enum types (mjt) ----------------------------------------------"
|-EnumDecl 0x1ee06278 <line:70:9, line:81:1> line:70:14 mjtEnableBit_
| |-EnumConstantDecl 0x1ee063e8 <line:71:3, col:28> col:3 mjENBL_OVERRIDE 'int'
| | |-ConstantExpr 0x1ee063c8 <col:25, col:28> 'int'
| | | |-value: Int 1
| | | `-BinaryOperator 0x1ee063a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee06368 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee06388 <col:28> 'int' 0
| | `-FullComment 0x1ee48c50 <col:37, col:64>
| |   `-ParagraphComment 0x1ee48c20 <col:37, col:64>
| |     `-TextComment 0x1ee48bf0 <col:37, col:64> Text=" override contact parameters"
| |-EnumConstantDecl 0x1ee064e8 <line:72:3, col:28> col:3 mjENBL_ENERGY 'int'
| | |-ConstantExpr 0x1ee064c8 <col:25, col:28> 'int'
| | | |-value: Int 2
| | | `-BinaryOperator 0x1ee064a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee06468 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee06488 <col:28> 'int' 1
| | `-FullComment 0x1ee48d20 <col:37, col:55>
| |   `-ParagraphComment 0x1ee48cf0 <col:37, col:55>
| |     `-TextComment 0x1ee48cc0 <col:37, col:55> Text=" energy computation"
| |-EnumConstantDecl 0x1ee065e8 <line:73:3, col:28> col:3 mjENBL_FWDINV 'int'
| | |-ConstantExpr 0x1ee065c8 <col:25, col:28> 'int'
| | | |-value: Int 4
| | | `-BinaryOperator 0x1ee065a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee06568 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee06588 <col:28> 'int' 2
| | `-FullComment 0x1ee48df0 <col:37, col:61>
| |   `-ParagraphComment 0x1ee48dc0 <col:37, col:61>
| |     `-TextComment 0x1ee48d90 <col:37, col:61> Text=" record solver statistics"
| |-EnumConstantDecl 0x1ee066e8 <line:74:3, col:28> col:3 mjENBL_INVDISCRETE 'int'
| | |-ConstantExpr 0x1ee066c8 <col:25, col:28> 'int'
| | | |-value: Int 8
| | | `-BinaryOperator 0x1ee066a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee06668 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee06688 <col:28> 'int' 3
| | `-FullComment 0x1ee48ee0 <col:37, line:75:59>
| |   `-ParagraphComment 0x1ee48eb0 <line:74:37, line:75:59>
| |     |-TextComment 0x1ee48e60 <line:74:37, col:67> Text=" discrete-time inverse dynamics"
| |     `-TextComment 0x1ee48e80 <line:75:37, col:59> Text=" experimental features:"
| |-EnumConstantDecl 0x1ee067e8 <line:76:3, col:28> col:3 mjENBL_MULTICCD 'int'
| | |-ConstantExpr 0x1ee067c8 <col:25, col:28> 'int'
| | | |-value: Int 16
| | | `-BinaryOperator 0x1ee067a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee06768 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee06788 <col:28> 'int' 4
| | `-FullComment 0x1ee48fb0 <col:37, col:75>
| |   `-ParagraphComment 0x1ee48f80 <col:37, col:75>
| |     `-TextComment 0x1ee48f50 <col:37, col:75> Text=" multi-point convex collision detection"
| |-EnumConstantDecl 0x1ee068e8 <line:77:3, col:28> col:3 mjENBL_ISLAND 'int'
| | |-ConstantExpr 0x1ee068c8 <col:25, col:28> 'int'
| | | |-value: Int 32
| | | `-BinaryOperator 0x1ee068a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee06868 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee06888 <col:28> 'int' 5
| | `-FullComment 0x1ee49080 <col:37, col:64>
| |   `-ParagraphComment 0x1ee49050 <col:37, col:64>
| |     `-TextComment 0x1ee49020 <col:37, col:64> Text=" constraint island discovery"
| |-EnumConstantDecl 0x1ee069e8 <line:78:3, col:28> col:3 mjENBL_NATIVECCD 'int'
| | |-ConstantExpr 0x1ee069c8 <col:25, col:28> 'int'
| | | |-value: Int 64
| | | `-BinaryOperator 0x1ee069a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x1ee06968 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x1ee06988 <col:28> 'int' 6
| | `-FullComment 0x1ee491e0 <col:37, col:70>
| |   `-ParagraphComment 0x1ee491b0 <col:37, col:70>
| |     `-TextComment 0x1ee49180 <col:37, col:70> Text=" native convex collision detection"
| `-EnumConstantDecl 0x1ee06ad8 <line:80:3, col:25> col:3 mjNENABLE 'int'
|   |-ConstantExpr 0x1ee06ab8 <col:25> 'int'
|   | |-value: Int 7
|   | `-IntegerLiteral 0x1ee06a68 <col:25> 'int' 7
|   `-FullComment 0x1ee492b0 <col:37, col:59>
|     `-ParagraphComment 0x1ee49280 <col:37, col:59>
|       `-TextComment 0x1ee49250 <col:37, col:59> Text=" number of enable flags"
|-TypedefDecl 0x1ee06b88 <line:70:1, line:81:3> col:3 mjtEnableBit 'enum mjtEnableBit_':'enum mjtEnableBit_'
| `-ElaboratedType 0x1ee06b30 'enum mjtEnableBit_' sugar
|   `-EnumType 0x1ee06320 'enum mjtEnableBit_'
|     `-Enum 0x1ee06278 'mjtEnableBit_'
|-EnumDecl 0x1ee06bf8 <line:84:9, line:89:1> line:84:14 mjtJoint_
| |-EnumConstantDecl 0x1ee06d28 <line:85:3, col:25> col:3 mjJNT_FREE 'int'
| | |-ConstantExpr 0x1ee06d08 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee06ce8 <col:25> 'int' 0
| | `-FullComment 0x1ee49380 <col:37, col:85>
| |   `-ParagraphComment 0x1ee49350 <col:37, col:85>
| |     `-TextComment 0x1ee49320 <col:37, col:85> Text=" global position and orientation (quat)       (7)"
| |-EnumConstantDecl 0x1ee06da8 <line:86:3> col:3 mjJNT_BALL 'int'
| | `-FullComment 0x1ee49450 <col:37, col:85>
| |   `-ParagraphComment 0x1ee49420 <col:37, col:85>
| |     `-TextComment 0x1ee493f0 <col:37, col:85> Text=" orientation (quat) relative to parent        (4)"
| |-EnumConstantDecl 0x1ee06e80 <line:87:3> col:3 mjJNT_SLIDE 'int'
| | `-FullComment 0x1ee49520 <col:37, col:85>
| |   `-ParagraphComment 0x1ee494f0 <col:37, col:85>
| |     `-TextComment 0x1ee494c0 <col:37, col:85> Text=" sliding distance along body-fixed axis       (1)"
| `-EnumConstantDecl 0x1ee06f28 <line:88:3> col:3 mjJNT_HINGE 'int'
|   `-FullComment 0x1ee495f0 <col:37, col:85>
|     `-ParagraphComment 0x1ee495c0 <col:37, col:85>
|       `-TextComment 0x1ee49590 <col:37, col:85> Text=" rotation angle (rad) around body-fixed axis  (1)"
|-TypedefDecl 0x1ee06fd8 <line:84:1, line:89:3> col:3 mjtJoint 'enum mjtJoint_':'enum mjtJoint_'
| `-ElaboratedType 0x1ee06f80 'enum mjtJoint_' sugar
|   `-EnumType 0x1ee06ca0 'enum mjtJoint_'
|     `-Enum 0x1ee06bf8 'mjtJoint_'
|-EnumDecl 0x1ee07048 <line:92:9, line:118:1> line:92:14 mjtGeom_
| |-EnumConstantDecl 0x1ee071a8 <line:94:3, col:25> col:3 mjGEOM_PLANE 'int'
| | |-ConstantExpr 0x1ee07188 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee07168 <col:25> 'int' 0
| | `-FullComment 0x1ee496c0 <col:37, col:42>
| |   `-ParagraphComment 0x1ee49690 <col:37, col:42>
| |     `-TextComment 0x1ee49660 <col:37, col:42> Text=" plane"
| |-EnumConstantDecl 0x1ee07228 <line:95:3> col:3 mjGEOM_HFIELD 'int'
| | `-FullComment 0x1ee49790 <col:37, col:49>
| |   `-ParagraphComment 0x1ee49760 <col:37, col:49>
| |     `-TextComment 0x1ee49730 <col:37, col:49> Text=" height field"
| |-EnumConstantDecl 0x1ee072a8 <line:96:3> col:3 mjGEOM_SPHERE 'int'
| | `-FullComment 0x1ee49860 <col:37, col:43>
| |   `-ParagraphComment 0x1ee49830 <col:37, col:43>
| |     `-TextComment 0x1ee49800 <col:37, col:43> Text=" sphere"
| |-EnumConstantDecl 0x1ee07328 <line:97:3> col:3 mjGEOM_CAPSULE 'int'
| | `-FullComment 0x1ee49930 <col:37, col:44>
| |   `-ParagraphComment 0x1ee49900 <col:37, col:44>
| |     `-TextComment 0x1ee498d0 <col:37, col:44> Text=" capsule"
| |-EnumConstantDecl 0x1ee073a8 <line:98:3> col:3 mjGEOM_ELLIPSOID 'int'
| | `-FullComment 0x1ee49a00 <col:37, col:46>
| |   `-ParagraphComment 0x1ee499d0 <col:37, col:46>
| |     `-TextComment 0x1ee499a0 <col:37, col:46> Text=" ellipsoid"
| |-EnumConstantDecl 0x1ee07428 <line:99:3> col:3 mjGEOM_CYLINDER 'int'
| | `-FullComment 0x1ee49ad0 <col:37, col:45>
| |   `-ParagraphComment 0x1ee49aa0 <col:37, col:45>
| |     `-TextComment 0x1ee49a70 <col:37, col:45> Text=" cylinder"
| |-EnumConstantDecl 0x1ee074a8 <line:100:3> col:3 mjGEOM_BOX 'int'
| | `-FullComment 0x1ee49ba0 <col:37, col:40>
| |   `-ParagraphComment 0x1ee49b70 <col:37, col:40>
| |     `-TextComment 0x1ee49b40 <col:37, col:40> Text=" box"
| |-EnumConstantDecl 0x1ee07528 <line:101:3> col:3 mjGEOM_MESH 'int'
| | `-FullComment 0x1ee49c70 <col:37, col:41>
| |   `-ParagraphComment 0x1ee49c40 <col:37, col:41>
| |     `-TextComment 0x1ee49c10 <col:37, col:41> Text=" mesh"
| |-EnumConstantDecl 0x1ee075a8 <line:102:3> col:3 mjGEOM_SDF 'int'
| | `-FullComment 0x1ee49d40 <col:37, col:58>
| |   `-ParagraphComment 0x1ee49d10 <col:37, col:58>
| |     `-TextComment 0x1ee49ce0 <col:37, col:58> Text=" signed distance field"
| |-EnumConstantDecl 0x1ee07628 <line:104:3> col:3 mjNGEOMTYPES 'int'
| | `-FullComment 0x1ee49e10 <col:37, col:65>
| |   `-ParagraphComment 0x1ee49de0 <col:37, col:65>
| |     `-TextComment 0x1ee49db0 <col:37, col:65> Text=" number of regular geom types"
| |-EnumConstantDecl 0x1ee07718 <line:107:3, col:25> col:3 mjGEOM_ARROW 'int'
| | |-ConstantExpr 0x1ee076f8 <col:25> 'int'
| | | |-value: Int 100
| | | `-IntegerLiteral 0x1ee076d8 <col:25> 'int' 100
| | `-FullComment 0x1ee49ee0 <col:37, col:42>
| |   `-ParagraphComment 0x1ee49eb0 <col:37, col:42>
| |     `-TextComment 0x1ee49e80 <col:37, col:42> Text=" arrow"
| |-EnumConstantDecl 0x1ee07798 <line:108:3> col:3 mjGEOM_ARROW1 'int'
| | `-FullComment 0x1ee49fb0 <col:37, col:57>
| |   `-ParagraphComment 0x1ee49f80 <col:37, col:57>
| |     `-TextComment 0x1ee49f50 <col:37, col:57> Text=" arrow without wedges"
| |-EnumConstantDecl 0x1ee07818 <line:109:3> col:3 mjGEOM_ARROW2 'int'
| | `-FullComment 0x1ee4a080 <col:37, col:61>
| |   `-ParagraphComment 0x1ee4a050 <col:37, col:61>
| |     `-TextComment 0x1ee4a020 <col:37, col:61> Text=" arrow in both directions"
| |-EnumConstantDecl 0x1ee07898 <line:110:3> col:3 mjGEOM_LINE 'int'
| | `-FullComment 0x1ee4a160 <col:37, col:41>
| |   `-ParagraphComment 0x1ee4a120 <col:37, col:41>
| |     `-TextComment 0x1ee4a0f0 <col:37, col:41> Text=" line"
| |-EnumConstantDecl 0x1ee07918 <line:111:3> col:3 mjGEOM_LINEBOX 'int'
| | `-FullComment 0x1ee4a230 <col:37, col:56>
| |   `-ParagraphComment 0x1ee4a200 <col:37, col:56>
| |     `-TextComment 0x1ee4a1d0 <col:37, col:56> Text=" box with line edges"
| |-EnumConstantDecl 0x1ee07998 <line:112:3> col:3 mjGEOM_FLEX 'int'
| | `-FullComment 0x1ee4a300 <col:37, col:41>
| |   `-ParagraphComment 0x1ee4a2d0 <col:37, col:41>
| |     `-TextComment 0x1ee4a2a0 <col:37, col:41> Text=" flex"
| |-EnumConstantDecl 0x1ee07a18 <line:113:3> col:3 mjGEOM_SKIN 'int'
| | `-FullComment 0x1ee4a3d0 <col:37, col:41>
| |   `-ParagraphComment 0x1ee4a3a0 <col:37, col:41>
| |     `-TextComment 0x1ee4a370 <col:37, col:41> Text=" skin"
| |-EnumConstantDecl 0x1ee07a98 <line:114:3> col:3 mjGEOM_LABEL 'int'
| | `-FullComment 0x1ee4a4a0 <col:37, col:47>
| |   `-ParagraphComment 0x1ee4a470 <col:37, col:47>
| |     `-TextComment 0x1ee4a440 <col:37, col:47> Text=" text label"
| |-EnumConstantDecl 0x1ee07b18 <line:115:3> col:3 mjGEOM_TRIANGLE 'int'
| | `-FullComment 0x1ee4a570 <col:37, col:45>
| |   `-ParagraphComment 0x1ee4a540 <col:37, col:45>
| |     `-TextComment 0x1ee4a510 <col:37, col:45> Text=" triangle"
| `-EnumConstantDecl 0x1ee07c08 <line:117:3, col:25> col:3 mjGEOM_NONE 'int'
|   |-ConstantExpr 0x1ee07be8 <col:25> 'int'
|   | |-value: Int 1001
|   | `-IntegerLiteral 0x1ee07b98 <col:25> 'int' 1001
|   `-FullComment 0x1ee4a640 <col:37, col:54>
|     `-ParagraphComment 0x1ee4a610 <col:37, col:54>
|       `-TextComment 0x1ee4a5e0 <col:37, col:54> Text=" missing geom type"
|-TypedefDecl 0x1ee07cb8 <line:92:1, line:118:3> col:3 mjtGeom 'enum mjtGeom_':'enum mjtGeom_'
| `-ElaboratedType 0x1ee07c60 'enum mjtGeom_' sugar
|   `-EnumType 0x1ee070f0 'enum mjtGeom_'
|     `-Enum 0x1ee07048 'mjtGeom_'
|-EnumDecl 0x1ee07d28 <line:121:9, line:127:1> line:121:14 mjtCamLight_
| |-EnumConstantDecl 0x1ee08ea0 <line:122:3, col:25> col:3 mjCAMLIGHT_FIXED 'int'
| | |-ConstantExpr 0x1ee07e38 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee07e18 <col:25> 'int' 0
| | `-FullComment 0x1ee4a710 <col:37, col:62>
| |   `-ParagraphComment 0x1ee4a6e0 <col:37, col:62>
| |     `-TextComment 0x1ee4a6b0 <col:37, col:62> Text=" pos and rot fixed in body"
| |-EnumConstantDecl 0x1ee08f18 <line:123:3> col:3 mjCAMLIGHT_TRACK 'int'
| | `-FullComment 0x1ee4a7e0 <col:37, col:73>
| |   `-ParagraphComment 0x1ee4a7b0 <col:37, col:73>
| |     `-TextComment 0x1ee4a780 <col:37, col:73> Text=" pos tracks body, rot fixed in global"
| |-EnumConstantDecl 0x1ee08f98 <line:124:3> col:3 mjCAMLIGHT_TRACKCOM 'int'
| | `-FullComment 0x1ee4a8b0 <col:37, col:78>
| |   `-ParagraphComment 0x1ee4a880 <col:37, col:78>
| |     `-TextComment 0x1ee4a850 <col:37, col:78> Text=" pos tracks subtree com, rot fixed in body"
| |-EnumConstantDecl 0x1ee09018 <line:125:3> col:3 mjCAMLIGHT_TARGETBODY 'int'
| | `-FullComment 0x1ee4a980 <col:37, col:78>
| |   `-ParagraphComment 0x1ee4a950 <col:37, col:78>
| |     `-TextComment 0x1ee4a920 <col:37, col:78> Text=" pos fixed in body, rot tracks target body"
| `-EnumConstantDecl 0x1ee090c8 <line:126:3> col:3 mjCAMLIGHT_TARGETBODYCOM 'int'
|   `-FullComment 0x1ee4aa50 <col:37, col:85>
|     `-ParagraphComment 0x1ee4aa20 <col:37, col:85>
|       `-TextComment 0x1ee4a9f0 <col:37, col:85> Text=" pos fixed in body, rot tracks target subtree com"
|-TypedefDecl 0x1ee09178 <line:121:1, line:127:3> col:3 mjtCamLight 'enum mjtCamLight_':'enum mjtCamLight_'
| `-ElaboratedType 0x1ee09120 'enum mjtCamLight_' sugar
|   `-EnumType 0x1ee07dd0 'enum mjtCamLight_'
|     `-Enum 0x1ee07d28 'mjtCamLight_'
|-EnumDecl 0x1ee091e8 <line:130:9, line:134:1> line:130:14 mjtTexture_
| |-EnumConstantDecl 0x1ee09318 <line:131:3, col:25> col:3 mjTEXTURE_2D 'int'
| | |-ConstantExpr 0x1ee092f8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee092d8 <col:25> 'int' 0
| | `-FullComment 0x1ee4ab20 <col:37, col:80>
| |   `-ParagraphComment 0x1ee4aaf0 <col:37, col:80>
| |     `-TextComment 0x1ee4aac0 <col:37, col:80> Text=" 2d texture, suitable for planes and hfields"
| |-EnumConstantDecl 0x1ee09398 <line:132:3> col:3 mjTEXTURE_CUBE 'int'
| | `-FullComment 0x1ee4abf0 <col:37, col:84>
| |   `-ParagraphComment 0x1ee4abc0 <col:37, col:84>
| |     `-TextComment 0x1ee4ab90 <col:37, col:84> Text=" cube texture, suitable for all other geom types"
| `-EnumConstantDecl 0x1ee09448 <line:133:3> col:3 mjTEXTURE_SKYBOX 'int'
|   `-FullComment 0x1ee4acc0 <col:37, col:64>
|     `-ParagraphComment 0x1ee4ac90 <col:37, col:64>
|       `-TextComment 0x1ee4ac60 <col:37, col:64> Text=" cube texture used as skybox"
|-TypedefDecl 0x1ee094f8 <line:130:1, line:134:3> col:3 mjtTexture 'enum mjtTexture_':'enum mjtTexture_'
| `-ElaboratedType 0x1ee094a0 'enum mjtTexture_' sugar
|   `-EnumType 0x1ee09290 'enum mjtTexture_'
|     `-Enum 0x1ee091e8 'mjtTexture_'
|-EnumDecl 0x1ee09568 <line:137:9, line:149:1> line:137:14 mjtTextureRole_
| |-EnumConstantDecl 0x1ee09698 <line:138:3, col:25> col:3 mjTEXROLE_USER 'int'
| | |-ConstantExpr 0x1ee09678 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee09658 <col:25> 'int' 0
| | `-FullComment 0x1ee4ad90 <col:37, col:48>
| |   `-ParagraphComment 0x1ee4ad60 <col:37, col:48>
| |     `-TextComment 0x1ee4ad30 <col:37, col:48> Text=" unspecified"
| |-EnumConstantDecl 0x1ee09718 <line:139:3> col:3 mjTEXROLE_RGB 'int'
| | `-FullComment 0x1ee4ae60 <col:37, col:56>
| |   `-ParagraphComment 0x1ee4ae30 <col:37, col:56>
| |     `-TextComment 0x1ee4ae00 <col:37, col:56> Text=" base color (albedo)"
| |-EnumConstantDecl 0x1ee09798 <line:140:3> col:3 mjTEXROLE_OCCLUSION 'int'
| | `-FullComment 0x1ee4af30 <col:37, col:54>
| |   `-ParagraphComment 0x1ee4af00 <col:37, col:54>
| |     `-TextComment 0x1ee4aed0 <col:37, col:54> Text=" ambient occlusion"
| |-EnumConstantDecl 0x1ee09818 <line:141:3> col:3 mjTEXROLE_ROUGHNESS 'int'
| | `-FullComment 0x1ee4b000 <col:37, col:46>
| |   `-ParagraphComment 0x1ee4afd0 <col:37, col:46>
| |     `-TextComment 0x1ee4afa0 <col:37, col:46> Text=" roughness"
| |-EnumConstantDecl 0x1ee09898 <line:142:3> col:3 mjTEXROLE_METALLIC 'int'
| | `-FullComment 0x1ee4b0d0 <col:37, col:45>
| |   `-ParagraphComment 0x1ee4b0a0 <col:37, col:45>
| |     `-TextComment 0x1ee4b070 <col:37, col:45> Text=" metallic"
| |-EnumConstantDecl 0x1ee09918 <line:143:3> col:3 mjTEXROLE_NORMAL 'int'
| | `-FullComment 0x1ee4b9d0 <col:37, col:54>
| |   `-ParagraphComment 0x1ee4b9a0 <col:37, col:54>
| |     `-TextComment 0x1ee4b970 <col:37, col:54> Text=" normal (bump) map"
| |-EnumConstantDecl 0x1ee09998 <line:144:3> col:3 mjTEXROLE_OPACITY 'int'
| | `-FullComment 0x1ee4baa0 <col:37, col:49>
| |   `-ParagraphComment 0x1ee4ba70 <col:37, col:49>
| |     `-TextComment 0x1ee4ba40 <col:37, col:49> Text=" transperancy"
| |-EnumConstantDecl 0x1ee09a18 <line:145:3> col:3 mjTEXROLE_EMISSIVE 'int'
| | `-FullComment 0x1ee4bb70 <col:37, col:51>
| |   `-ParagraphComment 0x1ee4bb40 <col:37, col:51>
| |     `-TextComment 0x1ee4bb10 <col:37, col:51> Text=" light emission"
| |-EnumConstantDecl 0x1ee09a98 <line:146:3> col:3 mjTEXROLE_RGBA 'int'
| | `-FullComment 0x1ee4bc40 <col:37, col:56>
| |   `-ParagraphComment 0x1ee4bc10 <col:37, col:56>
| |     `-TextComment 0x1ee4bbe0 <col:37, col:56> Text=" base color, opacity"
| |-EnumConstantDecl 0x1ee09b18 <line:147:3> col:3 mjTEXROLE_ORM 'int'
| | `-FullComment 0x1ee4bd10 <col:37, col:67>
| |   `-ParagraphComment 0x1ee4bce0 <col:37, col:67>
| |     `-TextComment 0x1ee4bcb0 <col:37, col:67> Text=" occlusion, roughness, metallic"
| `-EnumConstantDecl 0x1ee09b98 <line:148:3> col:3 mjNTEXROLE 'int'
|-TypedefDecl 0x1ee09c48 <line:137:1, line:149:3> col:3 mjtTextureRole 'enum mjtTextureRole_':'enum mjtTextureRole_'
| `-ElaboratedType 0x1ee09bf0 'enum mjtTextureRole_' sugar
|   `-EnumType 0x1ee09610 'enum mjtTextureRole_'
|     `-Enum 0x1ee09568 'mjtTextureRole_'
|-EnumDecl 0x1ee09cb8 <line:152:9, line:157:1> line:152:14 mjtIntegrator_
| |-EnumConstantDecl 0x1ee09de8 <line:153:3, col:25> col:3 mjINT_EULER 'int'
| | |-ConstantExpr 0x1ee09dc8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee09da8 <col:25> 'int' 0
| | `-FullComment 0x1ee4bde0 <col:37, col:56>
| |   `-ParagraphComment 0x1ee4bdb0 <col:37, col:56>
| |     `-TextComment 0x1ee4bd80 <col:37, col:56> Text=" semi-implicit Euler"
| |-EnumConstantDecl 0x1ee09eb0 <line:154:3> col:3 mjINT_RK4 'int'
| | `-FullComment 0x1ee4beb0 <col:37, col:58>
| |   `-ParagraphComment 0x1ee4be80 <col:37, col:58>
| |     `-TextComment 0x1ee4be50 <col:37, col:58> Text=" 4th-order Runge Kutta"
| |-EnumConstantDecl 0x1ee09f28 <line:155:3> col:3 mjINT_IMPLICIT 'int'
| | `-FullComment 0x1ee4bf80 <col:37, col:57>
| |   `-ParagraphComment 0x1ee4bf50 <col:37, col:57>
| |     `-TextComment 0x1ee4bf20 <col:37, col:57> Text=" implicit in velocity"
| `-EnumConstantDecl 0x1ee09fd8 <line:156:3> col:3 mjINT_IMPLICITFAST 'int'
|   `-FullComment 0x1ee4c050 <col:37, col:76>
|     `-ParagraphComment 0x1ee4c020 <col:37, col:76>
|       `-TextComment 0x1ee4bff0 <col:37, col:76> Text=" implicit in velocity, no rne derivative"
|-TypedefDecl 0x1ee0a088 <line:152:1, line:157:3> col:3 mjtIntegrator 'enum mjtIntegrator_':'enum mjtIntegrator_'
| `-ElaboratedType 0x1ee0a030 'enum mjtIntegrator_' sugar
|   `-EnumType 0x1ee09d60 'enum mjtIntegrator_'
|     `-Enum 0x1ee09cb8 'mjtIntegrator_'
|-EnumDecl 0x1ee0a0f8 <line:160:9, line:163:1> line:160:14 mjtCone_
| |-EnumConstantDecl 0x1ee0a228 <line:161:3, col:26> col:3 mjCONE_PYRAMIDAL 'int'
| | |-ConstantExpr 0x1ee0a208 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0a1e8 <col:26> 'int' 0
| | `-FullComment 0x1ee4c120 <col:37, col:46>
| |   `-ParagraphComment 0x1ee4c0f0 <col:37, col:46>
| |     `-TextComment 0x1ee4c0c0 <col:37, col:46> Text=" pyramidal"
| `-EnumConstantDecl 0x1ee0a2d8 <line:162:3> col:3 mjCONE_ELLIPTIC 'int'
|   `-FullComment 0x1ee4c1f0 <col:37, col:45>
|     `-ParagraphComment 0x1ee4c1c0 <col:37, col:45>
|       `-TextComment 0x1ee4c190 <col:37, col:45> Text=" elliptic"
|-TypedefDecl 0x1ee0a388 <line:160:1, line:163:3> col:3 mjtCone 'enum mjtCone_':'enum mjtCone_'
| `-ElaboratedType 0x1ee0a330 'enum mjtCone_' sugar
|   `-EnumType 0x1ee0a1a0 'enum mjtCone_'
|     `-Enum 0x1ee0a0f8 'mjtCone_'
|-EnumDecl 0x1ee0a3f8 <line:166:9, line:170:1> line:166:14 mjtJacobian_
| |-EnumConstantDecl 0x1ee0a528 <line:167:3, col:26> col:3 mjJAC_DENSE 'int'
| | |-ConstantExpr 0x1ee0a508 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0a4e8 <col:26> 'int' 0
| | `-FullComment 0x1ee4c2c0 <col:37, col:42>
| |   `-ParagraphComment 0x1ee4c290 <col:37, col:42>
| |     `-TextComment 0x1ee4c260 <col:37, col:42> Text=" dense"
| |-EnumConstantDecl 0x1ee0a5a8 <line:168:3> col:3 mjJAC_SPARSE 'int'
| | `-FullComment 0x1ee4c390 <col:37, col:43>
| |   `-ParagraphComment 0x1ee4c360 <col:37, col:43>
| |     `-TextComment 0x1ee4c330 <col:37, col:43> Text=" sparse"
| `-EnumConstantDecl 0x1ee0a658 <line:169:3> col:3 mjJAC_AUTO 'int'
|   `-FullComment 0x1ee4c4b0 <col:37, col:69>
|     `-ParagraphComment 0x1ee4c480 <col:37, col:69>
|       |-TextComment 0x1ee4c400 <col:37, col:48> Text=" dense if nv"
|       |-TextComment 0x1ee4c420 <col:49> Text="<"
|       `-TextComment 0x1ee4c440 <col:50, col:69> Text="60, sparse otherwise"
|-TypedefDecl 0x1ee0a708 <line:166:1, line:170:3> col:3 mjtJacobian 'enum mjtJacobian_':'enum mjtJacobian_'
| `-ElaboratedType 0x1ee0a6b0 'enum mjtJacobian_' sugar
|   `-EnumType 0x1ee0a4a0 'enum mjtJacobian_'
|     `-Enum 0x1ee0a3f8 'mjtJacobian_'
|-EnumDecl 0x1ee0a778 <line:173:9, line:177:1> line:173:14 mjtSolver_
| |-EnumConstantDecl 0x1ee0a8a8 <line:174:3, col:26> col:3 mjSOL_PGS 'int'
| | |-ConstantExpr 0x1ee0a888 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0a868 <col:26> 'int' 0
| | `-FullComment 0x1ee4c580 <col:37, col:50>
| |   `-ParagraphComment 0x1ee4c550 <col:37, col:50>
| |     `-TextComment 0x1ee4c520 <col:37, col:50> Text=" PGS    (dual)"
| |-EnumConstantDecl 0x1ee0a928 <line:175:3> col:3 mjSOL_CG 'int'
| | `-FullComment 0x1ee4c650 <col:37, col:52>
| |   `-ParagraphComment 0x1ee4c620 <col:37, col:52>
| |     `-TextComment 0x1ee4c5f0 <col:37, col:52> Text=" CG     (primal)"
| `-EnumConstantDecl 0x1ee0a9d8 <line:176:3> col:3 mjSOL_NEWTON 'int'
|   `-FullComment 0x1ee4c720 <col:37, col:52>
|     `-ParagraphComment 0x1ee4c6f0 <col:37, col:52>
|       `-TextComment 0x1ee4c6c0 <col:37, col:52> Text=" Newton (primal)"
|-TypedefDecl 0x1ee0aa88 <line:173:1, line:177:3> col:3 mjtSolver 'enum mjtSolver_':'enum mjtSolver_'
| `-ElaboratedType 0x1ee0aa30 'enum mjtSolver_' sugar
|   `-EnumType 0x1ee0a820 'enum mjtSolver_'
|     `-Enum 0x1ee0a778 'mjtSolver_'
|-EnumDecl 0x1ee0aaf8 <line:180:9, line:187:1> line:180:14 mjtEq_
| |-EnumConstantDecl 0x1ee0ac28 <line:181:3, col:25> col:3 mjEQ_CONNECT 'int'
| | |-ConstantExpr 0x1ee0ac08 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0abe8 <col:25> 'int' 0
| | `-FullComment 0x1ee4c7f0 <col:37, col:79>
| |   `-ParagraphComment 0x1ee4c7c0 <col:37, col:79>
| |     `-TextComment 0x1ee4c790 <col:37, col:79> Text=" connect two bodies at a point (ball joint)"
| |-EnumConstantDecl 0x1ee0aca8 <line:182:3> col:3 mjEQ_WELD 'int'
| | `-FullComment 0x1ee4c8c0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee4c890 <col:37, col:88>
| |     `-TextComment 0x1ee4c860 <col:37, col:88> Text=" fix relative position and orientation of two bodies"
| |-EnumConstantDecl 0x1ee0ad28 <line:183:3> col:3 mjEQ_JOINT 'int'
| | `-FullComment 0x1ee4c9b0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee4c980 <col:37, col:86>
| |     `-TextComment 0x1ee4c930 <col:37, col:86> Text=" couple the values of two scalar joints with cubic"
| |-EnumConstantDecl 0x1ee0ada8 <line:184:3> col:3 mjEQ_TENDON 'int'
| | `-FullComment 0x1ee4ca80 <col:37, col:81>
| |   `-ParagraphComment 0x1ee4ca50 <col:37, col:81>
| |     `-TextComment 0x1ee4ca20 <col:37, col:81> Text=" couple the lengths of two tendons with cubic"
| |-EnumConstantDecl 0x1ee0ae28 <line:185:3> col:3 mjEQ_FLEX 'int'
| | `-FullComment 0x1ee4cb50 <col:37, col:67>
| |   `-ParagraphComment 0x1ee4cb20 <col:37, col:67>
| |     `-TextComment 0x1ee4caf0 <col:37, col:67> Text=" fix all edge lengths of a flex"
| `-EnumConstantDecl 0x1ee0b2e8 <line:186:3> col:3 mjEQ_DISTANCE 'int'
|   `-FullComment 0x1ee4cc20 <col:37, col:77>
|     `-ParagraphComment 0x1ee4cbf0 <col:37, col:77>
|       `-TextComment 0x1ee4cbc0 <col:37, col:77> Text=" unsupported, will cause an error if used"
|-TypedefDecl 0x1ee0b398 <line:180:1, line:187:3> col:3 mjtEq 'enum mjtEq_':'enum mjtEq_'
| `-ElaboratedType 0x1ee0b340 'enum mjtEq_' sugar
|   `-EnumType 0x1ee0aba0 'enum mjtEq_'
|     `-Enum 0x1ee0aaf8 'mjtEq_'
|-EnumDecl 0x1ee0b408 <line:190:9, line:197:1> line:190:14 mjtWrap_
| |-EnumConstantDecl 0x1ee0b538 <line:191:3, col:25> col:3 mjWRAP_NONE 'int'
| | |-ConstantExpr 0x1ee0b518 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0b4f8 <col:25> 'int' 0
| | `-FullComment 0x1ee4ccf0 <col:37, col:48>
| |   `-ParagraphComment 0x1ee4ccc0 <col:37, col:48>
| |     `-TextComment 0x1ee4cc90 <col:37, col:48> Text=" null object"
| |-EnumConstantDecl 0x1ee0b5b8 <line:192:3> col:3 mjWRAP_JOINT 'int'
| | `-FullComment 0x1ee4cdc0 <col:37, col:56>
| |   `-ParagraphComment 0x1ee4cd90 <col:37, col:56>
| |     `-TextComment 0x1ee4cd60 <col:37, col:56> Text=" constant moment arm"
| |-EnumConstantDecl 0x1ee0b638 <line:193:3> col:3 mjWRAP_PULLEY 'int'
| | `-FullComment 0x1ee4ce90 <col:37, col:64>
| |   `-ParagraphComment 0x1ee4ce60 <col:37, col:64>
| |     `-TextComment 0x1ee4ce30 <col:37, col:64> Text=" pulley used to split tendon"
| |-EnumConstantDecl 0x1ee0b6b8 <line:194:3> col:3 mjWRAP_SITE 'int'
| | `-FullComment 0x1ee4cf60 <col:37, col:54>
| |   `-ParagraphComment 0x1ee4cf30 <col:37, col:54>
| |     `-TextComment 0x1ee4cf00 <col:37, col:54> Text=" pass through site"
| |-EnumConstantDecl 0x1ee0b738 <line:195:3> col:3 mjWRAP_SPHERE 'int'
| | `-FullComment 0x1ee4d030 <col:37, col:55>
| |   `-ParagraphComment 0x1ee4d000 <col:37, col:55>
| |     `-TextComment 0x1ee4cfd0 <col:37, col:55> Text=" wrap around sphere"
| `-EnumConstantDecl 0x1ee0b7e8 <line:196:3> col:3 mjWRAP_CYLINDER 'int'
|   `-FullComment 0x1ee4d100 <col:37, col:68>
|     `-ParagraphComment 0x1ee4d0d0 <col:37, col:68>
|       `-TextComment 0x1ee4d0a0 <col:37, col:68> Text=" wrap around (infinite) cylinder"
|-TypedefDecl 0x1ee0b898 <line:190:1, line:197:3> col:3 mjtWrap 'enum mjtWrap_':'enum mjtWrap_'
| `-ElaboratedType 0x1ee0b840 'enum mjtWrap_' sugar
|   `-EnumType 0x1ee0b4b0 'enum mjtWrap_'
|     `-Enum 0x1ee0b408 'mjtWrap_'
|-EnumDecl 0x1ee0b908 <line:200:9, line:209:1> line:200:14 mjtTrn_
| |-EnumConstantDecl 0x1ee0ba38 <line:201:3, col:25> col:3 mjTRN_JOINT 'int'
| | |-ConstantExpr 0x1ee0ba18 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0b9f8 <col:25> 'int' 0
| | `-FullComment 0x1ee4d1d0 <col:37, col:51>
| |   `-ParagraphComment 0x1ee4d1a0 <col:37, col:51>
| |     `-TextComment 0x1ee4d170 <col:37, col:51> Text=" force on joint"
| |-EnumConstantDecl 0x1ee0bab8 <line:202:3> col:3 mjTRN_JOINTINPARENT 'int'
| | `-FullComment 0x1ee4d2a0 <col:37, col:78>
| |   `-ParagraphComment 0x1ee4d270 <col:37, col:78>
| |     `-TextComment 0x1ee4d240 <col:37, col:78> Text=" force on joint, expressed in parent frame"
| |-EnumConstantDecl 0x1ee0bb38 <line:203:3> col:3 mjTRN_SLIDERCRANK 'int'
| | `-FullComment 0x1ee4d370 <col:37, col:67>
| |   `-ParagraphComment 0x1ee4d340 <col:37, col:67>
| |     `-TextComment 0x1ee4d310 <col:37, col:67> Text=" force via slider-crank linkage"
| |-EnumConstantDecl 0x1ee0bbb8 <line:204:3> col:3 mjTRN_TENDON 'int'
| | `-FullComment 0x1ee4d440 <col:37, col:52>
| |   `-ParagraphComment 0x1ee4d410 <col:37, col:52>
| |     `-TextComment 0x1ee4d3e0 <col:37, col:52> Text=" force on tendon"
| |-EnumConstantDecl 0x1ee0bc38 <line:205:3> col:3 mjTRN_SITE 'int'
| | `-FullComment 0x1ee4d510 <col:37, col:50>
| |   `-ParagraphComment 0x1ee4d4e0 <col:37, col:50>
| |     `-TextComment 0x1ee4d4b0 <col:37, col:50> Text=" force on site"
| |-EnumConstantDecl 0x1ee0bcb8 <line:206:3> col:3 mjTRN_BODY 'int'
| | `-FullComment 0x1ee4d5e0 <col:37, col:69>
| |   `-ParagraphComment 0x1ee4d5b0 <col:37, col:69>
| |     `-TextComment 0x1ee4d580 <col:37, col:69> Text=" adhesion force on a body's geoms"
| `-EnumConstantDecl 0x1ee0bda8 <line:208:3, col:25> col:3 mjTRN_UNDEFINED 'int'
|   |-ConstantExpr 0x1ee0bd88 <col:25> 'int'
|   | |-value: Int 1000
|   | `-IntegerLiteral 0x1ee0bd38 <col:25> 'int' 1000
|   `-FullComment 0x1ee4d6b0 <col:37, col:64>
|     `-ParagraphComment 0x1ee4d680 <col:37, col:64>
|       `-TextComment 0x1ee4d650 <col:37, col:64> Text=" undefined transmission type"
|-TypedefDecl 0x1ee0be58 <line:200:1, line:209:3> col:3 mjtTrn 'enum mjtTrn_':'enum mjtTrn_'
| `-ElaboratedType 0x1ee0be00 'enum mjtTrn_' sugar
|   `-EnumType 0x1ee0b9b0 'enum mjtTrn_'
|     `-Enum 0x1ee0b908 'mjtTrn_'
|-EnumDecl 0x1ee0bec8 <line:212:9, line:219:1> line:212:14 mjtDyn_
| |-EnumConstantDecl 0x1ee0bff8 <line:213:3, col:25> col:3 mjDYN_NONE 'int'
| | |-ConstantExpr 0x1ee0bfd8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0bfb8 <col:25> 'int' 0
| | `-FullComment 0x1ee4d780 <col:37, col:79>
| |   `-ParagraphComment 0x1ee4d750 <col:37, col:79>
| |     `-TextComment 0x1ee4d720 <col:37, col:79> Text=" no internal dynamics; ctrl specifies force"
| |-EnumConstantDecl 0x1ee0c078 <line:214:3> col:3 mjDYN_INTEGRATOR 'int'
| | `-FullComment 0x1ee4d850 <col:37, col:58>
| |   `-ParagraphComment 0x1ee4d820 <col:37, col:58>
| |     `-TextComment 0x1ee4d7f0 <col:37, col:58> Text=" integrator: da/dt = u"
| |-EnumConstantDecl 0x1ee0c0f8 <line:215:3> col:3 mjDYN_FILTER 'int'
| | `-FullComment 0x1ee4d920 <col:37, col:71>
| |   `-ParagraphComment 0x1ee4d8f0 <col:37, col:71>
| |     `-TextComment 0x1ee4d8c0 <col:37, col:71> Text=" linear filter: da/dt = (u-a) / tau"
| |-EnumConstantDecl 0x1ee0c178 <line:216:3> col:3 mjDYN_FILTEREXACT 'int'
| | `-FullComment 0x1ee4ea40 <col:37, col:95>
| |   `-ParagraphComment 0x1ee4ea10 <col:37, col:95>
| |     `-TextComment 0x1ee4e9e0 <col:37, col:95> Text=" linear filter: da/dt = (u-a) / tau, with exact integration"
| |-EnumConstantDecl 0x1ee0c1f8 <line:217:3> col:3 mjDYN_MUSCLE 'int'
| | `-FullComment 0x1ee4eb10 <col:37, col:85>
| |   `-ParagraphComment 0x1ee4eae0 <col:37, col:85>
| |     `-TextComment 0x1ee4eab0 <col:37, col:85> Text=" piece-wise linear filter with two time constants"
| `-EnumConstantDecl 0x1ee0e8a0 <line:218:3> col:3 mjDYN_USER 'int'
|   `-FullComment 0x1ee4ebe0 <col:37, col:63>
|     `-ParagraphComment 0x1ee4ebb0 <col:37, col:63>
|       `-TextComment 0x1ee4eb80 <col:37, col:63> Text=" user-defined dynamics type"
|-TypedefDecl 0x1ee0e948 <line:212:1, line:219:3> col:3 mjtDyn 'enum mjtDyn_':'enum mjtDyn_'
| `-ElaboratedType 0x1ee0e8f0 'enum mjtDyn_' sugar
|   `-EnumType 0x1ee0bf70 'enum mjtDyn_'
|     `-Enum 0x1ee0bec8 'mjtDyn_'
|-EnumDecl 0x1ee0e9b8 <line:222:9, line:227:1> line:222:14 mjtGain_
| |-EnumConstantDecl 0x1ee0eae8 <line:223:3, col:25> col:3 mjGAIN_FIXED 'int'
| | |-ConstantExpr 0x1ee0eac8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0eaa8 <col:25> 'int' 0
| | `-FullComment 0x1ee4ecb0 <col:37, col:47>
| |   `-ParagraphComment 0x1ee4ec80 <col:37, col:47>
| |     `-TextComment 0x1ee4ec50 <col:37, col:47> Text=" fixed gain"
| |-EnumConstantDecl 0x1ee0eb68 <line:224:3> col:3 mjGAIN_AFFINE 'int'
| | `-FullComment 0x1ee4ed80 <col:37, col:68>
| |   `-ParagraphComment 0x1ee4ed50 <col:37, col:68>
| |     `-TextComment 0x1ee4ed20 <col:37, col:68> Text=" const + kp*length + kv*velocity"
| |-EnumConstantDecl 0x1ee0ebe8 <line:225:3> col:3 mjGAIN_MUSCLE 'int'
| | `-FullComment 0x1ee4ee50 <col:37, col:82>
| |   `-ParagraphComment 0x1ee4ee20 <col:37, col:82>
| |     `-TextComment 0x1ee4edf0 <col:37, col:82> Text=" muscle FLV curve computed by mju_muscleGain()"
| `-EnumConstantDecl 0x1ee0ec98 <line:226:3> col:3 mjGAIN_USER 'int'
|   `-FullComment 0x1ee4ef20 <col:37, col:59>
|     `-ParagraphComment 0x1ee4eef0 <col:37, col:59>
|       `-TextComment 0x1ee4eec0 <col:37, col:59> Text=" user-defined gain type"
|-TypedefDecl 0x1ee0ed48 <line:222:1, line:227:3> col:3 mjtGain 'enum mjtGain_':'enum mjtGain_'
| `-ElaboratedType 0x1ee0ecf0 'enum mjtGain_' sugar
|   `-EnumType 0x1ee0ea60 'enum mjtGain_'
|     `-Enum 0x1ee0e9b8 'mjtGain_'
|-EnumDecl 0x1ee0edb8 <line:230:9, line:235:1> line:230:14 mjtBias_
| |-EnumConstantDecl 0x1ee0eee8 <line:231:3, col:25> col:3 mjBIAS_NONE 'int'
| | |-ConstantExpr 0x1ee0eec8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0eea8 <col:25> 'int' 0
| | `-FullComment 0x1ee4eff0 <col:37, col:44>
| |   `-ParagraphComment 0x1ee4efc0 <col:37, col:44>
| |     `-TextComment 0x1ee4ef90 <col:37, col:44> Text=" no bias"
| |-EnumConstantDecl 0x1ee0ef68 <line:232:3> col:3 mjBIAS_AFFINE 'int'
| | `-FullComment 0x1ee4f0c0 <col:37, col:68>
| |   `-ParagraphComment 0x1ee4f090 <col:37, col:68>
| |     `-TextComment 0x1ee4f060 <col:37, col:68> Text=" const + kp*length + kv*velocity"
| |-EnumConstantDecl 0x1ee0efe8 <line:233:3> col:3 mjBIAS_MUSCLE 'int'
| | `-FullComment 0x1ee4f190 <col:37, col:86>
| |   `-ParagraphComment 0x1ee4f160 <col:37, col:86>
| |     `-TextComment 0x1ee4f130 <col:37, col:86> Text=" muscle passive force computed by mju_muscleBias()"
| `-EnumConstantDecl 0x1ee0f098 <line:234:3> col:3 mjBIAS_USER 'int'
|   `-FullComment 0x1ee4f260 <col:37, col:59>
|     `-ParagraphComment 0x1ee4f230 <col:37, col:59>
|       `-TextComment 0x1ee4f200 <col:37, col:59> Text=" user-defined bias type"
|-TypedefDecl 0x1ee0f148 <line:230:1, line:235:3> col:3 mjtBias 'enum mjtBias_':'enum mjtBias_'
| `-ElaboratedType 0x1ee0f0f0 'enum mjtBias_' sugar
|   `-EnumType 0x1ee0ee60 'enum mjtBias_'
|     `-Enum 0x1ee0edb8 'mjtBias_'
|-EnumDecl 0x1ee0f1b8 <line:238:9, line:270:1> line:238:14 mjtObj_
| |-EnumConstantDecl 0x1ee0f2e8 <line:239:3, col:25> col:3 mjOBJ_UNKNOWN 'int'
| | |-ConstantExpr 0x1ee0f2c8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee0f2a8 <col:25> 'int' 0
| | `-FullComment 0x1ee4f330 <col:37, col:56>
| |   `-ParagraphComment 0x1ee4f300 <col:37, col:56>
| |     `-TextComment 0x1ee4f2d0 <col:37, col:56> Text=" unknown object type"
| |-EnumConstantDecl 0x1ee0f368 <line:240:3> col:3 mjOBJ_BODY 'int'
| | `-FullComment 0x1ee4f400 <col:37, col:41>
| |   `-ParagraphComment 0x1ee4f3d0 <col:37, col:41>
| |     `-TextComment 0x1ee4f3a0 <col:37, col:41> Text=" body"
| |-EnumConstantDecl 0x1ee0f3e8 <line:241:3> col:3 mjOBJ_XBODY 'int'
| | `-FullComment 0x1ee4f4d0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee4f4a0 <col:37, col:90>
| |     `-TextComment 0x1ee4f470 <col:37, col:90> Text=" body, used to access regular frame instead of i-frame"
| |-EnumConstantDecl 0x1ee0f468 <line:242:3> col:3 mjOBJ_JOINT 'int'
| | `-FullComment 0x1ee4f5a0 <col:37, col:42>
| |   `-ParagraphComment 0x1ee4f570 <col:37, col:42>
| |     `-TextComment 0x1ee4f540 <col:37, col:42> Text=" joint"
| |-EnumConstantDecl 0x1ee0f4e8 <line:243:3> col:3 mjOBJ_DOF 'int'
| | `-FullComment 0x1ee4f670 <col:37, col:40>
| |   `-ParagraphComment 0x1ee4f640 <col:37, col:40>
| |     `-TextComment 0x1ee4f610 <col:37, col:40> Text=" dof"
| |-EnumConstantDecl 0x1ee0f568 <line:244:3> col:3 mjOBJ_GEOM 'int'
| | `-FullComment 0x1ee4f740 <col:37, col:41>
| |   `-ParagraphComment 0x1ee4f710 <col:37, col:41>
| |     `-TextComment 0x1ee4f6e0 <col:37, col:41> Text=" geom"
| |-EnumConstantDecl 0x1ee0f5e8 <line:245:3> col:3 mjOBJ_SITE 'int'
| | `-FullComment 0x1ee4f810 <col:37, col:41>
| |   `-ParagraphComment 0x1ee4f7e0 <col:37, col:41>
| |     `-TextComment 0x1ee4f7b0 <col:37, col:41> Text=" site"
| |-EnumConstantDecl 0x1ee0f668 <line:246:3> col:3 mjOBJ_CAMERA 'int'
| | `-FullComment 0x1ee4f8e0 <col:37, col:43>
| |   `-ParagraphComment 0x1ee4f8b0 <col:37, col:43>
| |     `-TextComment 0x1ee4f880 <col:37, col:43> Text=" camera"
| |-EnumConstantDecl 0x1ee0f6e8 <line:247:3> col:3 mjOBJ_LIGHT 'int'
| | `-FullComment 0x1ee4f9c0 <col:37, col:42>
| |   `-ParagraphComment 0x1ee4f980 <col:37, col:42>
| |     `-TextComment 0x1ee4f950 <col:37, col:42> Text=" light"
| |-EnumConstantDecl 0x1ee0f768 <line:248:3> col:3 mjOBJ_FLEX 'int'
| | `-FullComment 0x1ee4fa90 <col:37, col:41>
| |   `-ParagraphComment 0x1ee4fa60 <col:37, col:41>
| |     `-TextComment 0x1ee4fa30 <col:37, col:41> Text=" flex"
| |-EnumConstantDecl 0x1ee0f7e8 <line:249:3> col:3 mjOBJ_MESH 'int'
| | `-FullComment 0x1ee4fb60 <col:37, col:41>
| |   `-ParagraphComment 0x1ee4fb30 <col:37, col:41>
| |     `-TextComment 0x1ee4fb00 <col:37, col:41> Text=" mesh"
| |-EnumConstantDecl 0x1ee0fe30 <line:250:3> col:3 mjOBJ_SKIN 'int'
| | `-FullComment 0x1ee4fc30 <col:37, col:41>
| |   `-ParagraphComment 0x1ee4fc00 <col:37, col:41>
| |     `-TextComment 0x1ee4fbd0 <col:37, col:41> Text=" skin"
| |-EnumConstantDecl 0x1ee0fea8 <line:251:3> col:3 mjOBJ_HFIELD 'int'
| | `-FullComment 0x1ee4fd00 <col:37, col:48>
| |   `-ParagraphComment 0x1ee4fcd0 <col:37, col:48>
| |     `-TextComment 0x1ee4fca0 <col:37, col:48> Text=" heightfield"
| |-EnumConstantDecl 0x1ee0ff28 <line:252:3> col:3 mjOBJ_TEXTURE 'int'
| | `-FullComment 0x1ee4fdd0 <col:37, col:44>
| |   `-ParagraphComment 0x1ee4fda0 <col:37, col:44>
| |     `-TextComment 0x1ee4fd70 <col:37, col:44> Text=" texture"
| |-EnumConstantDecl 0x1ee0ffa8 <line:253:3> col:3 mjOBJ_MATERIAL 'int'
| | `-FullComment 0x1ee4fea0 <col:37, col:59>
| |   `-ParagraphComment 0x1ee4fe70 <col:37, col:59>
| |     `-TextComment 0x1ee4fe40 <col:37, col:59> Text=" material for rendering"
| |-EnumConstantDecl 0x1ee10028 <line:254:3> col:3 mjOBJ_PAIR 'int'
| | `-FullComment 0x1ee4ff70 <col:37, col:57>
| |   `-ParagraphComment 0x1ee4ff40 <col:37, col:57>
| |     `-TextComment 0x1ee4ff10 <col:37, col:57> Text=" geom pair to include"
| |-EnumConstantDecl 0x1ee100a8 <line:255:3> col:3 mjOBJ_EXCLUDE 'int'
| | `-FullComment 0x1ee50040 <col:37, col:57>
| |   `-ParagraphComment 0x1ee50010 <col:37, col:57>
| |     `-TextComment 0x1ee4ffe0 <col:37, col:57> Text=" body pair to exclude"
| |-EnumConstantDecl 0x1ee10128 <line:256:3> col:3 mjOBJ_EQUALITY 'int'
| | `-FullComment 0x1ee50110 <col:37, col:56>
| |   `-ParagraphComment 0x1ee500e0 <col:37, col:56>
| |     `-TextComment 0x1ee500b0 <col:37, col:56> Text=" equality constraint"
| |-EnumConstantDecl 0x1ee101a8 <line:257:3> col:3 mjOBJ_TENDON 'int'
| | `-FullComment 0x1ee501e0 <col:37, col:43>
| |   `-ParagraphComment 0x1ee501b0 <col:37, col:43>
| |     `-TextComment 0x1ee50180 <col:37, col:43> Text=" tendon"
| |-EnumConstantDecl 0x1ee10228 <line:258:3> col:3 mjOBJ_ACTUATOR 'int'
| | `-FullComment 0x1ee502b0 <col:37, col:45>
| |   `-ParagraphComment 0x1ee50280 <col:37, col:45>
| |     `-TextComment 0x1ee50250 <col:37, col:45> Text=" actuator"
| |-EnumConstantDecl 0x1ee102a8 <line:259:3> col:3 mjOBJ_SENSOR 'int'
| | `-FullComment 0x1ee50380 <col:37, col:43>
| |   `-ParagraphComment 0x1ee50350 <col:37, col:43>
| |     `-TextComment 0x1ee50320 <col:37, col:43> Text=" sensor"
| |-EnumConstantDecl 0x1ee10328 <line:260:3> col:3 mjOBJ_NUMERIC 'int'
| | `-FullComment 0x1ee50450 <col:37, col:44>
| |   `-ParagraphComment 0x1ee50420 <col:37, col:44>
| |     `-TextComment 0x1ee503f0 <col:37, col:44> Text=" numeric"
| |-EnumConstantDecl 0x1ee103a8 <line:261:3> col:3 mjOBJ_TEXT 'int'
| | `-FullComment 0x1ee50520 <col:37, col:41>
| |   `-ParagraphComment 0x1ee504f0 <col:37, col:41>
| |     `-TextComment 0x1ee504c0 <col:37, col:41> Text=" text"
| |-EnumConstantDecl 0x1ee10428 <line:262:3> col:3 mjOBJ_TUPLE 'int'
| | `-FullComment 0x1ee505f0 <col:37, col:42>
| |   `-ParagraphComment 0x1ee505c0 <col:37, col:42>
| |     `-TextComment 0x1ee50590 <col:37, col:42> Text=" tuple"
| |-EnumConstantDecl 0x1ee104a8 <line:263:3> col:3 mjOBJ_KEY 'int'
| | `-FullComment 0x1ee506c0 <col:37, col:45>
| |   `-ParagraphComment 0x1ee50690 <col:37, col:45>
| |     `-TextComment 0x1ee50660 <col:37, col:45> Text=" keyframe"
| |-EnumConstantDecl 0x1ee10528 <line:264:3> col:3 mjOBJ_PLUGIN 'int'
| | `-FullComment 0x1ee50790 <col:37, col:52>
| |   `-ParagraphComment 0x1ee50760 <col:37, col:52>
| |     `-TextComment 0x1ee50730 <col:37, col:52> Text=" plugin instance"
| |-EnumConstantDecl 0x1ee105a8 <line:266:3> col:3 mjNOBJECT 'int'
| | `-FullComment 0x1ee50860 <col:37, col:59>
| |   `-ParagraphComment 0x1ee50830 <col:37, col:59>
| |     `-TextComment 0x1ee50800 <col:37, col:59> Text=" number of object types"
| `-EnumConstantDecl 0x1ee106c8 <line:269:3, col:25> col:3 mjOBJ_FRAME 'int'
|   |-ConstantExpr 0x1ee106a8 <col:25> 'int'
|   | |-value: Int 100
|   | `-IntegerLiteral 0x1ee10658 <col:25> 'int' 100
|   `-FullComment 0x1ee50930 <col:37, col:42>
|     `-ParagraphComment 0x1ee50900 <col:37, col:42>
|       `-TextComment 0x1ee508d0 <col:37, col:42> Text=" frame"
|-TypedefDecl 0x1ee10778 <line:238:1, line:270:3> col:3 mjtObj 'enum mjtObj_':'enum mjtObj_'
| `-ElaboratedType 0x1ee10720 'enum mjtObj_' sugar
|   `-EnumType 0x1ee0f260 'enum mjtObj_'
|     `-Enum 0x1ee0f1b8 'mjtObj_'
|-EnumDecl 0x1ee107e8 <line:273:9, line:282:1> line:273:14 mjtConstraint_
| |-EnumConstantDecl 0x1ee10918 <line:274:3, col:25> col:3 mjCNSTR_EQUALITY 'int'
| | |-ConstantExpr 0x1ee108f8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee108d8 <col:25> 'int' 0
| | `-FullComment 0x1ee50a20 <col:37, col:56>
| |   `-ParagraphComment 0x1ee509f0 <col:37, col:56>
| |     `-TextComment 0x1ee509c0 <col:37, col:56> Text=" equality constraint"
| |-EnumConstantDecl 0x1ee10998 <line:275:3> col:3 mjCNSTR_FRICTION_DOF 'int'
| | `-FullComment 0x1ee50af0 <col:37, col:49>
| |   `-ParagraphComment 0x1ee50ac0 <col:37, col:49>
| |     `-TextComment 0x1ee50a90 <col:37, col:49> Text=" dof friction"
| |-EnumConstantDecl 0x1ee10a18 <line:276:3> col:3 mjCNSTR_FRICTION_TENDON 'int'
| | `-FullComment 0x1ee50bc0 <col:37, col:52>
| |   `-ParagraphComment 0x1ee50b90 <col:37, col:52>
| |     `-TextComment 0x1ee50b60 <col:37, col:52> Text=" tendon friction"
| |-EnumConstantDecl 0x1ee10a98 <line:277:3> col:3 mjCNSTR_LIMIT_JOINT 'int'
| | `-FullComment 0x1ee50c90 <col:37, col:48>
| |   `-ParagraphComment 0x1ee50c60 <col:37, col:48>
| |     `-TextComment 0x1ee50c30 <col:37, col:48> Text=" joint limit"
| |-EnumConstantDecl 0x1ee10b18 <line:278:3> col:3 mjCNSTR_LIMIT_TENDON 'int'
| | `-FullComment 0x1ee50d60 <col:37, col:49>
| |   `-ParagraphComment 0x1ee50d30 <col:37, col:49>
| |     `-TextComment 0x1ee50d00 <col:37, col:49> Text=" tendon limit"
| |-EnumConstantDecl 0x1ee10b98 <line:279:3> col:3 mjCNSTR_CONTACT_FRICTIONLESS 'int'
| | `-FullComment 0x1ee50e30 <col:37, col:57>
| |   `-ParagraphComment 0x1ee50e00 <col:37, col:57>
| |     `-TextComment 0x1ee50dd0 <col:37, col:57> Text=" frictionless contact"
| |-EnumConstantDecl 0x1ee10c18 <line:280:3> col:3 mjCNSTR_CONTACT_PYRAMIDAL 'int'
| | `-FullComment 0x1ee50f00 <col:37, col:80>
| |   `-ParagraphComment 0x1ee50ed0 <col:37, col:80>
| |     `-TextComment 0x1ee50ea0 <col:37, col:80> Text=" frictional contact, pyramidal friction cone"
| `-EnumConstantDecl 0x1ee10cc8 <line:281:3> col:3 mjCNSTR_CONTACT_ELLIPTIC 'int'
|   `-FullComment 0x1ee50fd0 <col:37, col:79>
|     `-ParagraphComment 0x1ee50fa0 <col:37, col:79>
|       `-TextComment 0x1ee50f70 <col:37, col:79> Text=" frictional contact, elliptic friction cone"
|-TypedefDecl 0x1ee10d78 <line:273:1, line:282:3> col:3 mjtConstraint 'enum mjtConstraint_':'enum mjtConstraint_'
| `-ElaboratedType 0x1ee10d20 'enum mjtConstraint_' sugar
|   `-EnumType 0x1ee10890 'enum mjtConstraint_'
|     `-Enum 0x1ee107e8 'mjtConstraint_'
|-EnumDecl 0x1ee11500 <line:285:9, line:291:1> line:285:14 mjtConstraintState_
| |-EnumConstantDecl 0x1ee11628 <line:286:3, col:28> col:3 mjCNSTRSTATE_SATISFIED 'int'
| | |-ConstantExpr 0x1ee11608 <col:28> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee115e8 <col:28> 'int' 0
| | `-FullComment 0x1ee510a0 <col:39, col:87>
| |   `-ParagraphComment 0x1ee51070 <col:39, col:87>
| |     `-TextComment 0x1ee51040 <col:39, col:87> Text=" constraint satisfied, zero cost (limit, contact)"
| |-EnumConstantDecl 0x1ee116a8 <line:287:3> col:3 mjCNSTRSTATE_QUADRATIC 'int'
| | `-FullComment 0x1ee51170 <col:39, col:90>
| |   `-ParagraphComment 0x1ee51140 <col:39, col:90>
| |     `-TextComment 0x1ee51110 <col:39, col:90> Text=" quadratic cost (equality, friction, limit, contact)"
| |-EnumConstantDecl 0x1ee11728 <line:288:3> col:3 mjCNSTRSTATE_LINEARNEG 'int'
| | `-FullComment 0x1ee51240 <col:39, col:76>
| |   `-ParagraphComment 0x1ee51210 <col:39, col:76>
| |     `-TextComment 0x1ee511e0 <col:39, col:76> Text=" linear cost, negative side (friction)"
| |-EnumConstantDecl 0x1ee117a8 <line:289:3> col:3 mjCNSTRSTATE_LINEARPOS 'int'
| | `-FullComment 0x1ee51310 <col:39, col:76>
| |   `-ParagraphComment 0x1ee512e0 <col:39, col:76>
| |     `-TextComment 0x1ee512b0 <col:39, col:76> Text=" linear cost, positive side (friction)"
| `-EnumConstantDecl 0x1ee11858 <line:290:3> col:3 mjCNSTRSTATE_CONE 'int'
|   `-FullComment 0x1ee513e0 <col:39, col:87>
|     `-ParagraphComment 0x1ee513b0 <col:39, col:87>
|       `-TextComment 0x1ee51380 <col:39, col:87> Text=" squared distance to cone cost (elliptic contact)"
|-TypedefDecl 0x1ee11908 <line:285:1, line:291:3> col:3 mjtConstraintState 'enum mjtConstraintState_':'enum mjtConstraintState_'
| `-ElaboratedType 0x1ee118b0 'enum mjtConstraintState_' sugar
|   `-EnumType 0x1ee115a0 'enum mjtConstraintState_'
|     `-Enum 0x1ee11500 'mjtConstraintState_'
|-EnumDecl 0x1ee11978 <line:294:9, line:357:1> line:294:14 mjtSensor_
| |-EnumConstantDecl 0x1ee11ad8 <line:296:3, col:25> col:3 mjSENS_TOUCH 'int'
| | |-ConstantExpr 0x1ee11ab8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee11a98 <col:25> 'int' 0
| | `-FullComment 0x1ee514b0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee51480 <col:37, col:89>
| |     `-TextComment 0x1ee51450 <col:37, col:89> Text=" scalar contact normal forces summed over sensor zone"
| |-EnumConstantDecl 0x1ee11b58 <line:297:3> col:3 mjSENS_ACCELEROMETER 'int'
| | `-FullComment 0x1ee51580 <col:37, col:75>
| |   `-ParagraphComment 0x1ee51550 <col:37, col:75>
| |     `-TextComment 0x1ee51520 <col:37, col:75> Text=" 3D linear acceleration, in local frame"
| |-EnumConstantDecl 0x1ee11bd8 <line:298:3> col:3 mjSENS_VELOCIMETER 'int'
| | `-FullComment 0x1ee51650 <col:37, col:71>
| |   `-ParagraphComment 0x1ee51620 <col:37, col:71>
| |     `-TextComment 0x1ee515f0 <col:37, col:71> Text=" 3D linear velocity, in local frame"
| |-EnumConstantDecl 0x1ee11c58 <line:299:3> col:3 mjSENS_GYRO 'int'
| | `-FullComment 0x1ee51720 <col:37, col:72>
| |   `-ParagraphComment 0x1ee516f0 <col:37, col:72>
| |     `-TextComment 0x1ee516c0 <col:37, col:72> Text=" 3D angular velocity, in local frame"
| |-EnumConstantDecl 0x1ee11cd8 <line:300:3> col:3 mjSENS_FORCE 'int'
| | `-FullComment 0x1ee517f0 <col:37, col:85>
| |   `-ParagraphComment 0x1ee517c0 <col:37, col:85>
| |     `-TextComment 0x1ee51790 <col:37, col:85> Text=" 3D force between site's body and its parent body"
| |-EnumConstantDecl 0x1ee11d58 <line:301:3> col:3 mjSENS_TORQUE 'int'
| | `-FullComment 0x1ee518c0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee51890 <col:37, col:86>
| |     `-TextComment 0x1ee51860 <col:37, col:86> Text=" 3D torque between site's body and its parent body"
| |-EnumConstantDecl 0x1ee11dd8 <line:302:3> col:3 mjSENS_MAGNETOMETER 'int'
| | `-FullComment 0x1ee51990 <col:37, col:52>
| |   `-ParagraphComment 0x1ee51960 <col:37, col:52>
| |     `-TextComment 0x1ee51930 <col:37, col:52> Text=" 3D magnetometer"
| |-EnumConstantDecl 0x1ee11e58 <line:303:3> col:3 mjSENS_RANGEFINDER 'int'
| | `-FullComment 0x1ee51a70 <col:37, col:89>
| |   `-ParagraphComment 0x1ee51a40 <col:37, col:89>
| |     `-TextComment 0x1ee51a10 <col:37, col:89> Text=" scalar distance to nearest geom or site along z-axis"
| |-EnumConstantDecl 0x1ee11ed8 <line:304:3> col:3 mjSENS_CAMPROJECTION 'int'
| | `-FullComment 0x1ee51b40 <col:37, col:84>
| |   `-ParagraphComment 0x1ee51b10 <col:37, col:84>
| |     `-TextComment 0x1ee51ae0 <col:37, col:84> Text=" pixel coordinates of a site in the camera image"
| |-EnumConstantDecl 0x1ee11f88 <line:307:3> col:3 mjSENS_JOINTPOS 'int'
| | `-FullComment 0x1ee51c10 <col:37, col:81>
| |   `-ParagraphComment 0x1ee51be0 <col:37, col:81>
| |     `-TextComment 0x1ee51bb0 <col:37, col:81> Text=" scalar joint position (hinge and slide only)"
| |-EnumConstantDecl 0x1ee12008 <line:308:3> col:3 mjSENS_JOINTVEL 'int'
| | `-FullComment 0x1ee51ce0 <col:37, col:81>
| |   `-ParagraphComment 0x1ee51cb0 <col:37, col:81>
| |     `-TextComment 0x1ee51c80 <col:37, col:81> Text=" scalar joint velocity (hinge and slide only)"
| |-EnumConstantDecl 0x1ee12088 <line:309:3> col:3 mjSENS_TENDONPOS 'int'
| | `-FullComment 0x1ee51db0 <col:37, col:59>
| |   `-ParagraphComment 0x1ee51d80 <col:37, col:59>
| |     `-TextComment 0x1ee51d50 <col:37, col:59> Text=" scalar tendon position"
| |-EnumConstantDecl 0x1ee12108 <line:310:3> col:3 mjSENS_TENDONVEL 'int'
| | `-FullComment 0x1ee51e80 <col:37, col:59>
| |   `-ParagraphComment 0x1ee51e50 <col:37, col:59>
| |     `-TextComment 0x1ee51e20 <col:37, col:59> Text=" scalar tendon velocity"
| |-EnumConstantDecl 0x1ee12188 <line:311:3> col:3 mjSENS_ACTUATORPOS 'int'
| | `-FullComment 0x1ee51f50 <col:37, col:61>
| |   `-ParagraphComment 0x1ee51f20 <col:37, col:61>
| |     `-TextComment 0x1ee51ef0 <col:37, col:61> Text=" scalar actuator position"
| |-EnumConstantDecl 0x1ee12208 <line:312:3> col:3 mjSENS_ACTUATORVEL 'int'
| | `-FullComment 0x1ee52020 <col:37, col:61>
| |   `-ParagraphComment 0x1ee51ff0 <col:37, col:61>
| |     `-TextComment 0x1ee51fc0 <col:37, col:61> Text=" scalar actuator velocity"
| |-EnumConstantDecl 0x1ee12288 <line:313:3> col:3 mjSENS_ACTUATORFRC 'int'
| | `-FullComment 0x1ee520f0 <col:37, col:58>
| |   `-ParagraphComment 0x1ee520c0 <col:37, col:58>
| |     `-TextComment 0x1ee52090 <col:37, col:58> Text=" scalar actuator force"
| |-EnumConstantDecl 0x1ee12308 <line:314:3> col:3 mjSENS_JOINTACTFRC 'int'
| | `-FullComment 0x1ee521c0 <col:37, col:81>
| |   `-ParagraphComment 0x1ee52190 <col:37, col:81>
| |     `-TextComment 0x1ee52160 <col:37, col:81> Text=" scalar actuator force, measured at the joint"
| |-EnumConstantDecl 0x1ee123b8 <line:317:3> col:3 mjSENS_BALLQUAT 'int'
| | `-FullComment 0x1ee52290 <col:37, col:61>
| |   `-ParagraphComment 0x1ee52260 <col:37, col:61>
| |     `-TextComment 0x1ee52230 <col:37, col:61> Text=" 4D ball joint quaternion"
| |-EnumConstantDecl 0x1ee12438 <line:318:3> col:3 mjSENS_BALLANGVEL 'int'
| | `-FullComment 0x1ee52360 <col:37, col:67>
| |   `-ParagraphComment 0x1ee52330 <col:37, col:67>
| |     `-TextComment 0x1ee52300 <col:37, col:67> Text=" 3D ball joint angular velocity"
| |-EnumConstantDecl 0x1ee12c90 <line:321:3> col:3 mjSENS_JOINTLIMITPOS 'int'
| | `-FullComment 0x1ee52430 <col:37, col:64>
| |   `-ParagraphComment 0x1ee52400 <col:37, col:64>
| |     `-TextComment 0x1ee523d0 <col:37, col:64> Text=" joint limit distance-margin"
| |-EnumConstantDecl 0x1ee12d08 <line:322:3> col:3 mjSENS_JOINTLIMITVEL 'int'
| | `-FullComment 0x1ee52500 <col:37, col:57>
| |   `-ParagraphComment 0x1ee524d0 <col:37, col:57>
| |     `-TextComment 0x1ee524a0 <col:37, col:57> Text=" joint limit velocity"
| |-EnumConstantDecl 0x1ee12d88 <line:323:3> col:3 mjSENS_JOINTLIMITFRC 'int'
| | `-FullComment 0x1ee525d0 <col:37, col:54>
| |   `-ParagraphComment 0x1ee525a0 <col:37, col:54>
| |     `-TextComment 0x1ee52570 <col:37, col:54> Text=" joint limit force"
| |-EnumConstantDecl 0x1ee12e08 <line:324:3> col:3 mjSENS_TENDONLIMITPOS 'int'
| | `-FullComment 0x1ee526a0 <col:37, col:65>
| |   `-ParagraphComment 0x1ee52670 <col:37, col:65>
| |     `-TextComment 0x1ee52640 <col:37, col:65> Text=" tendon limit distance-margin"
| |-EnumConstantDecl 0x1ee12e88 <line:325:3> col:3 mjSENS_TENDONLIMITVEL 'int'
| | `-FullComment 0x1ee52770 <col:37, col:58>
| |   `-ParagraphComment 0x1ee52740 <col:37, col:58>
| |     `-TextComment 0x1ee52710 <col:37, col:58> Text=" tendon limit velocity"
| |-EnumConstantDecl 0x1ee12f08 <line:326:3> col:3 mjSENS_TENDONLIMITFRC 'int'
| | `-FullComment 0x1ee52840 <col:37, col:55>
| |   `-ParagraphComment 0x1ee52810 <col:37, col:55>
| |     `-TextComment 0x1ee527e0 <col:37, col:55> Text=" tendon limit force"
| |-EnumConstantDecl 0x1ee12fb8 <line:329:3> col:3 mjSENS_FRAMEPOS 'int'
| | `-FullComment 0x1ee52910 <col:37, col:48>
| |   `-ParagraphComment 0x1ee528e0 <col:37, col:48>
| |     `-TextComment 0x1ee528b0 <col:37, col:48> Text=" 3D position"
| |-EnumConstantDecl 0x1ee13038 <line:330:3> col:3 mjSENS_FRAMEQUAT 'int'
| | `-FullComment 0x1ee529f0 <col:37, col:67>
| |   `-ParagraphComment 0x1ee529b0 <col:37, col:67>
| |     `-TextComment 0x1ee52980 <col:37, col:67> Text=" 4D unit quaternion orientation"
| |-EnumConstantDecl 0x1ee130b8 <line:331:3> col:3 mjSENS_FRAMEXAXIS 'int'
| | `-FullComment 0x1ee52ac0 <col:37, col:77>
| |   `-ParagraphComment 0x1ee52a90 <col:37, col:77>
| |     `-TextComment 0x1ee52a60 <col:37, col:77> Text=" 3D unit vector: x-axis of object's frame"
| |-EnumConstantDecl 0x1ee13138 <line:332:3> col:3 mjSENS_FRAMEYAXIS 'int'
| | `-FullComment 0x1ee52b90 <col:37, col:77>
| |   `-ParagraphComment 0x1ee52b60 <col:37, col:77>
| |     `-TextComment 0x1ee52b30 <col:37, col:77> Text=" 3D unit vector: y-axis of object's frame"
| |-EnumConstantDecl 0x1ee131b8 <line:333:3> col:3 mjSENS_FRAMEZAXIS 'int'
| | `-FullComment 0x1ee52c60 <col:37, col:77>
| |   `-ParagraphComment 0x1ee52c30 <col:37, col:77>
| |     `-TextComment 0x1ee52c00 <col:37, col:77> Text=" 3D unit vector: z-axis of object's frame"
| |-EnumConstantDecl 0x1ee13238 <line:334:3> col:3 mjSENS_FRAMELINVEL 'int'
| | `-FullComment 0x1ee52d30 <col:37, col:55>
| |   `-ParagraphComment 0x1ee52d00 <col:37, col:55>
| |     `-TextComment 0x1ee52cd0 <col:37, col:55> Text=" 3D linear velocity"
| |-EnumConstantDecl 0x1ee132b8 <line:335:3> col:3 mjSENS_FRAMEANGVEL 'int'
| | `-FullComment 0x1ee52e00 <col:37, col:56>
| |   `-ParagraphComment 0x1ee52dd0 <col:37, col:56>
| |     `-TextComment 0x1ee52da0 <col:37, col:56> Text=" 3D angular velocity"
| |-EnumConstantDecl 0x1ee13338 <line:336:3> col:3 mjSENS_FRAMELINACC 'int'
| | `-FullComment 0x1ee52ed0 <col:37, col:59>
| |   `-ParagraphComment 0x1ee52ea0 <col:37, col:59>
| |     `-TextComment 0x1ee52e70 <col:37, col:59> Text=" 3D linear acceleration"
| |-EnumConstantDecl 0x1ee133b8 <line:337:3> col:3 mjSENS_FRAMEANGACC 'int'
| | `-FullComment 0x1ee52fa0 <col:37, col:60>
| |   `-ParagraphComment 0x1ee52f70 <col:37, col:60>
| |     `-TextComment 0x1ee52f40 <col:37, col:60> Text=" 3D angular acceleration"
| |-EnumConstantDecl 0x1ee13468 <line:340:3> col:3 mjSENS_SUBTREECOM 'int'
| | `-FullComment 0x1ee53070 <col:37, col:65>
| |   `-ParagraphComment 0x1ee53040 <col:37, col:65>
| |     `-TextComment 0x1ee53010 <col:37, col:65> Text=" 3D center of mass of subtree"
| |-EnumConstantDecl 0x1ee134e8 <line:341:3> col:3 mjSENS_SUBTREELINVEL 'int'
| | `-FullComment 0x1ee53140 <col:37, col:66>
| |   `-ParagraphComment 0x1ee53110 <col:37, col:66>
| |     `-TextComment 0x1ee530e0 <col:37, col:66> Text=" 3D linear velocity of subtree"
| |-EnumConstantDecl 0x1ee13568 <line:342:3> col:3 mjSENS_SUBTREEANGMOM 'int'
| | `-FullComment 0x1ee53210 <col:37, col:67>
| |   `-ParagraphComment 0x1ee531e0 <col:37, col:67>
| |     `-TextComment 0x1ee531b0 <col:37, col:67> Text=" 3D angular momentum of subtree"
| |-EnumConstantDecl 0x1ee13618 <line:345:3> col:3 mjSENS_GEOMDIST 'int'
| | `-FullComment 0x1ee532e0 <col:37, col:70>
| |   `-ParagraphComment 0x1ee532b0 <col:37, col:70>
| |     `-TextComment 0x1ee53280 <col:37, col:70> Text=" signed distance between two geoms"
| |-EnumConstantDecl 0x1ee13698 <line:346:3> col:3 mjSENS_GEOMNORMAL 'int'
| | `-FullComment 0x1ee533b0 <col:37, col:71>
| |   `-ParagraphComment 0x1ee53380 <col:37, col:71>
| |     `-TextComment 0x1ee53350 <col:37, col:71> Text=" normal direction between two geoms"
| |-EnumConstantDecl 0x1ee13718 <line:347:3> col:3 mjSENS_GEOMFROMTO 'int'
| | `-FullComment 0x1ee53480 <col:37, col:62>
| |   `-ParagraphComment 0x1ee53450 <col:37, col:62>
| |     `-TextComment 0x1ee53420 <col:37, col:62> Text=" segment between two geoms"
| |-EnumConstantDecl 0x1ee137c8 <line:350:3> col:3 mjSENS_CLOCK 'int'
| | `-FullComment 0x1ee53550 <col:37, col:52>
| |   `-ParagraphComment 0x1ee53520 <col:37, col:52>
| |     `-TextComment 0x1ee534f0 <col:37, col:52> Text=" simulation time"
| |-EnumConstantDecl 0x1ee13878 <line:353:3> col:3 mjSENS_PLUGIN 'int'
| | `-FullComment 0x1ee53620 <col:37, col:54>
| |   `-ParagraphComment 0x1ee535f0 <col:37, col:54>
| |     `-TextComment 0x1ee535c0 <col:37, col:54> Text=" plugin-controlled"
| `-EnumConstantDecl 0x1ee13958 <line:356:3> col:3 mjSENS_USER 'int'
|   `-FullComment 0x1ee536f0 <col:37, col:81>
|     `-ParagraphComment 0x1ee536c0 <col:37, col:81>
|       `-TextComment 0x1ee53690 <col:37, col:81> Text=" sensor data provided by mjcb_sensor callback"
|-TypedefDecl 0x1ee13a08 <line:294:1, line:357:3> col:3 mjtSensor 'enum mjtSensor_':'enum mjtSensor_'
| `-ElaboratedType 0x1ee139b0 'enum mjtSensor_' sugar
|   `-EnumType 0x1ee11a20 'enum mjtSensor_'
|     `-Enum 0x1ee11978 'mjtSensor_'
|-EnumDecl 0x1ee13a78 <line:360:9, line:365:1> line:360:14 mjtStage_
| |-EnumConstantDecl 0x1ee13ba8 <line:361:3, col:25> col:3 mjSTAGE_NONE 'int'
| | |-ConstantExpr 0x1ee13b88 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee13b68 <col:25> 'int' 0
| | `-FullComment 0x1ee537c0 <col:37, col:52>
| |   `-ParagraphComment 0x1ee53790 <col:37, col:52>
| |     `-TextComment 0x1ee53760 <col:37, col:52> Text=" no computations"
| |-EnumConstantDecl 0x1ee13c28 <line:362:3> col:3 mjSTAGE_POS 'int'
| | `-FullComment 0x1ee53890 <col:37, col:68>
| |   `-ParagraphComment 0x1ee53860 <col:37, col:68>
| |     `-TextComment 0x1ee53830 <col:37, col:68> Text=" position-dependent computations"
| |-EnumConstantDecl 0x1ee14048 <line:363:3> col:3 mjSTAGE_VEL 'int'
| | `-FullComment 0x1ee53960 <col:37, col:68>
| |   `-ParagraphComment 0x1ee53930 <col:37, col:68>
| |     `-TextComment 0x1ee53900 <col:37, col:68> Text=" velocity-dependent computations"
| `-EnumConstantDecl 0x1ee140f8 <line:364:3> col:3 mjSTAGE_ACC 'int'
|   `-FullComment 0x1ee4d9f0 <col:37, col:78>
|     `-ParagraphComment 0x1ee4d9c0 <col:37, col:78>
|       `-TextComment 0x1ee4d990 <col:37, col:78> Text=" acceleration/force-dependent computations"
|-TypedefDecl 0x1ee141a8 <line:360:1, line:365:3> col:3 mjtStage 'enum mjtStage_':'enum mjtStage_'
| `-ElaboratedType 0x1ee14150 'enum mjtStage_' sugar
|   `-EnumType 0x1ee13b20 'enum mjtStage_'
|     `-Enum 0x1ee13a78 'mjtStage_'
|-EnumDecl 0x1ee14218 <line:368:9, line:373:1> line:368:14 mjtDataType_
| |-EnumConstantDecl 0x1ee14348 <line:369:3, col:25> col:3 mjDATATYPE_REAL 'int'
| | |-ConstantExpr 0x1ee14328 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee14308 <col:25> 'int' 0
| | `-FullComment 0x1ee4dac0 <col:37, col:64>
| |   `-ParagraphComment 0x1ee4da90 <col:37, col:64>
| |     `-TextComment 0x1ee4da60 <col:37, col:64> Text=" real values, no constraints"
| |-EnumConstantDecl 0x1ee143c8 <line:370:3> col:3 mjDATATYPE_POSITIVE 'int'
| | `-FullComment 0x1ee4db90 <col:37, col:77>
| |   `-ParagraphComment 0x1ee4db60 <col:37, col:77>
| |     `-TextComment 0x1ee4db30 <col:37, col:77> Text=" positive values; 0 or negative: inactive"
| |-EnumConstantDecl 0x1ee14448 <line:371:3> col:3 mjDATATYPE_AXIS 'int'
| | `-FullComment 0x1ee4dc60 <col:37, col:51>
| |   `-ParagraphComment 0x1ee4dc30 <col:37, col:51>
| |     `-TextComment 0x1ee4dc00 <col:37, col:51> Text=" 3D unit vector"
| `-EnumConstantDecl 0x1ee144f8 <line:372:3> col:3 mjDATATYPE_QUATERNION 'int'
|   `-FullComment 0x1ee4dd30 <col:37, col:52>
|     `-ParagraphComment 0x1ee4dd00 <col:37, col:52>
|       `-TextComment 0x1ee4dcd0 <col:37, col:52> Text=" unit quaternion"
|-TypedefDecl 0x1ee145a8 <line:368:1, line:373:3> col:3 mjtDataType 'enum mjtDataType_':'enum mjtDataType_'
| `-ElaboratedType 0x1ee14550 'enum mjtDataType_' sugar
|   `-EnumType 0x1ee142c0 'enum mjtDataType_'
|     `-Enum 0x1ee14218 'mjtDataType_'
|-EnumDecl 0x1ee14618 <line:376:9, line:382:1> line:376:14 mjtSameFrame_
| |-EnumConstantDecl 0x1ee14748 <line:377:3, col:25> col:3 mjSAMEFRAME_NONE 'int'
| | |-ConstantExpr 0x1ee14728 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee14708 <col:25> 'int' 0
| | `-FullComment 0x1ee4de00 <col:37, col:49>
| |   `-ParagraphComment 0x1ee4ddd0 <col:37, col:49>
| |     `-TextComment 0x1ee4dda0 <col:37, col:49> Text=" no alignment"
| |-EnumConstantDecl 0x1ee147c8 <line:378:3> col:3 mjSAMEFRAME_BODY 'int'
| | `-FullComment 0x1ee4ded0 <col:37, col:64>
| |   `-ParagraphComment 0x1ee4dea0 <col:37, col:64>
| |     `-TextComment 0x1ee4de70 <col:37, col:64> Text=" frame is same as body frame"
| |-EnumConstantDecl 0x1ee14848 <line:379:3> col:3 mjSAMEFRAME_INERTIA 'int'
| | `-FullComment 0x1ee4dfa0 <col:37, col:68>
| |   `-ParagraphComment 0x1ee4df70 <col:37, col:68>
| |     `-TextComment 0x1ee4df40 <col:37, col:68> Text=" frame is same as inertial frame"
| |-EnumConstantDecl 0x1ee148c8 <line:380:3> col:3 mjSAMEFRAME_BODYROT 'int'
| | `-FullComment 0x1ee4e070 <col:37, col:82>
| |   `-ParagraphComment 0x1ee4e040 <col:37, col:82>
| |     `-TextComment 0x1ee4e010 <col:37, col:82> Text=" frame orientation is same as body orientation"
| `-EnumConstantDecl 0x1ee14978 <line:381:3> col:3 mjSAMEFRAME_INERTIAROT 'int'
|   `-FullComment 0x1ee4e140 <col:37, col:85>
|     `-ParagraphComment 0x1ee4e110 <col:37, col:85>
|       `-TextComment 0x1ee4e0e0 <col:37, col:85> Text=" frame orientation is same as inertia orientation"
|-TypedefDecl 0x1ee14a28 <line:376:1, line:382:3> col:3 mjtSameFrame 'enum mjtSameFrame_':'enum mjtSameFrame_'
| `-ElaboratedType 0x1ee149d0 'enum mjtSameFrame_' sugar
|   `-EnumType 0x1ee146c0 'enum mjtSameFrame_'
|     `-Enum 0x1ee14618 'mjtSameFrame_'
|-EnumDecl 0x1ee14a98 <line:385:9, line:390:1> line:385:14 mjtLRMode_
| |-EnumConstantDecl 0x1ee14bc8 <line:386:3, col:21> col:3 mjLRMODE_NONE 'int'
| | |-ConstantExpr 0x1ee14ba8 <col:21> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee14b88 <col:21> 'int' 0
| | `-FullComment 0x1ee4e210 <col:37, col:65>
| |   `-ParagraphComment 0x1ee4e1e0 <col:37, col:65>
| |     `-TextComment 0x1ee4e1b0 <col:37, col:65> Text=" do not process any actuators"
| |-EnumConstantDecl 0x1ee14c48 <line:387:3> col:3 mjLRMODE_MUSCLE 'int'
| | `-FullComment 0x1ee4e2e0 <col:37, col:61>
| |   `-ParagraphComment 0x1ee4e2b0 <col:37, col:61>
| |     `-TextComment 0x1ee4e280 <col:37, col:61> Text=" process muscle actuators"
| |-EnumConstantDecl 0x1ee14cc8 <line:388:3> col:3 mjLRMODE_MUSCLEUSER 'int'
| | `-FullComment 0x1ee4e3b0 <col:37, col:70>
| |   `-ParagraphComment 0x1ee4e380 <col:37, col:70>
| |     `-TextComment 0x1ee4e350 <col:37, col:70> Text=" process muscle and user actuators"
| `-EnumConstantDecl 0x1ee14d78 <line:389:3> col:3 mjLRMODE_ALL 'int'
|   `-FullComment 0x1ee4e480 <col:37, col:58>
|     `-ParagraphComment 0x1ee4e450 <col:37, col:58>
|       `-TextComment 0x1ee4e420 <col:37, col:58> Text=" process all actuators"
|-TypedefDecl 0x1ee14e28 <line:385:1, line:390:3> col:3 mjtLRMode 'enum mjtLRMode_':'enum mjtLRMode_'
| `-ElaboratedType 0x1ee14dd0 'enum mjtLRMode_' sugar
|   `-EnumType 0x1ee14b40 'enum mjtLRMode_'
|     `-Enum 0x1ee14a98 'mjtLRMode_'
|-EnumDecl 0x1ee14e98 <line:393:9, line:399:1> line:393:14 mjtFlexSelf_
| |-EnumConstantDecl 0x1ee14fc8 <line:394:3, col:23> col:3 mjFLEXSELF_NONE 'int'
| | |-ConstantExpr 0x1ee14fa8 <col:23> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x1ee14f88 <col:23> 'int' 0
| | `-FullComment 0x1ee4e550 <col:37, col:55>
| |   `-ParagraphComment 0x1ee4e520 <col:37, col:55>
| |     `-TextComment 0x1ee4e4f0 <col:37, col:55> Text=" no self-collisions"
| |-EnumConstantDecl 0x1ee17068 <line:395:3> col:3 mjFLEXSELF_NARROW 'int'
| | `-FullComment 0x1ee4e620 <col:37, col:78>
| |   `-ParagraphComment 0x1ee4e5f0 <col:37, col:78>
| |     `-TextComment 0x1ee4e5c0 <col:37, col:78> Text=" skip midphase, go directly to narrowphase"
| |-EnumConstantDecl 0x1ee170e8 <line:396:3> col:3 mjFLEXSELF_BVH 'int'
| | `-FullComment 0x1ee4e6f0 <col:37, col:78>
| |   `-ParagraphComment 0x1ee4e6c0 <col:37, col:78>
| |     `-TextComment 0x1ee4e690 <col:37, col:78> Text=" use BVH in midphase (if midphase enabled)"
| |-EnumConstantDecl 0x1ee17168 <line:397:3> col:3 mjFLEXSELF_SAP 'int'
| | `-FullComment 0x1ee4e7c0 <col:37, col:56>
| |   `-ParagraphComment 0x1ee4e790 <col:37, col:56>
| |     `-TextComment 0x1ee4e760 <col:37, col:56> Text=" use SAP in midphase"
| `-EnumConstantDecl 0x1ee17218 <line:398:3> col:3 mjFLEXSELF_AUTO 'int'
|   `-FullComment 0x1ee4e890 <col:37, col:77>
|     `-ParagraphComment 0x1ee4e860 <col:37, col:77>
|       `-TextComment 0x1ee4e830 <col:37, col:77> Text=" choose between BVH and SAP automatically"
|-TypedefDecl 0x1ee172c8 <line:393:1, line:399:3> col:3 mjtFlexSelf 'enum mjtFlexSelf_':'enum mjtFlexSelf_'
| `-ElaboratedType 0x1ee17270 'enum mjtFlexSelf_' sugar
|   `-EnumType 0x1ee14f40 'enum mjtFlexSelf_'
|     `-Enum 0x1ee14e98 'mjtFlexSelf_'
|-RecordDecl 0x1ee17360 <line:404:1, line:418:1> line:404:8 struct mjLROpt_ definition
| |-FullComment 0x1ee4e960 <line:402:3, col:100>
| | `-ParagraphComment 0x1ee4e930 <col:3, col:100>
| |   `-TextComment 0x1ee4e900 <col:3, col:100> Text="---------------------------------- mjLROpt -------------------------------------------------------"
| |-FieldDecl 0x1ee17470 <line:406:3, col:7> col:7 mode 'int'
| | `-FullComment 0x1ee55aa0 <col:37, col:75>
| |   `-ParagraphComment 0x1ee55a70 <col:37, col:75>
| |     `-TextComment 0x1ee55a40 <col:37, col:75> Text=" which actuators to process (mjtLRMode)"
| |-FieldDecl 0x1ee17500 <line:407:3, col:7> col:7 useexisting 'int'
| | `-FullComment 0x1ee55b70 <col:37, col:75>
| |   `-ParagraphComment 0x1ee55b40 <col:37, col:75>
| |     `-TextComment 0x1ee55b10 <col:37, col:75> Text=" use existing length range if available"
| |-FieldDecl 0x1ee17590 <line:408:3, col:7> col:7 uselimit 'int'
| | `-FullComment 0x1ee55c40 <col:37, col:77>
| |   `-ParagraphComment 0x1ee55c10 <col:37, col:77>
| |     `-TextComment 0x1ee55be0 <col:37, col:77> Text=" use joint and tendon limits if available"
| |-FieldDecl 0x1ee17670 <line:411:3, col:10> col:10 accel 'mjtNum':'double'
| | `-FullComment 0x1ee55d10 <col:37, col:78>
| |   `-ParagraphComment 0x1ee55ce0 <col:37, col:78>
| |     `-TextComment 0x1ee55cb0 <col:37, col:78> Text=" target acceleration used to compute force"
| |-FieldDecl 0x1ee176f8 <line:412:3, col:10> col:10 maxforce 'mjtNum':'double'
| | `-FullComment 0x1ee55de0 <col:37, col:63>
| |   `-ParagraphComment 0x1ee55db0 <col:37, col:63>
| |     `-TextComment 0x1ee55d80 <col:37, col:63> Text=" maximum force; 0: no limit"
| |-FieldDecl 0x1ee17788 <line:413:3, col:10> col:10 timeconst 'mjtNum':'double'
| | `-FullComment 0x1ee55eb0 <col:37, col:83>
| |   `-ParagraphComment 0x1ee55e80 <col:37, col:83>
| |     `-TextComment 0x1ee55e50 <col:37, col:83> Text=" time constant for velocity reduction; min 0.01"
| |-FieldDecl 0x1ee17818 <line:414:3, col:10> col:10 timestep 'mjtNum':'double'
| | `-FullComment 0x1ee55f80 <col:37, col:82>
| |   `-ParagraphComment 0x1ee55f50 <col:37, col:82>
| |     `-TextComment 0x1ee55f20 <col:37, col:82> Text=" simulation timestep; 0: use mjOption.timestep"
| |-FieldDecl 0x1ee178a8 <line:415:3, col:10> col:10 inttotal 'mjtNum':'double'
| | `-FullComment 0x1ee56050 <col:37, col:67>
| |   `-ParagraphComment 0x1ee56020 <col:37, col:67>
| |     `-TextComment 0x1ee55ff0 <col:37, col:67> Text=" total simulation time interval"
| |-FieldDecl 0x1ee17938 <line:416:3, col:10> col:10 interval 'mjtNum':'double'
| | `-FullComment 0x1ee56120 <col:37, col:74>
| |   `-ParagraphComment 0x1ee560f0 <col:37, col:74>
| |     `-TextComment 0x1ee560c0 <col:37, col:74> Text=" evaluation time interval (at the end)"
| `-FieldDecl 0x1ee179c8 <line:417:3, col:10> col:10 tolrange 'mjtNum':'double'
|   `-FullComment 0x1ee561f0 <col:37, col:78>
|     `-ParagraphComment 0x1ee561c0 <col:37, col:78>
|       `-TextComment 0x1ee56190 <col:37, col:78> Text=" convergence tolerance (relative to range)"
|-TypedefDecl 0x1ee17aa0 <line:419:1, col:25> col:25 mjLROpt 'struct mjLROpt_':'struct mjLROpt_'
| `-ElaboratedType 0x1ee17a50 'struct mjLROpt_' sugar
|   `-RecordType 0x1ee173e0 'struct mjLROpt_'
|     `-Record 0x1ee17360 'mjLROpt_'
|-RecordDecl 0x1ee17b28 <line:424:1, line:426:1> line:424:8 struct mjVFS_ definition
| |-FullComment 0x1ee562c0 <line:422:3, col:100>
| | `-ParagraphComment 0x1ee56290 <col:3, col:100>
| |   `-TextComment 0x1ee56260 <col:3, col:100> Text="---------------------------------- mjVFS ---------------------------------------------------------"
| `-FieldDecl 0x1ee17c10 <line:425:3, col:9> col:9 impl_ 'void *'
|   `-FullComment 0x1ee56390 <col:49, col:79>
|     `-ParagraphComment 0x1ee56360 <col:49, col:79>
|       `-TextComment 0x1ee56330 <col:49, col:79> Text=" internal pointer to VFS memory"
|-TypedefDecl 0x1ee17ce0 <line:427:1, col:23> col:23 mjVFS 'struct mjVFS_':'struct mjVFS_'
| `-ElaboratedType 0x1ee17c90 'struct mjVFS_' sugar
|   `-RecordType 0x1ee17bb0 'struct mjVFS_'
|     `-Record 0x1ee17b28 'mjVFS_'
|-RecordDecl 0x1ee17d68 <line:431:1, line:472:1> line:431:8 struct mjOption_ definition
| |-FullComment 0x1ee56460 <line:429:3, col:100>
| | `-ParagraphComment 0x1ee56430 <col:3, col:100>
| |   `-TextComment 0x1ee56400 <col:3, col:100> Text="---------------------------------- mjOption ------------------------------------------------------"
| |-FieldDecl 0x1ee17e78 <line:433:3, col:10> col:10 timestep 'mjtNum':'double'
| | `-FullComment 0x1ee56530 <col:37, col:45>
| |   `-ParagraphComment 0x1ee56500 <col:37, col:45>
| |     `-TextComment 0x1ee564d0 <col:37, col:45> Text=" timestep"
| |-FieldDecl 0x1ee17f08 <line:434:3, col:10> col:10 apirate 'mjtNum':'double'
| | `-FullComment 0x1ee56600 <col:37, col:68>
| |   `-ParagraphComment 0x1ee565d0 <col:37, col:68>
| |     `-TextComment 0x1ee565a0 <col:37, col:68> Text=" update rate for remote API (Hz)"
| |-FieldDecl 0x1ee17fc8 <line:437:3, col:10> col:10 impratio 'mjtNum':'double'
| | `-FullComment 0x1ee566d0 <col:37, col:82>
| |   `-ParagraphComment 0x1ee566a0 <col:37, col:82>
| |     `-TextComment 0x1ee56670 <col:37, col:82> Text=" ratio of friction-to-normal contact impedance"
| |-FieldDecl 0x1ee18088 <line:438:3, col:10> col:10 tolerance 'mjtNum':'double'
| | `-FullComment 0x1ee567a0 <col:37, col:58>
| |   `-ParagraphComment 0x1ee56770 <col:37, col:58>
| |     `-TextComment 0x1ee56740 <col:37, col:58> Text=" main solver tolerance"
| |-FieldDecl 0x1ee18118 <line:439:3, col:10> col:10 ls_tolerance 'mjtNum':'double'
| | `-FullComment 0x1ee56870 <col:37, col:67>
| |   `-ParagraphComment 0x1ee56840 <col:37, col:67>
| |     `-TextComment 0x1ee56810 <col:37, col:67> Text=" CG/Newton linesearch tolerance"
| |-FieldDecl 0x1ee181a8 <line:440:3, col:10> col:10 noslip_tolerance 'mjtNum':'double'
| | `-FullComment 0x1ee56940 <col:37, col:60>
| |   `-ParagraphComment 0x1ee56910 <col:37, col:60>
| |     `-TextComment 0x1ee568e0 <col:37, col:60> Text=" noslip solver tolerance"
| |-FieldDecl 0x1ee18238 <line:441:3, col:10> col:10 ccd_tolerance 'mjtNum':'double'
| | `-FullComment 0x1ee56a20 <col:37, col:70>
| |   `-ParagraphComment 0x1ee569e0 <col:37, col:70>
| |     `-TextComment 0x1ee569b0 <col:37, col:70> Text=" convex collision solver tolerance"
| |-FieldDecl 0x1ee183c8 <line:444:3, col:19> col:10 gravity 'mjtNum[3]'
| | `-FullComment 0x1ee56af0 <col:37, col:63>
| |   `-ParagraphComment 0x1ee56ac0 <col:37, col:63>
| |     `-TextComment 0x1ee56a90 <col:37, col:63> Text=" gravitational acceleration"
| |-FieldDecl 0x1ee184a8 <line:445:3, col:16> col:10 wind 'mjtNum[3]'
| | `-FullComment 0x1ee56bc0 <col:37, col:72>
| |   `-ParagraphComment 0x1ee56b90 <col:37, col:72>
| |     `-TextComment 0x1ee56b60 <col:37, col:72> Text=" wind (for lift, drag and viscosity)"
| |-FieldDecl 0x1ee18588 <line:446:3, col:20> col:10 magnetic 'mjtNum[3]'
| | `-FullComment 0x1ee56c90 <col:37, col:57>
| |   `-ParagraphComment 0x1ee56c60 <col:37, col:57>
| |     `-TextComment 0x1ee56c30 <col:37, col:57> Text=" global magnetic flux"
| |-FieldDecl 0x1ee18618 <line:447:3, col:10> col:10 density 'mjtNum':'double'
| | `-FullComment 0x1ee56d60 <col:37, col:54>
| |   `-ParagraphComment 0x1ee56d30 <col:37, col:54>
| |     `-TextComment 0x1ee56d00 <col:37, col:54> Text=" density of medium"
| |-FieldDecl 0x1ee186a8 <line:448:3, col:10> col:10 viscosity 'mjtNum':'double'
| | `-FullComment 0x1ee56e30 <col:37, col:56>
| |   `-ParagraphComment 0x1ee56e00 <col:37, col:56>
| |     `-TextComment 0x1ee56dd0 <col:37, col:56> Text=" viscosity of medium"
| |-FieldDecl 0x1ee18768 <line:451:3, col:10> col:10 o_margin 'mjtNum':'double'
| | `-FullComment 0x1ee56f00 <col:37, col:43>
| |   `-ParagraphComment 0x1ee56ed0 <col:37, col:43>
| |     `-TextComment 0x1ee56ea0 <col:37, col:43> Text=" margin"
| |-FieldDecl 0x1ee188c8 <line:452:3, col:25> col:10 o_solref 'mjtNum[2]'
| | `-FullComment 0x1ee56fd0 <col:37, col:43>
| |   `-ParagraphComment 0x1ee56fa0 <col:37, col:43>
| |     `-TextComment 0x1ee56f70 <col:37, col:43> Text=" solref"
| |-FieldDecl 0x1ee18a28 <line:453:3, col:25> col:10 o_solimp 'mjtNum[5]'
| | `-FullComment 0x1ee570a0 <col:37, col:43>
| |   `-ParagraphComment 0x1ee57070 <col:37, col:43>
| |     `-TextComment 0x1ee57040 <col:37, col:43> Text=" solimp"
| |-FieldDecl 0x1ee18b08 <line:454:3, col:22> col:10 o_friction 'mjtNum[5]'
| | `-FullComment 0x1ee57170 <col:37, col:45>
| |   `-ParagraphComment 0x1ee57140 <col:37, col:45>
| |     `-TextComment 0x1ee57110 <col:37, col:45> Text=" friction"
| |-FieldDecl 0x1ee18bd0 <line:457:3, col:7> col:7 integrator 'int'
| | `-FullComment 0x1ee57240 <col:37, col:69>
| |   `-ParagraphComment 0x1ee57210 <col:37, col:69>
| |     `-TextComment 0x1ee571e0 <col:37, col:69> Text=" integration mode (mjtIntegrator)"
| |-FieldDecl 0x1ee18c60 <line:458:3, col:7> col:7 cone 'int'
| | `-FullComment 0x1ee57310 <col:37, col:68>
| |   `-ParagraphComment 0x1ee572e0 <col:37, col:68>
| |     `-TextComment 0x1ee572b0 <col:37, col:68> Text=" type of friction cone (mjtCone)"
| |-FieldDecl 0x1ee18cf0 <line:459:3, col:7> col:7 jacobian 'int'
| | `-FullComment 0x1ee573e0 <col:37, col:67>
| |   `-ParagraphComment 0x1ee573b0 <col:37, col:67>
| |     `-TextComment 0x1ee57380 <col:37, col:67> Text=" type of Jacobian (mjtJacobian)"
| |-FieldDecl 0x1ee18d80 <line:460:3, col:7> col:7 solver 'int'
| | `-FullComment 0x1ee574b0 <col:37, col:65>
| |   `-ParagraphComment 0x1ee57480 <col:37, col:65>
| |     `-TextComment 0x1ee57450 <col:37, col:65> Text=" solver algorithm (mjtSolver)"
| |-FieldDecl 0x1ee18e10 <line:461:3, col:7> col:7 iterations 'int'
| | `-FullComment 0x1ee57580 <col:37, col:77>
| |   `-ParagraphComment 0x1ee57550 <col:37, col:77>
| |     `-TextComment 0x1ee57520 <col:37, col:77> Text=" maximum number of main solver iterations"
| |-FieldDecl 0x1ee18ea0 <line:462:3, col:7> col:7 ls_iterations 'int'
| | `-FullComment 0x1ee57650 <col:37, col:86>
| |   `-ParagraphComment 0x1ee57620 <col:37, col:86>
| |     `-TextComment 0x1ee575f0 <col:37, col:86> Text=" maximum number of CG/Newton linesearch iterations"
| |-FieldDecl 0x1ee18f30 <line:463:3, col:7> col:7 noslip_iterations 'int'
| | `-FullComment 0x1ee57720 <col:37, col:79>
| |   `-ParagraphComment 0x1ee576f0 <col:37, col:79>
| |     `-TextComment 0x1ee576c0 <col:37, col:79> Text=" maximum number of noslip solver iterations"
| |-FieldDecl 0x1ee18fc0 <line:464:3, col:7> col:7 ccd_iterations 'int'
| | `-FullComment 0x1ee577f0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee577c0 <col:37, col:89>
| |     `-TextComment 0x1ee57790 <col:37, col:89> Text=" maximum number of convex collision solver iterations"
| |-FieldDecl 0x1ee1c1c0 <line:465:3, col:7> col:7 disableflags 'int'
| | `-FullComment 0x1ee578c0 <col:37, col:78>
| |   `-ParagraphComment 0x1ee57890 <col:37, col:78>
| |     `-TextComment 0x1ee57860 <col:37, col:78> Text=" bit flags for disabling standard features"
| |-FieldDecl 0x1ee1c250 <line:466:3, col:7> col:7 enableflags 'int'
| | `-FullComment 0x1ee57990 <col:37, col:77>
| |   `-ParagraphComment 0x1ee57960 <col:37, col:77>
| |     `-TextComment 0x1ee57930 <col:37, col:77> Text=" bit flags for enabling optional features"
| |-FieldDecl 0x1ee1c2e0 <line:467:3, col:7> col:7 disableactuator 'int'
| | `-FullComment 0x1ee57a80 <col:37, col:82>
| |   `-ParagraphComment 0x1ee57a50 <col:37, col:82>
| |     `-TextComment 0x1ee57a20 <col:37, col:82> Text=" bit flags for disabling actuators by group id"
| |-FieldDecl 0x1ee1c3a0 <line:470:3, col:7> col:7 sdf_initpoints 'int'
| | `-FullComment 0x1ee57b50 <col:37, col:83>
| |   `-ParagraphComment 0x1ee57b20 <col:37, col:83>
| |     `-TextComment 0x1ee57af0 <col:37, col:83> Text=" number of starting points for gradient descent"
| `-FieldDecl 0x1ee1c430 <line:471:3, col:7> col:7 sdf_iterations 'int'
|   `-FullComment 0x1ee57c20 <col:37, col:82>
|     `-ParagraphComment 0x1ee57bf0 <col:37, col:82>
|       `-TextComment 0x1ee57bc0 <col:37, col:82> Text=" max number of iterations for gradient descent"
|-TypedefDecl 0x1ee1c500 <line:473:1, col:26> col:26 referenced mjOption 'struct mjOption_':'struct mjOption_'
| `-ElaboratedType 0x1ee1c4b0 'struct mjOption_' sugar
|   `-RecordType 0x1ee17df0 'struct mjOption_'
|     `-Record 0x1ee17d68 'mjOption_'
|-RecordDecl 0x1ee1c588 <line:478:1, line:572:1> line:478:8 struct mjVisual_ definition
| |-FullComment 0x1ee57cf0 <line:476:3, col:100>
| | `-ParagraphComment 0x1ee57cc0 <col:3, col:100>
| |   `-TextComment 0x1ee57c90 <col:3, col:100> Text="---------------------------------- mjVisual ------------------------------------------------------"
| |-RecordDecl 0x1ee1c658 <line:479:3, line:492:3> line:479:3 struct definition
| | |-FieldDecl 0x1ee1c740 <line:480:5, col:9> col:9 orthographic 'int'
| | | `-FullComment 0x1ee57dc0 <col:37, col:84>
| | |   `-ParagraphComment 0x1ee57d90 <col:37, col:84>
| | |     `-TextComment 0x1ee57d60 <col:37, col:84> Text=" is the free camera orthographic (0: no, 1: yes)"
| | |-FieldDecl 0x1ee1c7d0 <line:481:5, col:11> col:11 fovy 'float'
| | | `-FullComment 0x1ee57e90 <col:37, col:100>
| | |   `-ParagraphComment 0x1ee57e60 <col:37, col:100>
| | |     `-TextComment 0x1ee57e30 <col:37, col:100> Text=" y field-of-view of free camera (orthographic ? length : degree)"
| | |-FieldDecl 0x1ee1c860 <line:482:5, col:11> col:11 ipd 'float'
| | | `-FullComment 0x1ee57f60 <col:37, col:76>
| | |   `-ParagraphComment 0x1ee57f30 <col:37, col:76>
| | |     `-TextComment 0x1ee57f00 <col:37, col:76> Text=" inter-pupilary distance for free camera"
| | |-FieldDecl 0x1ee1c8f0 <line:483:5, col:11> col:11 azimuth 'float'
| | | `-FullComment 0x1ee58030 <col:37, col:77>
| | |   `-ParagraphComment 0x1ee58000 <col:37, col:77>
| | |     `-TextComment 0x1ee57fd0 <col:37, col:77> Text=" initial azimuth of free camera (degrees)"
| | |-FieldDecl 0x1ee1c980 <line:484:5, col:11> col:11 elevation 'float'
| | | `-FullComment 0x1ee58100 <col:37, col:79>
| | |   `-ParagraphComment 0x1ee580d0 <col:37, col:79>
| | |     `-TextComment 0x1ee580a0 <col:37, col:79> Text=" initial elevation of free camera (degrees)"
| | |-FieldDecl 0x1ee1ca10 <line:485:5, col:11> col:11 linewidth 'float'
| | | `-FullComment 0x1ee581d0 <col:37, col:79>
| | |   `-ParagraphComment 0x1ee581a0 <col:37, col:79>
| | |     `-TextComment 0x1ee58170 <col:37, col:79> Text=" line width for wireframe and ray rendering"
| | |-FieldDecl 0x1ee1caa0 <line:486:5, col:11> col:11 glow 'float'
| | | `-FullComment 0x1ee582a0 <col:37, col:71>
| | |   `-ParagraphComment 0x1ee58270 <col:37, col:71>
| | |     `-TextComment 0x1ee58240 <col:37, col:71> Text=" glow coefficient for selected body"
| | |-FieldDecl 0x1ee1cb30 <line:487:5, col:11> col:11 realtime 'float'
| | | `-FullComment 0x1ee58370 <col:37, col:76>
| | |   `-ParagraphComment 0x1ee58340 <col:37, col:76>
| | |     `-TextComment 0x1ee58310 <col:37, col:76> Text=" initial real-time factor (1: real time)"
| | |-FieldDecl 0x1ee1cbc0 <line:488:5, col:11> col:11 offwidth 'int'
| | | `-FullComment 0x1ee58440 <col:37, col:62>
| | |   `-ParagraphComment 0x1ee58410 <col:37, col:62>
| | |     `-TextComment 0x1ee583e0 <col:37, col:62> Text=" width of offscreen buffer"
| | |-FieldDecl 0x1ee1cc50 <line:489:5, col:11> col:11 offheight 'int'
| | | `-FullComment 0x1ee58510 <col:37, col:63>
| | |   `-ParagraphComment 0x1ee584e0 <col:37, col:63>
| | |     `-TextComment 0x1ee584b0 <col:37, col:63> Text=" height of offscreen buffer"
| | |-FieldDecl 0x1ee1cce0 <line:490:5, col:11> col:11 ellipsoidinertia 'int'
| | | `-FullComment 0x1ee585e0 <col:37, col:90>
| | |   `-ParagraphComment 0x1ee585b0 <col:37, col:90>
| | |     `-TextComment 0x1ee58580 <col:37, col:90> Text=" geom for inertia visualization (0: box, 1: ellipsoid)"
| | `-FieldDecl 0x1ee1cd70 <line:491:5, col:11> col:11 bvactive 'int'
| |   `-FullComment 0x1ee586b0 <col:37, col:86>
| |     `-ParagraphComment 0x1ee58680 <col:37, col:86>
| |       `-TextComment 0x1ee58650 <col:37, col:86> Text=" visualize active bounding volumes (0: no, 1: yes)"
| |-FieldDecl 0x1ee1ce48 <line:479:3, line:492:5> col:5 global 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:479:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:479:3)'
| |-RecordDecl 0x1ee1ce98 <line:494:3, line:500:3> line:494:3 struct definition
| | |-FieldDecl 0x1ee1cf80 <line:495:5, col:11> col:11 shadowsize 'int'
| | | `-FullComment 0x1ee58780 <col:37, col:62>
| | |   `-ParagraphComment 0x1ee58750 <col:37, col:62>
| | |     `-TextComment 0x1ee58720 <col:37, col:62> Text=" size of shadowmap texture"
| | |-FieldDecl 0x1ee1d010 <line:496:5, col:11> col:11 offsamples 'int'
| | | `-FullComment 0x1ee58850 <col:37, col:83>
| | |   `-ParagraphComment 0x1ee58820 <col:37, col:83>
| | |     `-TextComment 0x1ee587f0 <col:37, col:83> Text=" number of multisamples for offscreen rendering"
| | |-FieldDecl 0x1ee1d0a0 <line:497:5, col:11> col:11 numslices 'int'
| | | `-FullComment 0x1ee58920 <col:37, col:78>
| | |   `-ParagraphComment 0x1ee588f0 <col:37, col:78>
| | |     `-TextComment 0x1ee588c0 <col:37, col:78> Text=" number of slices for builtin geom drawing"
| | |-FieldDecl 0x1ee1d130 <line:498:5, col:11> col:11 numstacks 'int'
| | | `-FullComment 0x1ee589f0 <col:37, col:78>
| | |   `-ParagraphComment 0x1ee589c0 <col:37, col:78>
| | |     `-TextComment 0x1ee58990 <col:37, col:78> Text=" number of stacks for builtin geom drawing"
| | `-FieldDecl 0x1ee1d2d0 <line:499:5, col:11> col:11 numquads 'int'
| |   `-FullComment 0x1ee58ad0 <col:37, col:70>
| |     `-ParagraphComment 0x1ee58aa0 <col:37, col:70>
| |       `-TextComment 0x1ee58a70 <col:37, col:70> Text=" number of quads for box rendering"
| |-FieldDecl 0x1ee1d3a8 <line:494:3, line:500:5> col:5 quality 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:494:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:494:3)'
| |-RecordDecl 0x1ee1d3f8 <line:502:3, line:507:3> line:502:3 struct definition
| | |-FieldDecl 0x1ee1d570 <line:503:5, col:20> col:11 ambient 'float[3]'
| | | `-FullComment 0x1ee58ba0 <col:37, col:58>
| | |   `-ParagraphComment 0x1ee58b70 <col:37, col:58>
| | |     `-TextComment 0x1ee58b40 <col:37, col:58> Text=" ambient rgb (alpha=1)"
| | |-FieldDecl 0x1ee1d650 <line:504:5, col:20> col:11 diffuse 'float[3]'
| | | `-FullComment 0x1ee58c70 <col:37, col:58>
| | |   `-ParagraphComment 0x1ee58c40 <col:37, col:58>
| | |     `-TextComment 0x1ee58c10 <col:37, col:58> Text=" diffuse rgb (alpha=1)"
| | |-FieldDecl 0x1ee1d730 <line:505:5, col:21> col:11 specular 'float[3]'
| | | `-FullComment 0x1ee58d40 <col:37, col:59>
| | |   `-ParagraphComment 0x1ee58d10 <col:37, col:59>
| | |     `-TextComment 0x1ee58ce0 <col:37, col:59> Text=" specular rgb (alpha=1)"
| | `-FieldDecl 0x1ee1d7c0 <line:506:5, col:11> col:11 active 'int'
| |   `-FullComment 0x1ee58e10 <col:37, col:56>
| |     `-ParagraphComment 0x1ee58de0 <col:37, col:56>
| |       `-TextComment 0x1ee58db0 <col:37, col:56> Text=" is headlight active"
| |-FieldDecl 0x1ee1d898 <line:502:3, line:507:5> col:5 headlight 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:502:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:502:3)'
| |-RecordDecl 0x1ee1d8e8 <line:509:3, line:523:3> line:509:3 struct definition
| | |-FieldDecl 0x1ee1d9d0 <line:510:5, col:11> col:11 stiffness 'float'
| | | `-FullComment 0x1ee58ee0 <col:37, col:80>
| | |   `-ParagraphComment 0x1ee58eb0 <col:37, col:80>
| | |     `-TextComment 0x1ee58e80 <col:37, col:80> Text=" mouse perturbation stiffness (space->force)"
| | |-FieldDecl 0x1ee1da60 <line:511:5, col:11> col:11 stiffnessrot 'float'
| | | `-FullComment 0x1ee58fb0 <col:37, col:81>
| | |   `-ParagraphComment 0x1ee58f80 <col:37, col:81>
| | |     `-TextComment 0x1ee58f50 <col:37, col:81> Text=" mouse perturbation stiffness (space->torque)"
| | |-FieldDecl 0x1ee1daf0 <line:512:5, col:11> col:11 force 'float'
| | | `-FullComment 0x1ee59080 <col:37, col:68>
| | |   `-ParagraphComment 0x1ee59050 <col:37, col:68>
| | |     `-TextComment 0x1ee59020 <col:37, col:68> Text=" from force units to space units"
| | |-FieldDecl 0x1ee1db80 <line:513:5, col:11> col:11 torque 'float'
| | | `-FullComment 0x1ee59150 <col:37, col:69>
| | |   `-ParagraphComment 0x1ee59120 <col:37, col:69>
| | |     `-TextComment 0x1ee590f0 <col:37, col:69> Text=" from torque units to space units"
| | |-FieldDecl 0x1ee1dc10 <line:514:5, col:11> col:11 alpha 'float'
| | | `-FullComment 0x1ee59220 <col:37, col:83>
| | |   `-ParagraphComment 0x1ee591f0 <col:37, col:83>
| | |     `-TextComment 0x1ee591c0 <col:37, col:83> Text=" scale geom alphas when transparency is enabled"
| | |-FieldDecl 0x1ee1dca0 <line:515:5, col:11> col:11 fogstart 'float'
| | | `-FullComment 0x1ee592f0 <col:37, col:88>
| | |   `-ParagraphComment 0x1ee592c0 <col:37, col:88>
| | |     `-TextComment 0x1ee59290 <col:37, col:88> Text=" OpenGL fog starts at fogstart * mjModel.stat.extent"
| | |-FieldDecl 0x1ee1dd30 <line:516:5, col:11> col:11 fogend 'float'
| | | `-FullComment 0x1ee593c0 <col:37, col:84>
| | |   `-ParagraphComment 0x1ee59390 <col:37, col:84>
| | |     `-TextComment 0x1ee59360 <col:37, col:84> Text=" OpenGL fog ends at fogend * mjModel.stat.extent"
| | |-FieldDecl 0x1ee1ddc0 <line:517:5, col:11> col:11 znear 'float'
| | | `-FullComment 0x1ee59490 <col:37, col:86>
| | |   `-ParagraphComment 0x1ee59460 <col:37, col:86>
| | |     `-TextComment 0x1ee59430 <col:37, col:86> Text=" near clipping plane = znear * mjModel.stat.extent"
| | |-FieldDecl 0x1ee1de50 <line:518:5, col:11> col:11 zfar 'float'
| | | `-FullComment 0x1ee59560 <col:37, col:84>
| | |   `-ParagraphComment 0x1ee59530 <col:37, col:84>
| | |     `-TextComment 0x1ee59500 <col:37, col:84> Text=" far clipping plane = zfar * mjModel.stat.extent"
| | |-FieldDecl 0x1ee1dee0 <line:519:5, col:11> col:11 haze 'float'
| | | `-FullComment 0x1ee59630 <col:37, col:47>
| | |   `-ParagraphComment 0x1ee59600 <col:37, col:47>
| | |     `-TextComment 0x1ee595d0 <col:37, col:47> Text=" haze ratio"
| | |-FieldDecl 0x1ee1df70 <line:520:5, col:11> col:11 shadowclip 'float'
| | | `-FullComment 0x1ee59700 <col:37, col:88>
| | |   `-ParagraphComment 0x1ee596d0 <col:37, col:88>
| | |     `-TextComment 0x1ee596a0 <col:37, col:88> Text=" directional light: shadowclip * mjModel.stat.extent"
| | |-FieldDecl 0x1ee1e000 <line:521:5, col:11> col:11 shadowscale 'float'
| | | `-FullComment 0x1ee597d0 <col:37, col:75>
| | |   `-ParagraphComment 0x1ee597a0 <col:37, col:75>
| | |     `-TextComment 0x1ee59770 <col:37, col:75> Text=" spot light: shadowscale * light.cutoff"
| | `-FieldDecl 0x1ee1e090 <line:522:5, col:11> col:11 actuatortendon 'float'
| |   `-FullComment 0x1ee598a0 <col:37, col:55>
| |     `-ParagraphComment 0x1ee59870 <col:37, col:55>
| |       `-TextComment 0x1ee59840 <col:37, col:55> Text=" scale tendon width"
| |-FieldDecl 0x1ee1e168 <line:509:3, line:523:5> col:5 map 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:509:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:509:3)'
| |-RecordDecl 0x1ee1e1b8 <line:525:3, line:543:3> line:525:3 struct definition
| | |-FieldDecl 0x1ee1e820 <line:526:5, col:11> col:11 forcewidth 'float'
| | | `-FullComment 0x1ee59970 <col:37, col:57>
| | |   `-ParagraphComment 0x1ee59940 <col:37, col:57>
| | |     `-TextComment 0x1ee59910 <col:37, col:57> Text=" width of force arrow"
| | |-FieldDecl 0x1ee1e8b0 <line:527:5, col:11> col:11 contactwidth 'float'
| | | `-FullComment 0x1ee59a50 <col:37, col:50>
| | |   `-ParagraphComment 0x1ee59a10 <col:37, col:50>
| | |     `-TextComment 0x1ee599e0 <col:37, col:50> Text=" contact width"
| | |-FieldDecl 0x1ee1e940 <line:528:5, col:11> col:11 contactheight 'float'
| | | `-FullComment 0x1ee59b20 <col:37, col:51>
| | |   `-ParagraphComment 0x1ee59af0 <col:37, col:51>
| | |     `-TextComment 0x1ee59ac0 <col:37, col:51> Text=" contact height"
| | |-FieldDecl 0x1ee1e9d0 <line:529:5, col:11> col:11 connect 'float'
| | | `-FullComment 0x1ee59bf0 <col:37, col:62>
| | |   `-ParagraphComment 0x1ee59bc0 <col:37, col:62>
| | |     `-TextComment 0x1ee59b90 <col:37, col:62> Text=" autoconnect capsule width"
| | |-FieldDecl 0x1ee1ea60 <line:530:5, col:11> col:11 com 'float'
| | | `-FullComment 0x1ee59cc0 <col:37, col:47>
| | |   `-ParagraphComment 0x1ee59c90 <col:37, col:47>
| | |     `-TextComment 0x1ee59c60 <col:37, col:47> Text=" com radius"
| | |-FieldDecl 0x1ee1eaf0 <line:531:5, col:11> col:11 camera 'float'
| | | `-FullComment 0x1ee59d90 <col:37, col:50>
| | |   `-ParagraphComment 0x1ee59d60 <col:37, col:50>
| | |     `-TextComment 0x1ee59d30 <col:37, col:50> Text=" camera object"
| | |-FieldDecl 0x1ee1eb80 <line:532:5, col:11> col:11 light 'float'
| | | `-FullComment 0x1ee59e60 <col:37, col:49>
| | |   `-ParagraphComment 0x1ee59e30 <col:37, col:49>
| | |     `-TextComment 0x1ee59e00 <col:37, col:49> Text=" light object"
| | |-FieldDecl 0x1ee1ec10 <line:533:5, col:11> col:11 selectpoint 'float'
| | | `-FullComment 0x1ee59f30 <col:37, col:52>
| | |   `-ParagraphComment 0x1ee59f00 <col:37, col:52>
| | |     `-TextComment 0x1ee59ed0 <col:37, col:52> Text=" selection point"
| | |-FieldDecl 0x1ee1eca0 <line:534:5, col:11> col:11 jointlength 'float'
| | | `-FullComment 0x1ee5a000 <col:37, col:49>
| | |   `-ParagraphComment 0x1ee59fd0 <col:37, col:49>
| | |     `-TextComment 0x1ee59fa0 <col:37, col:49> Text=" joint length"
| | |-FieldDecl 0x1ee1ed30 <line:535:5, col:11> col:11 jointwidth 'float'
| | | `-FullComment 0x1ee5a0d0 <col:37, col:48>
| | |   `-ParagraphComment 0x1ee5a0a0 <col:37, col:48>
| | |     `-TextComment 0x1ee5a070 <col:37, col:48> Text=" joint width"
| | |-FieldDecl 0x1ee1edc0 <line:536:5, col:11> col:11 actuatorlength 'float'
| | | `-FullComment 0x1ee5a1a0 <col:37, col:52>
| | |   `-ParagraphComment 0x1ee5a170 <col:37, col:52>
| | |     `-TextComment 0x1ee5a140 <col:37, col:52> Text=" actuator length"
| | |-FieldDecl 0x1ee1ee50 <line:537:5, col:11> col:11 actuatorwidth 'float'
| | | `-FullComment 0x1ee5a270 <col:37, col:51>
| | |   `-ParagraphComment 0x1ee5a240 <col:37, col:51>
| | |     `-TextComment 0x1ee5a210 <col:37, col:51> Text=" actuator width"
| | |-FieldDecl 0x1ee1eee0 <line:538:5, col:11> col:11 framelength 'float'
| | | `-FullComment 0x1ee5a340 <col:37, col:58>
| | |   `-ParagraphComment 0x1ee5a310 <col:37, col:58>
| | |     `-TextComment 0x1ee5a2e0 <col:37, col:58> Text=" bodyframe axis length"
| | |-FieldDecl 0x1ee1ef70 <line:539:5, col:11> col:11 framewidth 'float'
| | | `-FullComment 0x1ee5a410 <col:37, col:57>
| | |   `-ParagraphComment 0x1ee5a3e0 <col:37, col:57>
| | |     `-TextComment 0x1ee5a3b0 <col:37, col:57> Text=" bodyframe axis width"
| | |-FieldDecl 0x1ee1f000 <line:540:5, col:11> col:11 constraint 'float'
| | | `-FullComment 0x1ee5a4e0 <col:37, col:53>
| | |   `-ParagraphComment 0x1ee5a4b0 <col:37, col:53>
| | |     `-TextComment 0x1ee5a480 <col:37, col:53> Text=" constraint width"
| | |-FieldDecl 0x1ee1f090 <line:541:5, col:11> col:11 slidercrank 'float'
| | | `-FullComment 0x1ee5a5b0 <col:37, col:54>
| | |   `-ParagraphComment 0x1ee5a580 <col:37, col:54>
| | |     `-TextComment 0x1ee5a550 <col:37, col:54> Text=" slidercrank width"
| | `-FieldDecl 0x1ee1f120 <line:542:5, col:11> col:11 frustum 'float'
| |   `-FullComment 0x1ee5a680 <col:37, col:55>
| |     `-ParagraphComment 0x1ee5a650 <col:37, col:55>
| |       `-TextComment 0x1ee5a620 <col:37, col:55> Text=" frustum zfar plane"
| |-FieldDecl 0x1ee1f1f8 <line:525:3, line:543:5> col:5 scale 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:525:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:525:3)'
| |-RecordDecl 0x1ee1f248 <line:545:3, line:571:3> line:545:3 struct definition
| | |-FieldDecl 0x1ee1f3c0 <line:546:5, col:16> col:11 fog 'float[4]'
| | | `-FullComment 0x1ee5a750 <col:37, col:40>
| | |   `-ParagraphComment 0x1ee5a720 <col:37, col:40>
| | |     `-TextComment 0x1ee5a6f0 <col:37, col:40> Text=" fog"
| | |-FieldDecl 0x1ee1f4a0 <line:547:5, col:17> col:11 haze 'float[4]'
| | | `-FullComment 0x1ee5a820 <col:37, col:41>
| | |   `-ParagraphComment 0x1ee5a7f0 <col:37, col:41>
| | |     `-TextComment 0x1ee5a7c0 <col:37, col:41> Text=" haze"
| | |-FieldDecl 0x1ee1f580 <line:548:5, col:18> col:11 force 'float[4]'
| | | `-FullComment 0x1ee5a8f0 <col:37, col:51>
| | |   `-ParagraphComment 0x1ee5a8c0 <col:37, col:51>
| | |     `-TextComment 0x1ee5a890 <col:37, col:51> Text=" external force"
| | |-FieldDecl 0x1ee1f660 <line:549:5, col:20> col:11 inertia 'float[4]'
| | | `-FullComment 0x1ee5a9c0 <col:37, col:48>
| | |   `-ParagraphComment 0x1ee5a990 <col:37, col:48>
| | |     `-TextComment 0x1ee5a960 <col:37, col:48> Text=" inertia box"
| | |-FieldDecl 0x1ee1f740 <line:550:5, col:18> col:11 joint 'float[4]'
| | | `-FullComment 0x1ee5aab0 <col:37, col:42>
| | |   `-ParagraphComment 0x1ee5aa80 <col:37, col:42>
| | |     `-TextComment 0x1ee5aa50 <col:37, col:42> Text=" joint"
| | |-FieldDecl 0x1ee1fdf0 <line:551:5, col:21> col:11 actuator 'float[4]'
| | | `-FullComment 0x1ee5ab80 <col:37, col:54>
| | |   `-ParagraphComment 0x1ee5ab50 <col:37, col:54>
| | |     `-TextComment 0x1ee5ab20 <col:37, col:54> Text=" actuator, neutral"
| | |-FieldDecl 0x1ee1fed0 <line:552:5, col:29> col:11 actuatornegative 'float[4]'
| | | `-FullComment 0x1ee5ac50 <col:37, col:61>
| | |   `-ParagraphComment 0x1ee5ac20 <col:37, col:61>
| | |     `-TextComment 0x1ee5abf0 <col:37, col:61> Text=" actuator, negative limit"
| | |-FieldDecl 0x1ee1ffb0 <line:553:5, col:29> col:11 actuatorpositive 'float[4]'
| | | `-FullComment 0x1ee5ad20 <col:37, col:61>
| | |   `-ParagraphComment 0x1ee5acf0 <col:37, col:61>
| | |     `-TextComment 0x1ee5acc0 <col:37, col:61> Text=" actuator, positive limit"
| | |-FieldDecl 0x1ee20090 <line:554:5, col:16> col:11 com 'float[4]'
| | | `-FullComment 0x1ee5adf0 <col:37, col:51>
| | |   `-ParagraphComment 0x1ee5adc0 <col:37, col:51>
| | |     `-TextComment 0x1ee5ad90 <col:37, col:51> Text=" center of mass"
| | |-FieldDecl 0x1ee20170 <line:555:5, col:19> col:11 camera 'float[4]'
| | | `-FullComment 0x1ee5aec0 <col:37, col:50>
| | |   `-ParagraphComment 0x1ee5ae90 <col:37, col:50>
| | |     `-TextComment 0x1ee5ae60 <col:37, col:50> Text=" camera object"
| | |-FieldDecl 0x1ee20250 <line:556:5, col:18> col:11 light 'float[4]'
| | | `-FullComment 0x1ee5af90 <col:37, col:49>
| | |   `-ParagraphComment 0x1ee5af60 <col:37, col:49>
| | |     `-TextComment 0x1ee5af30 <col:37, col:49> Text=" light object"
| | |-FieldDecl 0x1ee20330 <line:557:5, col:24> col:11 selectpoint 'float[4]'
| | | `-FullComment 0x1ee5b060 <col:37, col:52>
| | |   `-ParagraphComment 0x1ee5b030 <col:37, col:52>
| | |     `-TextComment 0x1ee5b000 <col:37, col:52> Text=" selection point"
| | |-FieldDecl 0x1ee20410 <line:558:5, col:20> col:11 connect 'float[4]'
| | | `-FullComment 0x1ee5b130 <col:37, col:49>
| | |   `-ParagraphComment 0x1ee5b100 <col:37, col:49>
| | |     `-TextComment 0x1ee5b0d0 <col:37, col:49> Text=" auto connect"
| | |-FieldDecl 0x1ee204f0 <line:559:5, col:25> col:11 contactpoint 'float[4]'
| | | `-FullComment 0x1ee5b200 <col:37, col:50>
| | |   `-ParagraphComment 0x1ee5b1d0 <col:37, col:50>
| | |     `-TextComment 0x1ee5b1a0 <col:37, col:50> Text=" contact point"
| | |-FieldDecl 0x1ee205d0 <line:560:5, col:25> col:11 contactforce 'float[4]'
| | | `-FullComment 0x1ee5b2d0 <col:37, col:50>
| | |   `-ParagraphComment 0x1ee5b2a0 <col:37, col:50>
| | |     `-TextComment 0x1ee5b270 <col:37, col:50> Text=" contact force"
| | |-FieldDecl 0x1ee206b0 <line:561:5, col:28> col:11 contactfriction 'float[4]'
| | | `-FullComment 0x1ee5b3a0 <col:37, col:59>
| | |   `-ParagraphComment 0x1ee5b370 <col:37, col:59>
| | |     `-TextComment 0x1ee5b340 <col:37, col:59> Text=" contact friction force"
| | |-FieldDecl 0x1ee20790 <line:562:5, col:26> col:11 contacttorque 'float[4]'
| | | `-FullComment 0x1ee5b470 <col:37, col:51>
| | |   `-ParagraphComment 0x1ee5b440 <col:37, col:51>
| | |     `-TextComment 0x1ee5b410 <col:37, col:51> Text=" contact torque"
| | |-FieldDecl 0x1ee20870 <line:563:5, col:23> col:11 contactgap 'float[4]'
| | | `-FullComment 0x1ee5b540 <col:37, col:57>
| | |   `-ParagraphComment 0x1ee5b510 <col:37, col:57>
| | |     `-TextComment 0x1ee5b4e0 <col:37, col:57> Text=" contact point in gap"
| | |-FieldDecl 0x1ee20950 <line:564:5, col:24> col:11 rangefinder 'float[4]'
| | | `-FullComment 0x1ee5b610 <col:37, col:52>
| | |   `-ParagraphComment 0x1ee5b5e0 <col:37, col:52>
| | |     `-TextComment 0x1ee5b5b0 <col:37, col:52> Text=" rangefinder ray"
| | |-FieldDecl 0x1ee20a30 <line:565:5, col:23> col:11 constraint 'float[4]'
| | | `-FullComment 0x1ee5b6e0 <col:37, col:47>
| | |   `-ParagraphComment 0x1ee5b6b0 <col:37, col:47>
| | |     `-TextComment 0x1ee5b680 <col:37, col:47> Text=" constraint"
| | |-FieldDecl 0x1ee20b10 <line:566:5, col:24> col:11 slidercrank 'float[4]'
| | | `-FullComment 0x1ee5b7b0 <col:37, col:48>
| | |   `-ParagraphComment 0x1ee5b780 <col:37, col:48>
| | |     `-TextComment 0x1ee5b750 <col:37, col:48> Text=" slidercrank"
| | |-FieldDecl 0x1ee20bf0 <line:567:5, col:24> col:11 crankbroken 'float[4]'
| | | `-FullComment 0x1ee5b880 <col:37, col:77>
| | |   `-ParagraphComment 0x1ee5b850 <col:37, col:77>
| | |     `-TextComment 0x1ee5b820 <col:37, col:77> Text=" used when crank must be stretched/broken"
| | |-FieldDecl 0x1ee20cd0 <line:568:5, col:20> col:11 frustum 'float[4]'
| | | `-FullComment 0x1ee5b950 <col:37, col:51>
| | |   `-ParagraphComment 0x1ee5b920 <col:37, col:51>
| | |     `-TextComment 0x1ee5b8f0 <col:37, col:51> Text=" camera frustum"
| | |-FieldDecl 0x1ee21280 <line:569:5, col:15> col:11 bv 'float[4]'
| | | `-FullComment 0x1ee5ba20 <col:37, col:52>
| | |   `-ParagraphComment 0x1ee5b9f0 <col:37, col:52>
| | |     `-TextComment 0x1ee5b9c0 <col:37, col:52> Text=" bounding volume"
| | `-FieldDecl 0x1ee21360 <line:570:5, col:21> col:11 bvactive 'float[4]'
| |   `-FullComment 0x1ee5bb00 <col:37, col:59>
| |     `-ParagraphComment 0x1ee5bad0 <col:37, col:59>
| |       `-TextComment 0x1ee5baa0 <col:37, col:59> Text=" active bounding volume"
| `-FieldDecl 0x1ee21438 <line:545:3, line:571:5> col:5 rgba 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:545:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:545:3)'
|-TypedefDecl 0x1ee21590 <line:573:1, col:26> col:26 referenced mjVisual 'struct mjVisual_':'struct mjVisual_'
| `-ElaboratedType 0x1ee21540 'struct mjVisual_' sugar
|   `-RecordType 0x1ee1c610 'struct mjVisual_'
|     `-Record 0x1ee1c588 'mjVisual_'
|-RecordDecl 0x1ee21618 <line:578:1, line:584:1> line:578:8 struct mjStatistic_ definition
| |-FullComment 0x1ee5bbd0 <line:576:3, col:100>
| | `-ParagraphComment 0x1ee5bba0 <col:3, col:100>
| |   `-TextComment 0x1ee5bb70 <col:3, col:100> Text="---------------------------------- mjStatistic ---------------------------------------------------"
| |-FieldDecl 0x1ee216f8 <line:579:3, col:10> col:10 meaninertia 'mjtNum':'double'
| | `-FullComment 0x1ee5bca0 <col:37, col:58>
| |   `-ParagraphComment 0x1ee5bc70 <col:37, col:58>
| |     `-TextComment 0x1ee5bc40 <col:37, col:58> Text=" mean diagonal inertia"
| |-FieldDecl 0x1ee21788 <line:580:3, col:10> col:10 meanmass 'mjtNum':'double'
| | `-FullComment 0x1ee5bd70 <col:37, col:51>
| |   `-ParagraphComment 0x1ee5bd40 <col:37, col:51>
| |     `-TextComment 0x1ee5bd10 <col:37, col:51> Text=" mean body mass"
| |-FieldDecl 0x1ee21818 <line:581:3, col:10> col:10 meansize 'mjtNum':'double'
| | `-FullComment 0x1ee5be40 <col:37, col:51>
| |   `-ParagraphComment 0x1ee5be10 <col:37, col:51>
| |     `-TextComment 0x1ee5bde0 <col:37, col:51> Text=" mean body size"
| |-FieldDecl 0x1ee218a8 <line:582:3, col:10> col:10 extent 'mjtNum':'double'
| | `-FullComment 0x1ee5bf10 <col:37, col:51>
| |   `-ParagraphComment 0x1ee5bee0 <col:37, col:51>
| |     `-TextComment 0x1ee5beb0 <col:37, col:51> Text=" spatial extent"
| `-FieldDecl 0x1ee21988 <line:583:3, col:18> col:10 center 'mjtNum[3]'
|   `-FullComment 0x1ee5bfe0 <col:37, col:52>
|     `-ParagraphComment 0x1ee5bfb0 <col:37, col:52>
|       `-TextComment 0x1ee5bf80 <col:37, col:52> Text=" center of model"
|-TypedefDecl 0x1ee21a60 <line:585:1, col:29> col:29 referenced mjStatistic 'struct mjStatistic_':'struct mjStatistic_'
| `-ElaboratedType 0x1ee21a10 'struct mjStatistic_' sugar
|   `-RecordType 0x1ee216a0 'struct mjStatistic_'
|     `-Record 0x1ee21618 'mjStatistic_'
|-RecordDecl 0x1ee21ae8 <line:590:1, line:1131:1> line:590:8 struct mjModel_ definition
| |-FullComment 0x1ee5c0b0 <line:588:3, col:100>
| | `-ParagraphComment 0x1ee5c080 <col:3, col:100>
| |   `-TextComment 0x1ee5c050 <col:3, col:100> Text="---------------------------------- mjModel -------------------------------------------------------"
| |-FieldDecl 0x1ee21c00 <line:594:3, col:7> col:7 nq 'int'
| | `-FullComment 0x1ee5c180 <col:37, col:82>
| |   `-ParagraphComment 0x1ee5c150 <col:37, col:82>
| |     `-TextComment 0x1ee5c120 <col:37, col:82> Text=" number of generalized coordinates = dim(qpos)"
| |-FieldDecl 0x1ee21c90 <line:595:3, col:7> col:7 nv 'int'
| | `-FullComment 0x1ee5c250 <col:37, col:77>
| |   `-ParagraphComment 0x1ee5c220 <col:37, col:77>
| |     `-TextComment 0x1ee5c1f0 <col:37, col:77> Text=" number of degrees of freedom = dim(qvel)"
| |-FieldDecl 0x1ee21d20 <line:596:3, col:7> col:7 nu 'int'
| | `-FullComment 0x1ee5c320 <col:37, col:77>
| |   `-ParagraphComment 0x1ee5c2f0 <col:37, col:77>
| |     `-TextComment 0x1ee5c2c0 <col:37, col:77> Text=" number of actuators/controls = dim(ctrl)"
| |-FieldDecl 0x1ee21db0 <line:597:3, col:7> col:7 na 'int'
| | `-FullComment 0x1ee5c3f0 <col:37, col:75>
| |   `-ParagraphComment 0x1ee5c3c0 <col:37, col:75>
| |     `-TextComment 0x1ee5c390 <col:37, col:75> Text=" number of activation states = dim(act)"
| |-FieldDecl 0x1ee21e40 <line:598:3, col:7> col:7 nbody 'int'
| | `-FullComment 0x1ee5c4c0 <col:37, col:53>
| |   `-ParagraphComment 0x1ee5c490 <col:37, col:53>
| |     `-TextComment 0x1ee5c460 <col:37, col:53> Text=" number of bodies"
| |-FieldDecl 0x1ee21ed0 <line:599:3, col:7> col:7 nbvh 'int'
| | `-FullComment 0x1ee5c590 <col:37, col:83>
| |   `-ParagraphComment 0x1ee5c560 <col:37, col:83>
| |     `-TextComment 0x1ee5c530 <col:37, col:83> Text=" number of total bounding volumes in all bodies"
| |-FieldDecl 0x1ee21f60 <line:600:3, col:7> col:7 nbvhstatic 'int'
| | `-FullComment 0x1ee5c660 <col:37, col:95>
| |   `-ParagraphComment 0x1ee5c630 <col:37, col:95>
| |     `-TextComment 0x1ee5c600 <col:37, col:95> Text=" number of static bounding volumes (aabb stored in mjModel)"
| |-FieldDecl 0x1ee21ff0 <line:601:3, col:7> col:7 nbvhdynamic 'int'
| | `-FullComment 0x1ee5c730 <col:37, col:95>
| |   `-ParagraphComment 0x1ee5c700 <col:37, col:95>
| |     `-TextComment 0x1ee5c6d0 <col:37, col:95> Text=" number of dynamic bounding volumes (aabb stored in mjData)"
| |-FieldDecl 0x1ee22080 <line:602:3, col:7> col:7 njnt 'int'
| | `-FullComment 0x1ee5c800 <col:37, col:53>
| |   `-ParagraphComment 0x1ee5c7d0 <col:37, col:53>
| |     `-TextComment 0x1ee5c7a0 <col:37, col:53> Text=" number of joints"
| |-FieldDecl 0x1ee22110 <line:603:3, col:7> col:7 ngeom 'int'
| | `-FullComment 0x1ee5c8d0 <col:37, col:52>
| |   `-ParagraphComment 0x1ee5c8a0 <col:37, col:52>
| |     `-TextComment 0x1ee5c870 <col:37, col:52> Text=" number of geoms"
| |-FieldDecl 0x1ee221a0 <line:604:3, col:7> col:7 nsite 'int'
| | `-FullComment 0x1ee5c9a0 <col:37, col:52>
| |   `-ParagraphComment 0x1ee5c970 <col:37, col:52>
| |     `-TextComment 0x1ee5c940 <col:37, col:52> Text=" number of sites"
| |-FieldDecl 0x1ee22230 <line:605:3, col:7> col:7 ncam 'int'
| | `-FullComment 0x1ee5ca80 <col:37, col:54>
| |   `-ParagraphComment 0x1ee5ca40 <col:37, col:54>
| |     `-TextComment 0x1ee5ca10 <col:37, col:54> Text=" number of cameras"
| |-FieldDecl 0x1ee248a0 <line:606:3, col:7> col:7 nlight 'int'
| | `-FullComment 0x1ee5cb50 <col:37, col:53>
| |   `-ParagraphComment 0x1ee5cb20 <col:37, col:53>
| |     `-TextComment 0x1ee5caf0 <col:37, col:53> Text=" number of lights"
| |-FieldDecl 0x1ee24930 <line:607:3, col:7> col:7 nflex 'int'
| | `-FullComment 0x1ee5cc20 <col:37, col:53>
| |   `-ParagraphComment 0x1ee5cbf0 <col:37, col:53>
| |     `-TextComment 0x1ee5cbc0 <col:37, col:53> Text=" number of flexes"
| |-FieldDecl 0x1ee249c0 <line:608:3, col:7> col:7 nflexvert 'int'
| | `-FullComment 0x1ee5ccf0 <col:37, col:69>
| |   `-ParagraphComment 0x1ee5ccc0 <col:37, col:69>
| |     `-TextComment 0x1ee5cc90 <col:37, col:69> Text=" number of vertices in all flexes"
| |-FieldDecl 0x1ee24a50 <line:609:3, col:7> col:7 nflexedge 'int'
| | `-FullComment 0x1ee5cdc0 <col:37, col:66>
| |   `-ParagraphComment 0x1ee5cd90 <col:37, col:66>
| |     `-TextComment 0x1ee5cd60 <col:37, col:66> Text=" number of edges in all flexes"
| |-FieldDecl 0x1ee24ae0 <line:610:3, col:7> col:7 nflexelem 'int'
| | `-FullComment 0x1ee5ce90 <col:37, col:69>
| |   `-ParagraphComment 0x1ee5ce60 <col:37, col:69>
| |     `-TextComment 0x1ee5ce30 <col:37, col:69> Text=" number of elements in all flexes"
| |-FieldDecl 0x1ee24b70 <line:611:3, col:7> col:7 nflexelemdata 'int'
| | `-FullComment 0x1ee5cf60 <col:37, col:79>
| |   `-ParagraphComment 0x1ee5cf30 <col:37, col:79>
| |     `-TextComment 0x1ee5cf00 <col:37, col:79> Text=" number of element vertex ids in all flexes"
| |-FieldDecl 0x1ee24c00 <line:612:3, col:7> col:7 nflexelemedge 'int'
| | `-FullComment 0x1ee5d030 <col:37, col:77>
| |   `-ParagraphComment 0x1ee5d000 <col:37, col:77>
| |     `-TextComment 0x1ee5cfd0 <col:37, col:77> Text=" number of element edge ids in all flexes"
| |-FieldDecl 0x1ee24c90 <line:613:3, col:7> col:7 nflexshelldata 'int'
| | `-FullComment 0x1ee5d100 <col:37, col:86>
| |   `-ParagraphComment 0x1ee5d0d0 <col:37, col:86>
| |     `-TextComment 0x1ee5d0a0 <col:37, col:86> Text=" number of shell fragment vertex ids in all flexes"
| |-FieldDecl 0x1ee24d20 <line:614:3, col:7> col:7 nflexevpair 'int'
| | `-FullComment 0x1ee5d1d0 <col:37, col:81>
| |   `-ParagraphComment 0x1ee5d1a0 <col:37, col:81>
| |     `-TextComment 0x1ee5d170 <col:37, col:81> Text=" number of element-vertex pairs in all flexes"
| |-FieldDecl 0x1ee24db0 <line:615:3, col:7> col:7 nflextexcoord 'int'
| | `-FullComment 0x1ee5d2a0 <col:37, col:80>
| |   `-ParagraphComment 0x1ee5d270 <col:37, col:80>
| |     `-TextComment 0x1ee5d240 <col:37, col:80> Text=" number of vertices with texture coordinates"
| |-FieldDecl 0x1ee24e40 <line:616:3, col:7> col:7 nmesh 'int'
| | `-FullComment 0x1ee5d370 <col:37, col:53>
| |   `-ParagraphComment 0x1ee5d340 <col:37, col:53>
| |     `-TextComment 0x1ee5d310 <col:37, col:53> Text=" number of meshes"
| |-FieldDecl 0x1ee24ed0 <line:617:3, col:7> col:7 nmeshvert 'int'
| | `-FullComment 0x1ee5d440 <col:37, col:69>
| |   `-ParagraphComment 0x1ee5d410 <col:37, col:69>
| |     `-TextComment 0x1ee5d3e0 <col:37, col:69> Text=" number of vertices in all meshes"
| |-FieldDecl 0x1ee24f60 <line:618:3, col:7> col:7 nmeshnormal 'int'
| | `-FullComment 0x1ee5d510 <col:37, col:68>
| |   `-ParagraphComment 0x1ee5d4e0 <col:37, col:68>
| |     `-TextComment 0x1ee5d4b0 <col:37, col:68> Text=" number of normals in all meshes"
| |-FieldDecl 0x1ee24ff0 <line:619:3, col:7> col:7 nmeshtexcoord 'int'
| | `-FullComment 0x1ee5d5e0 <col:37, col:70>
| |   `-ParagraphComment 0x1ee5d5b0 <col:37, col:70>
| |     `-TextComment 0x1ee5d580 <col:37, col:70> Text=" number of texcoords in all meshes"
| |-FieldDecl 0x1ee25080 <line:620:3, col:7> col:7 nmeshface 'int'
| | `-FullComment 0x1ee5d6b0 <col:37, col:77>
| |   `-ParagraphComment 0x1ee5d680 <col:37, col:77>
| |     `-TextComment 0x1ee5d650 <col:37, col:77> Text=" number of triangular faces in all meshes"
| |-FieldDecl 0x1ee25110 <line:621:3, col:7> col:7 nmeshgraph 'int'
| | `-FullComment 0x1ee5d780 <col:37, col:74>
| |   `-ParagraphComment 0x1ee5d750 <col:37, col:74>
| |     `-TextComment 0x1ee5d720 <col:37, col:74> Text=" number of ints in mesh auxiliary data"
| |-FieldDecl 0x1ee251a0 <line:622:3, col:7> col:7 nskin 'int'
| | `-FullComment 0x1ee5d850 <col:37, col:52>
| |   `-ParagraphComment 0x1ee5d820 <col:37, col:52>
| |     `-TextComment 0x1ee5d7f0 <col:37, col:52> Text=" number of skins"
| |-FieldDecl 0x1ee25230 <line:623:3, col:7> col:7 nskinvert 'int'
| | `-FullComment 0x1ee5d920 <col:37, col:68>
| |   `-ParagraphComment 0x1ee5d8f0 <col:37, col:68>
| |     `-TextComment 0x1ee5d8c0 <col:37, col:68> Text=" number of vertices in all skins"
| |-FieldDecl 0x1ee252c0 <line:624:3, col:7> col:7 nskintexvert 'int'
| | `-FullComment 0x1ee5d9f0 <col:37, col:82>
| |   `-ParagraphComment 0x1ee5d9c0 <col:37, col:82>
| |     `-TextComment 0x1ee5d990 <col:37, col:82> Text=" number of vertiex with texcoords in all skins"
| |-FieldDecl 0x1ee25350 <line:625:3, col:7> col:7 nskinface 'int'
| | `-FullComment 0x1ee5dae0 <col:37, col:76>
| |   `-ParagraphComment 0x1ee5dab0 <col:37, col:76>
| |     `-TextComment 0x1ee5da80 <col:37, col:76> Text=" number of triangular faces in all skins"
| |-FieldDecl 0x1ee253e0 <line:626:3, col:7> col:7 nskinbone 'int'
| | `-FullComment 0x1ee5dbb0 <col:37, col:65>
| |   `-ParagraphComment 0x1ee5db80 <col:37, col:65>
| |     `-TextComment 0x1ee5db50 <col:37, col:65> Text=" number of bones in all skins"
| |-FieldDecl 0x1ee25470 <line:627:3, col:7> col:7 nskinbonevert 'int'
| | `-FullComment 0x1ee5dc80 <col:37, col:73>
| |   `-ParagraphComment 0x1ee5dc50 <col:37, col:73>
| |     `-TextComment 0x1ee5dc20 <col:37, col:73> Text=" number of vertices in all skin bones"
| |-FieldDecl 0x1ee25500 <line:628:3, col:7> col:7 nhfield 'int'
| | `-FullComment 0x1ee5dd50 <col:37, col:59>
| |   `-ParagraphComment 0x1ee5dd20 <col:37, col:59>
| |     `-TextComment 0x1ee5dcf0 <col:37, col:59> Text=" number of heightfields"
| |-FieldDecl 0x1ee25590 <line:629:3, col:7> col:7 nhfielddata 'int'
| | `-FullComment 0x1ee5de20 <col:37, col:78>
| |   `-ParagraphComment 0x1ee5ddf0 <col:37, col:78>
| |     `-TextComment 0x1ee5ddc0 <col:37, col:78> Text=" number of data points in all heightfields"
| |-FieldDecl 0x1ee25620 <line:630:3, col:7> col:7 ntex 'int'
| | `-FullComment 0x1ee5def0 <col:37, col:55>
| |   `-ParagraphComment 0x1ee5dec0 <col:37, col:55>
| |     `-TextComment 0x1ee5de90 <col:37, col:55> Text=" number of textures"
| |-FieldDecl 0x1ee256b0 <line:631:3, col:7> col:7 ntexdata 'int'
| | `-FullComment 0x1ee5dfc0 <col:37, col:72>
| |   `-ParagraphComment 0x1ee5df90 <col:37, col:72>
| |     `-TextComment 0x1ee5df60 <col:37, col:72> Text=" number of bytes in texture rgb data"
| |-FieldDecl 0x1ee25740 <line:632:3, col:7> col:7 nmat 'int'
| | `-FullComment 0x1ee5e090 <col:37, col:56>
| |   `-ParagraphComment 0x1ee5e060 <col:37, col:56>
| |     `-TextComment 0x1ee5e030 <col:37, col:56> Text=" number of materials"
| |-FieldDecl 0x1ee257d0 <line:633:3, col:7> col:7 npair 'int'
| | `-FullComment 0x1ee5e160 <col:37, col:68>
| |   `-ParagraphComment 0x1ee5e130 <col:37, col:68>
| |     `-TextComment 0x1ee5e100 <col:37, col:68> Text=" number of predefined geom pairs"
| |-FieldDecl 0x1ee263c0 <line:634:3, col:7> col:7 nexclude 'int'
| | `-FullComment 0x1ee5e230 <col:37, col:66>
| |   `-ParagraphComment 0x1ee5e200 <col:37, col:66>
| |     `-TextComment 0x1ee5e1d0 <col:37, col:66> Text=" number of excluded geom pairs"
| |-FieldDecl 0x1ee26450 <line:635:3, col:7> col:7 neq 'int'
| | `-FullComment 0x1ee5e300 <col:37, col:67>
| |   `-ParagraphComment 0x1ee5e2d0 <col:37, col:67>
| |     `-TextComment 0x1ee5e2a0 <col:37, col:67> Text=" number of equality constraints"
| |-FieldDecl 0x1ee264e0 <line:636:3, col:7> col:7 ntendon 'int'
| | `-FullComment 0x1ee5e3d0 <col:37, col:54>
| |   `-ParagraphComment 0x1ee5e3a0 <col:37, col:54>
| |     `-TextComment 0x1ee5e370 <col:37, col:54> Text=" number of tendons"
| |-FieldDecl 0x1ee26570 <line:637:3, col:7> col:7 nwrap 'int'
| | `-FullComment 0x1ee5e4a0 <col:37, col:79>
| |   `-ParagraphComment 0x1ee5e470 <col:37, col:79>
| |     `-TextComment 0x1ee5e440 <col:37, col:79> Text=" number of wrap objects in all tendon paths"
| |-FieldDecl 0x1ee26600 <line:638:3, col:7> col:7 nsensor 'int'
| | `-FullComment 0x1ee5e570 <col:37, col:54>
| |   `-ParagraphComment 0x1ee5e540 <col:37, col:54>
| |     `-TextComment 0x1ee5e510 <col:37, col:54> Text=" number of sensors"
| |-FieldDecl 0x1ee26690 <line:639:3, col:7> col:7 nnumeric 'int'
| | `-FullComment 0x1ee5e640 <col:37, col:68>
| |   `-ParagraphComment 0x1ee5e610 <col:37, col:68>
| |     `-TextComment 0x1ee5e5e0 <col:37, col:68> Text=" number of numeric custom fields"
| |-FieldDecl 0x1ee26720 <line:640:3, col:7> col:7 nnumericdata 'int'
| | `-FullComment 0x1ee5e710 <col:37, col:76>
| |   `-ParagraphComment 0x1ee5e6e0 <col:37, col:76>
| |     `-TextComment 0x1ee5e6b0 <col:37, col:76> Text=" number of mjtNums in all numeric fields"
| |-FieldDecl 0x1ee267b0 <line:641:3, col:7> col:7 ntext 'int'
| | `-FullComment 0x1ee5e7e0 <col:37, col:65>
| |   `-ParagraphComment 0x1ee5e7b0 <col:37, col:65>
| |     `-TextComment 0x1ee5e780 <col:37, col:65> Text=" number of text custom fields"
| |-FieldDecl 0x1ee26840 <line:642:3, col:7> col:7 ntextdata 'int'
| | `-FullComment 0x1ee5e8b0 <col:37, col:74>
| |   `-ParagraphComment 0x1ee5e880 <col:37, col:74>
| |     `-TextComment 0x1ee5e850 <col:37, col:74> Text=" number of mjtBytes in all text fields"
| |-FieldDecl 0x1ee268d0 <line:643:3, col:7> col:7 ntuple 'int'
| | `-FullComment 0x1ee5e980 <col:37, col:66>
| |   `-ParagraphComment 0x1ee5e950 <col:37, col:66>
| |     `-TextComment 0x1ee5e920 <col:37, col:66> Text=" number of tuple custom fields"
| |-FieldDecl 0x1ee26960 <line:644:3, col:7> col:7 ntupledata 'int'
| | `-FullComment 0x1ee5ea50 <col:37, col:74>
| |   `-ParagraphComment 0x1ee5ea20 <col:37, col:74>
| |     `-TextComment 0x1ee5e9f0 <col:37, col:74> Text=" number of objects in all tuple fields"
| |-FieldDecl 0x1ee269f0 <line:645:3, col:7> col:7 nkey 'int'
| | `-FullComment 0x1ee53a90 <col:37, col:56>
| |   `-ParagraphComment 0x1ee53a60 <col:37, col:56>
| |     `-TextComment 0x1ee53a30 <col:37, col:56> Text=" number of keyframes"
| |-FieldDecl 0x1ee26a80 <line:646:3, col:7> col:7 nmocap 'int'
| | `-FullComment 0x1ee53b60 <col:37, col:59>
| |   `-ParagraphComment 0x1ee53b30 <col:37, col:59>
| |     `-TextComment 0x1ee53b00 <col:37, col:59> Text=" number of mocap bodies"
| |-FieldDecl 0x1ee26b10 <line:647:3, col:7> col:7 nplugin 'int'
| | `-FullComment 0x1ee53c30 <col:37, col:63>
| |   `-ParagraphComment 0x1ee53c00 <col:37, col:63>
| |     `-TextComment 0x1ee53bd0 <col:37, col:63> Text=" number of plugin instances"
| |-FieldDecl 0x1ee26ba0 <line:648:3, col:7> col:7 npluginattr 'int'
| | `-FullComment 0x1ee53d00 <col:37, col:84>
| |   `-ParagraphComment 0x1ee53cd0 <col:37, col:84>
| |     `-TextComment 0x1ee53ca0 <col:37, col:84> Text=" number of chars in all plugin config attributes"
| |-FieldDecl 0x1ee26c30 <line:649:3, col:7> col:7 nuser_body 'int'
| | `-FullComment 0x1ee53dd0 <col:37, col:67>
| |   `-ParagraphComment 0x1ee53da0 <col:37, col:67>
| |     `-TextComment 0x1ee53d70 <col:37, col:67> Text=" number of mjtNums in body_user"
| |-FieldDecl 0x1ee26cc0 <line:650:3, col:7> col:7 nuser_jnt 'int'
| | `-FullComment 0x1ee53ea0 <col:37, col:66>
| |   `-ParagraphComment 0x1ee53e70 <col:37, col:66>
| |     `-TextComment 0x1ee53e40 <col:37, col:66> Text=" number of mjtNums in jnt_user"
| |-FieldDecl 0x1ee26d50 <line:651:3, col:7> col:7 nuser_geom 'int'
| | `-FullComment 0x1ee53f70 <col:37, col:67>
| |   `-ParagraphComment 0x1ee53f40 <col:37, col:67>
| |     `-TextComment 0x1ee53f10 <col:37, col:67> Text=" number of mjtNums in geom_user"
| |-FieldDecl 0x1ee26de0 <line:652:3, col:7> col:7 nuser_site 'int'
| | `-FullComment 0x1ee54040 <col:37, col:67>
| |   `-ParagraphComment 0x1ee54010 <col:37, col:67>
| |     `-TextComment 0x1ee53fe0 <col:37, col:67> Text=" number of mjtNums in site_user"
| |-FieldDecl 0x1ee26e70 <line:653:3, col:7> col:7 nuser_cam 'int'
| | `-FullComment 0x1ee54110 <col:37, col:66>
| |   `-ParagraphComment 0x1ee540e0 <col:37, col:66>
| |     `-TextComment 0x1ee540b0 <col:37, col:66> Text=" number of mjtNums in cam_user"
| |-FieldDecl 0x1ee26f00 <line:654:3, col:7> col:7 nuser_tendon 'int'
| | `-FullComment 0x1ee541e0 <col:37, col:69>
| |   `-ParagraphComment 0x1ee541b0 <col:37, col:69>
| |     `-TextComment 0x1ee54180 <col:37, col:69> Text=" number of mjtNums in tendon_user"
| |-FieldDecl 0x1ee26f90 <line:655:3, col:7> col:7 nuser_actuator 'int'
| | `-FullComment 0x1ee542b0 <col:37, col:71>
| |   `-ParagraphComment 0x1ee54280 <col:37, col:71>
| |     `-TextComment 0x1ee54250 <col:37, col:71> Text=" number of mjtNums in actuator_user"
| |-FieldDecl 0x1ee27020 <line:656:3, col:7> col:7 nuser_sensor 'int'
| | `-FullComment 0x1ee54380 <col:37, col:69>
| |   `-ParagraphComment 0x1ee54350 <col:37, col:69>
| |     `-TextComment 0x1ee54320 <col:37, col:69> Text=" number of mjtNums in sensor_user"
| |-FieldDecl 0x1ee270b0 <line:657:3, col:7> col:7 nnames 'int'
| | `-FullComment 0x1ee54450 <col:37, col:65>
| |   `-ParagraphComment 0x1ee54420 <col:37, col:65>
| |     `-TextComment 0x1ee543f0 <col:37, col:65> Text=" number of chars in all names"
| |-FieldDecl 0x1ee27140 <line:658:3, col:7> col:7 nnames_map 'int'
| | `-FullComment 0x1ee54520 <col:37, col:74>
| |   `-ParagraphComment 0x1ee544f0 <col:37, col:74>
| |     `-TextComment 0x1ee544c0 <col:37, col:74> Text=" number of slots in the names hash map"
| |-FieldDecl 0x1ee271d0 <line:659:3, col:7> col:7 npaths 'int'
| | `-FullComment 0x1ee545f0 <col:37, col:65>
| |   `-ParagraphComment 0x1ee545c0 <col:37, col:65>
| |     `-TextComment 0x1ee54590 <col:37, col:65> Text=" number of chars in all paths"
| |-FieldDecl 0x1ee27290 <line:662:3, col:7> col:7 nM 'int'
| | `-FullComment 0x1ee546c0 <col:37, col:81>
| |   `-ParagraphComment 0x1ee54690 <col:37, col:81>
| |     `-TextComment 0x1ee54660 <col:37, col:81> Text=" number of non-zeros in sparse inertia matrix"
| |-FieldDecl 0x1ee27320 <line:663:3, col:7> col:7 nB 'int'
| | `-FullComment 0x1ee54790 <col:37, col:82>
| |   `-ParagraphComment 0x1ee54760 <col:37, col:82>
| |     `-TextComment 0x1ee54730 <col:37, col:82> Text=" number of non-zeros in sparse body-dof matrix"
| |-FieldDecl 0x1ee27b10 <line:664:3, col:7> col:7 nC 'int'
| | `-FullComment 0x1ee54860 <col:37, col:89>
| |   `-ParagraphComment 0x1ee54830 <col:37, col:89>
| |     `-TextComment 0x1ee54800 <col:37, col:89> Text=" number of non-zeros in sparse reduced dof-dof matrix"
| |-FieldDecl 0x1ee27ba0 <line:665:3, col:7> col:7 nD 'int'
| | `-FullComment 0x1ee54930 <col:37, col:81>
| |   `-ParagraphComment 0x1ee54900 <col:37, col:81>
| |     `-TextComment 0x1ee548d0 <col:37, col:81> Text=" number of non-zeros in sparse dof-dof matrix"
| |-FieldDecl 0x1ee27c30 <line:666:3, col:7> col:7 ntree 'int'
| | `-FullComment 0x1ee62ab0 <col:37, col:79>
| |   `-ParagraphComment 0x1ee549d0 <col:37, col:79>
| |     `-TextComment 0x1ee549a0 <col:37, col:79> Text=" number of kinematic trees under world body"
| |-FieldDecl 0x1ee27cc0 <line:667:3, col:7> col:7 ngravcomp 'int'
| | `-FullComment 0x1ee62b80 <col:37, col:75>
| |   `-ParagraphComment 0x1ee62b50 <col:37, col:75>
| |     `-TextComment 0x1ee62b20 <col:37, col:75> Text=" number of bodies with nonzero gravcomp"
| |-FieldDecl 0x1ee27d50 <line:668:3, col:7> col:7 nemax 'int'
| | `-FullComment 0x1ee62c50 <col:37, col:81>
| |   `-ParagraphComment 0x1ee62c20 <col:37, col:81>
| |     `-TextComment 0x1ee62bf0 <col:37, col:81> Text=" number of potential equality-constraint rows"
| |-FieldDecl 0x1ee27de0 <line:669:3, col:7> col:7 njmax 'int'
| | `-FullComment 0x1ee62d20 <col:37, col:84>
| |   `-ParagraphComment 0x1ee62cf0 <col:37, col:84>
| |     `-TextComment 0x1ee62cc0 <col:37, col:84> Text=" number of available rows in constraint Jacobian"
| |-FieldDecl 0x1ee27e70 <line:670:3, col:7> col:7 nconmax 'int'
| | `-FullComment 0x1ee62df0 <col:37, col:81>
| |   `-ParagraphComment 0x1ee62dc0 <col:37, col:81>
| |     `-TextComment 0x1ee62d90 <col:37, col:81> Text=" number of potential contacts in contact list"
| |-FieldDecl 0x1ee27f00 <line:671:3, col:7> col:7 nuserdata 'int'
| | `-FullComment 0x1ee62ec0 <col:37, col:76>
| |   `-ParagraphComment 0x1ee62e90 <col:37, col:76>
| |     `-TextComment 0x1ee62e60 <col:37, col:76> Text=" number of mjtNums reserved for the user"
| |-FieldDecl 0x1ee27f90 <line:672:3, col:7> col:7 nsensordata 'int'
| | `-FullComment 0x1ee62f90 <col:37, col:76>
| |   `-ParagraphComment 0x1ee62f60 <col:37, col:76>
| |     `-TextComment 0x1ee62f30 <col:37, col:76> Text=" number of mjtNums in sensor data vector"
| |-FieldDecl 0x1ee28020 <line:673:3, col:7> col:7 npluginstate 'int'
| | `-FullComment 0x1ee63060 <col:37, col:77>
| |   `-ParagraphComment 0x1ee63030 <col:37, col:77>
| |     `-TextComment 0x1ee63000 <col:37, col:77> Text=" number of mjtNums in plugin state vector"
| |-FieldDecl 0x1ee280d0 <line:675:3, col:10> col:10 narena 'size_t':'unsigned long'
| | `-FullComment 0x1ee63130 <col:37, col:93>
| |   `-ParagraphComment 0x1ee63100 <col:37, col:93>
| |     `-TextComment 0x1ee630d0 <col:37, col:93> Text=" number of bytes in the mjData arena (inclusive of stack)"
| |-FieldDecl 0x1ee28158 <line:676:3, col:10> col:10 nbuffer 'size_t':'unsigned long'
| | `-FullComment 0x1ee63200 <col:37, col:62>
| |   `-ParagraphComment 0x1ee631d0 <col:37, col:62>
| |     `-TextComment 0x1ee631a0 <col:37, col:62> Text=" number of bytes in buffer"
| |-FieldDecl 0x1ee28240 <line:680:3, col:12> col:12 opt 'mjOption':'struct mjOption_'
| | `-FullComment 0x1ee632d0 <col:37, col:52>
| |   `-ParagraphComment 0x1ee632a0 <col:37, col:52>
| |     `-TextComment 0x1ee63270 <col:37, col:52> Text=" physics options"
| |-FieldDecl 0x1ee282f0 <line:681:3, col:12> col:12 vis 'mjVisual':'struct mjVisual_'
| | `-FullComment 0x1ee633a0 <col:37, col:58>
| |   `-ParagraphComment 0x1ee63370 <col:37, col:58>
| |     `-TextComment 0x1ee63340 <col:37, col:58> Text=" visualization options"
| |-FieldDecl 0x1ee283a0 <line:682:3, col:15> col:15 stat 'mjStatistic':'struct mjStatistic_'
| | `-FullComment 0x1ee63470 <col:37, col:53>
| |   `-ParagraphComment 0x1ee63440 <col:37, col:53>
| |     `-TextComment 0x1ee63410 <col:37, col:53> Text=" model statistics"
| |-FieldDecl 0x1ee28490 <line:687:3, col:13> col:13 buffer 'void *'
| | `-FullComment 0x1ee63540 <col:37, col:87>
| |   `-ParagraphComment 0x1ee63510 <col:37, col:87>
| |     `-TextComment 0x1ee634e0 <col:37, col:87> Text=" main buffer; all pointers point in it    (nbuffer)"
| |-FieldDecl 0x1ee285a8 <line:690:3, col:13> col:13 qpos0 'mjtNum *'
| | `-FullComment 0x1ee63610 <col:37, col:86>
| |   `-ParagraphComment 0x1ee635e0 <col:37, col:86>
| |     `-TextComment 0x1ee635b0 <col:37, col:86> Text=" qpos values at default pose              (nq x 1)"
| |-FieldDecl 0x1ee28638 <line:691:3, col:13> col:13 qpos_spring 'mjtNum *'
| | `-FullComment 0x1ee636e0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee636b0 <col:37, col:86>
| |     `-TextComment 0x1ee63680 <col:37, col:86> Text=" reference pose for springs               (nq x 1)"
| |-FieldDecl 0x1ee28730 <line:694:3, col:13> col:13 body_parentid 'int *'
| | `-FullComment 0x1ee637b0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63780 <col:37, col:89>
| |     `-TextComment 0x1ee63750 <col:37, col:89> Text=" id of body's parent                      (nbody x 1)"
| |-FieldDecl 0x1ee287c0 <line:695:3, col:13> col:13 body_rootid 'int *'
| | `-FullComment 0x1ee63880 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63850 <col:37, col:89>
| |     `-TextComment 0x1ee63820 <col:37, col:89> Text=" id of root above body                    (nbody x 1)"
| |-FieldDecl 0x1ee28850 <line:696:3, col:13> col:13 body_weldid 'int *'
| | `-FullComment 0x1ee63950 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63920 <col:37, col:89>
| |     `-TextComment 0x1ee638f0 <col:37, col:89> Text=" id of body that this body is welded to   (nbody x 1)"
| |-FieldDecl 0x1ee288e0 <line:697:3, col:13> col:13 body_mocapid 'int *'
| | `-FullComment 0x1ee63a20 <col:37, col:89>
| |   `-ParagraphComment 0x1ee639f0 <col:37, col:89>
| |     `-TextComment 0x1ee639c0 <col:37, col:89> Text=" id of mocap data; -1: none               (nbody x 1)"
| |-FieldDecl 0x1ee28970 <line:698:3, col:13> col:13 body_jntnum 'int *'
| | `-FullComment 0x1ee63b10 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63ae0 <col:37, col:89>
| |     `-TextComment 0x1ee63ab0 <col:37, col:89> Text=" number of joints for this body           (nbody x 1)"
| |-FieldDecl 0x1ee28a00 <line:699:3, col:13> col:13 body_jntadr 'int *'
| | `-FullComment 0x1ee63be0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63bb0 <col:37, col:89>
| |     `-TextComment 0x1ee63b80 <col:37, col:89> Text=" start addr of joints; -1: no joints      (nbody x 1)"
| |-FieldDecl 0x1ee28a90 <line:700:3, col:13> col:13 body_dofnum 'int *'
| | `-FullComment 0x1ee63cb0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63c80 <col:37, col:89>
| |     `-TextComment 0x1ee63c50 <col:37, col:89> Text=" number of motion degrees of freedom      (nbody x 1)"
| |-FieldDecl 0x1ee292b8 <line:701:3, col:13> col:13 body_dofadr 'int *'
| | `-FullComment 0x1ee63d80 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63d50 <col:37, col:89>
| |     `-TextComment 0x1ee63d20 <col:37, col:89> Text=" start addr of dofs; -1: no dofs          (nbody x 1)"
| |-FieldDecl 0x1ee29350 <line:702:3, col:13> col:13 body_treeid 'int *'
| | `-FullComment 0x1ee63e50 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63e20 <col:37, col:89>
| |     `-TextComment 0x1ee63df0 <col:37, col:89> Text=" id of body's kinematic tree; -1: static  (nbody x 1)"
| |-FieldDecl 0x1ee293e0 <line:703:3, col:13> col:13 body_geomnum 'int *'
| | `-FullComment 0x1ee63f20 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63ef0 <col:37, col:89>
| |     `-TextComment 0x1ee63ec0 <col:37, col:89> Text=" number of geoms                          (nbody x 1)"
| |-FieldDecl 0x1ee29470 <line:704:3, col:13> col:13 body_geomadr 'int *'
| | `-FullComment 0x1ee63ff0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee63fc0 <col:37, col:89>
| |     `-TextComment 0x1ee63f90 <col:37, col:89> Text=" start addr of geoms; -1: no geoms        (nbody x 1)"
| |-FieldDecl 0x1ee29578 <line:705:3, col:13> col:13 body_simple 'mjtByte *'
| | `-FullComment 0x1ee640c0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64090 <col:37, col:89>
| |     `-TextComment 0x1ee64060 <col:37, col:89> Text=" 1: diag M; 2: diag M, sliders only       (nbody x 1)"
| |-FieldDecl 0x1ee29608 <line:706:3, col:13> col:13 body_sameframe 'mjtByte *'
| | `-FullComment 0x1ee64190 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64160 <col:37, col:89>
| |     `-TextComment 0x1ee64130 <col:37, col:89> Text=" same frame as inertia (mjtSameframe)     (nbody x 1)"
| |-FieldDecl 0x1ee29698 <line:707:3, col:13> col:13 body_pos 'mjtNum *'
| | `-FullComment 0x1ee64260 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64230 <col:37, col:89>
| |     `-TextComment 0x1ee64200 <col:37, col:89> Text=" position offset rel. to parent body      (nbody x 3)"
| |-FieldDecl 0x1ee29728 <line:708:3, col:13> col:13 body_quat 'mjtNum *'
| | `-FullComment 0x1ee64330 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64300 <col:37, col:89>
| |     `-TextComment 0x1ee642d0 <col:37, col:89> Text=" orientation offset rel. to parent body   (nbody x 4)"
| |-FieldDecl 0x1ee297b8 <line:709:3, col:13> col:13 body_ipos 'mjtNum *'
| | `-FullComment 0x1ee64400 <col:37, col:89>
| |   `-ParagraphComment 0x1ee643d0 <col:37, col:89>
| |     `-TextComment 0x1ee643a0 <col:37, col:89> Text=" local position of center of mass         (nbody x 3)"
| |-FieldDecl 0x1ee29848 <line:710:3, col:13> col:13 body_iquat 'mjtNum *'
| | `-FullComment 0x1ee644d0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee644a0 <col:37, col:89>
| |     `-TextComment 0x1ee64470 <col:37, col:89> Text=" local orientation of inertia ellipsoid   (nbody x 4)"
| |-FieldDecl 0x1ee298d8 <line:711:3, col:13> col:13 body_mass 'mjtNum *'
| | `-FullComment 0x1ee645a0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64570 <col:37, col:89>
| |     `-TextComment 0x1ee64540 <col:37, col:89> Text=" mass                                     (nbody x 1)"
| |-FieldDecl 0x1ee29968 <line:712:3, col:13> col:13 body_subtreemass 'mjtNum *'
| | `-FullComment 0x1ee64670 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64640 <col:37, col:89>
| |     `-TextComment 0x1ee64610 <col:37, col:89> Text=" mass of subtree starting at this body    (nbody x 1)"
| |-FieldDecl 0x1ee299f8 <line:713:3, col:13> col:13 body_inertia 'mjtNum *'
| | `-FullComment 0x1ee64740 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64710 <col:37, col:89>
| |     `-TextComment 0x1ee646e0 <col:37, col:89> Text=" diagonal inertia in ipos/iquat frame     (nbody x 3)"
| |-FieldDecl 0x1ee29a88 <line:714:3, col:13> col:13 body_invweight0 'mjtNum *'
| | `-FullComment 0x1ee64810 <col:37, col:89>
| |   `-ParagraphComment 0x1ee647e0 <col:37, col:89>
| |     `-TextComment 0x1ee647b0 <col:37, col:89> Text=" mean inv inert in qpos0 (trn, rot)       (nbody x 2)"
| |-FieldDecl 0x1ee29b18 <line:715:3, col:13> col:13 body_gravcomp 'mjtNum *'
| | `-FullComment 0x1ee648e0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee648b0 <col:37, col:89>
| |     `-TextComment 0x1ee64880 <col:37, col:89> Text=" antigravity force, units of body weight  (nbody x 1)"
| |-FieldDecl 0x1ee29ba8 <line:716:3, col:13> col:13 body_margin 'mjtNum *'
| | `-FullComment 0x1ee649b0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64980 <col:37, col:89>
| |     `-TextComment 0x1ee64950 <col:37, col:89> Text=" MAX over all geom margins                (nbody x 1)"
| |-FieldDecl 0x1ee29c38 <line:717:3, col:13> col:13 body_user 'mjtNum *'
| | `-FullComment 0x1ee64a80 <col:37, col:98>
| |   `-ParagraphComment 0x1ee64a50 <col:37, col:98>
| |     `-TextComment 0x1ee64a20 <col:37, col:98> Text=" user data                                (nbody x nuser_body)"
| |-FieldDecl 0x1ee29cd0 <line:718:3, col:13> col:13 body_plugin 'int *'
| | `-FullComment 0x1ee64b60 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64b30 <col:37, col:89>
| |     `-TextComment 0x1ee64b00 <col:37, col:89> Text=" plugin instance id; -1: not in use       (nbody x 1)"
| |-FieldDecl 0x1ee29d60 <line:719:3, col:13> col:13 body_contype 'int *'
| | `-FullComment 0x1ee64c30 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64c00 <col:37, col:89>
| |     `-TextComment 0x1ee64bd0 <col:37, col:89> Text=" OR over all geom contypes                (nbody x 1)"
| |-FieldDecl 0x1ee29df0 <line:720:3, col:13> col:13 body_conaffinity 'int *'
| | `-FullComment 0x1ee64d00 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64cd0 <col:37, col:89>
| |     `-TextComment 0x1ee64ca0 <col:37, col:89> Text=" OR over all geom conaffinities           (nbody x 1)"
| |-FieldDecl 0x1ee29e80 <line:721:3, col:13> col:13 body_bvhadr 'int *'
| | `-FullComment 0x1ee64dd0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64da0 <col:37, col:89>
| |     `-TextComment 0x1ee64d70 <col:37, col:89> Text=" address of bvh root                      (nbody x 1)"
| |-FieldDecl 0x1ee29f10 <line:722:3, col:13> col:13 body_bvhnum 'int *'
| | `-FullComment 0x1ee64ea0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee64e70 <col:37, col:89>
| |     `-TextComment 0x1ee64e40 <col:37, col:89> Text=" number of bounding volumes               (nbody x 1)"
| |-FieldDecl 0x1ee29fd0 <line:725:3, col:13> col:13 bvh_depth 'int *'
| | `-FullComment 0x1ee64f70 <col:37, col:88>
| |   `-ParagraphComment 0x1ee64f40 <col:37, col:88>
| |     `-TextComment 0x1ee64f10 <col:37, col:88> Text=" depth in the bounding volume hierarchy   (nbvh x 1)"
| |-FieldDecl 0x1ee2a060 <line:726:3, col:13> col:13 bvh_child 'int *'
| | `-FullComment 0x1ee65040 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65010 <col:37, col:88>
| |     `-TextComment 0x1ee64fe0 <col:37, col:88> Text=" left and right children in tree          (nbvh x 2)"
| |-FieldDecl 0x1ee2a0f0 <line:727:3, col:13> col:13 bvh_nodeid 'int *'
| | `-FullComment 0x1ee65110 <col:37, col:88>
| |   `-ParagraphComment 0x1ee650e0 <col:37, col:88>
| |     `-TextComment 0x1ee650b0 <col:37, col:88> Text=" geom or elem id of node; -1: non-leaf    (nbvh x 1)"
| |-FieldDecl 0x1ee2a178 <line:728:3, col:13> col:13 bvh_aabb 'mjtNum *'
| | `-FullComment 0x1ee651e0 <col:37, col:94>
| |   `-ParagraphComment 0x1ee651b0 <col:37, col:94>
| |     `-TextComment 0x1ee65180 <col:37, col:94> Text=" local bounding box (center, size)        (nbvhstatic x 6)"
| |-FieldDecl 0x1ee2a240 <line:731:3, col:13> col:13 jnt_type 'int *'
| | `-FullComment 0x1ee652b0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65280 <col:37, col:88>
| |     `-TextComment 0x1ee65250 <col:37, col:88> Text=" type of joint (mjtJoint)                 (njnt x 1)"
| |-FieldDecl 0x1ee2b200 <line:732:3, col:13> col:13 jnt_qposadr 'int *'
| | `-FullComment 0x1ee65380 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65350 <col:37, col:88>
| |     `-TextComment 0x1ee65320 <col:37, col:88> Text=" start addr in 'qpos' for joint's data    (njnt x 1)"
| |-FieldDecl 0x1ee2b290 <line:733:3, col:13> col:13 jnt_dofadr 'int *'
| | `-FullComment 0x1ee65450 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65420 <col:37, col:88>
| |     `-TextComment 0x1ee653f0 <col:37, col:88> Text=" start addr in 'qvel' for joint's data    (njnt x 1)"
| |-FieldDecl 0x1ee2b320 <line:734:3, col:13> col:13 jnt_bodyid 'int *'
| | `-FullComment 0x1ee65520 <col:37, col:88>
| |   `-ParagraphComment 0x1ee654f0 <col:37, col:88>
| |     `-TextComment 0x1ee654c0 <col:37, col:88> Text=" id of joint's body                       (njnt x 1)"
| |-FieldDecl 0x1ee2b3b0 <line:735:3, col:13> col:13 jnt_group 'int *'
| | `-FullComment 0x1ee655f0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee655c0 <col:37, col:88>
| |     `-TextComment 0x1ee65590 <col:37, col:88> Text=" group for visibility                     (njnt x 1)"
| |-FieldDecl 0x1ee2b438 <line:736:3, col:13> col:13 jnt_limited 'mjtByte *'
| | `-FullComment 0x1ee656c0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65690 <col:37, col:88>
| |     `-TextComment 0x1ee65660 <col:37, col:88> Text=" does joint have limits                   (njnt x 1)"
| |-FieldDecl 0x1ee2b4c8 <line:737:3, col:13> col:13 jnt_actfrclimited 'mjtByte *'
| | `-FullComment 0x1ee65790 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65760 <col:37, col:88>
| |     `-TextComment 0x1ee65730 <col:37, col:88> Text=" does joint have actuator force limits    (njnt x 1)"
| |-FieldDecl 0x1ee2b558 <line:738:3, col:13> col:13 jnt_actgravcomp 'mjtByte *'
| | `-FullComment 0x1ee65860 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65830 <col:37, col:88>
| |     `-TextComment 0x1ee65800 <col:37, col:88> Text=" is gravcomp force applied via actuators  (njnt x 1)"
| |-FieldDecl 0x1ee2b5e8 <line:739:3, col:13> col:13 jnt_solref 'mjtNum *'
| | `-FullComment 0x1ee65930 <col:37, col:93>
| |   `-ParagraphComment 0x1ee65900 <col:37, col:93>
| |     `-TextComment 0x1ee658d0 <col:37, col:93> Text=" constraint solver reference: limit       (njnt x mjNREF)"
| |-FieldDecl 0x1ee2b678 <line:740:3, col:13> col:13 jnt_solimp 'mjtNum *'
| | `-FullComment 0x1ee65a00 <col:37, col:93>
| |   `-ParagraphComment 0x1ee659d0 <col:37, col:93>
| |     `-TextComment 0x1ee659a0 <col:37, col:93> Text=" constraint solver impedance: limit       (njnt x mjNIMP)"
| |-FieldDecl 0x1ee2b708 <line:741:3, col:13> col:13 jnt_pos 'mjtNum *'
| | `-FullComment 0x1ee65ae0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65aa0 <col:37, col:88>
| |     `-TextComment 0x1ee65a70 <col:37, col:88> Text=" local anchor position                    (njnt x 3)"
| |-FieldDecl 0x1ee2b798 <line:742:3, col:13> col:13 jnt_axis 'mjtNum *'
| | `-FullComment 0x1ee65bb0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65b80 <col:37, col:88>
| |     `-TextComment 0x1ee65b50 <col:37, col:88> Text=" local joint axis                         (njnt x 3)"
| |-FieldDecl 0x1ee2b828 <line:743:3, col:13> col:13 jnt_stiffness 'mjtNum *'
| | `-FullComment 0x1ee65c80 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65c50 <col:37, col:88>
| |     `-TextComment 0x1ee65c20 <col:37, col:88> Text=" stiffness coefficient                    (njnt x 1)"
| |-FieldDecl 0x1ee2b8b8 <line:744:3, col:13> col:13 jnt_range 'mjtNum *'
| | `-FullComment 0x1ee65d50 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65d20 <col:37, col:88>
| |     `-TextComment 0x1ee65cf0 <col:37, col:88> Text=" joint limits                             (njnt x 2)"
| |-FieldDecl 0x1ee2b948 <line:745:3, col:13> col:13 jnt_actfrcrange 'mjtNum *'
| | `-FullComment 0x1ee65e20 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65df0 <col:37, col:88>
| |     `-TextComment 0x1ee65dc0 <col:37, col:88> Text=" range of total actuator force            (njnt x 2)"
| |-FieldDecl 0x1ee2b9d8 <line:746:3, col:13> col:13 jnt_margin 'mjtNum *'
| | `-FullComment 0x1ee65ef0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee65ec0 <col:37, col:88>
| |     `-TextComment 0x1ee65e90 <col:37, col:88> Text=" min distance for limit detection         (njnt x 1)"
| |-FieldDecl 0x1ee2ba68 <line:747:3, col:13> col:13 jnt_user 'mjtNum *'
| | `-FullComment 0x1ee65fc0 <col:37, col:96>
| |   `-ParagraphComment 0x1ee65f90 <col:37, col:96>
| |     `-TextComment 0x1ee65f60 <col:37, col:96> Text=" user data                                (njnt x nuser_jnt)"
| |-FieldDecl 0x1ee2bb30 <line:750:3, col:13> col:13 dof_bodyid 'int *'
| | `-FullComment 0x1ee66090 <col:37, col:86>
| |   `-ParagraphComment 0x1ee66060 <col:37, col:86>
| |     `-TextComment 0x1ee66030 <col:37, col:86> Text=" id of dof's body                         (nv x 1)"
| |-FieldDecl 0x1ee2bbc0 <line:751:3, col:13> col:13 dof_jntid 'int *'
| | `-FullComment 0x1ee66160 <col:37, col:86>
| |   `-ParagraphComment 0x1ee66130 <col:37, col:86>
| |     `-TextComment 0x1ee66100 <col:37, col:86> Text=" id of dof's joint                        (nv x 1)"
| |-FieldDecl 0x1ee2bc50 <line:752:3, col:13> col:13 dof_parentid 'int *'
| | `-FullComment 0x1ee66230 <col:37, col:86>
| |   `-ParagraphComment 0x1ee66200 <col:37, col:86>
| |     `-TextComment 0x1ee661d0 <col:37, col:86> Text=" id of dof's parent; -1: none             (nv x 1)"
| |-FieldDecl 0x1ee2bce0 <line:753:3, col:13> col:13 dof_treeid 'int *'
| | `-FullComment 0x1ee66300 <col:37, col:86>
| |   `-ParagraphComment 0x1ee662d0 <col:37, col:86>
| |     `-TextComment 0x1ee662a0 <col:37, col:86> Text=" id of dof's kinematic tree               (nv x 1)"
| |-FieldDecl 0x1ee2bd70 <line:754:3, col:13> col:13 dof_Madr 'int *'
| | `-FullComment 0x1ee663d0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee663a0 <col:37, col:86>
| |     `-TextComment 0x1ee66370 <col:37, col:86> Text=" dof address in M-diagonal                (nv x 1)"
| |-FieldDecl 0x1ee2be00 <line:755:3, col:13> col:13 dof_simplenum 'int *'
| | `-FullComment 0x1ee664a0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee66470 <col:37, col:86>
| |     `-TextComment 0x1ee66440 <col:37, col:86> Text=" number of consecutive simple dofs        (nv x 1)"
| |-FieldDecl 0x1ee2be88 <line:756:3, col:13> col:13 dof_solref 'mjtNum *'
| | `-FullComment 0x1ee66570 <col:37, col:91>
| |   `-ParagraphComment 0x1ee66540 <col:37, col:91>
| |     `-TextComment 0x1ee66510 <col:37, col:91> Text=" constraint solver reference:frictionloss (nv x mjNREF)"
| |-FieldDecl 0x1ee2bf18 <line:757:3, col:13> col:13 dof_solimp 'mjtNum *'
| | `-FullComment 0x1ee66640 <col:37, col:91>
| |   `-ParagraphComment 0x1ee66610 <col:37, col:91>
| |     `-TextComment 0x1ee665e0 <col:37, col:91> Text=" constraint solver impedance:frictionloss (nv x mjNIMP)"
| |-FieldDecl 0x1ee2bfa8 <line:758:3, col:13> col:13 dof_frictionloss 'mjtNum *'
| | `-FullComment 0x1ee66710 <col:37, col:86>
| |   `-ParagraphComment 0x1ee666e0 <col:37, col:86>
| |     `-TextComment 0x1ee666b0 <col:37, col:86> Text=" dof friction loss                        (nv x 1)"
| |-FieldDecl 0x1ee2c038 <line:759:3, col:13> col:13 dof_armature 'mjtNum *'
| | `-FullComment 0x1ee667e0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee667b0 <col:37, col:86>
| |     `-TextComment 0x1ee66780 <col:37, col:86> Text=" dof armature inertia/mass                (nv x 1)"
| |-FieldDecl 0x1ee2c0c8 <line:760:3, col:13> col:13 dof_damping 'mjtNum *'
| | `-FullComment 0x1ee668b0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee66880 <col:37, col:86>
| |     `-TextComment 0x1ee66850 <col:37, col:86> Text=" damping coefficient                      (nv x 1)"
| |-FieldDecl 0x1ee2c158 <line:761:3, col:13> col:13 dof_invweight0 'mjtNum *'
| | `-FullComment 0x1ee66980 <col:37, col:86>
| |   `-ParagraphComment 0x1ee66950 <col:37, col:86>
| |     `-TextComment 0x1ee66920 <col:37, col:86> Text=" diag. inverse inertia in qpos0           (nv x 1)"
| |-FieldDecl 0x1ee2c948 <line:762:3, col:13> col:13 dof_M0 'mjtNum *'
| | `-FullComment 0x1ee66a50 <col:37, col:86>
| |   `-ParagraphComment 0x1ee66a20 <col:37, col:86>
| |     `-TextComment 0x1ee669f0 <col:37, col:86> Text=" diag. inertia in qpos0                   (nv x 1)"
| |-FieldDecl 0x1ee2ca10 <line:765:3, col:13> col:13 geom_type 'int *'
| | `-FullComment 0x1ee66b40 <col:37, col:89>
| |   `-ParagraphComment 0x1ee66b10 <col:37, col:89>
| |     `-TextComment 0x1ee66ae0 <col:37, col:89> Text=" geometric type (mjtGeom)                 (ngeom x 1)"
| |-FieldDecl 0x1ee2caa0 <line:766:3, col:13> col:13 geom_contype 'int *'
| | `-FullComment 0x1ee66c10 <col:37, col:89>
| |   `-ParagraphComment 0x1ee66be0 <col:37, col:89>
| |     `-TextComment 0x1ee66bb0 <col:37, col:89> Text=" geom contact type                        (ngeom x 1)"
| |-FieldDecl 0x1ee2cb30 <line:767:3, col:13> col:13 geom_conaffinity 'int *'
| | `-FullComment 0x1ee66ce0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee66cb0 <col:37, col:89>
| |     `-TextComment 0x1ee66c80 <col:37, col:89> Text=" geom contact affinity                    (ngeom x 1)"
| |-FieldDecl 0x1ee2cbc0 <line:768:3, col:13> col:13 geom_condim 'int *'
| | `-FullComment 0x1ee66db0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee66d80 <col:37, col:89>
| |     `-TextComment 0x1ee66d50 <col:37, col:89> Text=" contact dimensionality (1, 3, 4, 6)      (ngeom x 1)"
| |-FieldDecl 0x1ee2cc50 <line:769:3, col:13> col:13 geom_bodyid 'int *'
| | `-FullComment 0x1ee66e80 <col:37, col:89>
| |   `-ParagraphComment 0x1ee66e50 <col:37, col:89>
| |     `-TextComment 0x1ee66e20 <col:37, col:89> Text=" id of geom's body                        (ngeom x 1)"
| |-FieldDecl 0x1ee2cce0 <line:770:3, col:13> col:13 geom_dataid 'int *'
| | `-FullComment 0x1ee66f50 <col:37, col:89>
| |   `-ParagraphComment 0x1ee66f20 <col:37, col:89>
| |     `-TextComment 0x1ee66ef0 <col:37, col:89> Text=" id of geom's mesh/hfield; -1: none       (ngeom x 1)"
| |-FieldDecl 0x1ee2cd70 <line:771:3, col:13> col:13 geom_matid 'int *'
| | `-FullComment 0x1ee67020 <col:37, col:89>
| |   `-ParagraphComment 0x1ee66ff0 <col:37, col:89>
| |     `-TextComment 0x1ee66fc0 <col:37, col:89> Text=" material id for rendering; -1: none      (ngeom x 1)"
| |-FieldDecl 0x1ee2ce00 <line:772:3, col:13> col:13 geom_group 'int *'
| | `-FullComment 0x1ee670f0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee670c0 <col:37, col:89>
| |     `-TextComment 0x1ee67090 <col:37, col:89> Text=" group for visibility                     (ngeom x 1)"
| |-FieldDecl 0x1ee2ce90 <line:773:3, col:13> col:13 geom_priority 'int *'
| | `-FullComment 0x1ee671c0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67190 <col:37, col:89>
| |     `-TextComment 0x1ee67160 <col:37, col:89> Text=" geom contact priority                    (ngeom x 1)"
| |-FieldDecl 0x1ee2cf20 <line:774:3, col:13> col:13 geom_plugin 'int *'
| | `-FullComment 0x1ee67290 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67260 <col:37, col:89>
| |     `-TextComment 0x1ee67230 <col:37, col:89> Text=" plugin instance id; -1: not in use       (ngeom x 1)"
| |-FieldDecl 0x1ee2cfa8 <line:775:3, col:13> col:13 geom_sameframe 'mjtByte *'
| | `-FullComment 0x1ee67360 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67330 <col:37, col:89>
| |     `-TextComment 0x1ee67300 <col:37, col:89> Text=" same frame as body (mjtSameframe)        (ngeom x 1)"
| |-FieldDecl 0x1ee2d038 <line:776:3, col:13> col:13 geom_solmix 'mjtNum *'
| | `-FullComment 0x1ee67430 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67400 <col:37, col:89>
| |     `-TextComment 0x1ee673d0 <col:37, col:89> Text=" mixing coef for solref/imp in geom pair  (ngeom x 1)"
| |-FieldDecl 0x1ee2d0c8 <line:777:3, col:13> col:13 geom_solref 'mjtNum *'
| | `-FullComment 0x1ee67500 <col:37, col:94>
| |   `-ParagraphComment 0x1ee674d0 <col:37, col:94>
| |     `-TextComment 0x1ee674a0 <col:37, col:94> Text=" constraint solver reference: contact     (ngeom x mjNREF)"
| |-FieldDecl 0x1ee2d158 <line:778:3, col:13> col:13 geom_solimp 'mjtNum *'
| | `-FullComment 0x1ee675d0 <col:37, col:94>
| |   `-ParagraphComment 0x1ee675a0 <col:37, col:94>
| |     `-TextComment 0x1ee67570 <col:37, col:94> Text=" constraint solver impedance: contact     (ngeom x mjNIMP)"
| |-FieldDecl 0x1ee2d1e8 <line:779:3, col:13> col:13 geom_size 'mjtNum *'
| | `-FullComment 0x1ee676a0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67670 <col:37, col:89>
| |     `-TextComment 0x1ee67640 <col:37, col:89> Text=" geom-specific size parameters            (ngeom x 3)"
| |-FieldDecl 0x1ee2d278 <line:780:3, col:13> col:13 geom_aabb 'mjtNum *'
| | `-FullComment 0x1ee67770 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67740 <col:37, col:89>
| |     `-TextComment 0x1ee67710 <col:37, col:89> Text=" bounding box, (center, size)             (ngeom x 6)"
| |-FieldDecl 0x1ee2d308 <line:781:3, col:13> col:13 geom_rbound 'mjtNum *'
| | `-FullComment 0x1ee67840 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67810 <col:37, col:89>
| |     `-TextComment 0x1ee677e0 <col:37, col:89> Text=" radius of bounding sphere                (ngeom x 1)"
| |-FieldDecl 0x1ee2d398 <line:782:3, col:13> col:13 geom_pos 'mjtNum *'
| | `-FullComment 0x1ee67910 <col:37, col:89>
| |   `-ParagraphComment 0x1ee678e0 <col:37, col:89>
| |     `-TextComment 0x1ee678b0 <col:37, col:89> Text=" local position offset rel. to body       (ngeom x 3)"
| |-FieldDecl 0x1ee2d428 <line:783:3, col:13> col:13 geom_quat 'mjtNum *'
| | `-FullComment 0x1ee679e0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee679b0 <col:37, col:89>
| |     `-TextComment 0x1ee67980 <col:37, col:89> Text=" local orientation offset rel. to body    (ngeom x 4)"
| |-FieldDecl 0x1ee2d4b8 <line:784:3, col:13> col:13 geom_friction 'mjtNum *'
| | `-FullComment 0x1ee67ab0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67a80 <col:37, col:89>
| |     `-TextComment 0x1ee67a50 <col:37, col:89> Text=" friction for (slide, spin, roll)         (ngeom x 3)"
| |-FieldDecl 0x1ee2d548 <line:785:3, col:13> col:13 geom_margin 'mjtNum *'
| | `-FullComment 0x1ee67be0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67bb0 <col:37, col:89>
| |     |-TextComment 0x1ee67b30 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x1ee67b50 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x1ee67b70 <col:67, col:89> Text="            (ngeom x 1)"
| |-FieldDecl 0x1ee2d5d8 <line:786:3, col:13> col:13 geom_gap 'mjtNum *'
| | `-FullComment 0x1ee67d00 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67cd0 <col:37, col:89>
| |     |-TextComment 0x1ee67c50 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x1ee67c70 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x1ee67c90 <col:70, col:89> Text="-gap     (ngeom x 1)"
| |-FieldDecl 0x1ee2d668 <line:787:3, col:13> col:13 geom_fluid 'mjtNum *'
| | `-FullComment 0x1ee67dd0 <col:37, col:96>
| |   `-ParagraphComment 0x1ee67da0 <col:37, col:96>
| |     `-TextComment 0x1ee67d70 <col:37, col:96> Text=" fluid interaction parameters             (ngeom x mjNFLUID)"
| |-FieldDecl 0x1ee2d6f8 <line:788:3, col:13> col:13 geom_user 'mjtNum *'
| | `-FullComment 0x1ee67ea0 <col:37, col:98>
| |   `-ParagraphComment 0x1ee67e70 <col:37, col:98>
| |     `-TextComment 0x1ee67e40 <col:37, col:98> Text=" user data                                (ngeom x nuser_geom)"
| |-FieldDecl 0x1ee2d7c0 <line:789:3, col:13> col:13 geom_rgba 'float *'
| | `-FullComment 0x1ee67f70 <col:37, col:89>
| |   `-ParagraphComment 0x1ee67f40 <col:37, col:89>
| |     `-TextComment 0x1ee67f10 <col:37, col:89> Text=" rgba when material is omitted            (ngeom x 4)"
| |-FieldDecl 0x1ee2d880 <line:792:3, col:13> col:13 site_type 'int *'
| | `-FullComment 0x1ee68040 <col:37, col:89>
| |   `-ParagraphComment 0x1ee68010 <col:37, col:89>
| |     `-TextComment 0x1ee67fe0 <col:37, col:89> Text=" geom type for rendering (mjtGeom)        (nsite x 1)"
| |-FieldDecl 0x1ee300b0 <line:793:3, col:13> col:13 site_bodyid 'int *'
| | `-FullComment 0x1ee68110 <col:37, col:89>
| |   `-ParagraphComment 0x1ee680e0 <col:37, col:89>
| |     `-TextComment 0x1ee680b0 <col:37, col:89> Text=" id of site's body                        (nsite x 1)"
| |-FieldDecl 0x1ee30140 <line:794:3, col:13> col:13 site_matid 'int *'
| | `-FullComment 0x1ee681e0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee681b0 <col:37, col:89>
| |     `-TextComment 0x1ee68180 <col:37, col:89> Text=" material id for rendering; -1: none      (nsite x 1)"
| |-FieldDecl 0x1ee301d0 <line:795:3, col:13> col:13 site_group 'int *'
| | `-FullComment 0x1ee682b0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee68280 <col:37, col:89>
| |     `-TextComment 0x1ee68250 <col:37, col:89> Text=" group for visibility                     (nsite x 1)"
| |-FieldDecl 0x1ee30258 <line:796:3, col:13> col:13 site_sameframe 'mjtByte *'
| | `-FullComment 0x1ee68380 <col:37, col:89>
| |   `-ParagraphComment 0x1ee68350 <col:37, col:89>
| |     `-TextComment 0x1ee68320 <col:37, col:89> Text=" same frame as body (mjtSameframe)        (nsite x 1)"
| |-FieldDecl 0x1ee302e8 <line:797:3, col:13> col:13 site_size 'mjtNum *'
| | `-FullComment 0x1ee68450 <col:37, col:89>
| |   `-ParagraphComment 0x1ee68420 <col:37, col:89>
| |     `-TextComment 0x1ee683f0 <col:37, col:89> Text=" geom size for rendering                  (nsite x 3)"
| |-FieldDecl 0x1ee30378 <line:798:3, col:13> col:13 site_pos 'mjtNum *'
| | `-FullComment 0x1ee68520 <col:37, col:89>
| |   `-ParagraphComment 0x1ee684f0 <col:37, col:89>
| |     `-TextComment 0x1ee684c0 <col:37, col:89> Text=" local position offset rel. to body       (nsite x 3)"
| |-FieldDecl 0x1ee30408 <line:799:3, col:13> col:13 site_quat 'mjtNum *'
| | `-FullComment 0x1ee685f0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee685c0 <col:37, col:89>
| |     `-TextComment 0x1ee68590 <col:37, col:89> Text=" local orientation offset rel. to body    (nsite x 4)"
| |-FieldDecl 0x1ee30498 <line:800:3, col:13> col:13 site_user 'mjtNum *'
| | `-FullComment 0x1ee686c0 <col:37, col:98>
| |   `-ParagraphComment 0x1ee68690 <col:37, col:98>
| |     `-TextComment 0x1ee68660 <col:37, col:98> Text=" user data                                (nsite x nuser_site)"
| |-FieldDecl 0x1ee30530 <line:801:3, col:13> col:13 site_rgba 'float *'
| | `-FullComment 0x1ee68790 <col:37, col:89>
| |   `-ParagraphComment 0x1ee68760 <col:37, col:89>
| |     `-TextComment 0x1ee68730 <col:37, col:89> Text=" rgba when material is omitted            (nsite x 4)"
| |-FieldDecl 0x1ee305f0 <line:804:3, col:13> col:13 cam_mode 'int *'
| | `-FullComment 0x1ee68860 <col:37, col:88>
| |   `-ParagraphComment 0x1ee68830 <col:37, col:88>
| |     `-TextComment 0x1ee68800 <col:37, col:88> Text=" camera tracking mode (mjtCamLight)       (ncam x 1)"
| |-FieldDecl 0x1ee30680 <line:805:3, col:13> col:13 cam_bodyid 'int *'
| | `-FullComment 0x1ee68930 <col:37, col:88>
| |   `-ParagraphComment 0x1ee68900 <col:37, col:88>
| |     `-TextComment 0x1ee688d0 <col:37, col:88> Text=" id of camera's body                      (ncam x 1)"
| |-FieldDecl 0x1ee30710 <line:806:3, col:13> col:13 cam_targetbodyid 'int *'
| | `-FullComment 0x1ee68a00 <col:37, col:88>
| |   `-ParagraphComment 0x1ee689d0 <col:37, col:88>
| |     `-TextComment 0x1ee689a0 <col:37, col:88> Text=" id of targeted body; -1: none            (ncam x 1)"
| |-FieldDecl 0x1ee30798 <line:807:3, col:13> col:13 cam_pos 'mjtNum *'
| | `-FullComment 0x1ee68b00 <col:37, col:88>
| |   `-ParagraphComment 0x1ee68aa0 <col:37, col:88>
| |     `-TextComment 0x1ee68a70 <col:37, col:88> Text=" position rel. to body frame              (ncam x 3)"
| |-FieldDecl 0x1ee30828 <line:808:3, col:13> col:13 cam_quat 'mjtNum *'
| | `-FullComment 0x1ee68bd0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee68ba0 <col:37, col:88>
| |     `-TextComment 0x1ee68b70 <col:37, col:88> Text=" orientation rel. to body frame           (ncam x 4)"
| |-FieldDecl 0x1ee308b8 <line:809:3, col:13> col:13 cam_poscom0 'mjtNum *'
| | `-FullComment 0x1ee68ca0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee68c70 <col:37, col:88>
| |     `-TextComment 0x1ee68c40 <col:37, col:88> Text=" global position rel. to sub-com in qpos0 (ncam x 3)"
| |-FieldDecl 0x1ee30948 <line:810:3, col:13> col:13 cam_pos0 'mjtNum *'
| | `-FullComment 0x1ee68d70 <col:37, col:88>
| |   `-ParagraphComment 0x1ee68d40 <col:37, col:88>
| |     `-TextComment 0x1ee68d10 <col:37, col:88> Text=" global position rel. to body in qpos0    (ncam x 3)"
| |-FieldDecl 0x1ee309d8 <line:811:3, col:13> col:13 cam_mat0 'mjtNum *'
| | `-FullComment 0x1ee68e40 <col:37, col:88>
| |   `-ParagraphComment 0x1ee68e10 <col:37, col:88>
| |     `-TextComment 0x1ee68de0 <col:37, col:88> Text=" global orientation in qpos0              (ncam x 9)"
| |-FieldDecl 0x1ee30a70 <line:812:3, col:13> col:13 cam_orthographic 'int *'
| | `-FullComment 0x1ee68f10 <col:37, col:88>
| |   `-ParagraphComment 0x1ee68ee0 <col:37, col:88>
| |     `-TextComment 0x1ee68eb0 <col:37, col:88> Text=" orthographic camera; 0: no, 1: yes       (ncam x 1)"
| |-FieldDecl 0x1ee30af8 <line:813:3, col:13> col:13 cam_fovy 'mjtNum *'
| | `-FullComment 0x1ee68fe0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee68fb0 <col:37, col:88>
| |     `-TextComment 0x1ee68f80 <col:37, col:88> Text=" y field-of-view (ortho ? len : deg)      (ncam x 1)"
| |-FieldDecl 0x1ee30b88 <line:814:3, col:13> col:13 cam_ipd 'mjtNum *'
| | `-FullComment 0x1ee690b0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee69080 <col:37, col:88>
| |     `-TextComment 0x1ee69050 <col:37, col:88> Text=" inter-pupilary distance                  (ncam x 1)"
| |-FieldDecl 0x1ee30c20 <line:815:3, col:13> col:13 cam_resolution 'int *'
| | `-FullComment 0x1ee69180 <col:37, col:88>
| |   `-ParagraphComment 0x1ee69150 <col:37, col:88>
| |     `-TextComment 0x1ee69120 <col:37, col:88> Text=" resolution: pixels [width, height]       (ncam x 2)"
| |-FieldDecl 0x1ee30cb0 <line:816:3, col:13> col:13 cam_sensorsize 'float *'
| | `-FullComment 0x1ee69250 <col:37, col:88>
| |   `-ParagraphComment 0x1ee69220 <col:37, col:88>
| |     `-TextComment 0x1ee691f0 <col:37, col:88> Text=" sensor size: length [width, height]      (ncam x 2)"
| |-FieldDecl 0x1ee30d40 <line:817:3, col:13> col:13 cam_intrinsic 'float *'
| | `-FullComment 0x1ee69320 <col:37, col:88>
| |   `-ParagraphComment 0x1ee692f0 <col:37, col:88>
| |     `-TextComment 0x1ee692c0 <col:37, col:88> Text=" [focal length; principal point]          (ncam x 4)"
| |-FieldDecl 0x1ee30dc8 <line:818:3, col:13> col:13 cam_user 'mjtNum *'
| | `-FullComment 0x1ee693f0 <col:37, col:96>
| |   `-ParagraphComment 0x1ee693c0 <col:37, col:96>
| |     `-TextComment 0x1ee69390 <col:37, col:96> Text=" user data                                (ncam x nuser_cam)"
| |-FieldDecl 0x1ee30e90 <line:821:3, col:13> col:13 light_mode 'int *'
| | `-FullComment 0x1ee694c0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69490 <col:37, col:90>
| |     `-TextComment 0x1ee69460 <col:37, col:90> Text=" light tracking mode (mjtCamLight)        (nlight x 1)"
| |-FieldDecl 0x1ee30f20 <line:822:3, col:13> col:13 light_bodyid 'int *'
| | `-FullComment 0x1ee69590 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69560 <col:37, col:90>
| |     `-TextComment 0x1ee69530 <col:37, col:90> Text=" id of light's body                       (nlight x 1)"
| |-FieldDecl 0x1ee30fb0 <line:823:3, col:13> col:13 light_targetbodyid 'int *'
| | `-FullComment 0x1ee69660 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69630 <col:37, col:90>
| |     `-TextComment 0x1ee69600 <col:37, col:90> Text=" id of targeted body; -1: none            (nlight x 1)"
| |-FieldDecl 0x1ee31038 <line:824:3, col:13> col:13 light_directional 'mjtByte *'
| | `-FullComment 0x1ee69730 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69700 <col:37, col:90>
| |     `-TextComment 0x1ee696d0 <col:37, col:90> Text=" directional light                        (nlight x 1)"
| |-FieldDecl 0x1ee32588 <line:825:3, col:13> col:13 light_castshadow 'mjtByte *'
| | `-FullComment 0x1ee69800 <col:37, col:90>
| |   `-ParagraphComment 0x1ee697d0 <col:37, col:90>
| |     `-TextComment 0x1ee697a0 <col:37, col:90> Text=" does light cast shadows                  (nlight x 1)"
| |-FieldDecl 0x1ee32620 <line:826:3, col:13> col:13 light_bulbradius 'float *'
| | `-FullComment 0x1ee698d0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee698a0 <col:37, col:90>
| |     `-TextComment 0x1ee69870 <col:37, col:90> Text=" light radius for soft shadows            (nlight x 1)"
| |-FieldDecl 0x1ee326a8 <line:827:3, col:13> col:13 light_active 'mjtByte *'
| | `-FullComment 0x1ee699a0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69970 <col:37, col:90>
| |     `-TextComment 0x1ee69940 <col:37, col:90> Text=" is light on                              (nlight x 1)"
| |-FieldDecl 0x1ee32738 <line:828:3, col:13> col:13 light_pos 'mjtNum *'
| | `-FullComment 0x1ee69a70 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69a40 <col:37, col:90>
| |     `-TextComment 0x1ee69a10 <col:37, col:90> Text=" position rel. to body frame              (nlight x 3)"
| |-FieldDecl 0x1ee327c8 <line:829:3, col:13> col:13 light_dir 'mjtNum *'
| | `-FullComment 0x1ee69b50 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69b20 <col:37, col:90>
| |     `-TextComment 0x1ee69ae0 <col:37, col:90> Text=" direction rel. to body frame             (nlight x 3)"
| |-FieldDecl 0x1ee32858 <line:830:3, col:13> col:13 light_poscom0 'mjtNum *'
| | `-FullComment 0x1ee69c20 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69bf0 <col:37, col:90>
| |     `-TextComment 0x1ee69bc0 <col:37, col:90> Text=" global position rel. to sub-com in qpos0 (nlight x 3)"
| |-FieldDecl 0x1ee328e8 <line:831:3, col:13> col:13 light_pos0 'mjtNum *'
| | `-FullComment 0x1ee69cf0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69cc0 <col:37, col:90>
| |     `-TextComment 0x1ee69c90 <col:37, col:90> Text=" global position rel. to body in qpos0    (nlight x 3)"
| |-FieldDecl 0x1ee32978 <line:832:3, col:13> col:13 light_dir0 'mjtNum *'
| | `-FullComment 0x1ee69dc0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69d90 <col:37, col:90>
| |     `-TextComment 0x1ee69d60 <col:37, col:90> Text=" global direction in qpos0                (nlight x 3)"
| |-FieldDecl 0x1ee32a10 <line:833:3, col:13> col:13 light_attenuation 'float *'
| | `-FullComment 0x1ee69e90 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69e60 <col:37, col:90>
| |     `-TextComment 0x1ee69e30 <col:37, col:90> Text=" OpenGL attenuation (quadratic model)     (nlight x 3)"
| |-FieldDecl 0x1ee32aa0 <line:834:3, col:13> col:13 light_cutoff 'float *'
| | `-FullComment 0x1ee69f60 <col:37, col:90>
| |   `-ParagraphComment 0x1ee69f30 <col:37, col:90>
| |     `-TextComment 0x1ee69f00 <col:37, col:90> Text=" OpenGL cutoff                            (nlight x 1)"
| |-FieldDecl 0x1ee32b30 <line:835:3, col:13> col:13 light_exponent 'float *'
| | `-FullComment 0x1ee6a030 <col:37, col:90>
| |   `-ParagraphComment 0x1ee6a000 <col:37, col:90>
| |     `-TextComment 0x1ee69fd0 <col:37, col:90> Text=" OpenGL exponent                          (nlight x 1)"
| |-FieldDecl 0x1ee32bc0 <line:836:3, col:13> col:13 light_ambient 'float *'
| | `-FullComment 0x1ee6a100 <col:37, col:90>
| |   `-ParagraphComment 0x1ee6a0d0 <col:37, col:90>
| |     `-TextComment 0x1ee6a0a0 <col:37, col:90> Text=" ambient rgb (alpha=1)                    (nlight x 3)"
| |-FieldDecl 0x1ee32c50 <line:837:3, col:13> col:13 light_diffuse 'float *'
| | `-FullComment 0x1ee6a1d0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee6a1a0 <col:37, col:90>
| |     `-TextComment 0x1ee6a170 <col:37, col:90> Text=" diffuse rgb (alpha=1)                    (nlight x 3)"
| |-FieldDecl 0x1ee32ce0 <line:838:3, col:13> col:13 light_specular 'float *'
| | `-FullComment 0x1ee6a2a0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee6a270 <col:37, col:90>
| |     `-TextComment 0x1ee6a240 <col:37, col:90> Text=" specular rgb (alpha=1)                   (nlight x 3)"
| |-FieldDecl 0x1ee32da0 <line:841:3, col:13> col:13 flex_contype 'int *'
| | `-FullComment 0x1ee6a370 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6a340 <col:37, col:89>
| |     `-TextComment 0x1ee6a310 <col:37, col:89> Text=" flex contact type                        (nflex x 1)"
| |-FieldDecl 0x1ee32e30 <line:842:3, col:13> col:13 flex_conaffinity 'int *'
| | `-FullComment 0x1ee6a440 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6a410 <col:37, col:89>
| |     `-TextComment 0x1ee6a3e0 <col:37, col:89> Text=" flex contact affinity                    (nflex x 1)"
| |-FieldDecl 0x1ee32ec0 <line:843:3, col:13> col:13 flex_condim 'int *'
| | `-FullComment 0x1ee6a510 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6a4e0 <col:37, col:89>
| |     `-TextComment 0x1ee6a4b0 <col:37, col:89> Text=" contact dimensionality (1, 3, 4, 6)      (nflex x 1)"
| |-FieldDecl 0x1ee32f50 <line:844:3, col:13> col:13 flex_priority 'int *'
| | `-FullComment 0x1ee6a5e0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6a5b0 <col:37, col:89>
| |     `-TextComment 0x1ee6a580 <col:37, col:89> Text=" flex contact priority                    (nflex x 1)"
| |-FieldDecl 0x1ee32fd8 <line:845:3, col:13> col:13 flex_solmix 'mjtNum *'
| | `-FullComment 0x1ee6a6b0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6a680 <col:37, col:89>
| |     `-TextComment 0x1ee6a650 <col:37, col:89> Text=" mix coef for solref/imp in contact pair  (nflex x 1)"
| |-FieldDecl 0x1ee33068 <line:846:3, col:13> col:13 flex_solref 'mjtNum *'
| | `-FullComment 0x1ee6a780 <col:37, col:94>
| |   `-ParagraphComment 0x1ee6a750 <col:37, col:94>
| |     `-TextComment 0x1ee6a720 <col:37, col:94> Text=" constraint solver reference: contact     (nflex x mjNREF)"
| |-FieldDecl 0x1ee330f8 <line:847:3, col:13> col:13 flex_solimp 'mjtNum *'
| | `-FullComment 0x1ee6a850 <col:37, col:94>
| |   `-ParagraphComment 0x1ee6a820 <col:37, col:94>
| |     `-TextComment 0x1ee6a7f0 <col:37, col:94> Text=" constraint solver impedance: contact     (nflex x mjNIMP)"
| |-FieldDecl 0x1ee33188 <line:848:3, col:13> col:13 flex_friction 'mjtNum *'
| | `-FullComment 0x1ee6a920 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6a8f0 <col:37, col:89>
| |     `-TextComment 0x1ee6a8c0 <col:37, col:89> Text=" friction for (slide, spin, roll)         (nflex x 3)"
| |-FieldDecl 0x1ee33218 <line:849:3, col:13> col:13 flex_margin 'mjtNum *'
| | `-FullComment 0x1ee6aa40 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6aa10 <col:37, col:89>
| |     |-TextComment 0x1ee6a990 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x1ee6a9b0 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x1ee6a9d0 <col:67, col:89> Text="            (nflex x 1)"
| |-FieldDecl 0x1ee332a8 <line:850:3, col:13> col:13 flex_gap 'mjtNum *'
| | `-FullComment 0x1ee6ab70 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6ab40 <col:37, col:89>
| |     |-TextComment 0x1ee6aab0 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x1ee6aad0 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x1ee6aaf0 <col:70, col:89> Text="-gap     (nflex x 1)"
| |-FieldDecl 0x1ee33338 <line:851:3, col:13> col:13 flex_internal 'mjtByte *'
| | `-FullComment 0x1ee6ac40 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6ac10 <col:37, col:89>
| |     `-TextComment 0x1ee6abe0 <col:37, col:89> Text=" internal flex collision enabled          (nflex x 1)"
| |-FieldDecl 0x1ee333d0 <line:852:3, col:13> col:13 flex_selfcollide 'int *'
| | `-FullComment 0x1ee6ad10 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6ace0 <col:37, col:89>
| |     `-TextComment 0x1ee6acb0 <col:37, col:89> Text=" self collision mode (mjtFlexSelf)        (nflex x 1)"
| |-FieldDecl 0x1ee33460 <line:853:3, col:13> col:13 flex_activelayers 'int *'
| | `-FullComment 0x1ee6ade0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6adb0 <col:37, col:89>
| |     `-TextComment 0x1ee6ad80 <col:37, col:89> Text=" number of active element layers, 3D only (nflex x 1)"
| |-FieldDecl 0x1ee337a0 <line:856:3, col:13> col:13 flex_dim 'int *'
| | `-FullComment 0x1ee6aeb0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6ae80 <col:37, col:89>
| |     `-TextComment 0x1ee6ae50 <col:37, col:89> Text=" 1: lines, 2: triangles, 3: tetrahedra    (nflex x 1)"
| |-FieldDecl 0x1ee33830 <line:857:3, col:13> col:13 flex_matid 'int *'
| | `-FullComment 0x1ee6af80 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6af50 <col:37, col:89>
| |     `-TextComment 0x1ee6af20 <col:37, col:89> Text=" material id for rendering                (nflex x 1)"
| |-FieldDecl 0x1ee338c0 <line:858:3, col:13> col:13 flex_group 'int *'
| | `-FullComment 0x1ee6b050 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b020 <col:37, col:89>
| |     `-TextComment 0x1ee6aff0 <col:37, col:89> Text=" group for visibility                     (nflex x 1)"
| |-FieldDecl 0x1ee33950 <line:859:3, col:13> col:13 flex_vertadr 'int *'
| | `-FullComment 0x1ee6b120 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b0f0 <col:37, col:89>
| |     `-TextComment 0x1ee6b0c0 <col:37, col:89> Text=" first vertex address                     (nflex x 1)"
| |-FieldDecl 0x1ee339e0 <line:860:3, col:13> col:13 flex_vertnum 'int *'
| | `-FullComment 0x1ee6b1f0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b1c0 <col:37, col:89>
| |     `-TextComment 0x1ee6b190 <col:37, col:89> Text=" number of vertices                       (nflex x 1)"
| |-FieldDecl 0x1ee33a70 <line:861:3, col:13> col:13 flex_edgeadr 'int *'
| | `-FullComment 0x1ee6b2c0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b290 <col:37, col:89>
| |     `-TextComment 0x1ee6b260 <col:37, col:89> Text=" first edge address                       (nflex x 1)"
| |-FieldDecl 0x1ee33b00 <line:862:3, col:13> col:13 flex_edgenum 'int *'
| | `-FullComment 0x1ee6b390 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b360 <col:37, col:89>
| |     `-TextComment 0x1ee6b330 <col:37, col:89> Text=" number of edges                          (nflex x 1)"
| |-FieldDecl 0x1ee33b90 <line:863:3, col:13> col:13 flex_elemadr 'int *'
| | `-FullComment 0x1ee6b460 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b430 <col:37, col:89>
| |     `-TextComment 0x1ee6b400 <col:37, col:89> Text=" first element address                    (nflex x 1)"
| |-FieldDecl 0x1ee33c20 <line:864:3, col:13> col:13 flex_elemnum 'int *'
| | `-FullComment 0x1ee6b530 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b500 <col:37, col:89>
| |     `-TextComment 0x1ee6b4d0 <col:37, col:89> Text=" number of elements                       (nflex x 1)"
| |-FieldDecl 0x1ee33cb0 <line:865:3, col:13> col:13 flex_elemdataadr 'int *'
| | `-FullComment 0x1ee6b600 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b5d0 <col:37, col:89>
| |     `-TextComment 0x1ee6b5a0 <col:37, col:89> Text=" first element vertex id address          (nflex x 1)"
| |-FieldDecl 0x1ee33d40 <line:866:3, col:13> col:13 flex_elemedgeadr 'int *'
| | `-FullComment 0x1ee6b6d0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b6a0 <col:37, col:89>
| |     `-TextComment 0x1ee6b670 <col:37, col:89> Text=" first element edge id address            (nflex x 1)"
| |-FieldDecl 0x1ee33dd0 <line:867:3, col:13> col:13 flex_shellnum 'int *'
| | `-FullComment 0x1ee6b7a0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b770 <col:37, col:89>
| |     `-TextComment 0x1ee6b740 <col:37, col:89> Text=" number of shells                         (nflex x 1)"
| |-FieldDecl 0x1ee33e60 <line:868:3, col:13> col:13 flex_shelldataadr 'int *'
| | `-FullComment 0x1ee6b870 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b840 <col:37, col:89>
| |     `-TextComment 0x1ee6b810 <col:37, col:89> Text=" first shell data address                 (nflex x 1)"
| |-FieldDecl 0x1ee33ef0 <line:869:3, col:13> col:13 flex_evpairadr 'int *'
| | `-FullComment 0x1ee6b940 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b910 <col:37, col:89>
| |     `-TextComment 0x1ee6b8e0 <col:37, col:89> Text=" first evpair address                     (nflex x 1)"
| |-FieldDecl 0x1ee33f80 <line:870:3, col:13> col:13 flex_evpairnum 'int *'
| | `-FullComment 0x1ee6ba10 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6b9e0 <col:37, col:89>
| |     `-TextComment 0x1ee6b9b0 <col:37, col:89> Text=" number of evpairs                        (nflex x 1)"
| |-FieldDecl 0x1ee34010 <line:871:3, col:13> col:13 flex_texcoordadr 'int *'
| | `-FullComment 0x1ee6bae0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6bab0 <col:37, col:89>
| |     `-TextComment 0x1ee6ba80 <col:37, col:89> Text=" address in flex_texcoord; -1: none       (nflex x 1)"
| |-FieldDecl 0x1ee340a0 <line:872:3, col:13> col:13 flex_vertbodyid 'int *'
| | `-FullComment 0x1ee6bbd0 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6bba0 <col:37, col:93>
| |     `-TextComment 0x1ee6bb70 <col:37, col:93> Text=" vertex body ids                          (nflexvert x 1)"
| |-FieldDecl 0x1ee34130 <line:873:3, col:13> col:13 flex_edge 'int *'
| | `-FullComment 0x1ee6bca0 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6bc70 <col:37, col:93>
| |     `-TextComment 0x1ee6bc40 <col:37, col:93> Text=" edge vertex ids (2 per edge)             (nflexedge x 2)"
| |-FieldDecl 0x1ee341c0 <line:874:3, col:13> col:13 flex_elem 'int *'
| | `-FullComment 0x1ee6bd70 <col:37, col:97>
| |   `-ParagraphComment 0x1ee6bd40 <col:37, col:97>
| |     `-TextComment 0x1ee6bd10 <col:37, col:97> Text=" element vertex ids (dim+1 per elem)      (nflexelemdata x 1)"
| |-FieldDecl 0x1ee34250 <line:875:3, col:13> col:13 flex_elemedge 'int *'
| | `-FullComment 0x1ee6be40 <col:37, col:97>
| |   `-ParagraphComment 0x1ee6be10 <col:37, col:97>
| |     `-TextComment 0x1ee6bde0 <col:37, col:97> Text=" element edge ids                         (nflexelemedge x 1)"
| |-FieldDecl 0x1ee342e0 <line:876:3, col:13> col:13 flex_elemlayer 'int *'
| | `-FullComment 0x1ee6bf10 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6bee0 <col:37, col:93>
| |     `-TextComment 0x1ee6beb0 <col:37, col:93> Text=" element distance from surface, 3D only   (nflexelem x 1)"
| |-FieldDecl 0x1ee34370 <line:877:3, col:13> col:13 flex_shell 'int *'
| | `-FullComment 0x1ee6bfe0 <col:37, col:98>
| |   `-ParagraphComment 0x1ee6bfb0 <col:37, col:98>
| |     `-TextComment 0x1ee6bf80 <col:37, col:98> Text=" shell fragment vertex ids (dim per frag) (nflexshelldata x 1)"
| |-FieldDecl 0x1ee34400 <line:878:3, col:13> col:13 flex_evpair 'int *'
| | `-FullComment 0x1ee6c0b0 <col:37, col:95>
| |   `-ParagraphComment 0x1ee6c080 <col:37, col:95>
| |     `-TextComment 0x1ee6c050 <col:37, col:95> Text=" (element, vertex) collision pairs        (nflexevpair x 2)"
| |-FieldDecl 0x1ee34488 <line:879:3, col:13> col:13 flex_vert 'mjtNum *'
| | `-FullComment 0x1ee6c180 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6c150 <col:37, col:93>
| |     `-TextComment 0x1ee6c120 <col:37, col:93> Text=" vertex positions in local body frames    (nflexvert x 3)"
| |-FieldDecl 0x1ee34518 <line:880:3, col:13> col:13 flex_xvert0 'mjtNum *'
| | `-FullComment 0x1ee6c250 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6c220 <col:37, col:93>
| |     `-TextComment 0x1ee6c1f0 <col:37, col:93> Text=" Cartesian vertex positions in qpos0      (nflexvert x 3)"
| |-FieldDecl 0x1ee345a8 <line:881:3, col:13> col:13 flexedge_length0 'mjtNum *'
| | `-FullComment 0x1ee6c320 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6c2f0 <col:37, col:93>
| |     `-TextComment 0x1ee6c2c0 <col:37, col:93> Text=" edge lengths in qpos0                    (nflexedge x 1)"
| |-FieldDecl 0x1ee34638 <line:882:3, col:13> col:13 flexedge_invweight0 'mjtNum *'
| | `-FullComment 0x1ee6c3f0 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6c3c0 <col:37, col:93>
| |     `-TextComment 0x1ee6c390 <col:37, col:93> Text=" edge inv. weight in qpos0                (nflexedge x 1)"
| |-FieldDecl 0x1ee346c8 <line:883:3, col:13> col:13 flex_radius 'mjtNum *'
| | `-FullComment 0x1ee6c4c0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6c490 <col:37, col:89>
| |     `-TextComment 0x1ee6c460 <col:37, col:89> Text=" radius around primitive element          (nflex x 1)"
| |-FieldDecl 0x1ee34eb0 <line:884:3, col:13> col:13 flex_stiffness 'mjtNum *'
| | `-FullComment 0x1ee6c590 <col:37, col:94>
| |   `-ParagraphComment 0x1ee6c560 <col:37, col:94>
| |     `-TextComment 0x1ee6c530 <col:37, col:94> Text=" finite element stiffness matrix          (nflexelem x 21)"
| |-FieldDecl 0x1ee34f38 <line:885:3, col:13> col:13 flex_damping 'mjtNum *'
| | `-FullComment 0x1ee6c660 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6c630 <col:37, col:89>
| |     `-TextComment 0x1ee6c600 <col:37, col:89> Text=" Rayleigh's damping coefficient           (nflex x 1)"
| |-FieldDecl 0x1ee34fc8 <line:886:3, col:13> col:13 flex_edgestiffness 'mjtNum *'
| | `-FullComment 0x1ee6c730 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6c700 <col:37, col:89>
| |     `-TextComment 0x1ee6c6d0 <col:37, col:89> Text=" edge stiffness                           (nflex x 1)"
| |-FieldDecl 0x1ee35058 <line:887:3, col:13> col:13 flex_edgedamping 'mjtNum *'
| | `-FullComment 0x1ee6c800 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6c7d0 <col:37, col:89>
| |     `-TextComment 0x1ee6c7a0 <col:37, col:89> Text=" edge damping                             (nflex x 1)"
| |-FieldDecl 0x1ee350e8 <line:888:3, col:13> col:13 flex_edgeequality 'mjtByte *'
| | `-FullComment 0x1ee6c8d0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6c8a0 <col:37, col:89>
| |     `-TextComment 0x1ee6c870 <col:37, col:89> Text=" is edge equality constraint defined      (nflex x 1)"
| |-FieldDecl 0x1ee35178 <line:889:3, col:13> col:13 flex_rigid 'mjtByte *'
| | `-FullComment 0x1ee6c9a0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6c970 <col:37, col:89>
| |     `-TextComment 0x1ee6c940 <col:37, col:89> Text=" are all verices in the same body         (nflex x 1)"
| |-FieldDecl 0x1ee35208 <line:890:3, col:13> col:13 flexedge_rigid 'mjtByte *'
| | `-FullComment 0x1ee6ca70 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6ca40 <col:37, col:93>
| |     `-TextComment 0x1ee6ca10 <col:37, col:93> Text=" are both edge vertices in same body      (nflexedge x 1)"
| |-FieldDecl 0x1ee35298 <line:891:3, col:13> col:13 flex_centered 'mjtByte *'
| | `-FullComment 0x1ee6cb50 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6cb10 <col:37, col:89>
| |     `-TextComment 0x1ee6cae0 <col:37, col:89> Text=" are all vertex coordinates (0,0,0)       (nflex x 1)"
| |-FieldDecl 0x1ee35328 <line:892:3, col:13> col:13 flex_flatskin 'mjtByte *'
| | `-FullComment 0x1ee6cc20 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6cbf0 <col:37, col:89>
| |     `-TextComment 0x1ee6cbc0 <col:37, col:89> Text=" render flex skin with flat shading       (nflex x 1)"
| |-FieldDecl 0x1ee353c0 <line:893:3, col:13> col:13 flex_bvhadr 'int *'
| | `-FullComment 0x1ee6ccf0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6ccc0 <col:37, col:89>
| |     `-TextComment 0x1ee6cc90 <col:37, col:89> Text=" address of bvh root; -1: no bvh          (nflex x 1)"
| |-FieldDecl 0x1ee35450 <line:894:3, col:13> col:13 flex_bvhnum 'int *'
| | `-FullComment 0x1ee6cdc0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6cd90 <col:37, col:89>
| |     `-TextComment 0x1ee6cd60 <col:37, col:89> Text=" number of bounding volumes               (nflex x 1)"
| |-FieldDecl 0x1ee354e0 <line:895:3, col:13> col:13 flex_rgba 'float *'
| | `-FullComment 0x1ee6ce90 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6ce60 <col:37, col:89>
| |     `-TextComment 0x1ee6ce30 <col:37, col:89> Text=" rgba when material is omitted            (nflex x 4)"
| |-FieldDecl 0x1ee35570 <line:896:3, col:13> col:13 flex_texcoord 'float *'
| | `-FullComment 0x1ee6cf60 <col:37, col:97>
| |   `-ParagraphComment 0x1ee6cf30 <col:37, col:97>
| |     `-TextComment 0x1ee6cf00 <col:37, col:97> Text=" vertex texture coordinates               (nflextexcoord x 2)"
| |-FieldDecl 0x1ee35630 <line:899:3, col:13> col:13 mesh_vertadr 'int *'
| | `-FullComment 0x1ee6d030 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d000 <col:37, col:89>
| |     `-TextComment 0x1ee6cfd0 <col:37, col:89> Text=" first vertex address                     (nmesh x 1)"
| |-FieldDecl 0x1ee356c0 <line:900:3, col:13> col:13 mesh_vertnum 'int *'
| | `-FullComment 0x1ee6d100 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d0d0 <col:37, col:89>
| |     `-TextComment 0x1ee6d0a0 <col:37, col:89> Text=" number of vertices                       (nmesh x 1)"
| |-FieldDecl 0x1ee35750 <line:901:3, col:13> col:13 mesh_faceadr 'int *'
| | `-FullComment 0x1ee6d1d0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d1a0 <col:37, col:89>
| |     `-TextComment 0x1ee6d170 <col:37, col:89> Text=" first face address                       (nmesh x 1)"
| |-FieldDecl 0x1ee357e0 <line:902:3, col:13> col:13 mesh_facenum 'int *'
| | `-FullComment 0x1ee6d2a0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d270 <col:37, col:89>
| |     `-TextComment 0x1ee6d240 <col:37, col:89> Text=" number of faces                          (nmesh x 1)"
| |-FieldDecl 0x1ee35870 <line:903:3, col:13> col:13 mesh_bvhadr 'int *'
| | `-FullComment 0x1ee6d370 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d340 <col:37, col:89>
| |     `-TextComment 0x1ee6d310 <col:37, col:89> Text=" address of bvh root                      (nmesh x 1)"
| |-FieldDecl 0x1ee35900 <line:904:3, col:13> col:13 mesh_bvhnum 'int *'
| | `-FullComment 0x1ee6d440 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d410 <col:37, col:89>
| |     `-TextComment 0x1ee6d3e0 <col:37, col:89> Text=" number of bvh                            (nmesh x 1)"
| |-FieldDecl 0x1ee35990 <line:905:3, col:13> col:13 mesh_normaladr 'int *'
| | `-FullComment 0x1ee6d510 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d4e0 <col:37, col:89>
| |     `-TextComment 0x1ee6d4b0 <col:37, col:89> Text=" first normal address                     (nmesh x 1)"
| |-FieldDecl 0x1ee35a20 <line:906:3, col:13> col:13 mesh_normalnum 'int *'
| | `-FullComment 0x1ee6d5e0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d5b0 <col:37, col:89>
| |     `-TextComment 0x1ee6d580 <col:37, col:89> Text=" number of normals                        (nmesh x 1)"
| |-FieldDecl 0x1ee35ab0 <line:907:3, col:13> col:13 mesh_texcoordadr 'int *'
| | `-FullComment 0x1ee6d6b0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d680 <col:37, col:89>
| |     `-TextComment 0x1ee6d650 <col:37, col:89> Text=" texcoord data address; -1: no texcoord   (nmesh x 1)"
| |-FieldDecl 0x1ee35b40 <line:908:3, col:13> col:13 mesh_texcoordnum 'int *'
| | `-FullComment 0x1ee6d780 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d750 <col:37, col:89>
| |     `-TextComment 0x1ee6d720 <col:37, col:89> Text=" number of texcoord                       (nmesh x 1)"
| |-FieldDecl 0x1ee35bd0 <line:909:3, col:13> col:13 mesh_graphadr 'int *'
| | `-FullComment 0x1ee6d850 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6d820 <col:37, col:89>
| |     `-TextComment 0x1ee6d7f0 <col:37, col:89> Text=" graph data address; -1: no graph         (nmesh x 1)"
| |-FieldDecl 0x1ee35c60 <line:910:3, col:13> col:13 mesh_vert 'float *'
| | `-FullComment 0x1ee6d920 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6d8f0 <col:37, col:93>
| |     `-TextComment 0x1ee6d8c0 <col:37, col:93> Text=" vertex positions for all meshes          (nmeshvert x 3)"
| |-FieldDecl 0x1ee35cf0 <line:911:3, col:13> col:13 mesh_normal 'float *'
| | `-FullComment 0x1ee6d9f0 <col:37, col:95>
| |   `-ParagraphComment 0x1ee6d9c0 <col:37, col:95>
| |     `-TextComment 0x1ee6d990 <col:37, col:95> Text=" normals for all meshes                   (nmeshnormal x 3)"
| |-FieldDecl 0x1ee35d80 <line:912:3, col:13> col:13 mesh_texcoord 'float *'
| | `-FullComment 0x1ee6dac0 <col:37, col:97>
| |   `-ParagraphComment 0x1ee6da90 <col:37, col:97>
| |     `-TextComment 0x1ee6da60 <col:37, col:97> Text=" vertex texcoords for all meshes          (nmeshtexcoord x 2)"
| |-FieldDecl 0x1ee35e10 <line:913:3, col:13> col:13 mesh_face 'int *'
| | `-FullComment 0x1ee6dbb0 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6db80 <col:37, col:93>
| |     `-TextComment 0x1ee6db50 <col:37, col:93> Text=" vertex face data                         (nmeshface x 3)"
| |-FieldDecl 0x1ee36600 <line:914:3, col:13> col:13 mesh_facenormal 'int *'
| | `-FullComment 0x1ee6dc80 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6dc50 <col:37, col:93>
| |     `-TextComment 0x1ee6dc20 <col:37, col:93> Text=" normal face data                         (nmeshface x 3)"
| |-FieldDecl 0x1ee36690 <line:915:3, col:13> col:13 mesh_facetexcoord 'int *'
| | `-FullComment 0x1ee6dd50 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6dd20 <col:37, col:93>
| |     `-TextComment 0x1ee6dcf0 <col:37, col:93> Text=" texture face data                        (nmeshface x 3)"
| |-FieldDecl 0x1ee36720 <line:916:3, col:13> col:13 mesh_graph 'int *'
| | `-FullComment 0x1ee6de20 <col:37, col:94>
| |   `-ParagraphComment 0x1ee6ddf0 <col:37, col:94>
| |     `-TextComment 0x1ee6ddc0 <col:37, col:94> Text=" convex graph data                        (nmeshgraph x 1)"
| |-FieldDecl 0x1ee367a8 <line:917:3, col:13> col:13 mesh_scale 'mjtNum *'
| | `-FullComment 0x1ee6def0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6dec0 <col:37, col:89>
| |     `-TextComment 0x1ee6de90 <col:37, col:89> Text=" scaling applied to asset vertices        (nmesh x 3)"
| |-FieldDecl 0x1ee36838 <line:918:3, col:13> col:13 mesh_pos 'mjtNum *'
| | `-FullComment 0x1ee6dfc0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6df90 <col:37, col:89>
| |     `-TextComment 0x1ee6df60 <col:37, col:89> Text=" translation applied to asset vertices    (nmesh x 3)"
| |-FieldDecl 0x1ee368c8 <line:919:3, col:13> col:13 mesh_quat 'mjtNum *'
| | `-FullComment 0x1ee6e090 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e060 <col:37, col:89>
| |     `-TextComment 0x1ee6e030 <col:37, col:89> Text=" rotation applied to asset vertices       (nmesh x 4)"
| |-FieldDecl 0x1ee36960 <line:920:3, col:13> col:13 mesh_pathadr 'int *'
| | `-FullComment 0x1ee6e160 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e130 <col:37, col:89>
| |     `-TextComment 0x1ee6e100 <col:37, col:89> Text=" address of asset path for mesh; -1: none (nmesh x 1)"
| |-FieldDecl 0x1ee36a20 <line:923:3, col:13> col:13 skin_matid 'int *'
| | `-FullComment 0x1ee6e230 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e200 <col:37, col:89>
| |     `-TextComment 0x1ee6e1d0 <col:37, col:89> Text=" skin material id; -1: none               (nskin x 1)"
| |-FieldDecl 0x1ee36ab0 <line:924:3, col:13> col:13 skin_group 'int *'
| | `-FullComment 0x1ee6e300 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e2d0 <col:37, col:89>
| |     `-TextComment 0x1ee6e2a0 <col:37, col:89> Text=" group for visibility                     (nskin x 1)"
| |-FieldDecl 0x1ee36b40 <line:925:3, col:13> col:13 skin_rgba 'float *'
| | `-FullComment 0x1ee6e3d0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e3a0 <col:37, col:89>
| |     `-TextComment 0x1ee6e370 <col:37, col:89> Text=" skin rgba                                (nskin x 4)"
| |-FieldDecl 0x1ee36bd0 <line:926:3, col:13> col:13 skin_inflate 'float *'
| | `-FullComment 0x1ee6e4a0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e470 <col:37, col:89>
| |     `-TextComment 0x1ee6e440 <col:37, col:89> Text=" inflate skin in normal direction         (nskin x 1)"
| |-FieldDecl 0x1ee36c60 <line:927:3, col:13> col:13 skin_vertadr 'int *'
| | `-FullComment 0x1ee6e570 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e540 <col:37, col:89>
| |     `-TextComment 0x1ee6e510 <col:37, col:89> Text=" first vertex address                     (nskin x 1)"
| |-FieldDecl 0x1ee36cf0 <line:928:3, col:13> col:13 skin_vertnum 'int *'
| | `-FullComment 0x1ee6e640 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e610 <col:37, col:89>
| |     `-TextComment 0x1ee6e5e0 <col:37, col:89> Text=" number of vertices                       (nskin x 1)"
| |-FieldDecl 0x1ee36d80 <line:929:3, col:13> col:13 skin_texcoordadr 'int *'
| | `-FullComment 0x1ee6e710 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e6e0 <col:37, col:89>
| |     `-TextComment 0x1ee6e6b0 <col:37, col:89> Text=" texcoord data address; -1: no texcoord   (nskin x 1)"
| |-FieldDecl 0x1ee36e10 <line:930:3, col:13> col:13 skin_faceadr 'int *'
| | `-FullComment 0x1ee6e7e0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e7b0 <col:37, col:89>
| |     `-TextComment 0x1ee6e780 <col:37, col:89> Text=" first face address                       (nskin x 1)"
| |-FieldDecl 0x1ee36ea0 <line:931:3, col:13> col:13 skin_facenum 'int *'
| | `-FullComment 0x1ee6e8b0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e880 <col:37, col:89>
| |     `-TextComment 0x1ee6e850 <col:37, col:89> Text=" number of faces                          (nskin x 1)"
| |-FieldDecl 0x1ee36f30 <line:932:3, col:13> col:13 skin_boneadr 'int *'
| | `-FullComment 0x1ee6e980 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6e950 <col:37, col:89>
| |     `-TextComment 0x1ee6e920 <col:37, col:89> Text=" first bone in skin                       (nskin x 1)"
| |-FieldDecl 0x1ee36fc0 <line:933:3, col:13> col:13 skin_bonenum 'int *'
| | `-FullComment 0x1ee6ea50 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6ea20 <col:37, col:89>
| |     `-TextComment 0x1ee6e9f0 <col:37, col:89> Text=" number of bones in skin                  (nskin x 1)"
| |-FieldDecl 0x1ee37050 <line:934:3, col:13> col:13 skin_vert 'float *'
| | `-FullComment 0x1ee6eb20 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6eaf0 <col:37, col:93>
| |     `-TextComment 0x1ee6eac0 <col:37, col:93> Text=" vertex positions for all skin meshes     (nskinvert x 3)"
| |-FieldDecl 0x1ee370e0 <line:935:3, col:13> col:13 skin_texcoord 'float *'
| | `-FullComment 0x1ee6ec00 <col:37, col:96>
| |   `-ParagraphComment 0x1ee6ebd0 <col:37, col:96>
| |     `-TextComment 0x1ee6eba0 <col:37, col:96> Text=" vertex texcoords for all skin meshes     (nskintexvert x 2)"
| |-FieldDecl 0x1ee37170 <line:936:3, col:13> col:13 skin_face 'int *'
| | `-FullComment 0x1ee6ecd0 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6eca0 <col:37, col:93>
| |     `-TextComment 0x1ee6ec70 <col:37, col:93> Text=" triangle faces for all skin meshes       (nskinface x 3)"
| |-FieldDecl 0x1ee37200 <line:937:3, col:13> col:13 skin_bonevertadr 'int *'
| | `-FullComment 0x1ee6eda0 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6ed70 <col:37, col:93>
| |     `-TextComment 0x1ee6ed40 <col:37, col:93> Text=" first vertex in each bone                (nskinbone x 1)"
| |-FieldDecl 0x1ee37290 <line:938:3, col:13> col:13 skin_bonevertnum 'int *'
| | `-FullComment 0x1ee6ee70 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6ee40 <col:37, col:93>
| |     `-TextComment 0x1ee6ee10 <col:37, col:93> Text=" number of vertices in each bone          (nskinbone x 1)"
| |-FieldDecl 0x1ee37320 <line:939:3, col:13> col:13 skin_bonebindpos 'float *'
| | `-FullComment 0x1ee6ef40 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6ef10 <col:37, col:93>
| |     `-TextComment 0x1ee6eee0 <col:37, col:93> Text=" bind pos of each bone                    (nskinbone x 3)"
| |-FieldDecl 0x1ee373b0 <line:940:3, col:13> col:13 skin_bonebindquat 'float *'
| | `-FullComment 0x1ee6f010 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6efe0 <col:37, col:93>
| |     `-TextComment 0x1ee6efb0 <col:37, col:93> Text=" bind quat of each bone                   (nskinbone x 4)"
| |-FieldDecl 0x1ee37440 <line:941:3, col:13> col:13 skin_bonebodyid 'int *'
| | `-FullComment 0x1ee6f0e0 <col:37, col:93>
| |   `-ParagraphComment 0x1ee6f0b0 <col:37, col:93>
| |     `-TextComment 0x1ee6f080 <col:37, col:93> Text=" body id of each bone                     (nskinbone x 1)"
| |-FieldDecl 0x1ee374d0 <line:942:3, col:13> col:13 skin_bonevertid 'int *'
| | `-FullComment 0x1ee6f1b0 <col:37, col:97>
| |   `-ParagraphComment 0x1ee6f180 <col:37, col:97>
| |     `-TextComment 0x1ee6f150 <col:37, col:97> Text=" mesh ids of vertices in each bone        (nskinbonevert x 1)"
| |-FieldDecl 0x1ee37560 <line:943:3, col:13> col:13 skin_bonevertweight 'float *'
| | `-FullComment 0x1ee6f280 <col:37, col:97>
| |   `-ParagraphComment 0x1ee6f250 <col:37, col:97>
| |     `-TextComment 0x1ee6f220 <col:37, col:97> Text=" weights of vertices in each bone         (nskinbonevert x 1)"
| |-FieldDecl 0x1ee39d60 <line:944:3, col:13> col:13 skin_pathadr 'int *'
| | `-FullComment 0x1ee6f350 <col:37, col:89>
| |   `-ParagraphComment 0x1ee6f320 <col:37, col:89>
| |     `-TextComment 0x1ee6f2f0 <col:37, col:89> Text=" address of asset path for skin; -1: none (nskin x 1)"
| |-FieldDecl 0x1ee39e18 <line:947:3, col:13> col:13 hfield_size 'mjtNum *'
| | `-FullComment 0x1ee6f420 <col:37, col:91>
| |   `-ParagraphComment 0x1ee6f3f0 <col:37, col:91>
| |     `-TextComment 0x1ee6f3c0 <col:37, col:91> Text=" (x, y, z_top, z_bottom)                  (nhfield x 4)"
| |-FieldDecl 0x1ee39eb0 <line:948:3, col:13> col:13 hfield_nrow 'int *'
| | `-FullComment 0x1ee6f4f0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee6f4c0 <col:37, col:91>
| |     `-TextComment 0x1ee6f490 <col:37, col:91> Text=" number of rows in grid                   (nhfield x 1)"
| |-FieldDecl 0x1ee39f40 <line:949:3, col:13> col:13 hfield_ncol 'int *'
| | `-FullComment 0x1ee6f5c0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee6f590 <col:37, col:91>
| |     `-TextComment 0x1ee6f560 <col:37, col:91> Text=" number of columns in grid                (nhfield x 1)"
| |-FieldDecl 0x1ee39fd0 <line:950:3, col:13> col:13 hfield_adr 'int *'
| | `-FullComment 0x1ee6f690 <col:37, col:91>
| |   `-ParagraphComment 0x1ee6f660 <col:37, col:91>
| |     `-TextComment 0x1ee6f630 <col:37, col:91> Text=" address in hfield_data                   (nhfield x 1)"
| |-FieldDecl 0x1ee3a060 <line:951:3, col:13> col:13 hfield_data 'float *'
| | `-FullComment 0x1ee6f760 <col:37, col:95>
| |   `-ParagraphComment 0x1ee6f730 <col:37, col:95>
| |     `-TextComment 0x1ee6f700 <col:37, col:95> Text=" elevation data                           (nhfielddata x 1)"
| |-FieldDecl 0x1ee3a0f0 <line:952:3, col:13> col:13 hfield_pathadr 'int *'
| | `-FullComment 0x1ee6f830 <col:37, col:91>
| |   `-ParagraphComment 0x1ee6f800 <col:37, col:91>
| |     `-TextComment 0x1ee6f7d0 <col:37, col:91> Text=" address of hfield asset path; -1: none   (nhfield x 1)"
| |-FieldDecl 0x1ee3a1b0 <line:955:3, col:13> col:13 tex_type 'int *'
| | `-FullComment 0x1ee6f900 <col:37, col:88>
| |   `-ParagraphComment 0x1ee6f8d0 <col:37, col:88>
| |     `-TextComment 0x1ee6f8a0 <col:37, col:88> Text=" texture type (mjtTexture)                (ntex x 1)"
| |-FieldDecl 0x1ee3a240 <line:956:3, col:13> col:13 tex_height 'int *'
| | `-FullComment 0x1ee6f9d0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee6f9a0 <col:37, col:88>
| |     `-TextComment 0x1ee6f970 <col:37, col:88> Text=" number of rows in texture image          (ntex x 1)"
| |-FieldDecl 0x1ee3a2d0 <line:957:3, col:13> col:13 tex_width 'int *'
| | `-FullComment 0x1ee6faa0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee6fa70 <col:37, col:88>
| |     `-TextComment 0x1ee6fa40 <col:37, col:88> Text=" number of columns in texture image       (ntex x 1)"
| |-FieldDecl 0x1ee3a360 <line:958:3, col:13> col:13 tex_nchannel 'int *'
| | `-FullComment 0x1ee6fb80 <col:37, col:88>
| |   `-ParagraphComment 0x1ee6fb40 <col:37, col:88>
| |     `-TextComment 0x1ee6fb10 <col:37, col:88> Text=" number of channels in texture image      (ntex x 1)"
| |-FieldDecl 0x1ee3a3f0 <line:959:3, col:13> col:13 tex_adr 'int *'
| | `-FullComment 0x1ee6fc50 <col:37, col:88>
| |   `-ParagraphComment 0x1ee6fc20 <col:37, col:88>
| |     `-TextComment 0x1ee6fbf0 <col:37, col:88> Text=" start address in tex_data                (ntex x 1)"
| |-FieldDecl 0x1ee3a478 <line:960:3, col:13> col:13 tex_data 'mjtByte *'
| | `-FullComment 0x1ee6fd20 <col:37, col:92>
| |   `-ParagraphComment 0x1ee6fcf0 <col:37, col:92>
| |     `-TextComment 0x1ee6fcc0 <col:37, col:92> Text=" pixel values                             (ntexdata x 1)"
| |-FieldDecl 0x1ee3a510 <line:961:3, col:13> col:13 tex_pathadr 'int *'
| | `-FullComment 0x1ee6fdf0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee6fdc0 <col:37, col:88>
| |     `-TextComment 0x1ee6fd90 <col:37, col:88> Text=" address of texture asset path; -1: none  (ntex x 1)"
| |-FieldDecl 0x1ee3a5d0 <line:964:3, col:13> col:13 mat_texid 'int *'
| | `-FullComment 0x1ee6fec0 <col:37, col:97>
| |   `-ParagraphComment 0x1ee6fe90 <col:37, col:97>
| |     `-TextComment 0x1ee6fe60 <col:37, col:97> Text=" indices of textures; -1: none            (nmat x mjNTEXROLE)"
| |-FieldDecl 0x1ee3a658 <line:965:3, col:13> col:13 mat_texuniform 'mjtByte *'
| | `-FullComment 0x1ee6ff90 <col:37, col:88>
| |   `-ParagraphComment 0x1ee6ff60 <col:37, col:88>
| |     `-TextComment 0x1ee6ff30 <col:37, col:88> Text=" make texture cube uniform                (nmat x 1)"
| |-FieldDecl 0x1ee3a6f0 <line:966:3, col:13> col:13 mat_texrepeat 'float *'
| | `-FullComment 0x1ee70060 <col:37, col:88>
| |   `-ParagraphComment 0x1ee70030 <col:37, col:88>
| |     `-TextComment 0x1ee70000 <col:37, col:88> Text=" texture repetition for 2d mapping        (nmat x 2)"
| |-FieldDecl 0x1ee3a780 <line:967:3, col:13> col:13 mat_emission 'float *'
| | `-FullComment 0x1ee70130 <col:37, col:88>
| |   `-ParagraphComment 0x1ee70100 <col:37, col:88>
| |     `-TextComment 0x1ee700d0 <col:37, col:88> Text=" emission (x rgb)                         (nmat x 1)"
| |-FieldDecl 0x1ee3a810 <line:968:3, col:13> col:13 mat_specular 'float *'
| | `-FullComment 0x1ee70200 <col:37, col:88>
| |   `-ParagraphComment 0x1ee701d0 <col:37, col:88>
| |     `-TextComment 0x1ee701a0 <col:37, col:88> Text=" specular (x white)                       (nmat x 1)"
| |-FieldDecl 0x1ee3a8a0 <line:969:3, col:13> col:13 mat_shininess 'float *'
| | `-FullComment 0x1ee702d0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee702a0 <col:37, col:88>
| |     `-TextComment 0x1ee70270 <col:37, col:88> Text=" shininess coef                           (nmat x 1)"
| |-FieldDecl 0x1ee3a930 <line:970:3, col:13> col:13 mat_reflectance 'float *'
| | `-FullComment 0x1ee703a0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee70370 <col:37, col:88>
| |     `-TextComment 0x1ee70340 <col:37, col:88> Text=" reflectance (0: disable)                 (nmat x 1)"
| |-FieldDecl 0x1ee3a9c0 <line:971:3, col:13> col:13 mat_metallic 'float *'
| | `-FullComment 0x1ee70470 <col:37, col:88>
| |   `-ParagraphComment 0x1ee70440 <col:37, col:88>
| |     `-TextComment 0x1ee70410 <col:37, col:88> Text=" metallic coef                            (nmat x 1)"
| |-FieldDecl 0x1ee3aa50 <line:972:3, col:13> col:13 mat_roughness 'float *'
| | `-FullComment 0x1ee70540 <col:37, col:88>
| |   `-ParagraphComment 0x1ee70510 <col:37, col:88>
| |     `-TextComment 0x1ee704e0 <col:37, col:88> Text=" roughness coef                           (nmat x 1)"
| |-FieldDecl 0x1ee3aae0 <line:973:3, col:13> col:13 mat_rgba 'float *'
| | `-FullComment 0x1ee70610 <col:37, col:88>
| |   `-ParagraphComment 0x1ee705e0 <col:37, col:88>
| |     `-TextComment 0x1ee705b0 <col:37, col:88> Text=" rgba                                     (nmat x 4)"
| |-FieldDecl 0x1ee3aba0 <line:976:3, col:13> col:13 pair_dim 'int *'
| | `-FullComment 0x1ee706e0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee706b0 <col:37, col:89>
| |     `-TextComment 0x1ee70680 <col:37, col:89> Text=" contact dimensionality                   (npair x 1)"
| |-FieldDecl 0x1ee3ac30 <line:977:3, col:13> col:13 pair_geom1 'int *'
| | `-FullComment 0x1ee707b0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee70780 <col:37, col:89>
| |     `-TextComment 0x1ee70750 <col:37, col:89> Text=" id of geom1                              (npair x 1)"
| |-FieldDecl 0x1ee3acc0 <line:978:3, col:13> col:13 pair_geom2 'int *'
| | `-FullComment 0x1ee70880 <col:37, col:89>
| |   `-ParagraphComment 0x1ee70850 <col:37, col:89>
| |     `-TextComment 0x1ee70820 <col:37, col:89> Text=" id of geom2                              (npair x 1)"
| |-FieldDecl 0x1ee3b530 <line:979:3, col:13> col:13 pair_signature 'int *'
| | `-FullComment 0x1ee709c0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee70990 <col:37, col:89>
| |     |-TextComment 0x1ee708f0 <col:37, col:43> Text=" body1 "
| |     |-TextComment 0x1ee70910 <col:44> Text="<"
| |     |-TextComment 0x1ee70930 <col:45> Text="<"
| |     `-TextComment 0x1ee70950 <col:46, col:89> Text=" 16 + body2                      (npair x 1)"
| |-FieldDecl 0x1ee3b5b8 <line:980:3, col:13> col:13 pair_solref 'mjtNum *'
| | `-FullComment 0x1ee70a90 <col:37, col:94>
| |   `-ParagraphComment 0x1ee70a60 <col:37, col:94>
| |     `-TextComment 0x1ee70a30 <col:37, col:94> Text=" solver reference: contact normal         (npair x mjNREF)"
| |-FieldDecl 0x1ee3b648 <line:981:3, col:13> col:13 pair_solreffriction 'mjtNum *'
| | `-FullComment 0x1ee70b80 <col:37, col:94>
| |   `-ParagraphComment 0x1ee70b30 <col:37, col:94>
| |     `-TextComment 0x1ee70b00 <col:37, col:94> Text=" solver reference: contact friction       (npair x mjNREF)"
| |-FieldDecl 0x1ee3b6d8 <line:982:3, col:13> col:13 pair_solimp 'mjtNum *'
| | `-FullComment 0x1ee70c50 <col:37, col:94>
| |   `-ParagraphComment 0x1ee70c20 <col:37, col:94>
| |     `-TextComment 0x1ee70bf0 <col:37, col:94> Text=" solver impedance: contact                (npair x mjNIMP)"
| |-FieldDecl 0x1ee3b768 <line:983:3, col:13> col:13 pair_margin 'mjtNum *'
| | `-FullComment 0x1ee70d70 <col:37, col:89>
| |   `-ParagraphComment 0x1ee70d40 <col:37, col:89>
| |     |-TextComment 0x1ee70cc0 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x1ee70ce0 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x1ee70d00 <col:67, col:89> Text="            (npair x 1)"
| |-FieldDecl 0x1ee3b7f8 <line:984:3, col:13> col:13 pair_gap 'mjtNum *'
| | `-FullComment 0x1ee70e90 <col:37, col:89>
| |   `-ParagraphComment 0x1ee70e60 <col:37, col:89>
| |     |-TextComment 0x1ee70de0 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x1ee70e00 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x1ee70e20 <col:70, col:89> Text="-gap     (npair x 1)"
| |-FieldDecl 0x1ee3b888 <line:985:3, col:13> col:13 pair_friction 'mjtNum *'
| | `-FullComment 0x1ee70f60 <col:37, col:89>
| |   `-ParagraphComment 0x1ee70f30 <col:37, col:89>
| |     `-TextComment 0x1ee70f00 <col:37, col:89> Text=" tangent1, 2, spin, roll1, 2              (npair x 5)"
| |-FieldDecl 0x1ee3b950 <line:988:3, col:13> col:13 exclude_signature 'int *'
| | `-FullComment 0x1ee710a0 <col:37, col:92>
| |   `-ParagraphComment 0x1ee71070 <col:37, col:92>
| |     |-TextComment 0x1ee70fd0 <col:37, col:43> Text=" body1 "
| |     |-TextComment 0x1ee70ff0 <col:44> Text="<"
| |     |-TextComment 0x1ee71010 <col:45> Text="<"
| |     `-TextComment 0x1ee71030 <col:46, col:92> Text=" 16 + body2                      (nexclude x 1)"
| |-FieldDecl 0x1ee3ba10 <line:991:3, col:13> col:13 eq_type 'int *'
| | `-FullComment 0x1ee71170 <col:37, col:87>
| |   `-ParagraphComment 0x1ee71140 <col:37, col:87>
| |     `-TextComment 0x1ee71110 <col:37, col:87> Text=" constraint type (mjtEq)                  (neq x 1)"
| |-FieldDecl 0x1ee3baa0 <line:992:3, col:13> col:13 eq_obj1id 'int *'
| | `-FullComment 0x1ee71240 <col:37, col:87>
| |   `-ParagraphComment 0x1ee71210 <col:37, col:87>
| |     `-TextComment 0x1ee711e0 <col:37, col:87> Text=" id of object 1                           (neq x 1)"
| |-FieldDecl 0x1ee3bb30 <line:993:3, col:13> col:13 eq_obj2id 'int *'
| | `-FullComment 0x1ee71310 <col:37, col:87>
| |   `-ParagraphComment 0x1ee712e0 <col:37, col:87>
| |     `-TextComment 0x1ee712b0 <col:37, col:87> Text=" id of object 2                           (neq x 1)"
| |-FieldDecl 0x1ee3bbc0 <line:994:3, col:13> col:13 eq_objtype 'int *'
| | `-FullComment 0x1ee713e0 <col:37, col:87>
| |   `-ParagraphComment 0x1ee713b0 <col:37, col:87>
| |     `-TextComment 0x1ee71380 <col:37, col:87> Text=" type of both objects (mjtObj)            (neq x 1)"
| |-FieldDecl 0x1ee3bc48 <line:995:3, col:13> col:13 eq_active0 'mjtByte *'
| | `-FullComment 0x1ee714b0 <col:37, col:87>
| |   `-ParagraphComment 0x1ee71480 <col:37, col:87>
| |     `-TextComment 0x1ee71450 <col:37, col:87> Text=" initial enable/disable constraint state  (neq x 1)"
| |-FieldDecl 0x1ee3bcd8 <line:996:3, col:13> col:13 eq_solref 'mjtNum *'
| | `-FullComment 0x1ee71580 <col:37, col:92>
| |   `-ParagraphComment 0x1ee71550 <col:37, col:92>
| |     `-TextComment 0x1ee71520 <col:37, col:92> Text=" constraint solver reference              (neq x mjNREF)"
| |-FieldDecl 0x1ee3bd68 <line:997:3, col:13> col:13 eq_solimp 'mjtNum *'
| | `-FullComment 0x1ee71650 <col:37, col:92>
| |   `-ParagraphComment 0x1ee71620 <col:37, col:92>
| |     `-TextComment 0x1ee715f0 <col:37, col:92> Text=" constraint solver impedance              (neq x mjNIMP)"
| |-FieldDecl 0x1ee3bdf8 <line:998:3, col:13> col:13 eq_data 'mjtNum *'
| | `-FullComment 0x1ee71720 <col:37, col:95>
| |   `-ParagraphComment 0x1ee716f0 <col:37, col:95>
| |     `-TextComment 0x1ee716c0 <col:37, col:95> Text=" numeric data for constraint              (neq x mjNEQDATA)"
| |-FieldDecl 0x1ee3bec0 <line:1001:3, col:13> col:13 tendon_adr 'int *'
| | `-FullComment 0x1ee717f0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee717c0 <col:37, col:91>
| |     `-TextComment 0x1ee71790 <col:37, col:91> Text=" address of first object in tendon's path (ntendon x 1)"
| |-FieldDecl 0x1ee3bf50 <line:1002:3, col:13> col:13 tendon_num 'int *'
| | `-FullComment 0x1ee718c0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee71890 <col:37, col:91>
| |     `-TextComment 0x1ee71860 <col:37, col:91> Text=" number of objects in tendon's path       (ntendon x 1)"
| |-FieldDecl 0x1ee3bfe0 <line:1003:3, col:13> col:13 tendon_matid 'int *'
| | `-FullComment 0x1ee71990 <col:37, col:91>
| |   `-ParagraphComment 0x1ee71960 <col:37, col:91>
| |     `-TextComment 0x1ee71930 <col:37, col:91> Text=" material id for rendering                (ntendon x 1)"
| |-FieldDecl 0x1ee3c070 <line:1004:3, col:13> col:13 tendon_group 'int *'
| | `-FullComment 0x1ee71a60 <col:37, col:91>
| |   `-ParagraphComment 0x1ee71a30 <col:37, col:91>
| |     `-TextComment 0x1ee71a00 <col:37, col:91> Text=" group for visibility                     (ntendon x 1)"
| |-FieldDecl 0x1ee3c0f8 <line:1005:3, col:13> col:13 tendon_limited 'mjtByte *'
| | `-FullComment 0x1ee71b30 <col:37, col:91>
| |   `-ParagraphComment 0x1ee71b00 <col:37, col:91>
| |     `-TextComment 0x1ee71ad0 <col:37, col:91> Text=" does tendon have length limits           (ntendon x 1)"
| |-FieldDecl 0x1ee3c188 <line:1006:3, col:13> col:13 tendon_width 'mjtNum *'
| | `-FullComment 0x1ee71c30 <col:37, col:91>
| |   `-ParagraphComment 0x1ee71c00 <col:37, col:91>
| |     `-TextComment 0x1ee71bd0 <col:37, col:91> Text=" width for rendering                      (ntendon x 1)"
| |-FieldDecl 0x1ee3c218 <line:1007:3, col:13> col:13 tendon_solref_lim 'mjtNum *'
| | `-FullComment 0x1ee71d00 <col:37, col:96>
| |   `-ParagraphComment 0x1ee71cd0 <col:37, col:96>
| |     `-TextComment 0x1ee71ca0 <col:37, col:96> Text=" constraint solver reference: limit       (ntendon x mjNREF)"
| |-FieldDecl 0x1ee3c2a8 <line:1008:3, col:13> col:13 tendon_solimp_lim 'mjtNum *'
| | `-FullComment 0x1ee71dd0 <col:37, col:96>
| |   `-ParagraphComment 0x1ee71da0 <col:37, col:96>
| |     `-TextComment 0x1ee71d70 <col:37, col:96> Text=" constraint solver impedance: limit       (ntendon x mjNIMP)"
| |-FieldDecl 0x1ee3c338 <line:1009:3, col:13> col:13 tendon_solref_fri 'mjtNum *'
| | `-FullComment 0x1ee71ea0 <col:37, col:96>
| |   `-ParagraphComment 0x1ee71e70 <col:37, col:96>
| |     `-TextComment 0x1ee71e40 <col:37, col:96> Text=" constraint solver reference: friction    (ntendon x mjNREF)"
| |-FieldDecl 0x1ee3c3c8 <line:1010:3, col:13> col:13 tendon_solimp_fri 'mjtNum *'
| | `-FullComment 0x1ee71f70 <col:37, col:96>
| |   `-ParagraphComment 0x1ee71f40 <col:37, col:96>
| |     `-TextComment 0x1ee71f10 <col:37, col:96> Text=" constraint solver impedance: friction    (ntendon x mjNIMP)"
| |-FieldDecl 0x1ee3c458 <line:1011:3, col:13> col:13 tendon_range 'mjtNum *'
| | `-FullComment 0x1ee72040 <col:37, col:91>
| |   `-ParagraphComment 0x1ee72010 <col:37, col:91>
| |     `-TextComment 0x1ee71fe0 <col:37, col:91> Text=" tendon length limits                     (ntendon x 2)"
| |-FieldDecl 0x1ee3ccc0 <line:1012:3, col:13> col:13 tendon_margin 'mjtNum *'
| | `-FullComment 0x1ee72110 <col:37, col:91>
| |   `-ParagraphComment 0x1ee720e0 <col:37, col:91>
| |     `-TextComment 0x1ee720b0 <col:37, col:91> Text=" min distance for limit detection         (ntendon x 1)"
| |-FieldDecl 0x1ee3cd48 <line:1013:3, col:13> col:13 tendon_stiffness 'mjtNum *'
| | `-FullComment 0x1ee721e0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee721b0 <col:37, col:91>
| |     `-TextComment 0x1ee72180 <col:37, col:91> Text=" stiffness coefficient                    (ntendon x 1)"
| |-FieldDecl 0x1ee3cdd8 <line:1014:3, col:13> col:13 tendon_damping 'mjtNum *'
| | `-FullComment 0x1ee722b0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee72280 <col:37, col:91>
| |     `-TextComment 0x1ee72250 <col:37, col:91> Text=" damping coefficient                      (ntendon x 1)"
| |-FieldDecl 0x1ee3ce68 <line:1015:3, col:13> col:13 tendon_frictionloss 'mjtNum *'
| | `-FullComment 0x1ee72380 <col:37, col:91>
| |   `-ParagraphComment 0x1ee72350 <col:37, col:91>
| |     `-TextComment 0x1ee72320 <col:37, col:91> Text=" loss due to friction                     (ntendon x 1)"
| |-FieldDecl 0x1ee3cef8 <line:1016:3, col:13> col:13 tendon_lengthspring 'mjtNum *'
| | `-FullComment 0x1ee72450 <col:37, col:91>
| |   `-ParagraphComment 0x1ee72420 <col:37, col:91>
| |     `-TextComment 0x1ee723f0 <col:37, col:91> Text=" spring resting length range              (ntendon x 2)"
| |-FieldDecl 0x1ee3cf88 <line:1017:3, col:13> col:13 tendon_length0 'mjtNum *'
| | `-FullComment 0x1ee72520 <col:37, col:91>
| |   `-ParagraphComment 0x1ee724f0 <col:37, col:91>
| |     `-TextComment 0x1ee724c0 <col:37, col:91> Text=" tendon length in qpos0                   (ntendon x 1)"
| |-FieldDecl 0x1ee3d018 <line:1018:3, col:13> col:13 tendon_invweight0 'mjtNum *'
| | `-FullComment 0x1ee725f0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee725c0 <col:37, col:91>
| |     `-TextComment 0x1ee72590 <col:37, col:91> Text=" inv. weight in qpos0                     (ntendon x 1)"
| |-FieldDecl 0x1ee3d0a8 <line:1019:3, col:13> col:13 tendon_user 'mjtNum *'
| | `-FullComment 0x1ee726c0 <col:37, col:102>
| |   `-ParagraphComment 0x1ee72690 <col:37, col:102>
| |     `-TextComment 0x1ee72660 <col:37, col:102> Text=" user data                                (ntendon x nuser_tendon)"
| |-FieldDecl 0x1ee3d140 <line:1020:3, col:13> col:13 tendon_rgba 'float *'
| | `-FullComment 0x1ee72790 <col:37, col:91>
| |   `-ParagraphComment 0x1ee72760 <col:37, col:91>
| |     `-TextComment 0x1ee72730 <col:37, col:91> Text=" rgba when material is omitted            (ntendon x 4)"
| |-FieldDecl 0x1ee3d200 <line:1023:3, col:13> col:13 wrap_type 'int *'
| | `-FullComment 0x1ee72860 <col:37, col:89>
| |   `-ParagraphComment 0x1ee72830 <col:37, col:89>
| |     `-TextComment 0x1ee72800 <col:37, col:89> Text=" wrap object type (mjtWrap)               (nwrap x 1)"
| |-FieldDecl 0x1ee3d290 <line:1024:3, col:13> col:13 wrap_objid 'int *'
| | `-FullComment 0x1ee72930 <col:37, col:89>
| |   `-ParagraphComment 0x1ee72900 <col:37, col:89>
| |     `-TextComment 0x1ee728d0 <col:37, col:89> Text=" object id: geom, site, joint             (nwrap x 1)"
| |-FieldDecl 0x1ee3d318 <line:1025:3, col:13> col:13 wrap_prm 'mjtNum *'
| | `-FullComment 0x1ee72a00 <col:37, col:89>
| |   `-ParagraphComment 0x1ee729d0 <col:37, col:89>
| |     `-TextComment 0x1ee729a0 <col:37, col:89> Text=" divisor, joint coef, or site id          (nwrap x 1)"
| |-FieldDecl 0x1ee3d3e0 <line:1028:3, col:13> col:13 actuator_trntype 'int *'
| | `-FullComment 0x1ee72ad0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee72aa0 <col:37, col:86>
| |     `-TextComment 0x1ee72a70 <col:37, col:86> Text=" transmission type (mjtTrn)               (nu x 1)"
| |-FieldDecl 0x1ee3d470 <line:1029:3, col:13> col:13 actuator_dyntype 'int *'
| | `-FullComment 0x1ee72bb0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee72b70 <col:37, col:86>
| |     `-TextComment 0x1ee72b40 <col:37, col:86> Text=" dynamics type (mjtDyn)                   (nu x 1)"
| |-FieldDecl 0x1ee3d500 <line:1030:3, col:13> col:13 actuator_gaintype 'int *'
| | `-FullComment 0x1ee72c80 <col:37, col:86>
| |   `-ParagraphComment 0x1ee72c50 <col:37, col:86>
| |     `-TextComment 0x1ee72c20 <col:37, col:86> Text=" gain type (mjtGain)                      (nu x 1)"
| |-FieldDecl 0x1ee3d590 <line:1031:3, col:13> col:13 actuator_biastype 'int *'
| | `-FullComment 0x1ee72d50 <col:37, col:86>
| |   `-ParagraphComment 0x1ee72d20 <col:37, col:86>
| |     `-TextComment 0x1ee72cf0 <col:37, col:86> Text=" bias type (mjtBias)                      (nu x 1)"
| |-FieldDecl 0x1ee3d620 <line:1032:3, col:13> col:13 actuator_trnid 'int *'
| | `-FullComment 0x1ee72e20 <col:37, col:86>
| |   `-ParagraphComment 0x1ee72df0 <col:37, col:86>
| |     `-TextComment 0x1ee72dc0 <col:37, col:86> Text=" transmission id: joint, tendon, site     (nu x 2)"
| |-FieldDecl 0x1ee3d6b0 <line:1033:3, col:13> col:13 actuator_actadr 'int *'
| | `-FullComment 0x1ee72ef0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee72ec0 <col:37, col:86>
| |     `-TextComment 0x1ee72e90 <col:37, col:86> Text=" first activation address; -1: stateless  (nu x 1)"
| |-FieldDecl 0x1ee3d740 <line:1034:3, col:13> col:13 actuator_actnum 'int *'
| | `-FullComment 0x1ee72fc0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee72f90 <col:37, col:86>
| |     `-TextComment 0x1ee72f60 <col:37, col:86> Text=" number of activation variables           (nu x 1)"
| |-FieldDecl 0x1ee3d7d0 <line:1035:3, col:13> col:13 actuator_group 'int *'
| | `-FullComment 0x1ee73090 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73060 <col:37, col:86>
| |     `-TextComment 0x1ee73030 <col:37, col:86> Text=" group for visibility                     (nu x 1)"
| |-FieldDecl 0x1ee3d858 <line:1036:3, col:13> col:13 actuator_ctrllimited 'mjtByte *'
| | `-FullComment 0x1ee73160 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73130 <col:37, col:86>
| |     `-TextComment 0x1ee73100 <col:37, col:86> Text=" is control limited                       (nu x 1)"
| |-FieldDecl 0x1ee3d8e8 <line:1037:3, col:13> col:13 actuator_forcelimited 'mjtByte *'
| | `-FullComment 0x1ee73230 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73200 <col:37, col:86>
| |     `-TextComment 0x1ee731d0 <col:37, col:86> Text=" is force limited                         (nu x 1)"
| |-FieldDecl 0x1ee3d978 <line:1038:3, col:13> col:13 actuator_actlimited 'mjtByte *'
| | `-FullComment 0x1ee73300 <col:37, col:86>
| |   `-ParagraphComment 0x1ee732d0 <col:37, col:86>
| |     `-TextComment 0x1ee732a0 <col:37, col:86> Text=" is activation limited                    (nu x 1)"
| |-FieldDecl 0x1ee3da08 <line:1039:3, col:13> col:13 actuator_dynprm 'mjtNum *'
| | `-FullComment 0x1ee733d0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee733a0 <col:37, col:91>
| |     `-TextComment 0x1ee73370 <col:37, col:91> Text=" dynamics parameters                      (nu x mjNDYN)"
| |-FieldDecl 0x1ee3da98 <line:1040:3, col:13> col:13 actuator_gainprm 'mjtNum *'
| | `-FullComment 0x1ee734a0 <col:37, col:92>
| |   `-ParagraphComment 0x1ee73470 <col:37, col:92>
| |     `-TextComment 0x1ee73440 <col:37, col:92> Text=" gain parameters                          (nu x mjNGAIN)"
| |-FieldDecl 0x1ee3db28 <line:1041:3, col:13> col:13 actuator_biasprm 'mjtNum *'
| | `-FullComment 0x1ee73570 <col:37, col:92>
| |   `-ParagraphComment 0x1ee73540 <col:37, col:92>
| |     `-TextComment 0x1ee73510 <col:37, col:92> Text=" bias parameters                          (nu x mjNBIAS)"
| |-FieldDecl 0x1ee3dbb8 <line:1042:3, col:13> col:13 actuator_actearly 'mjtByte *'
| | `-FullComment 0x1ee73640 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73610 <col:37, col:86>
| |     `-TextComment 0x1ee735e0 <col:37, col:86> Text=" step activation before force             (nu x 1)"
| |-FieldDecl 0x1ee3dc48 <line:1043:3, col:13> col:13 actuator_ctrlrange 'mjtNum *'
| | `-FullComment 0x1ee73710 <col:37, col:86>
| |   `-ParagraphComment 0x1ee736e0 <col:37, col:86>
| |     `-TextComment 0x1ee736b0 <col:37, col:86> Text=" range of controls                        (nu x 2)"
| |-FieldDecl 0x1ee40198 <line:1044:3, col:13> col:13 actuator_forcerange 'mjtNum *'
| | `-FullComment 0x1ee737e0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee737b0 <col:37, col:86>
| |     `-TextComment 0x1ee73780 <col:37, col:86> Text=" range of forces                          (nu x 2)"
| |-FieldDecl 0x1ee40228 <line:1045:3, col:13> col:13 actuator_actrange 'mjtNum *'
| | `-FullComment 0x1ee738b0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73880 <col:37, col:86>
| |     `-TextComment 0x1ee73850 <col:37, col:86> Text=" range of activations                     (nu x 2)"
| |-FieldDecl 0x1ee402b8 <line:1046:3, col:13> col:13 actuator_gear 'mjtNum *'
| | `-FullComment 0x1ee73980 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73950 <col:37, col:86>
| |     `-TextComment 0x1ee73920 <col:37, col:86> Text=" scale length and transmitted force       (nu x 6)"
| |-FieldDecl 0x1ee40348 <line:1047:3, col:13> col:13 actuator_cranklength 'mjtNum *'
| | `-FullComment 0x1ee73a50 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73a20 <col:37, col:86>
| |     `-TextComment 0x1ee739f0 <col:37, col:86> Text=" crank length for slider-crank            (nu x 1)"
| |-FieldDecl 0x1ee403d8 <line:1048:3, col:13> col:13 actuator_acc0 'mjtNum *'
| | `-FullComment 0x1ee73b20 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73af0 <col:37, col:86>
| |     `-TextComment 0x1ee73ac0 <col:37, col:86> Text=" acceleration from unit force in qpos0    (nu x 1)"
| |-FieldDecl 0x1ee40468 <line:1049:3, col:13> col:13 actuator_length0 'mjtNum *'
| | `-FullComment 0x1ee73c10 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73be0 <col:37, col:86>
| |     `-TextComment 0x1ee73bb0 <col:37, col:86> Text=" actuator length in qpos0                 (nu x 1)"
| |-FieldDecl 0x1ee404f8 <line:1050:3, col:13> col:13 actuator_lengthrange 'mjtNum *'
| | `-FullComment 0x1ee73ce0 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73cb0 <col:37, col:86>
| |     `-TextComment 0x1ee73c80 <col:37, col:86> Text=" feasible actuator length range           (nu x 2)"
| |-FieldDecl 0x1ee40588 <line:1051:3, col:13> col:13 actuator_user 'mjtNum *'
| | `-FullComment 0x1ee73db0 <col:37, col:99>
| |   `-ParagraphComment 0x1ee73d80 <col:37, col:99>
| |     `-TextComment 0x1ee73d50 <col:37, col:99> Text=" user data                                (nu x nuser_actuator)"
| |-FieldDecl 0x1ee40620 <line:1052:3, col:13> col:13 actuator_plugin 'int *'
| | `-FullComment 0x1ee73e80 <col:37, col:86>
| |   `-ParagraphComment 0x1ee73e50 <col:37, col:86>
| |     `-TextComment 0x1ee73e20 <col:37, col:86> Text=" plugin instance id; -1: not a plugin     (nu x 1)"
| |-FieldDecl 0x1ee406e0 <line:1055:3, col:13> col:13 sensor_type 'int *'
| | `-FullComment 0x1ee73f50 <col:37, col:91>
| |   `-ParagraphComment 0x1ee73f20 <col:37, col:91>
| |     `-TextComment 0x1ee73ef0 <col:37, col:91> Text=" sensor type (mjtSensor)                  (nsensor x 1)"
| |-FieldDecl 0x1ee40770 <line:1056:3, col:13> col:13 sensor_datatype 'int *'
| | `-FullComment 0x1ee74020 <col:37, col:91>
| |   `-ParagraphComment 0x1ee73ff0 <col:37, col:91>
| |     `-TextComment 0x1ee73fc0 <col:37, col:91> Text=" numeric data type (mjtDataType)          (nsensor x 1)"
| |-FieldDecl 0x1ee40800 <line:1057:3, col:13> col:13 sensor_needstage 'int *'
| | `-FullComment 0x1ee740f0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee740c0 <col:37, col:91>
| |     `-TextComment 0x1ee74090 <col:37, col:91> Text=" required compute stage (mjtStage)        (nsensor x 1)"
| |-FieldDecl 0x1ee40890 <line:1058:3, col:13> col:13 sensor_objtype 'int *'
| | `-FullComment 0x1ee741c0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee74190 <col:37, col:91>
| |     `-TextComment 0x1ee74160 <col:37, col:91> Text=" type of sensorized object (mjtObj)       (nsensor x 1)"
| |-FieldDecl 0x1ee40920 <line:1059:3, col:13> col:13 sensor_objid 'int *'
| | `-FullComment 0x1ee74290 <col:37, col:91>
| |   `-ParagraphComment 0x1ee74260 <col:37, col:91>
| |     `-TextComment 0x1ee74230 <col:37, col:91> Text=" id of sensorized object                  (nsensor x 1)"
| |-FieldDecl 0x1ee409b0 <line:1060:3, col:13> col:13 sensor_reftype 'int *'
| | `-FullComment 0x1ee74360 <col:37, col:91>
| |   `-ParagraphComment 0x1ee74330 <col:37, col:91>
| |     `-TextComment 0x1ee74300 <col:37, col:91> Text=" type of reference frame (mjtObj)         (nsensor x 1)"
| |-FieldDecl 0x1ee40a40 <line:1061:3, col:13> col:13 sensor_refid 'int *'
| | `-FullComment 0x1ee74430 <col:37, col:91>
| |   `-ParagraphComment 0x1ee74400 <col:37, col:91>
| |     `-TextComment 0x1ee743d0 <col:37, col:91> Text=" id of reference frame; -1: global frame  (nsensor x 1)"
| |-FieldDecl 0x1ee40ad0 <line:1062:3, col:13> col:13 sensor_dim 'int *'
| | `-FullComment 0x1ee74500 <col:37, col:91>
| |   `-ParagraphComment 0x1ee744d0 <col:37, col:91>
| |     `-TextComment 0x1ee744a0 <col:37, col:91> Text=" number of scalar outputs                 (nsensor x 1)"
| |-FieldDecl 0x1ee40b60 <line:1063:3, col:13> col:13 sensor_adr 'int *'
| | `-FullComment 0x1ee745d0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee745a0 <col:37, col:91>
| |     `-TextComment 0x1ee74570 <col:37, col:91> Text=" address in sensor array                  (nsensor x 1)"
| |-FieldDecl 0x1ee40be8 <line:1064:3, col:13> col:13 sensor_cutoff 'mjtNum *'
| | `-FullComment 0x1ee746a0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee74670 <col:37, col:91>
| |     `-TextComment 0x1ee74640 <col:37, col:91> Text=" cutoff for real and positive; 0: ignore  (nsensor x 1)"
| |-FieldDecl 0x1ee40c78 <line:1065:3, col:13> col:13 sensor_noise 'mjtNum *'
| | `-FullComment 0x1ee74770 <col:37, col:91>
| |   `-ParagraphComment 0x1ee74740 <col:37, col:91>
| |     `-TextComment 0x1ee74710 <col:37, col:91> Text=" noise standard deviation                 (nsensor x 1)"
| |-FieldDecl 0x1ee40d08 <line:1066:3, col:13> col:13 sensor_user 'mjtNum *'
| | `-FullComment 0x1ee74840 <col:37, col:102>
| |   `-ParagraphComment 0x1ee74810 <col:37, col:102>
| |     `-TextComment 0x1ee747e0 <col:37, col:102> Text=" user data                                (nsensor x nuser_sensor)"
| |-FieldDecl 0x1ee40da0 <line:1067:3, col:13> col:13 sensor_plugin 'int *'
| | `-FullComment 0x1ee74910 <col:37, col:91>
| |   `-ParagraphComment 0x1ee748e0 <col:37, col:91>
| |     `-TextComment 0x1ee748b0 <col:37, col:91> Text=" plugin instance id; -1: not a plugin     (nsensor x 1)"
| |-FieldDecl 0x1ee40e60 <line:1070:3, col:13> col:13 plugin 'int *'
| | `-FullComment 0x1ee749e0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee749b0 <col:37, col:91>
| |     `-TextComment 0x1ee74980 <col:37, col:91> Text=" globally registered plugin slot number   (nplugin x 1)"
| |-FieldDecl 0x1ee40ef0 <line:1071:3, col:13> col:13 plugin_stateadr 'int *'
| | `-FullComment 0x1ee74ab0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee74a80 <col:37, col:91>
| |     `-TextComment 0x1ee74a50 <col:37, col:91> Text=" address in the plugin state array        (nplugin x 1)"
| |-FieldDecl 0x1ee40f80 <line:1072:3, col:13> col:13 plugin_statenum 'int *'
| | `-FullComment 0x1ee74b80 <col:37, col:91>
| |   `-ParagraphComment 0x1ee74b50 <col:37, col:91>
| |     `-TextComment 0x1ee74b20 <col:37, col:91> Text=" number of states in the plugin instance  (nplugin x 1)"
| |-FieldDecl 0x1ee41010 <line:1073:3, col:13> col:13 plugin_attr 'char *'
| | `-FullComment 0x1ee74c60 <col:37, col:95>
| |   `-ParagraphComment 0x1ee74c30 <col:37, col:95>
| |     `-TextComment 0x1ee74c00 <col:37, col:95> Text=" config attributes of plugin instances    (npluginattr x 1)"
| |-FieldDecl 0x1ee410a0 <line:1074:3, col:13> col:13 plugin_attradr 'int *'
| | `-FullComment 0x1ee74d30 <col:37, col:91>
| |   `-ParagraphComment 0x1ee74d00 <col:37, col:91>
| |     `-TextComment 0x1ee74cd0 <col:37, col:91> Text=" address to each instance's config attrib (nplugin x 1)"
| |-FieldDecl 0x1ee41170 <line:1077:3, col:13> col:13 numeric_adr 'int *'
| | `-FullComment 0x1ee74e00 <col:37, col:92>
| |   `-ParagraphComment 0x1ee74dd0 <col:37, col:92>
| |     `-TextComment 0x1ee74da0 <col:37, col:92> Text=" address of field in numeric_data         (nnumeric x 1)"
| |-FieldDecl 0x1ee41200 <line:1078:3, col:13> col:13 numeric_size 'int *'
| | `-FullComment 0x1ee74ed0 <col:37, col:92>
| |   `-ParagraphComment 0x1ee74ea0 <col:37, col:92>
| |     `-TextComment 0x1ee74e70 <col:37, col:92> Text=" size of numeric field                    (nnumeric x 1)"
| |-FieldDecl 0x1ee41288 <line:1079:3, col:13> col:13 numeric_data 'mjtNum *'
| | `-FullComment 0x1ee74fa0 <col:37, col:96>
| |   `-ParagraphComment 0x1ee74f70 <col:37, col:96>
| |     `-TextComment 0x1ee74f40 <col:37, col:96> Text=" array of all numeric fields              (nnumericdata x 1)"
| |-FieldDecl 0x1ee41350 <line:1082:3, col:13> col:13 text_adr 'int *'
| | `-FullComment 0x1ee75070 <col:37, col:89>
| |   `-ParagraphComment 0x1ee75040 <col:37, col:89>
| |     `-TextComment 0x1ee75010 <col:37, col:89> Text=" address of text in text_data             (ntext x 1)"
| |-FieldDecl 0x1ee413e0 <line:1083:3, col:13> col:13 text_size 'int *'
| | `-FullComment 0x1ee75140 <col:37, col:89>
| |   `-ParagraphComment 0x1ee75110 <col:37, col:89>
| |     `-TextComment 0x1ee750e0 <col:37, col:89> Text=" size of text field (strlen+1)            (ntext x 1)"
| |-FieldDecl 0x1ee41470 <line:1084:3, col:13> col:13 text_data 'char *'
| | `-FullComment 0x1ee75210 <col:37, col:93>
| |   `-ParagraphComment 0x1ee751e0 <col:37, col:93>
| |     `-TextComment 0x1ee751b0 <col:37, col:93> Text=" array of all text fields (0-terminated)  (ntextdata x 1)"
| |-FieldDecl 0x1ee41530 <line:1087:3, col:13> col:13 tuple_adr 'int *'
| | `-FullComment 0x1ee752e0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee752b0 <col:37, col:90>
| |     `-TextComment 0x1ee75280 <col:37, col:90> Text=" address of text in text_data             (ntuple x 1)"
| |-FieldDecl 0x1ee415c0 <line:1088:3, col:13> col:13 tuple_size 'int *'
| | `-FullComment 0x1ee753b0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee75380 <col:37, col:90>
| |     `-TextComment 0x1ee75350 <col:37, col:90> Text=" number of objects in tuple               (ntuple x 1)"
| |-FieldDecl 0x1ee41650 <line:1089:3, col:13> col:13 tuple_objtype 'int *'
| | `-FullComment 0x1ee75480 <col:37, col:94>
| |   `-ParagraphComment 0x1ee75450 <col:37, col:94>
| |     `-TextComment 0x1ee75420 <col:37, col:94> Text=" array of object types in all tuples      (ntupledata x 1)"
| |-FieldDecl 0x1ee416e0 <line:1090:3, col:13> col:13 tuple_objid 'int *'
| | `-FullComment 0x1ee75550 <col:37, col:94>
| |   `-ParagraphComment 0x1ee75520 <col:37, col:94>
| |     `-TextComment 0x1ee754f0 <col:37, col:94> Text=" array of object ids in all tuples        (ntupledata x 1)"
| |-FieldDecl 0x1ee41768 <line:1091:3, col:13> col:13 tuple_objprm 'mjtNum *'
| | `-FullComment 0x1ee75620 <col:37, col:94>
| |   `-ParagraphComment 0x1ee755f0 <col:37, col:94>
| |     `-TextComment 0x1ee755c0 <col:37, col:94> Text=" array of object params in all tuples     (ntupledata x 1)"
| |-FieldDecl 0x1ee41828 <line:1094:3, col:13> col:13 key_time 'mjtNum *'
| | `-FullComment 0x1ee756f0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee756c0 <col:37, col:88>
| |     `-TextComment 0x1ee75690 <col:37, col:88> Text=" key time                                 (nkey x 1)"
| |-FieldDecl 0x1ee418b8 <line:1095:3, col:13> col:13 key_qpos 'mjtNum *'
| | `-FullComment 0x1ee757c0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee75790 <col:37, col:89>
| |     `-TextComment 0x1ee75760 <col:37, col:89> Text=" key position                             (nkey x nq)"
| |-FieldDecl 0x1ee41948 <line:1096:3, col:13> col:13 key_qvel 'mjtNum *'
| | `-FullComment 0x1ee75890 <col:37, col:89>
| |   `-ParagraphComment 0x1ee75860 <col:37, col:89>
| |     `-TextComment 0x1ee75830 <col:37, col:89> Text=" key velocity                             (nkey x nv)"
| |-FieldDecl 0x1ee419d8 <line:1097:3, col:13> col:13 key_act 'mjtNum *'
| | `-FullComment 0x1ee75960 <col:37, col:89>
| |   `-ParagraphComment 0x1ee75930 <col:37, col:89>
| |     `-TextComment 0x1ee75900 <col:37, col:89> Text=" key activation                           (nkey x na)"
| |-FieldDecl 0x1ee41a68 <line:1098:3, col:13> col:13 key_mpos 'mjtNum *'
| | `-FullComment 0x1ee75a30 <col:37, col:95>
| |   `-ParagraphComment 0x1ee75a00 <col:37, col:95>
| |     `-TextComment 0x1ee759d0 <col:37, col:95> Text=" key mocap position                       (nkey x nmocap*3)"
| |-FieldDecl 0x1ee41af8 <line:1099:3, col:13> col:13 key_mquat 'mjtNum *'
| | `-FullComment 0x1ee75b00 <col:37, col:95>
| |   `-ParagraphComment 0x1ee75ad0 <col:37, col:95>
| |     `-TextComment 0x1ee75aa0 <col:37, col:95> Text=" key mocap quaternion                     (nkey x nmocap*4)"
| |-FieldDecl 0x1ee41b88 <line:1100:3, col:13> col:13 key_ctrl 'mjtNum *'
| | `-FullComment 0x1ee5eaa0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee75ba0 <col:37, col:89>
| |     `-TextComment 0x1ee75b70 <col:37, col:89> Text=" key control                              (nkey x nu)"
| |-FieldDecl 0x1ee41c50 <line:1103:3, col:13> col:13 name_bodyadr 'int *'
| | `-FullComment 0x1ee5eb70 <col:37, col:89>
| |   `-ParagraphComment 0x1ee5eb40 <col:37, col:89>
| |     `-TextComment 0x1ee5eb10 <col:37, col:89> Text=" body name pointers                       (nbody x 1)"
| |-FieldDecl 0x1ee41ce0 <line:1104:3, col:13> col:13 name_jntadr 'int *'
| | `-FullComment 0x1ee5ec40 <col:37, col:88>
| |   `-ParagraphComment 0x1ee5ec10 <col:37, col:88>
| |     `-TextComment 0x1ee5ebe0 <col:37, col:88> Text=" joint name pointers                      (njnt x 1)"
| |-FieldDecl 0x1ee41d70 <line:1105:3, col:13> col:13 name_geomadr 'int *'
| | `-FullComment 0x1ee5ed10 <col:37, col:89>
| |   `-ParagraphComment 0x1ee5ece0 <col:37, col:89>
| |     `-TextComment 0x1ee5ecb0 <col:37, col:89> Text=" geom name pointers                       (ngeom x 1)"
| |-FieldDecl 0x1ee41e00 <line:1106:3, col:13> col:13 name_siteadr 'int *'
| | `-FullComment 0x1ee5ede0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee5edb0 <col:37, col:89>
| |     `-TextComment 0x1ee5ed80 <col:37, col:89> Text=" site name pointers                       (nsite x 1)"
| |-FieldDecl 0x1ee41e90 <line:1107:3, col:13> col:13 name_camadr 'int *'
| | `-FullComment 0x1ee5eeb0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee5ee80 <col:37, col:88>
| |     `-TextComment 0x1ee5ee50 <col:37, col:88> Text=" camera name pointers                     (ncam x 1)"
| |-FieldDecl 0x1ee41f20 <line:1108:3, col:13> col:13 name_lightadr 'int *'
| | `-FullComment 0x1ee5ef80 <col:37, col:90>
| |   `-ParagraphComment 0x1ee5ef50 <col:37, col:90>
| |     `-TextComment 0x1ee5ef20 <col:37, col:90> Text=" light name pointers                      (nlight x 1)"
| |-FieldDecl 0x1ee41fb0 <line:1109:3, col:13> col:13 name_flexadr 'int *'
| | `-FullComment 0x1ee5f050 <col:37, col:89>
| |   `-ParagraphComment 0x1ee5f020 <col:37, col:89>
| |     `-TextComment 0x1ee5eff0 <col:37, col:89> Text=" flex name pointers                       (nflex x 1)"
| |-FieldDecl 0x1ee42040 <line:1110:3, col:13> col:13 name_meshadr 'int *'
| | `-FullComment 0x1ee5f120 <col:37, col:89>
| |   `-ParagraphComment 0x1ee5f0f0 <col:37, col:89>
| |     `-TextComment 0x1ee5f0c0 <col:37, col:89> Text=" mesh name pointers                       (nmesh x 1)"
| |-FieldDecl 0x1ee420d0 <line:1111:3, col:13> col:13 name_skinadr 'int *'
| | `-FullComment 0x1ee5f1f0 <col:37, col:89>
| |   `-ParagraphComment 0x1ee5f1c0 <col:37, col:89>
| |     `-TextComment 0x1ee5f190 <col:37, col:89> Text=" skin name pointers                       (nskin x 1)"
| |-FieldDecl 0x1ee44650 <line:1112:3, col:13> col:13 name_hfieldadr 'int *'
| | `-FullComment 0x1ee5f2c0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee5f290 <col:37, col:91>
| |     `-TextComment 0x1ee5f260 <col:37, col:91> Text=" hfield name pointers                     (nhfield x 1)"
| |-FieldDecl 0x1ee446e0 <line:1113:3, col:13> col:13 name_texadr 'int *'
| | `-FullComment 0x1ee5f390 <col:37, col:88>
| |   `-ParagraphComment 0x1ee5f360 <col:37, col:88>
| |     `-TextComment 0x1ee5f330 <col:37, col:88> Text=" texture name pointers                    (ntex x 1)"
| |-FieldDecl 0x1ee44770 <line:1114:3, col:13> col:13 name_matadr 'int *'
| | `-FullComment 0x1ee5f460 <col:37, col:88>
| |   `-ParagraphComment 0x1ee5f430 <col:37, col:88>
| |     `-TextComment 0x1ee5f400 <col:37, col:88> Text=" material name pointers                   (nmat x 1)"
| |-FieldDecl 0x1ee44800 <line:1115:3, col:13> col:13 name_pairadr 'int *'
| | `-FullComment 0x1ee5f530 <col:37, col:89>
| |   `-ParagraphComment 0x1ee5f500 <col:37, col:89>
| |     `-TextComment 0x1ee5f4d0 <col:37, col:89> Text=" geom pair name pointers                  (npair x 1)"
| |-FieldDecl 0x1ee44890 <line:1116:3, col:13> col:13 name_excludeadr 'int *'
| | `-FullComment 0x1ee5f600 <col:37, col:92>
| |   `-ParagraphComment 0x1ee5f5d0 <col:37, col:92>
| |     `-TextComment 0x1ee5f5a0 <col:37, col:92> Text=" exclude name pointers                    (nexclude x 1)"
| |-FieldDecl 0x1ee44920 <line:1117:3, col:13> col:13 name_eqadr 'int *'
| | `-FullComment 0x1ee5f6d0 <col:37, col:87>
| |   `-ParagraphComment 0x1ee5f6a0 <col:37, col:87>
| |     `-TextComment 0x1ee5f670 <col:37, col:87> Text=" equality constraint name pointers        (neq x 1)"
| |-FieldDecl 0x1ee449b0 <line:1118:3, col:13> col:13 name_tendonadr 'int *'
| | `-FullComment 0x1ee5f7a0 <col:37, col:91>
| |   `-ParagraphComment 0x1ee5f770 <col:37, col:91>
| |     `-TextComment 0x1ee5f740 <col:37, col:91> Text=" tendon name pointers                     (ntendon x 1)"
| |-FieldDecl 0x1ee44a40 <line:1119:3, col:13> col:13 name_actuatoradr 'int *'
| | `-FullComment 0x1ee5f870 <col:37, col:86>
| |   `-ParagraphComment 0x1ee5f840 <col:37, col:86>
| |     `-TextComment 0x1ee5f810 <col:37, col:86> Text=" actuator name pointers                   (nu x 1)"
| |-FieldDecl 0x1ee44ad0 <line:1120:3, col:13> col:13 name_sensoradr 'int *'
| | `-FullComment 0x1ee5f940 <col:37, col:91>
| |   `-ParagraphComment 0x1ee5f910 <col:37, col:91>
| |     `-TextComment 0x1ee5f8e0 <col:37, col:91> Text=" sensor name pointers                     (nsensor x 1)"
| |-FieldDecl 0x1ee44b60 <line:1121:3, col:13> col:13 name_numericadr 'int *'
| | `-FullComment 0x1ee5fa10 <col:37, col:92>
| |   `-ParagraphComment 0x1ee5f9e0 <col:37, col:92>
| |     `-TextComment 0x1ee5f9b0 <col:37, col:92> Text=" numeric name pointers                    (nnumeric x 1)"
| |-FieldDecl 0x1ee44bf0 <line:1122:3, col:13> col:13 name_textadr 'int *'
| | `-FullComment 0x1ee5fb00 <col:37, col:89>
| |   `-ParagraphComment 0x1ee5fad0 <col:37, col:89>
| |     `-TextComment 0x1ee5faa0 <col:37, col:89> Text=" text name pointers                       (ntext x 1)"
| |-FieldDecl 0x1ee44c80 <line:1123:3, col:13> col:13 name_tupleadr 'int *'
| | `-FullComment 0x1ee5fbd0 <col:37, col:90>
| |   `-ParagraphComment 0x1ee5fba0 <col:37, col:90>
| |     `-TextComment 0x1ee5fb70 <col:37, col:90> Text=" tuple name pointers                      (ntuple x 1)"
| |-FieldDecl 0x1ee44d10 <line:1124:3, col:13> col:13 name_keyadr 'int *'
| | `-FullComment 0x1ee5fca0 <col:37, col:88>
| |   `-ParagraphComment 0x1ee5fc70 <col:37, col:88>
| |     `-TextComment 0x1ee5fc40 <col:37, col:88> Text=" keyframe name pointers                   (nkey x 1)"
| |-FieldDecl 0x1ee44da0 <line:1125:3, col:13> col:13 name_pluginadr 'int *'
| | `-FullComment 0x1ee5fd70 <col:37, col:91>
| |   `-ParagraphComment 0x1ee5fd40 <col:37, col:91>
| |     `-TextComment 0x1ee5fd10 <col:37, col:91> Text=" plugin instance name pointers            (nplugin x 1)"
| |-FieldDecl 0x1ee44e30 <line:1126:3, col:13> col:13 names 'char *'
| | `-FullComment 0x1ee5fe40 <col:37, col:90>
| |   `-ParagraphComment 0x1ee5fe10 <col:37, col:90>
| |     `-TextComment 0x1ee5fde0 <col:37, col:90> Text=" names of all objects, 0-terminated       (nnames x 1)"
| |-FieldDecl 0x1ee44ec0 <line:1127:3, col:13> col:13 names_map 'int *'
| | `-FullComment 0x1ee5ff10 <col:37, col:94>
| |   `-ParagraphComment 0x1ee5fee0 <col:37, col:94>
| |     `-TextComment 0x1ee5feb0 <col:37, col:94> Text=" internal hash map of names               (nnames_map x 1)"
| `-FieldDecl 0x1ee44f80 <line:1130:3, col:13> col:13 paths 'char *'
|   `-FullComment 0x1ee5ffe0 <col:37, col:90>
|     `-ParagraphComment 0x1ee5ffb0 <col:37, col:90>
|       `-TextComment 0x1ee5ff80 <col:37, col:90> Text=" paths to assets, 0-terminated            (npaths x 1)"
`-TypedefDecl 0x1ee45050 <line:1132:1, col:25> col:25 mjModel 'struct mjModel_':'struct mjModel_'
  `-ElaboratedType 0x1ee45000 'struct mjModel_' sugar
    `-RecordType 0x1ee21b70 'struct mjModel_'
      `-Record 0x1ee21ae8 'mjModel_'
C_BINDER_MOJO_END_FILE