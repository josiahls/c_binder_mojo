TranslationUnitDecl 0x2abe0358 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2abe11a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2abe0920 '__int128'
|-TypedefDecl 0x2abe1210 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2abe0940 'unsigned __int128'
|-TypedefDecl 0x2ac82bd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2abe12f0 'struct __NSConstantString_tag'
|   `-Record 0x2abe1268 '__NSConstantString_tag'
|-TypedefDecl 0x2ac82c40 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x2abe0ae0 '__SVInt8_t'
|-TypedefDecl 0x2ac82ca8 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x2abe0b00 '__SVInt16_t'
|-TypedefDecl 0x2ac82d10 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x2abe0b20 '__SVInt32_t'
|-TypedefDecl 0x2ac82d78 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x2abe0b40 '__SVInt64_t'
|-TypedefDecl 0x2ac82de0 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x2abe0b60 '__SVUint8_t'
|-TypedefDecl 0x2ac82e48 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x2abe0b80 '__SVUint16_t'
|-TypedefDecl 0x2ac82eb0 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x2abe0ba0 '__SVUint32_t'
|-TypedefDecl 0x2ac82f18 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x2abe0bc0 '__SVUint64_t'
|-TypedefDecl 0x2ac82f80 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x2abe0be0 '__SVFloat16_t'
|-TypedefDecl 0x2ac82fe8 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x2abe0c00 '__SVFloat32_t'
|-TypedefDecl 0x2ac83050 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x2abe0c20 '__SVFloat64_t'
|-TypedefDecl 0x2ac830b8 <<invalid sloc>> <invalid sloc> implicit __SVBFloat16_t '__SVBFloat16_t'
| `-BuiltinType 0x2abe0c40 '__SVBFloat16_t'
|-TypedefDecl 0x2ac83120 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x2abe0c60 '__clang_svint8x2_t'
|-TypedefDecl 0x2ac83188 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x2abe0c80 '__clang_svint16x2_t'
|-TypedefDecl 0x2ac831f0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x2abe0ca0 '__clang_svint32x2_t'
|-TypedefDecl 0x2ac83258 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x2abe0cc0 '__clang_svint64x2_t'
|-TypedefDecl 0x2ac832c0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x2abe0ce0 '__clang_svuint8x2_t'
|-TypedefDecl 0x2ac83328 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x2abe0d00 '__clang_svuint16x2_t'
|-TypedefDecl 0x2ac83390 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x2abe0d20 '__clang_svuint32x2_t'
|-TypedefDecl 0x2ac833f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x2abe0d40 '__clang_svuint64x2_t'
|-TypedefDecl 0x2ac83460 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x2abe0d60 '__clang_svfloat16x2_t'
|-TypedefDecl 0x2ac834c8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x2abe0d80 '__clang_svfloat32x2_t'
|-TypedefDecl 0x2ac83530 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x2abe0da0 '__clang_svfloat64x2_t'
|-TypedefDecl 0x2ac83598 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x2abe0dc0 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x2ac83600 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x2abe0de0 '__clang_svint8x3_t'
|-TypedefDecl 0x2ac83668 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x2abe0e00 '__clang_svint16x3_t'
|-TypedefDecl 0x2ac836d0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x2abe0e20 '__clang_svint32x3_t'
|-TypedefDecl 0x2ac83738 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x2abe0e40 '__clang_svint64x3_t'
|-TypedefDecl 0x2ac837a0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x2abe0e60 '__clang_svuint8x3_t'
|-TypedefDecl 0x2ac83808 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x2abe0e80 '__clang_svuint16x3_t'
|-TypedefDecl 0x2ac83870 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x2abe0ea0 '__clang_svuint32x3_t'
|-TypedefDecl 0x2ac838d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x2abe0ec0 '__clang_svuint64x3_t'
|-TypedefDecl 0x2ac83940 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x2abe0ee0 '__clang_svfloat16x3_t'
|-TypedefDecl 0x2ac839a8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x2abe0f00 '__clang_svfloat32x3_t'
|-TypedefDecl 0x2ac83e30 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x2abe0f20 '__clang_svfloat64x3_t'
|-TypedefDecl 0x2ac83e98 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x2abe0f40 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x2ac83f00 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x2abe0f60 '__clang_svint8x4_t'
|-TypedefDecl 0x2ac83f68 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x2abe0f80 '__clang_svint16x4_t'
|-TypedefDecl 0x2ac83fd0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x2abe0fa0 '__clang_svint32x4_t'
|-TypedefDecl 0x2ac84038 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x2abe0fc0 '__clang_svint64x4_t'
|-TypedefDecl 0x2ac840a0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x2abe0fe0 '__clang_svuint8x4_t'
|-TypedefDecl 0x2ac84108 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x2abe1000 '__clang_svuint16x4_t'
|-TypedefDecl 0x2ac84170 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x2abe1020 '__clang_svuint32x4_t'
|-TypedefDecl 0x2ac841d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x2abe1040 '__clang_svuint64x4_t'
|-TypedefDecl 0x2ac84240 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x2abe1060 '__clang_svfloat16x4_t'
|-TypedefDecl 0x2ac842a8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x2abe1080 '__clang_svfloat32x4_t'
|-TypedefDecl 0x2ac84310 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x2abe10a0 '__clang_svfloat64x4_t'
|-TypedefDecl 0x2ac84378 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x2abe10c0 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x2ac843e0 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x2abe10e0 '__SVBool_t'
|-TypedefDecl 0x2ac84480 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2ac84440 'char *'
|   `-BuiltinType 0x2abe0400 'char'
|-TypedefDecl 0x2ac847e8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct std::__va_list'
| `-RecordType 0x2ac84560 'struct std::__va_list'
|   `-Record 0x2ac844d8 '__va_list'
|-TypedefDecl 0x2ac84880 </usr/lib/llvm-14/lib/clang/14.0.0/include/stddef.h:35:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2ac848f0 <line:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2ac84960 <line:74:1, col:24> col:24 wchar_t 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-RecordDecl 0x2ac849b8 </usr/lib/llvm-14/lib/clang/14.0.0/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
| |-FieldDecl 0x2ac84ab0 <line:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| | `-AlignedAttr 0x2ac84b20 <line:21:22, col:56> aligned
| |   `-ConstantExpr 0x2ac84b00 <col:34, col:55> 'unsigned long'
| |     |-value: Int 8
| |     `-UnaryExprOrTypeTraitExpr 0x2ac84a78 <col:34, col:55> 'unsigned long' __alignof 'long long'
| `-FieldDecl 0x2ac84bd0 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
|   `-AlignedAttr 0x2ac84c40 <line:23:22, col:58> aligned
|     `-ConstantExpr 0x2ac84c20 <col:34, col:57> 'unsigned long'
|       |-value: Int 16
|       `-UnaryExprOrTypeTraitExpr 0x2ac84b98 <col:34, col:57> 'unsigned long' __alignof 'long double'
|-TypedefDecl 0x2ac84cf8 <line:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
| `-ElaboratedType 0x2ac84ca0 'struct max_align_t' sugar
|   `-RecordType 0x2ac84a40 'max_align_t'
|     `-Record 0x2ac849b8 ''
|-TypedefDecl 0x2ac84d80 </usr/include/aarch64-linux-gnu/bits/types.h:31:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x2abe04c0 'unsigned char'
|-TypedefDecl 0x2acd4dc0 <line:32:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x2abe04e0 'unsigned short'
|-TypedefDecl 0x2acd4e30 <line:33:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acd4ea0 <line:34:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acd4f10 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x2abe0420 'signed char'
|-TypedefDecl 0x2acd4f80 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x2abe04c0 'unsigned char'
|-TypedefDecl 0x2acd4ff0 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x2abe0440 'short'
|-TypedefDecl 0x2acd5060 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x2abe04e0 'unsigned short'
|-TypedefDecl 0x2acd50d0 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x2abe0460 'int'
|-TypedefDecl 0x2acd5140 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acd51b0 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acd5220 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acd52b0 <line:52:1, col:18> col:18 referenced __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x2acd5280 '__int8_t' sugar
|   |-Typedef 0x2acd4f10 '__int8_t'
|   `-BuiltinType 0x2abe0420 'signed char'
|-TypedefDecl 0x2acd5340 <line:53:1, col:19> col:19 referenced __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x2acd5310 '__uint8_t' sugar
|   |-Typedef 0x2acd4f80 '__uint8_t'
|   `-BuiltinType 0x2abe04c0 'unsigned char'
|-TypedefDecl 0x2acd53d0 <line:54:1, col:19> col:19 referenced __int_least16_t '__int16_t':'short'
| `-TypedefType 0x2acd53a0 '__int16_t' sugar
|   |-Typedef 0x2acd4ff0 '__int16_t'
|   `-BuiltinType 0x2abe0440 'short'
|-TypedefDecl 0x2acd5460 <line:55:1, col:20> col:20 referenced __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x2acd5430 '__uint16_t' sugar
|   |-Typedef 0x2acd5060 '__uint16_t'
|   `-BuiltinType 0x2abe04e0 'unsigned short'
|-TypedefDecl 0x2acd54f0 <line:56:1, col:19> col:19 referenced __int_least32_t '__int32_t':'int'
| `-TypedefType 0x2acd54c0 '__int32_t' sugar
|   |-Typedef 0x2acd50d0 '__int32_t'
|   `-BuiltinType 0x2abe0460 'int'
|-TypedefDecl 0x2acd5580 <line:57:1, col:20> col:20 referenced __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x2acd5550 '__uint32_t' sugar
|   |-Typedef 0x2acd5140 '__uint32_t'
|   `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acd5610 <line:58:1, col:19> col:19 referenced __int_least64_t '__int64_t':'long'
| `-TypedefType 0x2acd55e0 '__int64_t' sugar
|   |-Typedef 0x2acd51b0 '__int64_t'
|   `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acd56a0 <line:59:1, col:20> col:20 referenced __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x2acd5670 '__uint64_t' sugar
|   |-Typedef 0x2acd5220 '__uint64_t'
|   `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acd5710 <line:63:1, col:18> col:18 __quad_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acd5780 <line:64:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acd57f0 <line:72:1, col:18> col:18 referenced __intmax_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acd5860 <line:73:1, col:27> col:27 referenced __uintmax_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acd58d0 <line:137:22, line:145:25> col:25 __dev_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acd5940 <line:137:22, line:146:25> col:25 __uid_t 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acd59b0 <line:137:22, line:147:25> col:25 __gid_t 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acd5a20 <line:137:22, line:148:25> col:25 __ino_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acd5a90 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acd5b00 <line:137:22, line:150:26> col:26 __mode_t 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acd5b70 <line:137:22, line:151:27> col:27 __nlink_t 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acd5be0 <line:137:22, line:152:25> col:25 __off_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acd5c50 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acd5cc0 <line:137:22, line:154:25> col:25 __pid_t 'int'
| `-BuiltinType 0x2abe0460 'int'
|-RecordDecl 0x2acd5d18 </usr/include/aarch64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0x2acdee70 <col:33, col:44> col:37 __val 'int[2]'
|-TypedefDecl 0x2acdef18 </usr/include/aarch64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x2acdeec0 'struct __fsid_t' sugar
|   `-RecordType 0x2acd5da0 '__fsid_t'
|     `-Record 0x2acd5d18 ''
|-TypedefDecl 0x2acdefa0 <line:137:22, line:156:27> col:27 __clock_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdf010 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acdf080 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acdf0f0 <line:137:22, line:159:24> col:24 __id_t 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acdf160 <line:137:22, line:160:26> col:26 __time_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdf1d0 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acdf240 <line:137:22, line:162:31> col:31 __suseconds_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdf2b0 <line:137:22, line:163:33> col:33 __suseconds64_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdf320 <line:137:22, line:165:27> col:27 __daddr_t 'int'
| `-BuiltinType 0x2abe0460 'int'
|-TypedefDecl 0x2acdf390 <line:137:22, line:166:25> col:25 __key_t 'int'
| `-BuiltinType 0x2abe0460 'int'
|-TypedefDecl 0x2acdf400 <line:137:22, line:169:29> col:29 __clockid_t 'int'
| `-BuiltinType 0x2abe0460 'int'
|-TypedefDecl 0x2acdf470 <line:137:22, line:172:27> col:27 __timer_t 'void *'
| `-PointerType 0x2abe1100 'void *'
|   `-BuiltinType 0x2abe03c0 'void'
|-TypedefDecl 0x2acdf4e0 <line:137:22, line:175:29> col:29 __blksize_t 'int'
| `-BuiltinType 0x2abe0460 'int'
|-TypedefDecl 0x2acdf550 <line:137:22, line:180:28> col:28 __blkcnt_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdf5c0 <line:137:22, line:181:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdf630 <line:137:22, line:184:30> col:30 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acdf6a0 <line:137:22, line:185:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acdf710 <line:137:22, line:188:30> col:30 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acdf780 <line:137:22, line:189:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acdf7f0 <line:137:22, line:192:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdf860 <line:137:22, line:194:27> col:27 __ssize_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdf8d0 <line:137:22, line:197:33> col:33 __syscall_slong_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdf940 <line:137:22, line:199:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2acdf9d0 <line:203:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x2acdf9a0 '__off64_t' sugar
|   |-Typedef 0x2acd5c50 '__off64_t'
|   `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdfa40 <line:204:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x2ac84440 'char *'
|   `-BuiltinType 0x2abe0400 'char'
|-TypedefDecl 0x2acdfab0 <line:137:22, line:207:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2acdfb20 <line:137:22, line:210:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2acdfb90 <line:215:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x2abe0460 'int'
|-TypedefDecl 0x2acdfbf8 </usr/include/aarch64-linux-gnu/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| `-TypedefType 0x2acd5280 '__int8_t' sugar
|   |-Typedef 0x2acd4f10 '__int8_t'
|   `-BuiltinType 0x2abe0420 'signed char'
|-TypedefDecl 0x2acdfc60 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| `-TypedefType 0x2acd53a0 '__int16_t' sugar
|   |-Typedef 0x2acd4ff0 '__int16_t'
|   `-BuiltinType 0x2abe0440 'short'
|-TypedefDecl 0x2acdfcc8 <line:26:1, col:19> col:19 int32_t '__int32_t':'int'
| `-TypedefType 0x2acd54c0 '__int32_t' sugar
|   |-Typedef 0x2acd50d0 '__int32_t'
|   `-BuiltinType 0x2abe0460 'int'
|-TypedefDecl 0x2acdfd30 <line:27:1, col:19> col:19 int64_t '__int64_t':'long'
| `-TypedefType 0x2acd55e0 '__int64_t' sugar
|   |-Typedef 0x2acd51b0 '__int64_t'
|   `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2ace2ec0 </usr/include/aarch64-linux-gnu/bits/stdint-uintn.h:24:1, col:19> col:19 uint8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x2acd5310 '__uint8_t' sugar
|   |-Typedef 0x2acd4f80 '__uint8_t'
|   `-BuiltinType 0x2abe04c0 'unsigned char'
|-TypedefDecl 0x2ace2f28 <line:25:1, col:20> col:20 uint16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x2acd5430 '__uint16_t' sugar
|   |-Typedef 0x2acd5060 '__uint16_t'
|   `-BuiltinType 0x2abe04e0 'unsigned short'
|-TypedefDecl 0x2ace2f90 <line:26:1, col:20> col:20 uint32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x2acd5550 '__uint32_t' sugar
|   |-Typedef 0x2acd5140 '__uint32_t'
|   `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2ace2ff8 <line:27:1, col:20> col:20 uint64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x2acd5670 '__uint64_t' sugar
|   |-Typedef 0x2acd5220 '__uint64_t'
|   `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2ace3080 </usr/include/stdint.h:43:1, col:24> col:24 int_least8_t '__int_least8_t':'signed char'
| `-TypedefType 0x2ace3050 '__int_least8_t' sugar
|   |-Typedef 0x2acd52b0 '__int_least8_t'
|   `-TypedefType 0x2acd5280 '__int8_t' sugar
|     |-Typedef 0x2acd4f10 '__int8_t'
|     `-BuiltinType 0x2abe0420 'signed char'
|-TypedefDecl 0x2ace3110 <line:44:1, col:25> col:25 int_least16_t '__int_least16_t':'short'
| `-TypedefType 0x2ace30e0 '__int_least16_t' sugar
|   |-Typedef 0x2acd53d0 '__int_least16_t'
|   `-TypedefType 0x2acd53a0 '__int16_t' sugar
|     |-Typedef 0x2acd4ff0 '__int16_t'
|     `-BuiltinType 0x2abe0440 'short'
|-TypedefDecl 0x2ace31a0 <line:45:1, col:25> col:25 int_least32_t '__int_least32_t':'int'
| `-TypedefType 0x2ace3170 '__int_least32_t' sugar
|   |-Typedef 0x2acd54f0 '__int_least32_t'
|   `-TypedefType 0x2acd54c0 '__int32_t' sugar
|     |-Typedef 0x2acd50d0 '__int32_t'
|     `-BuiltinType 0x2abe0460 'int'
|-TypedefDecl 0x2ace3230 <line:46:1, col:25> col:25 int_least64_t '__int_least64_t':'long'
| `-TypedefType 0x2ace3200 '__int_least64_t' sugar
|   |-Typedef 0x2acd5610 '__int_least64_t'
|   `-TypedefType 0x2acd55e0 '__int64_t' sugar
|     |-Typedef 0x2acd51b0 '__int64_t'
|     `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2ace32c0 <line:49:1, col:25> col:25 uint_least8_t '__uint_least8_t':'unsigned char'
| `-TypedefType 0x2ace3290 '__uint_least8_t' sugar
|   |-Typedef 0x2acd5340 '__uint_least8_t'
|   `-TypedefType 0x2acd5310 '__uint8_t' sugar
|     |-Typedef 0x2acd4f80 '__uint8_t'
|     `-BuiltinType 0x2abe04c0 'unsigned char'
|-TypedefDecl 0x2ace3350 <line:50:1, col:26> col:26 uint_least16_t '__uint_least16_t':'unsigned short'
| `-TypedefType 0x2ace3320 '__uint_least16_t' sugar
|   |-Typedef 0x2acd5460 '__uint_least16_t'
|   `-TypedefType 0x2acd5430 '__uint16_t' sugar
|     |-Typedef 0x2acd5060 '__uint16_t'
|     `-BuiltinType 0x2abe04e0 'unsigned short'
|-TypedefDecl 0x2ace33e0 <line:51:1, col:26> col:26 uint_least32_t '__uint_least32_t':'unsigned int'
| `-TypedefType 0x2ace33b0 '__uint_least32_t' sugar
|   |-Typedef 0x2acd5580 '__uint_least32_t'
|   `-TypedefType 0x2acd5550 '__uint32_t' sugar
|     |-Typedef 0x2acd5140 '__uint32_t'
|     `-BuiltinType 0x2abe0500 'unsigned int'
|-TypedefDecl 0x2ace3470 <line:52:1, col:26> col:26 uint_least64_t '__uint_least64_t':'unsigned long'
| `-TypedefType 0x2ace3440 '__uint_least64_t' sugar
|   |-Typedef 0x2acd56a0 '__uint_least64_t'
|   `-TypedefType 0x2acd5670 '__uint64_t' sugar
|     |-Typedef 0x2acd5220 '__uint64_t'
|     `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2ace34e0 <line:58:1, col:22> col:22 int_fast8_t 'signed char'
| `-BuiltinType 0x2abe0420 'signed char'
|-TypedefDecl 0x2ace3550 <line:60:1, col:19> col:19 int_fast16_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2ace35c0 <line:61:1, col:19> col:19 int_fast32_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2ace3630 <line:62:1, col:19> col:19 int_fast64_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2ace36a0 <line:71:1, col:24> col:24 uint_fast8_t 'unsigned char'
| `-BuiltinType 0x2abe04c0 'unsigned char'
|-TypedefDecl 0x2ace3710 <line:73:1, col:27> col:27 uint_fast16_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2ace3780 <line:74:1, col:27> col:27 uint_fast32_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2ace37f0 <line:75:1, col:27> col:27 uint_fast64_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2ace3860 <line:87:1, col:19> col:19 intptr_t 'long'
| `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2ace38d0 <line:90:1, col:27> col:27 uintptr_t 'unsigned long'
| `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2ace3960 <line:101:1, col:21> col:21 intmax_t '__intmax_t':'long'
| `-TypedefType 0x2ace3930 '__intmax_t' sugar
|   |-Typedef 0x2acd57f0 '__intmax_t'
|   `-BuiltinType 0x2abe0480 'long'
|-TypedefDecl 0x2ace39f0 <line:102:1, col:22> col:22 uintmax_t '__uintmax_t':'unsigned long'
| `-TypedefType 0x2ace39c0 '__uintmax_t' sugar
|   |-Typedef 0x2acd5860 '__uintmax_t'
|   `-BuiltinType 0x2abe0520 'unsigned long'
|-TypedefDecl 0x2ace3af0 </home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjtnum.h:22:3, col:18> col:18 referenced mjtNum 'double'
| `-BuiltinType 0x2abe0580 'double'
|-TypedefDecl 0x2ace3c20 <line:41:1, col:23> col:23 referenced mjtByte 'unsigned char'
| |-BuiltinType 0x2abe04c0 'unsigned char'
| `-FullComment 0x2ad2f180 <line:39:3, col:100>
|   `-ParagraphComment 0x2ad2f150 <col:3, col:100>
|     `-TextComment 0x2ad2f120 <col:3, col:100> Text="-------------------------------------- byte definition -------------------------------------------"
|-EnumDecl 0x2acebe98 </home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:48:9, line:67:1> line:48:14 mjtDisableBit_
| |-FullComment 0x2ad2f250 <line:46:3, col:100>
| | `-ParagraphComment 0x2ad2f220 <col:3, col:100>
| |   `-TextComment 0x2ad2f1f0 <col:3, col:100> Text="---------------------------------- enum types (mjt) ----------------------------------------------"
| |-EnumConstantDecl 0x2acec008 <line:49:3, col:28> col:3 mjDSBL_CONSTRAINT 'int'
| | |-ConstantExpr 0x2acebfe8 <col:25, col:28> 'int'
| | | |-value: Int 1
| | | `-BinaryOperator 0x2acebfc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acebf88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acebfa8 <col:28> 'int' 0
| | `-FullComment 0x2ad2f320 <col:37, col:61>
| |   `-ParagraphComment 0x2ad2f2f0 <col:37, col:61>
| |     `-TextComment 0x2ad2f2c0 <col:37, col:61> Text=" entire constraint solver"
| |-EnumConstantDecl 0x2acec108 <line:50:3, col:28> col:3 mjDSBL_EQUALITY 'int'
| | |-ConstantExpr 0x2acec0e8 <col:25, col:28> 'int'
| | | |-value: Int 2
| | | `-BinaryOperator 0x2acec0c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec088 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec0a8 <col:28> 'int' 1
| | `-FullComment 0x2ad2f3f0 <col:37, col:57>
| |   `-ParagraphComment 0x2ad2f3c0 <col:37, col:57>
| |     `-TextComment 0x2ad2f390 <col:37, col:57> Text=" equality constraints"
| |-EnumConstantDecl 0x2acec208 <line:51:3, col:28> col:3 mjDSBL_FRICTIONLOSS 'int'
| | |-ConstantExpr 0x2acec1e8 <col:25, col:28> 'int'
| | | |-value: Int 4
| | | `-BinaryOperator 0x2acec1c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec188 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec1a8 <col:28> 'int' 2
| | `-FullComment 0x2ad2f4c0 <col:37, col:78>
| |   `-ParagraphComment 0x2ad2f490 <col:37, col:78>
| |     `-TextComment 0x2ad2f460 <col:37, col:78> Text=" joint and tendon frictionloss constraints"
| |-EnumConstantDecl 0x2acec308 <line:52:3, col:28> col:3 mjDSBL_LIMIT 'int'
| | |-ConstantExpr 0x2acec2e8 <col:25, col:28> 'int'
| | | |-value: Int 8
| | | `-BinaryOperator 0x2acec2c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec288 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec2a8 <col:28> 'int' 3
| | `-FullComment 0x2ad2f590 <col:37, col:71>
| |   `-ParagraphComment 0x2ad2f560 <col:37, col:71>
| |     `-TextComment 0x2ad2f530 <col:37, col:71> Text=" joint and tendon limit constraints"
| |-EnumConstantDecl 0x2acec408 <line:53:3, col:28> col:3 mjDSBL_CONTACT 'int'
| | |-ConstantExpr 0x2acec3e8 <col:25, col:28> 'int'
| | | |-value: Int 16
| | | `-BinaryOperator 0x2acec3c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec388 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec3a8 <col:28> 'int' 4
| | `-FullComment 0x2ad320f0 <col:37, col:56>
| |   `-ParagraphComment 0x2ad2f630 <col:37, col:56>
| |     `-TextComment 0x2ad2f600 <col:37, col:56> Text=" contact constraints"
| |-EnumConstantDecl 0x2acec508 <line:54:3, col:28> col:3 mjDSBL_PASSIVE 'int'
| | |-ConstantExpr 0x2acec4e8 <col:25, col:28> 'int'
| | | |-value: Int 32
| | | `-BinaryOperator 0x2acec4c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec488 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec4a8 <col:28> 'int' 5
| | `-FullComment 0x2ad321c0 <col:37, col:51>
| |   `-ParagraphComment 0x2ad32190 <col:37, col:51>
| |     `-TextComment 0x2ad32160 <col:37, col:51> Text=" passive forces"
| |-EnumConstantDecl 0x2acec608 <line:55:3, col:28> col:3 mjDSBL_GRAVITY 'int'
| | |-ConstantExpr 0x2acec5e8 <col:25, col:28> 'int'
| | | |-value: Int 64
| | | `-BinaryOperator 0x2acec5c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec588 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec5a8 <col:28> 'int' 6
| | `-FullComment 0x2ad32290 <col:37, col:57>
| |   `-ParagraphComment 0x2ad32260 <col:37, col:57>
| |     `-TextComment 0x2ad32230 <col:37, col:57> Text=" gravitational forces"
| |-EnumConstantDecl 0x2acec708 <line:56:3, col:28> col:3 mjDSBL_CLAMPCTRL 'int'
| | |-ConstantExpr 0x2acec6e8 <col:25, col:28> 'int'
| | | |-value: Int 128
| | | `-BinaryOperator 0x2acec6c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec688 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec6a8 <col:28> 'int' 7
| | `-FullComment 0x2ad32360 <col:37, col:69>
| |   `-ParagraphComment 0x2ad32330 <col:37, col:69>
| |     `-TextComment 0x2ad32300 <col:37, col:69> Text=" clamp control to specified range"
| |-EnumConstantDecl 0x2acec808 <line:57:3, col:28> col:3 mjDSBL_WARMSTART 'int'
| | |-ConstantExpr 0x2acec7e8 <col:25, col:28> 'int'
| | | |-value: Int 256
| | | `-BinaryOperator 0x2acec7c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec788 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec7a8 <col:28> 'int' 8
| | `-FullComment 0x2ad32430 <col:37, col:64>
| |   `-ParagraphComment 0x2ad32400 <col:37, col:64>
| |     `-TextComment 0x2ad323d0 <col:37, col:64> Text=" warmstart constraint solver"
| |-EnumConstantDecl 0x2acec908 <line:58:3, col:28> col:3 mjDSBL_FILTERPARENT 'int'
| | |-ConstantExpr 0x2acec8e8 <col:25, col:28> 'int'
| | | |-value: Int 512
| | | `-BinaryOperator 0x2acec8c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec888 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec8a8 <col:28> 'int' 9
| | `-FullComment 0x2ad32500 <col:37, col:71>
| |   `-ParagraphComment 0x2ad324d0 <col:37, col:71>
| |     `-TextComment 0x2ad324a0 <col:37, col:71> Text=" remove collisions with parent body"
| |-EnumConstantDecl 0x2aceca08 <line:59:3, col:28> col:3 mjDSBL_ACTUATION 'int'
| | |-ConstantExpr 0x2acec9e8 <col:25, col:28> 'int'
| | | |-value: Int 1024
| | | `-BinaryOperator 0x2acec9c8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acec988 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acec9a8 <col:28> 'int' 10
| | `-FullComment 0x2ad325d0 <col:37, col:59>
| |   `-ParagraphComment 0x2ad325a0 <col:37, col:59>
| |     `-TextComment 0x2ad32570 <col:37, col:59> Text=" apply actuation forces"
| |-EnumConstantDecl 0x2acecb08 <line:60:3, col:28> col:3 mjDSBL_REFSAFE 'int'
| | |-ConstantExpr 0x2acecae8 <col:25, col:28> 'int'
| | | |-value: Int 2048
| | | `-BinaryOperator 0x2acecac8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2aceca88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acecaa8 <col:28> 'int' 11
| | `-FullComment 0x2ad326a0 <col:37, col:79>
| |   `-ParagraphComment 0x2ad32670 <col:37, col:79>
| |     `-TextComment 0x2ad32640 <col:37, col:79> Text=" integrator safety: make ref[0]>=2*timestep"
| |-EnumConstantDecl 0x2acecc08 <line:61:3, col:28> col:3 mjDSBL_SENSOR 'int'
| | |-ConstantExpr 0x2acecbe8 <col:25, col:28> 'int'
| | | |-value: Int 4096
| | | `-BinaryOperator 0x2acecbc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acecb88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acecba8 <col:28> 'int' 12
| | `-FullComment 0x2ad32770 <col:37, col:44>
| |   `-ParagraphComment 0x2ad32740 <col:37, col:44>
| |     `-TextComment 0x2ad32710 <col:37, col:44> Text=" sensors"
| |-EnumConstantDecl 0x2acefe70 <line:62:3, col:28> col:3 mjDSBL_MIDPHASE 'int'
| | |-ConstantExpr 0x2acecce8 <col:25, col:28> 'int'
| | | |-value: Int 8192
| | | `-BinaryOperator 0x2aceccc8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acecc88 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acecca8 <col:28> 'int' 13
| | `-FullComment 0x2ad32840 <col:37, col:66>
| |   `-ParagraphComment 0x2ad32810 <col:37, col:66>
| |     `-TextComment 0x2ad327e0 <col:37, col:66> Text=" mid-phase collision filtering"
| |-EnumConstantDecl 0x2aceff68 <line:63:3, col:28> col:3 mjDSBL_EULERDAMP 'int'
| | |-ConstantExpr 0x2aceff48 <col:25, col:28> 'int'
| | | |-value: Int 16384
| | | `-BinaryOperator 0x2aceff28 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acefee8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2aceff08 <col:28> 'int' 14
| | `-FullComment 0x2ad32910 <col:37, col:94>
| |   `-ParagraphComment 0x2ad328e0 <col:37, col:94>
| |     `-TextComment 0x2ad328b0 <col:37, col:94> Text=" implicit integration of joint damping in Euler integrator"
| |-EnumConstantDecl 0x2acf0068 <line:64:3, col:28> col:3 mjDSBL_AUTORESET 'int'
| | |-ConstantExpr 0x2acf0048 <col:25, col:28> 'int'
| | | |-value: Int 32768
| | | `-BinaryOperator 0x2acf0028 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2aceffe8 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acf0008 <col:28> 'int' 15
| | `-FullComment 0x2ad329e0 <col:37, col:87>
| |   `-ParagraphComment 0x2ad329b0 <col:37, col:87>
| |     `-TextComment 0x2ad32980 <col:37, col:87> Text=" automatic reset when numerical issues are detected"
| `-EnumConstantDecl 0x2acf0158 <line:66:3, col:25> col:3 mjNDISABLE 'int'
|   |-ConstantExpr 0x2acf0138 <col:25> 'int'
|   | |-value: Int 16
|   | `-IntegerLiteral 0x2acf00e8 <col:25> 'int' 16
|   `-FullComment 0x2ad32ab0 <col:37, col:60>
|     `-ParagraphComment 0x2ad32a80 <col:37, col:60>
|       `-TextComment 0x2ad32a50 <col:37, col:60> Text=" number of disable flags"
|-TypedefDecl 0x2acf0208 <line:48:1, line:67:3> col:3 mjtDisableBit 'enum mjtDisableBit_':'enum mjtDisableBit_'
| |-ElaboratedType 0x2acf01b0 'enum mjtDisableBit_' sugar
| | `-EnumType 0x2acebf40 'enum mjtDisableBit_'
| |   `-Enum 0x2acebe98 'mjtDisableBit_'
| `-FullComment 0x2ad32b80 <line:46:3, col:100>
|   `-ParagraphComment 0x2ad32b50 <col:3, col:100>
|     `-TextComment 0x2ad32b20 <col:3, col:100> Text="---------------------------------- enum types (mjt) ----------------------------------------------"
|-EnumDecl 0x2acf0278 <line:70:9, line:81:1> line:70:14 mjtEnableBit_
| |-EnumConstantDecl 0x2acf03e8 <line:71:3, col:28> col:3 mjENBL_OVERRIDE 'int'
| | |-ConstantExpr 0x2acf03c8 <col:25, col:28> 'int'
| | | |-value: Int 1
| | | `-BinaryOperator 0x2acf03a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acf0368 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acf0388 <col:28> 'int' 0
| | `-FullComment 0x2ad32c50 <col:37, col:64>
| |   `-ParagraphComment 0x2ad32c20 <col:37, col:64>
| |     `-TextComment 0x2ad32bf0 <col:37, col:64> Text=" override contact parameters"
| |-EnumConstantDecl 0x2acf04e8 <line:72:3, col:28> col:3 mjENBL_ENERGY 'int'
| | |-ConstantExpr 0x2acf04c8 <col:25, col:28> 'int'
| | | |-value: Int 2
| | | `-BinaryOperator 0x2acf04a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acf0468 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acf0488 <col:28> 'int' 1
| | `-FullComment 0x2ad32d20 <col:37, col:55>
| |   `-ParagraphComment 0x2ad32cf0 <col:37, col:55>
| |     `-TextComment 0x2ad32cc0 <col:37, col:55> Text=" energy computation"
| |-EnumConstantDecl 0x2acf05e8 <line:73:3, col:28> col:3 mjENBL_FWDINV 'int'
| | |-ConstantExpr 0x2acf05c8 <col:25, col:28> 'int'
| | | |-value: Int 4
| | | `-BinaryOperator 0x2acf05a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acf0568 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acf0588 <col:28> 'int' 2
| | `-FullComment 0x2ad32df0 <col:37, col:61>
| |   `-ParagraphComment 0x2ad32dc0 <col:37, col:61>
| |     `-TextComment 0x2ad32d90 <col:37, col:61> Text=" record solver statistics"
| |-EnumConstantDecl 0x2acf06e8 <line:74:3, col:28> col:3 mjENBL_INVDISCRETE 'int'
| | |-ConstantExpr 0x2acf06c8 <col:25, col:28> 'int'
| | | |-value: Int 8
| | | `-BinaryOperator 0x2acf06a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acf0668 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acf0688 <col:28> 'int' 3
| | `-FullComment 0x2ad32ee0 <col:37, line:75:59>
| |   `-ParagraphComment 0x2ad32eb0 <line:74:37, line:75:59>
| |     |-TextComment 0x2ad32e60 <line:74:37, col:67> Text=" discrete-time inverse dynamics"
| |     `-TextComment 0x2ad32e80 <line:75:37, col:59> Text=" experimental features:"
| |-EnumConstantDecl 0x2acf07e8 <line:76:3, col:28> col:3 mjENBL_MULTICCD 'int'
| | |-ConstantExpr 0x2acf07c8 <col:25, col:28> 'int'
| | | |-value: Int 16
| | | `-BinaryOperator 0x2acf07a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acf0768 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acf0788 <col:28> 'int' 4
| | `-FullComment 0x2ad32fb0 <col:37, col:75>
| |   `-ParagraphComment 0x2ad32f80 <col:37, col:75>
| |     `-TextComment 0x2ad32f50 <col:37, col:75> Text=" multi-point convex collision detection"
| |-EnumConstantDecl 0x2acf08e8 <line:77:3, col:28> col:3 mjENBL_ISLAND 'int'
| | |-ConstantExpr 0x2acf08c8 <col:25, col:28> 'int'
| | | |-value: Int 32
| | | `-BinaryOperator 0x2acf08a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acf0868 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acf0888 <col:28> 'int' 5
| | `-FullComment 0x2ad33080 <col:37, col:64>
| |   `-ParagraphComment 0x2ad33050 <col:37, col:64>
| |     `-TextComment 0x2ad33020 <col:37, col:64> Text=" constraint island discovery"
| |-EnumConstantDecl 0x2acf09e8 <line:78:3, col:28> col:3 mjENBL_NATIVECCD 'int'
| | |-ConstantExpr 0x2acf09c8 <col:25, col:28> 'int'
| | | |-value: Int 64
| | | `-BinaryOperator 0x2acf09a8 <col:25, col:28> 'int' '<<'
| | |   |-IntegerLiteral 0x2acf0968 <col:25> 'int' 1
| | |   `-IntegerLiteral 0x2acf0988 <col:28> 'int' 6
| | `-FullComment 0x2ad331e0 <col:37, col:70>
| |   `-ParagraphComment 0x2ad331b0 <col:37, col:70>
| |     `-TextComment 0x2ad33180 <col:37, col:70> Text=" native convex collision detection"
| `-EnumConstantDecl 0x2acf0ad8 <line:80:3, col:25> col:3 mjNENABLE 'int'
|   |-ConstantExpr 0x2acf0ab8 <col:25> 'int'
|   | |-value: Int 7
|   | `-IntegerLiteral 0x2acf0a68 <col:25> 'int' 7
|   `-FullComment 0x2ad332b0 <col:37, col:59>
|     `-ParagraphComment 0x2ad33280 <col:37, col:59>
|       `-TextComment 0x2ad33250 <col:37, col:59> Text=" number of enable flags"
|-TypedefDecl 0x2acf0b88 <line:70:1, line:81:3> col:3 mjtEnableBit 'enum mjtEnableBit_':'enum mjtEnableBit_'
| `-ElaboratedType 0x2acf0b30 'enum mjtEnableBit_' sugar
|   `-EnumType 0x2acf0320 'enum mjtEnableBit_'
|     `-Enum 0x2acf0278 'mjtEnableBit_'
|-EnumDecl 0x2acf0bf8 <line:84:9, line:89:1> line:84:14 mjtJoint_
| |-EnumConstantDecl 0x2acf0d28 <line:85:3, col:25> col:3 mjJNT_FREE 'int'
| | |-ConstantExpr 0x2acf0d08 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf0ce8 <col:25> 'int' 0
| | `-FullComment 0x2ad33380 <col:37, col:85>
| |   `-ParagraphComment 0x2ad33350 <col:37, col:85>
| |     `-TextComment 0x2ad33320 <col:37, col:85> Text=" global position and orientation (quat)       (7)"
| |-EnumConstantDecl 0x2acf0da8 <line:86:3> col:3 mjJNT_BALL 'int'
| | `-FullComment 0x2ad33450 <col:37, col:85>
| |   `-ParagraphComment 0x2ad33420 <col:37, col:85>
| |     `-TextComment 0x2ad333f0 <col:37, col:85> Text=" orientation (quat) relative to parent        (4)"
| |-EnumConstantDecl 0x2acf0e80 <line:87:3> col:3 mjJNT_SLIDE 'int'
| | `-FullComment 0x2ad33520 <col:37, col:85>
| |   `-ParagraphComment 0x2ad334f0 <col:37, col:85>
| |     `-TextComment 0x2ad334c0 <col:37, col:85> Text=" sliding distance along body-fixed axis       (1)"
| `-EnumConstantDecl 0x2acf0f28 <line:88:3> col:3 mjJNT_HINGE 'int'
|   `-FullComment 0x2ad335f0 <col:37, col:85>
|     `-ParagraphComment 0x2ad335c0 <col:37, col:85>
|       `-TextComment 0x2ad33590 <col:37, col:85> Text=" rotation angle (rad) around body-fixed axis  (1)"
|-TypedefDecl 0x2acf0fd8 <line:84:1, line:89:3> col:3 mjtJoint 'enum mjtJoint_':'enum mjtJoint_'
| `-ElaboratedType 0x2acf0f80 'enum mjtJoint_' sugar
|   `-EnumType 0x2acf0ca0 'enum mjtJoint_'
|     `-Enum 0x2acf0bf8 'mjtJoint_'
|-EnumDecl 0x2acf1048 <line:92:9, line:118:1> line:92:14 mjtGeom_
| |-EnumConstantDecl 0x2acf11a8 <line:94:3, col:25> col:3 mjGEOM_PLANE 'int'
| | |-ConstantExpr 0x2acf1188 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf1168 <col:25> 'int' 0
| | `-FullComment 0x2ad336c0 <col:37, col:42>
| |   `-ParagraphComment 0x2ad33690 <col:37, col:42>
| |     `-TextComment 0x2ad33660 <col:37, col:42> Text=" plane"
| |-EnumConstantDecl 0x2acf1228 <line:95:3> col:3 mjGEOM_HFIELD 'int'
| | `-FullComment 0x2ad33790 <col:37, col:49>
| |   `-ParagraphComment 0x2ad33760 <col:37, col:49>
| |     `-TextComment 0x2ad33730 <col:37, col:49> Text=" height field"
| |-EnumConstantDecl 0x2acf12a8 <line:96:3> col:3 mjGEOM_SPHERE 'int'
| | `-FullComment 0x2ad33860 <col:37, col:43>
| |   `-ParagraphComment 0x2ad33830 <col:37, col:43>
| |     `-TextComment 0x2ad33800 <col:37, col:43> Text=" sphere"
| |-EnumConstantDecl 0x2acf1328 <line:97:3> col:3 mjGEOM_CAPSULE 'int'
| | `-FullComment 0x2ad33930 <col:37, col:44>
| |   `-ParagraphComment 0x2ad33900 <col:37, col:44>
| |     `-TextComment 0x2ad338d0 <col:37, col:44> Text=" capsule"
| |-EnumConstantDecl 0x2acf13a8 <line:98:3> col:3 mjGEOM_ELLIPSOID 'int'
| | `-FullComment 0x2ad33a00 <col:37, col:46>
| |   `-ParagraphComment 0x2ad339d0 <col:37, col:46>
| |     `-TextComment 0x2ad339a0 <col:37, col:46> Text=" ellipsoid"
| |-EnumConstantDecl 0x2acf1428 <line:99:3> col:3 mjGEOM_CYLINDER 'int'
| | `-FullComment 0x2ad33ad0 <col:37, col:45>
| |   `-ParagraphComment 0x2ad33aa0 <col:37, col:45>
| |     `-TextComment 0x2ad33a70 <col:37, col:45> Text=" cylinder"
| |-EnumConstantDecl 0x2acf14a8 <line:100:3> col:3 mjGEOM_BOX 'int'
| | `-FullComment 0x2ad33ba0 <col:37, col:40>
| |   `-ParagraphComment 0x2ad33b70 <col:37, col:40>
| |     `-TextComment 0x2ad33b40 <col:37, col:40> Text=" box"
| |-EnumConstantDecl 0x2acf1528 <line:101:3> col:3 mjGEOM_MESH 'int'
| | `-FullComment 0x2ad33c70 <col:37, col:41>
| |   `-ParagraphComment 0x2ad33c40 <col:37, col:41>
| |     `-TextComment 0x2ad33c10 <col:37, col:41> Text=" mesh"
| |-EnumConstantDecl 0x2acf15a8 <line:102:3> col:3 mjGEOM_SDF 'int'
| | `-FullComment 0x2ad33d40 <col:37, col:58>
| |   `-ParagraphComment 0x2ad33d10 <col:37, col:58>
| |     `-TextComment 0x2ad33ce0 <col:37, col:58> Text=" signed distance field"
| |-EnumConstantDecl 0x2acf1628 <line:104:3> col:3 mjNGEOMTYPES 'int'
| | `-FullComment 0x2ad33e10 <col:37, col:65>
| |   `-ParagraphComment 0x2ad33de0 <col:37, col:65>
| |     `-TextComment 0x2ad33db0 <col:37, col:65> Text=" number of regular geom types"
| |-EnumConstantDecl 0x2acf1718 <line:107:3, col:25> col:3 mjGEOM_ARROW 'int'
| | |-ConstantExpr 0x2acf16f8 <col:25> 'int'
| | | |-value: Int 100
| | | `-IntegerLiteral 0x2acf16d8 <col:25> 'int' 100
| | `-FullComment 0x2ad33ee0 <col:37, col:42>
| |   `-ParagraphComment 0x2ad33eb0 <col:37, col:42>
| |     `-TextComment 0x2ad33e80 <col:37, col:42> Text=" arrow"
| |-EnumConstantDecl 0x2acf1798 <line:108:3> col:3 mjGEOM_ARROW1 'int'
| | `-FullComment 0x2ad33fb0 <col:37, col:57>
| |   `-ParagraphComment 0x2ad33f80 <col:37, col:57>
| |     `-TextComment 0x2ad33f50 <col:37, col:57> Text=" arrow without wedges"
| |-EnumConstantDecl 0x2acf1818 <line:109:3> col:3 mjGEOM_ARROW2 'int'
| | `-FullComment 0x2ad34080 <col:37, col:61>
| |   `-ParagraphComment 0x2ad34050 <col:37, col:61>
| |     `-TextComment 0x2ad34020 <col:37, col:61> Text=" arrow in both directions"
| |-EnumConstantDecl 0x2acf1898 <line:110:3> col:3 mjGEOM_LINE 'int'
| | `-FullComment 0x2ad34160 <col:37, col:41>
| |   `-ParagraphComment 0x2ad34120 <col:37, col:41>
| |     `-TextComment 0x2ad340f0 <col:37, col:41> Text=" line"
| |-EnumConstantDecl 0x2acf1918 <line:111:3> col:3 mjGEOM_LINEBOX 'int'
| | `-FullComment 0x2ad34230 <col:37, col:56>
| |   `-ParagraphComment 0x2ad34200 <col:37, col:56>
| |     `-TextComment 0x2ad341d0 <col:37, col:56> Text=" box with line edges"
| |-EnumConstantDecl 0x2acf1998 <line:112:3> col:3 mjGEOM_FLEX 'int'
| | `-FullComment 0x2ad34300 <col:37, col:41>
| |   `-ParagraphComment 0x2ad342d0 <col:37, col:41>
| |     `-TextComment 0x2ad342a0 <col:37, col:41> Text=" flex"
| |-EnumConstantDecl 0x2acf1a18 <line:113:3> col:3 mjGEOM_SKIN 'int'
| | `-FullComment 0x2ad343d0 <col:37, col:41>
| |   `-ParagraphComment 0x2ad343a0 <col:37, col:41>
| |     `-TextComment 0x2ad34370 <col:37, col:41> Text=" skin"
| |-EnumConstantDecl 0x2acf1a98 <line:114:3> col:3 mjGEOM_LABEL 'int'
| | `-FullComment 0x2ad344a0 <col:37, col:47>
| |   `-ParagraphComment 0x2ad34470 <col:37, col:47>
| |     `-TextComment 0x2ad34440 <col:37, col:47> Text=" text label"
| |-EnumConstantDecl 0x2acf1b18 <line:115:3> col:3 mjGEOM_TRIANGLE 'int'
| | `-FullComment 0x2ad34570 <col:37, col:45>
| |   `-ParagraphComment 0x2ad34540 <col:37, col:45>
| |     `-TextComment 0x2ad34510 <col:37, col:45> Text=" triangle"
| `-EnumConstantDecl 0x2acf1c08 <line:117:3, col:25> col:3 mjGEOM_NONE 'int'
|   |-ConstantExpr 0x2acf1be8 <col:25> 'int'
|   | |-value: Int 1001
|   | `-IntegerLiteral 0x2acf1b98 <col:25> 'int' 1001
|   `-FullComment 0x2ad34640 <col:37, col:54>
|     `-ParagraphComment 0x2ad34610 <col:37, col:54>
|       `-TextComment 0x2ad345e0 <col:37, col:54> Text=" missing geom type"
|-TypedefDecl 0x2acf1cb8 <line:92:1, line:118:3> col:3 mjtGeom 'enum mjtGeom_':'enum mjtGeom_'
| `-ElaboratedType 0x2acf1c60 'enum mjtGeom_' sugar
|   `-EnumType 0x2acf10f0 'enum mjtGeom_'
|     `-Enum 0x2acf1048 'mjtGeom_'
|-EnumDecl 0x2acf1d28 <line:121:9, line:127:1> line:121:14 mjtCamLight_
| |-EnumConstantDecl 0x2acf2ea0 <line:122:3, col:25> col:3 mjCAMLIGHT_FIXED 'int'
| | |-ConstantExpr 0x2acf1e38 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf1e18 <col:25> 'int' 0
| | `-FullComment 0x2ad34710 <col:37, col:62>
| |   `-ParagraphComment 0x2ad346e0 <col:37, col:62>
| |     `-TextComment 0x2ad346b0 <col:37, col:62> Text=" pos and rot fixed in body"
| |-EnumConstantDecl 0x2acf2f18 <line:123:3> col:3 mjCAMLIGHT_TRACK 'int'
| | `-FullComment 0x2ad347e0 <col:37, col:73>
| |   `-ParagraphComment 0x2ad347b0 <col:37, col:73>
| |     `-TextComment 0x2ad34780 <col:37, col:73> Text=" pos tracks body, rot fixed in global"
| |-EnumConstantDecl 0x2acf2f98 <line:124:3> col:3 mjCAMLIGHT_TRACKCOM 'int'
| | `-FullComment 0x2ad348b0 <col:37, col:78>
| |   `-ParagraphComment 0x2ad34880 <col:37, col:78>
| |     `-TextComment 0x2ad34850 <col:37, col:78> Text=" pos tracks subtree com, rot fixed in body"
| |-EnumConstantDecl 0x2acf3018 <line:125:3> col:3 mjCAMLIGHT_TARGETBODY 'int'
| | `-FullComment 0x2ad34980 <col:37, col:78>
| |   `-ParagraphComment 0x2ad34950 <col:37, col:78>
| |     `-TextComment 0x2ad34920 <col:37, col:78> Text=" pos fixed in body, rot tracks target body"
| `-EnumConstantDecl 0x2acf30c8 <line:126:3> col:3 mjCAMLIGHT_TARGETBODYCOM 'int'
|   `-FullComment 0x2ad34a50 <col:37, col:85>
|     `-ParagraphComment 0x2ad34a20 <col:37, col:85>
|       `-TextComment 0x2ad349f0 <col:37, col:85> Text=" pos fixed in body, rot tracks target subtree com"
|-TypedefDecl 0x2acf3178 <line:121:1, line:127:3> col:3 mjtCamLight 'enum mjtCamLight_':'enum mjtCamLight_'
| `-ElaboratedType 0x2acf3120 'enum mjtCamLight_' sugar
|   `-EnumType 0x2acf1dd0 'enum mjtCamLight_'
|     `-Enum 0x2acf1d28 'mjtCamLight_'
|-EnumDecl 0x2acf31e8 <line:130:9, line:134:1> line:130:14 mjtTexture_
| |-EnumConstantDecl 0x2acf3318 <line:131:3, col:25> col:3 mjTEXTURE_2D 'int'
| | |-ConstantExpr 0x2acf32f8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf32d8 <col:25> 'int' 0
| | `-FullComment 0x2ad34b20 <col:37, col:80>
| |   `-ParagraphComment 0x2ad34af0 <col:37, col:80>
| |     `-TextComment 0x2ad34ac0 <col:37, col:80> Text=" 2d texture, suitable for planes and hfields"
| |-EnumConstantDecl 0x2acf3398 <line:132:3> col:3 mjTEXTURE_CUBE 'int'
| | `-FullComment 0x2ad34bf0 <col:37, col:84>
| |   `-ParagraphComment 0x2ad34bc0 <col:37, col:84>
| |     `-TextComment 0x2ad34b90 <col:37, col:84> Text=" cube texture, suitable for all other geom types"
| `-EnumConstantDecl 0x2acf3448 <line:133:3> col:3 mjTEXTURE_SKYBOX 'int'
|   `-FullComment 0x2ad34cc0 <col:37, col:64>
|     `-ParagraphComment 0x2ad34c90 <col:37, col:64>
|       `-TextComment 0x2ad34c60 <col:37, col:64> Text=" cube texture used as skybox"
|-TypedefDecl 0x2acf34f8 <line:130:1, line:134:3> col:3 mjtTexture 'enum mjtTexture_':'enum mjtTexture_'
| `-ElaboratedType 0x2acf34a0 'enum mjtTexture_' sugar
|   `-EnumType 0x2acf3290 'enum mjtTexture_'
|     `-Enum 0x2acf31e8 'mjtTexture_'
|-EnumDecl 0x2acf3568 <line:137:9, line:149:1> line:137:14 mjtTextureRole_
| |-EnumConstantDecl 0x2acf3698 <line:138:3, col:25> col:3 mjTEXROLE_USER 'int'
| | |-ConstantExpr 0x2acf3678 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf3658 <col:25> 'int' 0
| | `-FullComment 0x2ad34d90 <col:37, col:48>
| |   `-ParagraphComment 0x2ad34d60 <col:37, col:48>
| |     `-TextComment 0x2ad34d30 <col:37, col:48> Text=" unspecified"
| |-EnumConstantDecl 0x2acf3718 <line:139:3> col:3 mjTEXROLE_RGB 'int'
| | `-FullComment 0x2ad34e60 <col:37, col:56>
| |   `-ParagraphComment 0x2ad34e30 <col:37, col:56>
| |     `-TextComment 0x2ad34e00 <col:37, col:56> Text=" base color (albedo)"
| |-EnumConstantDecl 0x2acf3798 <line:140:3> col:3 mjTEXROLE_OCCLUSION 'int'
| | `-FullComment 0x2ad34f30 <col:37, col:54>
| |   `-ParagraphComment 0x2ad34f00 <col:37, col:54>
| |     `-TextComment 0x2ad34ed0 <col:37, col:54> Text=" ambient occlusion"
| |-EnumConstantDecl 0x2acf3818 <line:141:3> col:3 mjTEXROLE_ROUGHNESS 'int'
| | `-FullComment 0x2ad35000 <col:37, col:46>
| |   `-ParagraphComment 0x2ad34fd0 <col:37, col:46>
| |     `-TextComment 0x2ad34fa0 <col:37, col:46> Text=" roughness"
| |-EnumConstantDecl 0x2acf3898 <line:142:3> col:3 mjTEXROLE_METALLIC 'int'
| | `-FullComment 0x2ad350d0 <col:37, col:45>
| |   `-ParagraphComment 0x2ad350a0 <col:37, col:45>
| |     `-TextComment 0x2ad35070 <col:37, col:45> Text=" metallic"
| |-EnumConstantDecl 0x2acf3918 <line:143:3> col:3 mjTEXROLE_NORMAL 'int'
| | `-FullComment 0x2ad359d0 <col:37, col:54>
| |   `-ParagraphComment 0x2ad359a0 <col:37, col:54>
| |     `-TextComment 0x2ad35970 <col:37, col:54> Text=" normal (bump) map"
| |-EnumConstantDecl 0x2acf3998 <line:144:3> col:3 mjTEXROLE_OPACITY 'int'
| | `-FullComment 0x2ad35aa0 <col:37, col:49>
| |   `-ParagraphComment 0x2ad35a70 <col:37, col:49>
| |     `-TextComment 0x2ad35a40 <col:37, col:49> Text=" transperancy"
| |-EnumConstantDecl 0x2acf3a18 <line:145:3> col:3 mjTEXROLE_EMISSIVE 'int'
| | `-FullComment 0x2ad35b70 <col:37, col:51>
| |   `-ParagraphComment 0x2ad35b40 <col:37, col:51>
| |     `-TextComment 0x2ad35b10 <col:37, col:51> Text=" light emission"
| |-EnumConstantDecl 0x2acf3a98 <line:146:3> col:3 mjTEXROLE_RGBA 'int'
| | `-FullComment 0x2ad35c40 <col:37, col:56>
| |   `-ParagraphComment 0x2ad35c10 <col:37, col:56>
| |     `-TextComment 0x2ad35be0 <col:37, col:56> Text=" base color, opacity"
| |-EnumConstantDecl 0x2acf3b18 <line:147:3> col:3 mjTEXROLE_ORM 'int'
| | `-FullComment 0x2ad35d10 <col:37, col:67>
| |   `-ParagraphComment 0x2ad35ce0 <col:37, col:67>
| |     `-TextComment 0x2ad35cb0 <col:37, col:67> Text=" occlusion, roughness, metallic"
| `-EnumConstantDecl 0x2acf3b98 <line:148:3> col:3 mjNTEXROLE 'int'
|-TypedefDecl 0x2acf3c48 <line:137:1, line:149:3> col:3 mjtTextureRole 'enum mjtTextureRole_':'enum mjtTextureRole_'
| `-ElaboratedType 0x2acf3bf0 'enum mjtTextureRole_' sugar
|   `-EnumType 0x2acf3610 'enum mjtTextureRole_'
|     `-Enum 0x2acf3568 'mjtTextureRole_'
|-EnumDecl 0x2acf3cb8 <line:152:9, line:157:1> line:152:14 mjtIntegrator_
| |-EnumConstantDecl 0x2acf3de8 <line:153:3, col:25> col:3 mjINT_EULER 'int'
| | |-ConstantExpr 0x2acf3dc8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf3da8 <col:25> 'int' 0
| | `-FullComment 0x2ad35de0 <col:37, col:56>
| |   `-ParagraphComment 0x2ad35db0 <col:37, col:56>
| |     `-TextComment 0x2ad35d80 <col:37, col:56> Text=" semi-implicit Euler"
| |-EnumConstantDecl 0x2acf3eb0 <line:154:3> col:3 mjINT_RK4 'int'
| | `-FullComment 0x2ad35eb0 <col:37, col:58>
| |   `-ParagraphComment 0x2ad35e80 <col:37, col:58>
| |     `-TextComment 0x2ad35e50 <col:37, col:58> Text=" 4th-order Runge Kutta"
| |-EnumConstantDecl 0x2acf3f28 <line:155:3> col:3 mjINT_IMPLICIT 'int'
| | `-FullComment 0x2ad35f80 <col:37, col:57>
| |   `-ParagraphComment 0x2ad35f50 <col:37, col:57>
| |     `-TextComment 0x2ad35f20 <col:37, col:57> Text=" implicit in velocity"
| `-EnumConstantDecl 0x2acf3fd8 <line:156:3> col:3 mjINT_IMPLICITFAST 'int'
|   `-FullComment 0x2ad36050 <col:37, col:76>
|     `-ParagraphComment 0x2ad36020 <col:37, col:76>
|       `-TextComment 0x2ad35ff0 <col:37, col:76> Text=" implicit in velocity, no rne derivative"
|-TypedefDecl 0x2acf4088 <line:152:1, line:157:3> col:3 mjtIntegrator 'enum mjtIntegrator_':'enum mjtIntegrator_'
| `-ElaboratedType 0x2acf4030 'enum mjtIntegrator_' sugar
|   `-EnumType 0x2acf3d60 'enum mjtIntegrator_'
|     `-Enum 0x2acf3cb8 'mjtIntegrator_'
|-EnumDecl 0x2acf40f8 <line:160:9, line:163:1> line:160:14 mjtCone_
| |-EnumConstantDecl 0x2acf4228 <line:161:3, col:26> col:3 mjCONE_PYRAMIDAL 'int'
| | |-ConstantExpr 0x2acf4208 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf41e8 <col:26> 'int' 0
| | `-FullComment 0x2ad36120 <col:37, col:46>
| |   `-ParagraphComment 0x2ad360f0 <col:37, col:46>
| |     `-TextComment 0x2ad360c0 <col:37, col:46> Text=" pyramidal"
| `-EnumConstantDecl 0x2acf42d8 <line:162:3> col:3 mjCONE_ELLIPTIC 'int'
|   `-FullComment 0x2ad361f0 <col:37, col:45>
|     `-ParagraphComment 0x2ad361c0 <col:37, col:45>
|       `-TextComment 0x2ad36190 <col:37, col:45> Text=" elliptic"
|-TypedefDecl 0x2acf4388 <line:160:1, line:163:3> col:3 mjtCone 'enum mjtCone_':'enum mjtCone_'
| `-ElaboratedType 0x2acf4330 'enum mjtCone_' sugar
|   `-EnumType 0x2acf41a0 'enum mjtCone_'
|     `-Enum 0x2acf40f8 'mjtCone_'
|-EnumDecl 0x2acf43f8 <line:166:9, line:170:1> line:166:14 mjtJacobian_
| |-EnumConstantDecl 0x2acf4528 <line:167:3, col:26> col:3 mjJAC_DENSE 'int'
| | |-ConstantExpr 0x2acf4508 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf44e8 <col:26> 'int' 0
| | `-FullComment 0x2ad362c0 <col:37, col:42>
| |   `-ParagraphComment 0x2ad36290 <col:37, col:42>
| |     `-TextComment 0x2ad36260 <col:37, col:42> Text=" dense"
| |-EnumConstantDecl 0x2acf45a8 <line:168:3> col:3 mjJAC_SPARSE 'int'
| | `-FullComment 0x2ad36390 <col:37, col:43>
| |   `-ParagraphComment 0x2ad36360 <col:37, col:43>
| |     `-TextComment 0x2ad36330 <col:37, col:43> Text=" sparse"
| `-EnumConstantDecl 0x2acf4658 <line:169:3> col:3 mjJAC_AUTO 'int'
|   `-FullComment 0x2ad364b0 <col:37, col:69>
|     `-ParagraphComment 0x2ad36480 <col:37, col:69>
|       |-TextComment 0x2ad36400 <col:37, col:48> Text=" dense if nv"
|       |-TextComment 0x2ad36420 <col:49> Text="<"
|       `-TextComment 0x2ad36440 <col:50, col:69> Text="60, sparse otherwise"
|-TypedefDecl 0x2acf4708 <line:166:1, line:170:3> col:3 mjtJacobian 'enum mjtJacobian_':'enum mjtJacobian_'
| `-ElaboratedType 0x2acf46b0 'enum mjtJacobian_' sugar
|   `-EnumType 0x2acf44a0 'enum mjtJacobian_'
|     `-Enum 0x2acf43f8 'mjtJacobian_'
|-EnumDecl 0x2acf4778 <line:173:9, line:177:1> line:173:14 mjtSolver_
| |-EnumConstantDecl 0x2acf48a8 <line:174:3, col:26> col:3 mjSOL_PGS 'int'
| | |-ConstantExpr 0x2acf4888 <col:26> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf4868 <col:26> 'int' 0
| | `-FullComment 0x2ad36580 <col:37, col:50>
| |   `-ParagraphComment 0x2ad36550 <col:37, col:50>
| |     `-TextComment 0x2ad36520 <col:37, col:50> Text=" PGS    (dual)"
| |-EnumConstantDecl 0x2acf4928 <line:175:3> col:3 mjSOL_CG 'int'
| | `-FullComment 0x2ad36650 <col:37, col:52>
| |   `-ParagraphComment 0x2ad36620 <col:37, col:52>
| |     `-TextComment 0x2ad365f0 <col:37, col:52> Text=" CG     (primal)"
| `-EnumConstantDecl 0x2acf49d8 <line:176:3> col:3 mjSOL_NEWTON 'int'
|   `-FullComment 0x2ad36720 <col:37, col:52>
|     `-ParagraphComment 0x2ad366f0 <col:37, col:52>
|       `-TextComment 0x2ad366c0 <col:37, col:52> Text=" Newton (primal)"
|-TypedefDecl 0x2acf4a88 <line:173:1, line:177:3> col:3 mjtSolver 'enum mjtSolver_':'enum mjtSolver_'
| `-ElaboratedType 0x2acf4a30 'enum mjtSolver_' sugar
|   `-EnumType 0x2acf4820 'enum mjtSolver_'
|     `-Enum 0x2acf4778 'mjtSolver_'
|-EnumDecl 0x2acf4af8 <line:180:9, line:187:1> line:180:14 mjtEq_
| |-EnumConstantDecl 0x2acf4c28 <line:181:3, col:25> col:3 mjEQ_CONNECT 'int'
| | |-ConstantExpr 0x2acf4c08 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf4be8 <col:25> 'int' 0
| | `-FullComment 0x2ad367f0 <col:37, col:79>
| |   `-ParagraphComment 0x2ad367c0 <col:37, col:79>
| |     `-TextComment 0x2ad36790 <col:37, col:79> Text=" connect two bodies at a point (ball joint)"
| |-EnumConstantDecl 0x2acf4ca8 <line:182:3> col:3 mjEQ_WELD 'int'
| | `-FullComment 0x2ad368c0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad36890 <col:37, col:88>
| |     `-TextComment 0x2ad36860 <col:37, col:88> Text=" fix relative position and orientation of two bodies"
| |-EnumConstantDecl 0x2acf4d28 <line:183:3> col:3 mjEQ_JOINT 'int'
| | `-FullComment 0x2ad369b0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad36980 <col:37, col:86>
| |     `-TextComment 0x2ad36930 <col:37, col:86> Text=" couple the values of two scalar joints with cubic"
| |-EnumConstantDecl 0x2acf4da8 <line:184:3> col:3 mjEQ_TENDON 'int'
| | `-FullComment 0x2ad36a80 <col:37, col:81>
| |   `-ParagraphComment 0x2ad36a50 <col:37, col:81>
| |     `-TextComment 0x2ad36a20 <col:37, col:81> Text=" couple the lengths of two tendons with cubic"
| |-EnumConstantDecl 0x2acf4e28 <line:185:3> col:3 mjEQ_FLEX 'int'
| | `-FullComment 0x2ad36b50 <col:37, col:67>
| |   `-ParagraphComment 0x2ad36b20 <col:37, col:67>
| |     `-TextComment 0x2ad36af0 <col:37, col:67> Text=" fix all edge lengths of a flex"
| `-EnumConstantDecl 0x2acf52e8 <line:186:3> col:3 mjEQ_DISTANCE 'int'
|   `-FullComment 0x2ad36c20 <col:37, col:77>
|     `-ParagraphComment 0x2ad36bf0 <col:37, col:77>
|       `-TextComment 0x2ad36bc0 <col:37, col:77> Text=" unsupported, will cause an error if used"
|-TypedefDecl 0x2acf5398 <line:180:1, line:187:3> col:3 mjtEq 'enum mjtEq_':'enum mjtEq_'
| `-ElaboratedType 0x2acf5340 'enum mjtEq_' sugar
|   `-EnumType 0x2acf4ba0 'enum mjtEq_'
|     `-Enum 0x2acf4af8 'mjtEq_'
|-EnumDecl 0x2acf5408 <line:190:9, line:197:1> line:190:14 mjtWrap_
| |-EnumConstantDecl 0x2acf5538 <line:191:3, col:25> col:3 mjWRAP_NONE 'int'
| | |-ConstantExpr 0x2acf5518 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf54f8 <col:25> 'int' 0
| | `-FullComment 0x2ad36cf0 <col:37, col:48>
| |   `-ParagraphComment 0x2ad36cc0 <col:37, col:48>
| |     `-TextComment 0x2ad36c90 <col:37, col:48> Text=" null object"
| |-EnumConstantDecl 0x2acf55b8 <line:192:3> col:3 mjWRAP_JOINT 'int'
| | `-FullComment 0x2ad36dc0 <col:37, col:56>
| |   `-ParagraphComment 0x2ad36d90 <col:37, col:56>
| |     `-TextComment 0x2ad36d60 <col:37, col:56> Text=" constant moment arm"
| |-EnumConstantDecl 0x2acf5638 <line:193:3> col:3 mjWRAP_PULLEY 'int'
| | `-FullComment 0x2ad36e90 <col:37, col:64>
| |   `-ParagraphComment 0x2ad36e60 <col:37, col:64>
| |     `-TextComment 0x2ad36e30 <col:37, col:64> Text=" pulley used to split tendon"
| |-EnumConstantDecl 0x2acf56b8 <line:194:3> col:3 mjWRAP_SITE 'int'
| | `-FullComment 0x2ad36f60 <col:37, col:54>
| |   `-ParagraphComment 0x2ad36f30 <col:37, col:54>
| |     `-TextComment 0x2ad36f00 <col:37, col:54> Text=" pass through site"
| |-EnumConstantDecl 0x2acf5738 <line:195:3> col:3 mjWRAP_SPHERE 'int'
| | `-FullComment 0x2ad37030 <col:37, col:55>
| |   `-ParagraphComment 0x2ad37000 <col:37, col:55>
| |     `-TextComment 0x2ad36fd0 <col:37, col:55> Text=" wrap around sphere"
| `-EnumConstantDecl 0x2acf57e8 <line:196:3> col:3 mjWRAP_CYLINDER 'int'
|   `-FullComment 0x2ad37100 <col:37, col:68>
|     `-ParagraphComment 0x2ad370d0 <col:37, col:68>
|       `-TextComment 0x2ad370a0 <col:37, col:68> Text=" wrap around (infinite) cylinder"
|-TypedefDecl 0x2acf5898 <line:190:1, line:197:3> col:3 mjtWrap 'enum mjtWrap_':'enum mjtWrap_'
| `-ElaboratedType 0x2acf5840 'enum mjtWrap_' sugar
|   `-EnumType 0x2acf54b0 'enum mjtWrap_'
|     `-Enum 0x2acf5408 'mjtWrap_'
|-EnumDecl 0x2acf5908 <line:200:9, line:209:1> line:200:14 mjtTrn_
| |-EnumConstantDecl 0x2acf5a38 <line:201:3, col:25> col:3 mjTRN_JOINT 'int'
| | |-ConstantExpr 0x2acf5a18 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf59f8 <col:25> 'int' 0
| | `-FullComment 0x2ad371d0 <col:37, col:51>
| |   `-ParagraphComment 0x2ad371a0 <col:37, col:51>
| |     `-TextComment 0x2ad37170 <col:37, col:51> Text=" force on joint"
| |-EnumConstantDecl 0x2acf5ab8 <line:202:3> col:3 mjTRN_JOINTINPARENT 'int'
| | `-FullComment 0x2ad372a0 <col:37, col:78>
| |   `-ParagraphComment 0x2ad37270 <col:37, col:78>
| |     `-TextComment 0x2ad37240 <col:37, col:78> Text=" force on joint, expressed in parent frame"
| |-EnumConstantDecl 0x2acf5b38 <line:203:3> col:3 mjTRN_SLIDERCRANK 'int'
| | `-FullComment 0x2ad37370 <col:37, col:67>
| |   `-ParagraphComment 0x2ad37340 <col:37, col:67>
| |     `-TextComment 0x2ad37310 <col:37, col:67> Text=" force via slider-crank linkage"
| |-EnumConstantDecl 0x2acf5bb8 <line:204:3> col:3 mjTRN_TENDON 'int'
| | `-FullComment 0x2ad37440 <col:37, col:52>
| |   `-ParagraphComment 0x2ad37410 <col:37, col:52>
| |     `-TextComment 0x2ad373e0 <col:37, col:52> Text=" force on tendon"
| |-EnumConstantDecl 0x2acf5c38 <line:205:3> col:3 mjTRN_SITE 'int'
| | `-FullComment 0x2ad37510 <col:37, col:50>
| |   `-ParagraphComment 0x2ad374e0 <col:37, col:50>
| |     `-TextComment 0x2ad374b0 <col:37, col:50> Text=" force on site"
| |-EnumConstantDecl 0x2acf5cb8 <line:206:3> col:3 mjTRN_BODY 'int'
| | `-FullComment 0x2ad375e0 <col:37, col:69>
| |   `-ParagraphComment 0x2ad375b0 <col:37, col:69>
| |     `-TextComment 0x2ad37580 <col:37, col:69> Text=" adhesion force on a body's geoms"
| `-EnumConstantDecl 0x2acf5da8 <line:208:3, col:25> col:3 mjTRN_UNDEFINED 'int'
|   |-ConstantExpr 0x2acf5d88 <col:25> 'int'
|   | |-value: Int 1000
|   | `-IntegerLiteral 0x2acf5d38 <col:25> 'int' 1000
|   `-FullComment 0x2ad376b0 <col:37, col:64>
|     `-ParagraphComment 0x2ad37680 <col:37, col:64>
|       `-TextComment 0x2ad37650 <col:37, col:64> Text=" undefined transmission type"
|-TypedefDecl 0x2acf5e58 <line:200:1, line:209:3> col:3 mjtTrn 'enum mjtTrn_':'enum mjtTrn_'
| `-ElaboratedType 0x2acf5e00 'enum mjtTrn_' sugar
|   `-EnumType 0x2acf59b0 'enum mjtTrn_'
|     `-Enum 0x2acf5908 'mjtTrn_'
|-EnumDecl 0x2acf5ec8 <line:212:9, line:219:1> line:212:14 mjtDyn_
| |-EnumConstantDecl 0x2acf5ff8 <line:213:3, col:25> col:3 mjDYN_NONE 'int'
| | |-ConstantExpr 0x2acf5fd8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf5fb8 <col:25> 'int' 0
| | `-FullComment 0x2ad37780 <col:37, col:79>
| |   `-ParagraphComment 0x2ad37750 <col:37, col:79>
| |     `-TextComment 0x2ad37720 <col:37, col:79> Text=" no internal dynamics; ctrl specifies force"
| |-EnumConstantDecl 0x2acf6078 <line:214:3> col:3 mjDYN_INTEGRATOR 'int'
| | `-FullComment 0x2ad37850 <col:37, col:58>
| |   `-ParagraphComment 0x2ad37820 <col:37, col:58>
| |     `-TextComment 0x2ad377f0 <col:37, col:58> Text=" integrator: da/dt = u"
| |-EnumConstantDecl 0x2acf60f8 <line:215:3> col:3 mjDYN_FILTER 'int'
| | `-FullComment 0x2ad37920 <col:37, col:71>
| |   `-ParagraphComment 0x2ad378f0 <col:37, col:71>
| |     `-TextComment 0x2ad378c0 <col:37, col:71> Text=" linear filter: da/dt = (u-a) / tau"
| |-EnumConstantDecl 0x2acf6178 <line:216:3> col:3 mjDYN_FILTEREXACT 'int'
| | `-FullComment 0x2ad38a40 <col:37, col:95>
| |   `-ParagraphComment 0x2ad38a10 <col:37, col:95>
| |     `-TextComment 0x2ad389e0 <col:37, col:95> Text=" linear filter: da/dt = (u-a) / tau, with exact integration"
| |-EnumConstantDecl 0x2acf61f8 <line:217:3> col:3 mjDYN_MUSCLE 'int'
| | `-FullComment 0x2ad38b10 <col:37, col:85>
| |   `-ParagraphComment 0x2ad38ae0 <col:37, col:85>
| |     `-TextComment 0x2ad38ab0 <col:37, col:85> Text=" piece-wise linear filter with two time constants"
| `-EnumConstantDecl 0x2acf88a0 <line:218:3> col:3 mjDYN_USER 'int'
|   `-FullComment 0x2ad38be0 <col:37, col:63>
|     `-ParagraphComment 0x2ad38bb0 <col:37, col:63>
|       `-TextComment 0x2ad38b80 <col:37, col:63> Text=" user-defined dynamics type"
|-TypedefDecl 0x2acf8948 <line:212:1, line:219:3> col:3 mjtDyn 'enum mjtDyn_':'enum mjtDyn_'
| `-ElaboratedType 0x2acf88f0 'enum mjtDyn_' sugar
|   `-EnumType 0x2acf5f70 'enum mjtDyn_'
|     `-Enum 0x2acf5ec8 'mjtDyn_'
|-EnumDecl 0x2acf89b8 <line:222:9, line:227:1> line:222:14 mjtGain_
| |-EnumConstantDecl 0x2acf8ae8 <line:223:3, col:25> col:3 mjGAIN_FIXED 'int'
| | |-ConstantExpr 0x2acf8ac8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf8aa8 <col:25> 'int' 0
| | `-FullComment 0x2ad38cb0 <col:37, col:47>
| |   `-ParagraphComment 0x2ad38c80 <col:37, col:47>
| |     `-TextComment 0x2ad38c50 <col:37, col:47> Text=" fixed gain"
| |-EnumConstantDecl 0x2acf8b68 <line:224:3> col:3 mjGAIN_AFFINE 'int'
| | `-FullComment 0x2ad38d80 <col:37, col:68>
| |   `-ParagraphComment 0x2ad38d50 <col:37, col:68>
| |     `-TextComment 0x2ad38d20 <col:37, col:68> Text=" const + kp*length + kv*velocity"
| |-EnumConstantDecl 0x2acf8be8 <line:225:3> col:3 mjGAIN_MUSCLE 'int'
| | `-FullComment 0x2ad38e50 <col:37, col:82>
| |   `-ParagraphComment 0x2ad38e20 <col:37, col:82>
| |     `-TextComment 0x2ad38df0 <col:37, col:82> Text=" muscle FLV curve computed by mju_muscleGain()"
| `-EnumConstantDecl 0x2acf8c98 <line:226:3> col:3 mjGAIN_USER 'int'
|   `-FullComment 0x2ad38f20 <col:37, col:59>
|     `-ParagraphComment 0x2ad38ef0 <col:37, col:59>
|       `-TextComment 0x2ad38ec0 <col:37, col:59> Text=" user-defined gain type"
|-TypedefDecl 0x2acf8d48 <line:222:1, line:227:3> col:3 mjtGain 'enum mjtGain_':'enum mjtGain_'
| `-ElaboratedType 0x2acf8cf0 'enum mjtGain_' sugar
|   `-EnumType 0x2acf8a60 'enum mjtGain_'
|     `-Enum 0x2acf89b8 'mjtGain_'
|-EnumDecl 0x2acf8db8 <line:230:9, line:235:1> line:230:14 mjtBias_
| |-EnumConstantDecl 0x2acf8ee8 <line:231:3, col:25> col:3 mjBIAS_NONE 'int'
| | |-ConstantExpr 0x2acf8ec8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf8ea8 <col:25> 'int' 0
| | `-FullComment 0x2ad38ff0 <col:37, col:44>
| |   `-ParagraphComment 0x2ad38fc0 <col:37, col:44>
| |     `-TextComment 0x2ad38f90 <col:37, col:44> Text=" no bias"
| |-EnumConstantDecl 0x2acf8f68 <line:232:3> col:3 mjBIAS_AFFINE 'int'
| | `-FullComment 0x2ad390c0 <col:37, col:68>
| |   `-ParagraphComment 0x2ad39090 <col:37, col:68>
| |     `-TextComment 0x2ad39060 <col:37, col:68> Text=" const + kp*length + kv*velocity"
| |-EnumConstantDecl 0x2acf8fe8 <line:233:3> col:3 mjBIAS_MUSCLE 'int'
| | `-FullComment 0x2ad39190 <col:37, col:86>
| |   `-ParagraphComment 0x2ad39160 <col:37, col:86>
| |     `-TextComment 0x2ad39130 <col:37, col:86> Text=" muscle passive force computed by mju_muscleBias()"
| `-EnumConstantDecl 0x2acf9098 <line:234:3> col:3 mjBIAS_USER 'int'
|   `-FullComment 0x2ad39260 <col:37, col:59>
|     `-ParagraphComment 0x2ad39230 <col:37, col:59>
|       `-TextComment 0x2ad39200 <col:37, col:59> Text=" user-defined bias type"
|-TypedefDecl 0x2acf9148 <line:230:1, line:235:3> col:3 mjtBias 'enum mjtBias_':'enum mjtBias_'
| `-ElaboratedType 0x2acf90f0 'enum mjtBias_' sugar
|   `-EnumType 0x2acf8e60 'enum mjtBias_'
|     `-Enum 0x2acf8db8 'mjtBias_'
|-EnumDecl 0x2acf91b8 <line:238:9, line:270:1> line:238:14 mjtObj_
| |-EnumConstantDecl 0x2acf92e8 <line:239:3, col:25> col:3 mjOBJ_UNKNOWN 'int'
| | |-ConstantExpr 0x2acf92c8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acf92a8 <col:25> 'int' 0
| | `-FullComment 0x2ad39330 <col:37, col:56>
| |   `-ParagraphComment 0x2ad39300 <col:37, col:56>
| |     `-TextComment 0x2ad392d0 <col:37, col:56> Text=" unknown object type"
| |-EnumConstantDecl 0x2acf9368 <line:240:3> col:3 mjOBJ_BODY 'int'
| | `-FullComment 0x2ad39400 <col:37, col:41>
| |   `-ParagraphComment 0x2ad393d0 <col:37, col:41>
| |     `-TextComment 0x2ad393a0 <col:37, col:41> Text=" body"
| |-EnumConstantDecl 0x2acf93e8 <line:241:3> col:3 mjOBJ_XBODY 'int'
| | `-FullComment 0x2ad394d0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad394a0 <col:37, col:90>
| |     `-TextComment 0x2ad39470 <col:37, col:90> Text=" body, used to access regular frame instead of i-frame"
| |-EnumConstantDecl 0x2acf9468 <line:242:3> col:3 mjOBJ_JOINT 'int'
| | `-FullComment 0x2ad395a0 <col:37, col:42>
| |   `-ParagraphComment 0x2ad39570 <col:37, col:42>
| |     `-TextComment 0x2ad39540 <col:37, col:42> Text=" joint"
| |-EnumConstantDecl 0x2acf94e8 <line:243:3> col:3 mjOBJ_DOF 'int'
| | `-FullComment 0x2ad39670 <col:37, col:40>
| |   `-ParagraphComment 0x2ad39640 <col:37, col:40>
| |     `-TextComment 0x2ad39610 <col:37, col:40> Text=" dof"
| |-EnumConstantDecl 0x2acf9568 <line:244:3> col:3 mjOBJ_GEOM 'int'
| | `-FullComment 0x2ad39740 <col:37, col:41>
| |   `-ParagraphComment 0x2ad39710 <col:37, col:41>
| |     `-TextComment 0x2ad396e0 <col:37, col:41> Text=" geom"
| |-EnumConstantDecl 0x2acf95e8 <line:245:3> col:3 mjOBJ_SITE 'int'
| | `-FullComment 0x2ad39810 <col:37, col:41>
| |   `-ParagraphComment 0x2ad397e0 <col:37, col:41>
| |     `-TextComment 0x2ad397b0 <col:37, col:41> Text=" site"
| |-EnumConstantDecl 0x2acf9668 <line:246:3> col:3 mjOBJ_CAMERA 'int'
| | `-FullComment 0x2ad398e0 <col:37, col:43>
| |   `-ParagraphComment 0x2ad398b0 <col:37, col:43>
| |     `-TextComment 0x2ad39880 <col:37, col:43> Text=" camera"
| |-EnumConstantDecl 0x2acf96e8 <line:247:3> col:3 mjOBJ_LIGHT 'int'
| | `-FullComment 0x2ad399c0 <col:37, col:42>
| |   `-ParagraphComment 0x2ad39980 <col:37, col:42>
| |     `-TextComment 0x2ad39950 <col:37, col:42> Text=" light"
| |-EnumConstantDecl 0x2acf9768 <line:248:3> col:3 mjOBJ_FLEX 'int'
| | `-FullComment 0x2ad39a90 <col:37, col:41>
| |   `-ParagraphComment 0x2ad39a60 <col:37, col:41>
| |     `-TextComment 0x2ad39a30 <col:37, col:41> Text=" flex"
| |-EnumConstantDecl 0x2acf97e8 <line:249:3> col:3 mjOBJ_MESH 'int'
| | `-FullComment 0x2ad39b60 <col:37, col:41>
| |   `-ParagraphComment 0x2ad39b30 <col:37, col:41>
| |     `-TextComment 0x2ad39b00 <col:37, col:41> Text=" mesh"
| |-EnumConstantDecl 0x2acf9e30 <line:250:3> col:3 mjOBJ_SKIN 'int'
| | `-FullComment 0x2ad39c30 <col:37, col:41>
| |   `-ParagraphComment 0x2ad39c00 <col:37, col:41>
| |     `-TextComment 0x2ad39bd0 <col:37, col:41> Text=" skin"
| |-EnumConstantDecl 0x2acf9ea8 <line:251:3> col:3 mjOBJ_HFIELD 'int'
| | `-FullComment 0x2ad39d00 <col:37, col:48>
| |   `-ParagraphComment 0x2ad39cd0 <col:37, col:48>
| |     `-TextComment 0x2ad39ca0 <col:37, col:48> Text=" heightfield"
| |-EnumConstantDecl 0x2acf9f28 <line:252:3> col:3 mjOBJ_TEXTURE 'int'
| | `-FullComment 0x2ad39dd0 <col:37, col:44>
| |   `-ParagraphComment 0x2ad39da0 <col:37, col:44>
| |     `-TextComment 0x2ad39d70 <col:37, col:44> Text=" texture"
| |-EnumConstantDecl 0x2acf9fa8 <line:253:3> col:3 mjOBJ_MATERIAL 'int'
| | `-FullComment 0x2ad39ea0 <col:37, col:59>
| |   `-ParagraphComment 0x2ad39e70 <col:37, col:59>
| |     `-TextComment 0x2ad39e40 <col:37, col:59> Text=" material for rendering"
| |-EnumConstantDecl 0x2acfa028 <line:254:3> col:3 mjOBJ_PAIR 'int'
| | `-FullComment 0x2ad39f70 <col:37, col:57>
| |   `-ParagraphComment 0x2ad39f40 <col:37, col:57>
| |     `-TextComment 0x2ad39f10 <col:37, col:57> Text=" geom pair to include"
| |-EnumConstantDecl 0x2acfa0a8 <line:255:3> col:3 mjOBJ_EXCLUDE 'int'
| | `-FullComment 0x2ad3a040 <col:37, col:57>
| |   `-ParagraphComment 0x2ad3a010 <col:37, col:57>
| |     `-TextComment 0x2ad39fe0 <col:37, col:57> Text=" body pair to exclude"
| |-EnumConstantDecl 0x2acfa128 <line:256:3> col:3 mjOBJ_EQUALITY 'int'
| | `-FullComment 0x2ad3a110 <col:37, col:56>
| |   `-ParagraphComment 0x2ad3a0e0 <col:37, col:56>
| |     `-TextComment 0x2ad3a0b0 <col:37, col:56> Text=" equality constraint"
| |-EnumConstantDecl 0x2acfa1a8 <line:257:3> col:3 mjOBJ_TENDON 'int'
| | `-FullComment 0x2ad3a1e0 <col:37, col:43>
| |   `-ParagraphComment 0x2ad3a1b0 <col:37, col:43>
| |     `-TextComment 0x2ad3a180 <col:37, col:43> Text=" tendon"
| |-EnumConstantDecl 0x2acfa228 <line:258:3> col:3 mjOBJ_ACTUATOR 'int'
| | `-FullComment 0x2ad3a2b0 <col:37, col:45>
| |   `-ParagraphComment 0x2ad3a280 <col:37, col:45>
| |     `-TextComment 0x2ad3a250 <col:37, col:45> Text=" actuator"
| |-EnumConstantDecl 0x2acfa2a8 <line:259:3> col:3 mjOBJ_SENSOR 'int'
| | `-FullComment 0x2ad3a380 <col:37, col:43>
| |   `-ParagraphComment 0x2ad3a350 <col:37, col:43>
| |     `-TextComment 0x2ad3a320 <col:37, col:43> Text=" sensor"
| |-EnumConstantDecl 0x2acfa328 <line:260:3> col:3 mjOBJ_NUMERIC 'int'
| | `-FullComment 0x2ad3a450 <col:37, col:44>
| |   `-ParagraphComment 0x2ad3a420 <col:37, col:44>
| |     `-TextComment 0x2ad3a3f0 <col:37, col:44> Text=" numeric"
| |-EnumConstantDecl 0x2acfa3a8 <line:261:3> col:3 mjOBJ_TEXT 'int'
| | `-FullComment 0x2ad3a520 <col:37, col:41>
| |   `-ParagraphComment 0x2ad3a4f0 <col:37, col:41>
| |     `-TextComment 0x2ad3a4c0 <col:37, col:41> Text=" text"
| |-EnumConstantDecl 0x2acfa428 <line:262:3> col:3 mjOBJ_TUPLE 'int'
| | `-FullComment 0x2ad3a5f0 <col:37, col:42>
| |   `-ParagraphComment 0x2ad3a5c0 <col:37, col:42>
| |     `-TextComment 0x2ad3a590 <col:37, col:42> Text=" tuple"
| |-EnumConstantDecl 0x2acfa4a8 <line:263:3> col:3 mjOBJ_KEY 'int'
| | `-FullComment 0x2ad3a6c0 <col:37, col:45>
| |   `-ParagraphComment 0x2ad3a690 <col:37, col:45>
| |     `-TextComment 0x2ad3a660 <col:37, col:45> Text=" keyframe"
| |-EnumConstantDecl 0x2acfa528 <line:264:3> col:3 mjOBJ_PLUGIN 'int'
| | `-FullComment 0x2ad3a790 <col:37, col:52>
| |   `-ParagraphComment 0x2ad3a760 <col:37, col:52>
| |     `-TextComment 0x2ad3a730 <col:37, col:52> Text=" plugin instance"
| |-EnumConstantDecl 0x2acfa5a8 <line:266:3> col:3 mjNOBJECT 'int'
| | `-FullComment 0x2ad3a860 <col:37, col:59>
| |   `-ParagraphComment 0x2ad3a830 <col:37, col:59>
| |     `-TextComment 0x2ad3a800 <col:37, col:59> Text=" number of object types"
| `-EnumConstantDecl 0x2acfa6c8 <line:269:3, col:25> col:3 mjOBJ_FRAME 'int'
|   |-ConstantExpr 0x2acfa6a8 <col:25> 'int'
|   | |-value: Int 100
|   | `-IntegerLiteral 0x2acfa658 <col:25> 'int' 100
|   `-FullComment 0x2ad3a930 <col:37, col:42>
|     `-ParagraphComment 0x2ad3a900 <col:37, col:42>
|       `-TextComment 0x2ad3a8d0 <col:37, col:42> Text=" frame"
|-TypedefDecl 0x2acfa778 <line:238:1, line:270:3> col:3 mjtObj 'enum mjtObj_':'enum mjtObj_'
| `-ElaboratedType 0x2acfa720 'enum mjtObj_' sugar
|   `-EnumType 0x2acf9260 'enum mjtObj_'
|     `-Enum 0x2acf91b8 'mjtObj_'
|-EnumDecl 0x2acfa7e8 <line:273:9, line:282:1> line:273:14 mjtConstraint_
| |-EnumConstantDecl 0x2acfa918 <line:274:3, col:25> col:3 mjCNSTR_EQUALITY 'int'
| | |-ConstantExpr 0x2acfa8f8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acfa8d8 <col:25> 'int' 0
| | `-FullComment 0x2ad3aa20 <col:37, col:56>
| |   `-ParagraphComment 0x2ad3a9f0 <col:37, col:56>
| |     `-TextComment 0x2ad3a9c0 <col:37, col:56> Text=" equality constraint"
| |-EnumConstantDecl 0x2acfa998 <line:275:3> col:3 mjCNSTR_FRICTION_DOF 'int'
| | `-FullComment 0x2ad3aaf0 <col:37, col:49>
| |   `-ParagraphComment 0x2ad3aac0 <col:37, col:49>
| |     `-TextComment 0x2ad3aa90 <col:37, col:49> Text=" dof friction"
| |-EnumConstantDecl 0x2acfaa18 <line:276:3> col:3 mjCNSTR_FRICTION_TENDON 'int'
| | `-FullComment 0x2ad3abc0 <col:37, col:52>
| |   `-ParagraphComment 0x2ad3ab90 <col:37, col:52>
| |     `-TextComment 0x2ad3ab60 <col:37, col:52> Text=" tendon friction"
| |-EnumConstantDecl 0x2acfaa98 <line:277:3> col:3 mjCNSTR_LIMIT_JOINT 'int'
| | `-FullComment 0x2ad3ac90 <col:37, col:48>
| |   `-ParagraphComment 0x2ad3ac60 <col:37, col:48>
| |     `-TextComment 0x2ad3ac30 <col:37, col:48> Text=" joint limit"
| |-EnumConstantDecl 0x2acfab18 <line:278:3> col:3 mjCNSTR_LIMIT_TENDON 'int'
| | `-FullComment 0x2ad3ad60 <col:37, col:49>
| |   `-ParagraphComment 0x2ad3ad30 <col:37, col:49>
| |     `-TextComment 0x2ad3ad00 <col:37, col:49> Text=" tendon limit"
| |-EnumConstantDecl 0x2acfab98 <line:279:3> col:3 mjCNSTR_CONTACT_FRICTIONLESS 'int'
| | `-FullComment 0x2ad3ae30 <col:37, col:57>
| |   `-ParagraphComment 0x2ad3ae00 <col:37, col:57>
| |     `-TextComment 0x2ad3add0 <col:37, col:57> Text=" frictionless contact"
| |-EnumConstantDecl 0x2acfac18 <line:280:3> col:3 mjCNSTR_CONTACT_PYRAMIDAL 'int'
| | `-FullComment 0x2ad3af00 <col:37, col:80>
| |   `-ParagraphComment 0x2ad3aed0 <col:37, col:80>
| |     `-TextComment 0x2ad3aea0 <col:37, col:80> Text=" frictional contact, pyramidal friction cone"
| `-EnumConstantDecl 0x2acfacc8 <line:281:3> col:3 mjCNSTR_CONTACT_ELLIPTIC 'int'
|   `-FullComment 0x2ad3afd0 <col:37, col:79>
|     `-ParagraphComment 0x2ad3afa0 <col:37, col:79>
|       `-TextComment 0x2ad3af70 <col:37, col:79> Text=" frictional contact, elliptic friction cone"
|-TypedefDecl 0x2acfad78 <line:273:1, line:282:3> col:3 mjtConstraint 'enum mjtConstraint_':'enum mjtConstraint_'
| `-ElaboratedType 0x2acfad20 'enum mjtConstraint_' sugar
|   `-EnumType 0x2acfa890 'enum mjtConstraint_'
|     `-Enum 0x2acfa7e8 'mjtConstraint_'
|-EnumDecl 0x2acfb500 <line:285:9, line:291:1> line:285:14 mjtConstraintState_
| |-EnumConstantDecl 0x2acfb628 <line:286:3, col:28> col:3 mjCNSTRSTATE_SATISFIED 'int'
| | |-ConstantExpr 0x2acfb608 <col:28> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acfb5e8 <col:28> 'int' 0
| | `-FullComment 0x2ad3b0a0 <col:39, col:87>
| |   `-ParagraphComment 0x2ad3b070 <col:39, col:87>
| |     `-TextComment 0x2ad3b040 <col:39, col:87> Text=" constraint satisfied, zero cost (limit, contact)"
| |-EnumConstantDecl 0x2acfb6a8 <line:287:3> col:3 mjCNSTRSTATE_QUADRATIC 'int'
| | `-FullComment 0x2ad3b170 <col:39, col:90>
| |   `-ParagraphComment 0x2ad3b140 <col:39, col:90>
| |     `-TextComment 0x2ad3b110 <col:39, col:90> Text=" quadratic cost (equality, friction, limit, contact)"
| |-EnumConstantDecl 0x2acfb728 <line:288:3> col:3 mjCNSTRSTATE_LINEARNEG 'int'
| | `-FullComment 0x2ad3b240 <col:39, col:76>
| |   `-ParagraphComment 0x2ad3b210 <col:39, col:76>
| |     `-TextComment 0x2ad3b1e0 <col:39, col:76> Text=" linear cost, negative side (friction)"
| |-EnumConstantDecl 0x2acfb7a8 <line:289:3> col:3 mjCNSTRSTATE_LINEARPOS 'int'
| | `-FullComment 0x2ad3b310 <col:39, col:76>
| |   `-ParagraphComment 0x2ad3b2e0 <col:39, col:76>
| |     `-TextComment 0x2ad3b2b0 <col:39, col:76> Text=" linear cost, positive side (friction)"
| `-EnumConstantDecl 0x2acfb858 <line:290:3> col:3 mjCNSTRSTATE_CONE 'int'
|   `-FullComment 0x2ad3b3e0 <col:39, col:87>
|     `-ParagraphComment 0x2ad3b3b0 <col:39, col:87>
|       `-TextComment 0x2ad3b380 <col:39, col:87> Text=" squared distance to cone cost (elliptic contact)"
|-TypedefDecl 0x2acfb908 <line:285:1, line:291:3> col:3 mjtConstraintState 'enum mjtConstraintState_':'enum mjtConstraintState_'
| `-ElaboratedType 0x2acfb8b0 'enum mjtConstraintState_' sugar
|   `-EnumType 0x2acfb5a0 'enum mjtConstraintState_'
|     `-Enum 0x2acfb500 'mjtConstraintState_'
|-EnumDecl 0x2acfb978 <line:294:9, line:357:1> line:294:14 mjtSensor_
| |-EnumConstantDecl 0x2acfbad8 <line:296:3, col:25> col:3 mjSENS_TOUCH 'int'
| | |-ConstantExpr 0x2acfbab8 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acfba98 <col:25> 'int' 0
| | `-FullComment 0x2ad3b4b0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad3b480 <col:37, col:89>
| |     `-TextComment 0x2ad3b450 <col:37, col:89> Text=" scalar contact normal forces summed over sensor zone"
| |-EnumConstantDecl 0x2acfbb58 <line:297:3> col:3 mjSENS_ACCELEROMETER 'int'
| | `-FullComment 0x2ad3b580 <col:37, col:75>
| |   `-ParagraphComment 0x2ad3b550 <col:37, col:75>
| |     `-TextComment 0x2ad3b520 <col:37, col:75> Text=" 3D linear acceleration, in local frame"
| |-EnumConstantDecl 0x2acfbbd8 <line:298:3> col:3 mjSENS_VELOCIMETER 'int'
| | `-FullComment 0x2ad3b650 <col:37, col:71>
| |   `-ParagraphComment 0x2ad3b620 <col:37, col:71>
| |     `-TextComment 0x2ad3b5f0 <col:37, col:71> Text=" 3D linear velocity, in local frame"
| |-EnumConstantDecl 0x2acfbc58 <line:299:3> col:3 mjSENS_GYRO 'int'
| | `-FullComment 0x2ad3b720 <col:37, col:72>
| |   `-ParagraphComment 0x2ad3b6f0 <col:37, col:72>
| |     `-TextComment 0x2ad3b6c0 <col:37, col:72> Text=" 3D angular velocity, in local frame"
| |-EnumConstantDecl 0x2acfbcd8 <line:300:3> col:3 mjSENS_FORCE 'int'
| | `-FullComment 0x2ad3b7f0 <col:37, col:85>
| |   `-ParagraphComment 0x2ad3b7c0 <col:37, col:85>
| |     `-TextComment 0x2ad3b790 <col:37, col:85> Text=" 3D force between site's body and its parent body"
| |-EnumConstantDecl 0x2acfbd58 <line:301:3> col:3 mjSENS_TORQUE 'int'
| | `-FullComment 0x2ad3b8c0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad3b890 <col:37, col:86>
| |     `-TextComment 0x2ad3b860 <col:37, col:86> Text=" 3D torque between site's body and its parent body"
| |-EnumConstantDecl 0x2acfbdd8 <line:302:3> col:3 mjSENS_MAGNETOMETER 'int'
| | `-FullComment 0x2ad3b990 <col:37, col:52>
| |   `-ParagraphComment 0x2ad3b960 <col:37, col:52>
| |     `-TextComment 0x2ad3b930 <col:37, col:52> Text=" 3D magnetometer"
| |-EnumConstantDecl 0x2acfbe58 <line:303:3> col:3 mjSENS_RANGEFINDER 'int'
| | `-FullComment 0x2ad3ba70 <col:37, col:89>
| |   `-ParagraphComment 0x2ad3ba40 <col:37, col:89>
| |     `-TextComment 0x2ad3ba10 <col:37, col:89> Text=" scalar distance to nearest geom or site along z-axis"
| |-EnumConstantDecl 0x2acfbed8 <line:304:3> col:3 mjSENS_CAMPROJECTION 'int'
| | `-FullComment 0x2ad3bb40 <col:37, col:84>
| |   `-ParagraphComment 0x2ad3bb10 <col:37, col:84>
| |     `-TextComment 0x2ad3bae0 <col:37, col:84> Text=" pixel coordinates of a site in the camera image"
| |-EnumConstantDecl 0x2acfbf88 <line:307:3> col:3 mjSENS_JOINTPOS 'int'
| | `-FullComment 0x2ad3bc10 <col:37, col:81>
| |   `-ParagraphComment 0x2ad3bbe0 <col:37, col:81>
| |     `-TextComment 0x2ad3bbb0 <col:37, col:81> Text=" scalar joint position (hinge and slide only)"
| |-EnumConstantDecl 0x2acfc008 <line:308:3> col:3 mjSENS_JOINTVEL 'int'
| | `-FullComment 0x2ad3bce0 <col:37, col:81>
| |   `-ParagraphComment 0x2ad3bcb0 <col:37, col:81>
| |     `-TextComment 0x2ad3bc80 <col:37, col:81> Text=" scalar joint velocity (hinge and slide only)"
| |-EnumConstantDecl 0x2acfc088 <line:309:3> col:3 mjSENS_TENDONPOS 'int'
| | `-FullComment 0x2ad3bdb0 <col:37, col:59>
| |   `-ParagraphComment 0x2ad3bd80 <col:37, col:59>
| |     `-TextComment 0x2ad3bd50 <col:37, col:59> Text=" scalar tendon position"
| |-EnumConstantDecl 0x2acfc108 <line:310:3> col:3 mjSENS_TENDONVEL 'int'
| | `-FullComment 0x2ad3be80 <col:37, col:59>
| |   `-ParagraphComment 0x2ad3be50 <col:37, col:59>
| |     `-TextComment 0x2ad3be20 <col:37, col:59> Text=" scalar tendon velocity"
| |-EnumConstantDecl 0x2acfc188 <line:311:3> col:3 mjSENS_ACTUATORPOS 'int'
| | `-FullComment 0x2ad3bf50 <col:37, col:61>
| |   `-ParagraphComment 0x2ad3bf20 <col:37, col:61>
| |     `-TextComment 0x2ad3bef0 <col:37, col:61> Text=" scalar actuator position"
| |-EnumConstantDecl 0x2acfc208 <line:312:3> col:3 mjSENS_ACTUATORVEL 'int'
| | `-FullComment 0x2ad3c020 <col:37, col:61>
| |   `-ParagraphComment 0x2ad3bff0 <col:37, col:61>
| |     `-TextComment 0x2ad3bfc0 <col:37, col:61> Text=" scalar actuator velocity"
| |-EnumConstantDecl 0x2acfc288 <line:313:3> col:3 mjSENS_ACTUATORFRC 'int'
| | `-FullComment 0x2ad3c0f0 <col:37, col:58>
| |   `-ParagraphComment 0x2ad3c0c0 <col:37, col:58>
| |     `-TextComment 0x2ad3c090 <col:37, col:58> Text=" scalar actuator force"
| |-EnumConstantDecl 0x2acfc308 <line:314:3> col:3 mjSENS_JOINTACTFRC 'int'
| | `-FullComment 0x2ad3c1c0 <col:37, col:81>
| |   `-ParagraphComment 0x2ad3c190 <col:37, col:81>
| |     `-TextComment 0x2ad3c160 <col:37, col:81> Text=" scalar actuator force, measured at the joint"
| |-EnumConstantDecl 0x2acfc3b8 <line:317:3> col:3 mjSENS_BALLQUAT 'int'
| | `-FullComment 0x2ad3c290 <col:37, col:61>
| |   `-ParagraphComment 0x2ad3c260 <col:37, col:61>
| |     `-TextComment 0x2ad3c230 <col:37, col:61> Text=" 4D ball joint quaternion"
| |-EnumConstantDecl 0x2acfc438 <line:318:3> col:3 mjSENS_BALLANGVEL 'int'
| | `-FullComment 0x2ad3c360 <col:37, col:67>
| |   `-ParagraphComment 0x2ad3c330 <col:37, col:67>
| |     `-TextComment 0x2ad3c300 <col:37, col:67> Text=" 3D ball joint angular velocity"
| |-EnumConstantDecl 0x2acfcc90 <line:321:3> col:3 mjSENS_JOINTLIMITPOS 'int'
| | `-FullComment 0x2ad3c430 <col:37, col:64>
| |   `-ParagraphComment 0x2ad3c400 <col:37, col:64>
| |     `-TextComment 0x2ad3c3d0 <col:37, col:64> Text=" joint limit distance-margin"
| |-EnumConstantDecl 0x2acfcd08 <line:322:3> col:3 mjSENS_JOINTLIMITVEL 'int'
| | `-FullComment 0x2ad3c500 <col:37, col:57>
| |   `-ParagraphComment 0x2ad3c4d0 <col:37, col:57>
| |     `-TextComment 0x2ad3c4a0 <col:37, col:57> Text=" joint limit velocity"
| |-EnumConstantDecl 0x2acfcd88 <line:323:3> col:3 mjSENS_JOINTLIMITFRC 'int'
| | `-FullComment 0x2ad3c5d0 <col:37, col:54>
| |   `-ParagraphComment 0x2ad3c5a0 <col:37, col:54>
| |     `-TextComment 0x2ad3c570 <col:37, col:54> Text=" joint limit force"
| |-EnumConstantDecl 0x2acfce08 <line:324:3> col:3 mjSENS_TENDONLIMITPOS 'int'
| | `-FullComment 0x2ad3c6a0 <col:37, col:65>
| |   `-ParagraphComment 0x2ad3c670 <col:37, col:65>
| |     `-TextComment 0x2ad3c640 <col:37, col:65> Text=" tendon limit distance-margin"
| |-EnumConstantDecl 0x2acfce88 <line:325:3> col:3 mjSENS_TENDONLIMITVEL 'int'
| | `-FullComment 0x2ad3c770 <col:37, col:58>
| |   `-ParagraphComment 0x2ad3c740 <col:37, col:58>
| |     `-TextComment 0x2ad3c710 <col:37, col:58> Text=" tendon limit velocity"
| |-EnumConstantDecl 0x2acfcf08 <line:326:3> col:3 mjSENS_TENDONLIMITFRC 'int'
| | `-FullComment 0x2ad3c840 <col:37, col:55>
| |   `-ParagraphComment 0x2ad3c810 <col:37, col:55>
| |     `-TextComment 0x2ad3c7e0 <col:37, col:55> Text=" tendon limit force"
| |-EnumConstantDecl 0x2acfcfb8 <line:329:3> col:3 mjSENS_FRAMEPOS 'int'
| | `-FullComment 0x2ad3c910 <col:37, col:48>
| |   `-ParagraphComment 0x2ad3c8e0 <col:37, col:48>
| |     `-TextComment 0x2ad3c8b0 <col:37, col:48> Text=" 3D position"
| |-EnumConstantDecl 0x2acfd038 <line:330:3> col:3 mjSENS_FRAMEQUAT 'int'
| | `-FullComment 0x2ad3c9f0 <col:37, col:67>
| |   `-ParagraphComment 0x2ad3c9b0 <col:37, col:67>
| |     `-TextComment 0x2ad3c980 <col:37, col:67> Text=" 4D unit quaternion orientation"
| |-EnumConstantDecl 0x2acfd0b8 <line:331:3> col:3 mjSENS_FRAMEXAXIS 'int'
| | `-FullComment 0x2ad3cac0 <col:37, col:77>
| |   `-ParagraphComment 0x2ad3ca90 <col:37, col:77>
| |     `-TextComment 0x2ad3ca60 <col:37, col:77> Text=" 3D unit vector: x-axis of object's frame"
| |-EnumConstantDecl 0x2acfd138 <line:332:3> col:3 mjSENS_FRAMEYAXIS 'int'
| | `-FullComment 0x2ad3cb90 <col:37, col:77>
| |   `-ParagraphComment 0x2ad3cb60 <col:37, col:77>
| |     `-TextComment 0x2ad3cb30 <col:37, col:77> Text=" 3D unit vector: y-axis of object's frame"
| |-EnumConstantDecl 0x2acfd1b8 <line:333:3> col:3 mjSENS_FRAMEZAXIS 'int'
| | `-FullComment 0x2ad3cc60 <col:37, col:77>
| |   `-ParagraphComment 0x2ad3cc30 <col:37, col:77>
| |     `-TextComment 0x2ad3cc00 <col:37, col:77> Text=" 3D unit vector: z-axis of object's frame"
| |-EnumConstantDecl 0x2acfd238 <line:334:3> col:3 mjSENS_FRAMELINVEL 'int'
| | `-FullComment 0x2ad3cd30 <col:37, col:55>
| |   `-ParagraphComment 0x2ad3cd00 <col:37, col:55>
| |     `-TextComment 0x2ad3ccd0 <col:37, col:55> Text=" 3D linear velocity"
| |-EnumConstantDecl 0x2acfd2b8 <line:335:3> col:3 mjSENS_FRAMEANGVEL 'int'
| | `-FullComment 0x2ad3ce00 <col:37, col:56>
| |   `-ParagraphComment 0x2ad3cdd0 <col:37, col:56>
| |     `-TextComment 0x2ad3cda0 <col:37, col:56> Text=" 3D angular velocity"
| |-EnumConstantDecl 0x2acfd338 <line:336:3> col:3 mjSENS_FRAMELINACC 'int'
| | `-FullComment 0x2ad3ced0 <col:37, col:59>
| |   `-ParagraphComment 0x2ad3cea0 <col:37, col:59>
| |     `-TextComment 0x2ad3ce70 <col:37, col:59> Text=" 3D linear acceleration"
| |-EnumConstantDecl 0x2acfd3b8 <line:337:3> col:3 mjSENS_FRAMEANGACC 'int'
| | `-FullComment 0x2ad3cfa0 <col:37, col:60>
| |   `-ParagraphComment 0x2ad3cf70 <col:37, col:60>
| |     `-TextComment 0x2ad3cf40 <col:37, col:60> Text=" 3D angular acceleration"
| |-EnumConstantDecl 0x2acfd468 <line:340:3> col:3 mjSENS_SUBTREECOM 'int'
| | `-FullComment 0x2ad3d070 <col:37, col:65>
| |   `-ParagraphComment 0x2ad3d040 <col:37, col:65>
| |     `-TextComment 0x2ad3d010 <col:37, col:65> Text=" 3D center of mass of subtree"
| |-EnumConstantDecl 0x2acfd4e8 <line:341:3> col:3 mjSENS_SUBTREELINVEL 'int'
| | `-FullComment 0x2ad3d140 <col:37, col:66>
| |   `-ParagraphComment 0x2ad3d110 <col:37, col:66>
| |     `-TextComment 0x2ad3d0e0 <col:37, col:66> Text=" 3D linear velocity of subtree"
| |-EnumConstantDecl 0x2acfd568 <line:342:3> col:3 mjSENS_SUBTREEANGMOM 'int'
| | `-FullComment 0x2ad3d210 <col:37, col:67>
| |   `-ParagraphComment 0x2ad3d1e0 <col:37, col:67>
| |     `-TextComment 0x2ad3d1b0 <col:37, col:67> Text=" 3D angular momentum of subtree"
| |-EnumConstantDecl 0x2acfd618 <line:345:3> col:3 mjSENS_GEOMDIST 'int'
| | `-FullComment 0x2ad3d2e0 <col:37, col:70>
| |   `-ParagraphComment 0x2ad3d2b0 <col:37, col:70>
| |     `-TextComment 0x2ad3d280 <col:37, col:70> Text=" signed distance between two geoms"
| |-EnumConstantDecl 0x2acfd698 <line:346:3> col:3 mjSENS_GEOMNORMAL 'int'
| | `-FullComment 0x2ad3d3b0 <col:37, col:71>
| |   `-ParagraphComment 0x2ad3d380 <col:37, col:71>
| |     `-TextComment 0x2ad3d350 <col:37, col:71> Text=" normal direction between two geoms"
| |-EnumConstantDecl 0x2acfd718 <line:347:3> col:3 mjSENS_GEOMFROMTO 'int'
| | `-FullComment 0x2ad3d480 <col:37, col:62>
| |   `-ParagraphComment 0x2ad3d450 <col:37, col:62>
| |     `-TextComment 0x2ad3d420 <col:37, col:62> Text=" segment between two geoms"
| |-EnumConstantDecl 0x2acfd7c8 <line:350:3> col:3 mjSENS_CLOCK 'int'
| | `-FullComment 0x2ad3d550 <col:37, col:52>
| |   `-ParagraphComment 0x2ad3d520 <col:37, col:52>
| |     `-TextComment 0x2ad3d4f0 <col:37, col:52> Text=" simulation time"
| |-EnumConstantDecl 0x2acfd878 <line:353:3> col:3 mjSENS_PLUGIN 'int'
| | `-FullComment 0x2ad3d620 <col:37, col:54>
| |   `-ParagraphComment 0x2ad3d5f0 <col:37, col:54>
| |     `-TextComment 0x2ad3d5c0 <col:37, col:54> Text=" plugin-controlled"
| `-EnumConstantDecl 0x2acfd958 <line:356:3> col:3 mjSENS_USER 'int'
|   `-FullComment 0x2ad3d6f0 <col:37, col:81>
|     `-ParagraphComment 0x2ad3d6c0 <col:37, col:81>
|       `-TextComment 0x2ad3d690 <col:37, col:81> Text=" sensor data provided by mjcb_sensor callback"
|-TypedefDecl 0x2acfda08 <line:294:1, line:357:3> col:3 mjtSensor 'enum mjtSensor_':'enum mjtSensor_'
| `-ElaboratedType 0x2acfd9b0 'enum mjtSensor_' sugar
|   `-EnumType 0x2acfba20 'enum mjtSensor_'
|     `-Enum 0x2acfb978 'mjtSensor_'
|-EnumDecl 0x2acfda78 <line:360:9, line:365:1> line:360:14 mjtStage_
| |-EnumConstantDecl 0x2acfdba8 <line:361:3, col:25> col:3 mjSTAGE_NONE 'int'
| | |-ConstantExpr 0x2acfdb88 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acfdb68 <col:25> 'int' 0
| | `-FullComment 0x2ad3d7c0 <col:37, col:52>
| |   `-ParagraphComment 0x2ad3d790 <col:37, col:52>
| |     `-TextComment 0x2ad3d760 <col:37, col:52> Text=" no computations"
| |-EnumConstantDecl 0x2acfdc28 <line:362:3> col:3 mjSTAGE_POS 'int'
| | `-FullComment 0x2ad3d890 <col:37, col:68>
| |   `-ParagraphComment 0x2ad3d860 <col:37, col:68>
| |     `-TextComment 0x2ad3d830 <col:37, col:68> Text=" position-dependent computations"
| |-EnumConstantDecl 0x2acfe048 <line:363:3> col:3 mjSTAGE_VEL 'int'
| | `-FullComment 0x2ad3d960 <col:37, col:68>
| |   `-ParagraphComment 0x2ad3d930 <col:37, col:68>
| |     `-TextComment 0x2ad3d900 <col:37, col:68> Text=" velocity-dependent computations"
| `-EnumConstantDecl 0x2acfe0f8 <line:364:3> col:3 mjSTAGE_ACC 'int'
|   `-FullComment 0x2ad379f0 <col:37, col:78>
|     `-ParagraphComment 0x2ad379c0 <col:37, col:78>
|       `-TextComment 0x2ad37990 <col:37, col:78> Text=" acceleration/force-dependent computations"
|-TypedefDecl 0x2acfe1a8 <line:360:1, line:365:3> col:3 mjtStage 'enum mjtStage_':'enum mjtStage_'
| `-ElaboratedType 0x2acfe150 'enum mjtStage_' sugar
|   `-EnumType 0x2acfdb20 'enum mjtStage_'
|     `-Enum 0x2acfda78 'mjtStage_'
|-EnumDecl 0x2acfe218 <line:368:9, line:373:1> line:368:14 mjtDataType_
| |-EnumConstantDecl 0x2acfe348 <line:369:3, col:25> col:3 mjDATATYPE_REAL 'int'
| | |-ConstantExpr 0x2acfe328 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acfe308 <col:25> 'int' 0
| | `-FullComment 0x2ad37ac0 <col:37, col:64>
| |   `-ParagraphComment 0x2ad37a90 <col:37, col:64>
| |     `-TextComment 0x2ad37a60 <col:37, col:64> Text=" real values, no constraints"
| |-EnumConstantDecl 0x2acfe3c8 <line:370:3> col:3 mjDATATYPE_POSITIVE 'int'
| | `-FullComment 0x2ad37b90 <col:37, col:77>
| |   `-ParagraphComment 0x2ad37b60 <col:37, col:77>
| |     `-TextComment 0x2ad37b30 <col:37, col:77> Text=" positive values; 0 or negative: inactive"
| |-EnumConstantDecl 0x2acfe448 <line:371:3> col:3 mjDATATYPE_AXIS 'int'
| | `-FullComment 0x2ad37c60 <col:37, col:51>
| |   `-ParagraphComment 0x2ad37c30 <col:37, col:51>
| |     `-TextComment 0x2ad37c00 <col:37, col:51> Text=" 3D unit vector"
| `-EnumConstantDecl 0x2acfe4f8 <line:372:3> col:3 mjDATATYPE_QUATERNION 'int'
|   `-FullComment 0x2ad37d30 <col:37, col:52>
|     `-ParagraphComment 0x2ad37d00 <col:37, col:52>
|       `-TextComment 0x2ad37cd0 <col:37, col:52> Text=" unit quaternion"
|-TypedefDecl 0x2acfe5a8 <line:368:1, line:373:3> col:3 mjtDataType 'enum mjtDataType_':'enum mjtDataType_'
| `-ElaboratedType 0x2acfe550 'enum mjtDataType_' sugar
|   `-EnumType 0x2acfe2c0 'enum mjtDataType_'
|     `-Enum 0x2acfe218 'mjtDataType_'
|-EnumDecl 0x2acfe618 <line:376:9, line:382:1> line:376:14 mjtSameFrame_
| |-EnumConstantDecl 0x2acfe748 <line:377:3, col:25> col:3 mjSAMEFRAME_NONE 'int'
| | |-ConstantExpr 0x2acfe728 <col:25> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acfe708 <col:25> 'int' 0
| | `-FullComment 0x2ad37e00 <col:37, col:49>
| |   `-ParagraphComment 0x2ad37dd0 <col:37, col:49>
| |     `-TextComment 0x2ad37da0 <col:37, col:49> Text=" no alignment"
| |-EnumConstantDecl 0x2acfe7c8 <line:378:3> col:3 mjSAMEFRAME_BODY 'int'
| | `-FullComment 0x2ad37ed0 <col:37, col:64>
| |   `-ParagraphComment 0x2ad37ea0 <col:37, col:64>
| |     `-TextComment 0x2ad37e70 <col:37, col:64> Text=" frame is same as body frame"
| |-EnumConstantDecl 0x2acfe848 <line:379:3> col:3 mjSAMEFRAME_INERTIA 'int'
| | `-FullComment 0x2ad37fa0 <col:37, col:68>
| |   `-ParagraphComment 0x2ad37f70 <col:37, col:68>
| |     `-TextComment 0x2ad37f40 <col:37, col:68> Text=" frame is same as inertial frame"
| |-EnumConstantDecl 0x2acfe8c8 <line:380:3> col:3 mjSAMEFRAME_BODYROT 'int'
| | `-FullComment 0x2ad38070 <col:37, col:82>
| |   `-ParagraphComment 0x2ad38040 <col:37, col:82>
| |     `-TextComment 0x2ad38010 <col:37, col:82> Text=" frame orientation is same as body orientation"
| `-EnumConstantDecl 0x2acfe978 <line:381:3> col:3 mjSAMEFRAME_INERTIAROT 'int'
|   `-FullComment 0x2ad38140 <col:37, col:85>
|     `-ParagraphComment 0x2ad38110 <col:37, col:85>
|       `-TextComment 0x2ad380e0 <col:37, col:85> Text=" frame orientation is same as inertia orientation"
|-TypedefDecl 0x2acfea28 <line:376:1, line:382:3> col:3 mjtSameFrame 'enum mjtSameFrame_':'enum mjtSameFrame_'
| `-ElaboratedType 0x2acfe9d0 'enum mjtSameFrame_' sugar
|   `-EnumType 0x2acfe6c0 'enum mjtSameFrame_'
|     `-Enum 0x2acfe618 'mjtSameFrame_'
|-EnumDecl 0x2acfea98 <line:385:9, line:390:1> line:385:14 mjtLRMode_
| |-EnumConstantDecl 0x2acfebc8 <line:386:3, col:21> col:3 mjLRMODE_NONE 'int'
| | |-ConstantExpr 0x2acfeba8 <col:21> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acfeb88 <col:21> 'int' 0
| | `-FullComment 0x2ad38210 <col:37, col:65>
| |   `-ParagraphComment 0x2ad381e0 <col:37, col:65>
| |     `-TextComment 0x2ad381b0 <col:37, col:65> Text=" do not process any actuators"
| |-EnumConstantDecl 0x2acfec48 <line:387:3> col:3 mjLRMODE_MUSCLE 'int'
| | `-FullComment 0x2ad382e0 <col:37, col:61>
| |   `-ParagraphComment 0x2ad382b0 <col:37, col:61>
| |     `-TextComment 0x2ad38280 <col:37, col:61> Text=" process muscle actuators"
| |-EnumConstantDecl 0x2acfecc8 <line:388:3> col:3 mjLRMODE_MUSCLEUSER 'int'
| | `-FullComment 0x2ad383b0 <col:37, col:70>
| |   `-ParagraphComment 0x2ad38380 <col:37, col:70>
| |     `-TextComment 0x2ad38350 <col:37, col:70> Text=" process muscle and user actuators"
| `-EnumConstantDecl 0x2acfed78 <line:389:3> col:3 mjLRMODE_ALL 'int'
|   `-FullComment 0x2ad38480 <col:37, col:58>
|     `-ParagraphComment 0x2ad38450 <col:37, col:58>
|       `-TextComment 0x2ad38420 <col:37, col:58> Text=" process all actuators"
|-TypedefDecl 0x2acfee28 <line:385:1, line:390:3> col:3 mjtLRMode 'enum mjtLRMode_':'enum mjtLRMode_'
| `-ElaboratedType 0x2acfedd0 'enum mjtLRMode_' sugar
|   `-EnumType 0x2acfeb40 'enum mjtLRMode_'
|     `-Enum 0x2acfea98 'mjtLRMode_'
|-EnumDecl 0x2acfee98 <line:393:9, line:399:1> line:393:14 mjtFlexSelf_
| |-EnumConstantDecl 0x2acfefc8 <line:394:3, col:23> col:3 mjFLEXSELF_NONE 'int'
| | |-ConstantExpr 0x2acfefa8 <col:23> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x2acfef88 <col:23> 'int' 0
| | `-FullComment 0x2ad38550 <col:37, col:55>
| |   `-ParagraphComment 0x2ad38520 <col:37, col:55>
| |     `-TextComment 0x2ad384f0 <col:37, col:55> Text=" no self-collisions"
| |-EnumConstantDecl 0x2ad01068 <line:395:3> col:3 mjFLEXSELF_NARROW 'int'
| | `-FullComment 0x2ad38620 <col:37, col:78>
| |   `-ParagraphComment 0x2ad385f0 <col:37, col:78>
| |     `-TextComment 0x2ad385c0 <col:37, col:78> Text=" skip midphase, go directly to narrowphase"
| |-EnumConstantDecl 0x2ad010e8 <line:396:3> col:3 mjFLEXSELF_BVH 'int'
| | `-FullComment 0x2ad386f0 <col:37, col:78>
| |   `-ParagraphComment 0x2ad386c0 <col:37, col:78>
| |     `-TextComment 0x2ad38690 <col:37, col:78> Text=" use BVH in midphase (if midphase enabled)"
| |-EnumConstantDecl 0x2ad01168 <line:397:3> col:3 mjFLEXSELF_SAP 'int'
| | `-FullComment 0x2ad387c0 <col:37, col:56>
| |   `-ParagraphComment 0x2ad38790 <col:37, col:56>
| |     `-TextComment 0x2ad38760 <col:37, col:56> Text=" use SAP in midphase"
| `-EnumConstantDecl 0x2ad01218 <line:398:3> col:3 mjFLEXSELF_AUTO 'int'
|   `-FullComment 0x2ad38890 <col:37, col:77>
|     `-ParagraphComment 0x2ad38860 <col:37, col:77>
|       `-TextComment 0x2ad38830 <col:37, col:77> Text=" choose between BVH and SAP automatically"
|-TypedefDecl 0x2ad012c8 <line:393:1, line:399:3> col:3 mjtFlexSelf 'enum mjtFlexSelf_':'enum mjtFlexSelf_'
| `-ElaboratedType 0x2ad01270 'enum mjtFlexSelf_' sugar
|   `-EnumType 0x2acfef40 'enum mjtFlexSelf_'
|     `-Enum 0x2acfee98 'mjtFlexSelf_'
|-RecordDecl 0x2ad01360 <line:404:1, line:418:1> line:404:8 struct mjLROpt_ definition
| |-FullComment 0x2ad38960 <line:402:3, col:100>
| | `-ParagraphComment 0x2ad38930 <col:3, col:100>
| |   `-TextComment 0x2ad38900 <col:3, col:100> Text="---------------------------------- mjLROpt -------------------------------------------------------"
| |-FieldDecl 0x2ad01470 <line:406:3, col:7> col:7 mode 'int'
| | `-FullComment 0x2ad3faa0 <col:37, col:75>
| |   `-ParagraphComment 0x2ad3fa70 <col:37, col:75>
| |     `-TextComment 0x2ad3fa40 <col:37, col:75> Text=" which actuators to process (mjtLRMode)"
| |-FieldDecl 0x2ad01500 <line:407:3, col:7> col:7 useexisting 'int'
| | `-FullComment 0x2ad3fb70 <col:37, col:75>
| |   `-ParagraphComment 0x2ad3fb40 <col:37, col:75>
| |     `-TextComment 0x2ad3fb10 <col:37, col:75> Text=" use existing length range if available"
| |-FieldDecl 0x2ad01590 <line:408:3, col:7> col:7 uselimit 'int'
| | `-FullComment 0x2ad3fc40 <col:37, col:77>
| |   `-ParagraphComment 0x2ad3fc10 <col:37, col:77>
| |     `-TextComment 0x2ad3fbe0 <col:37, col:77> Text=" use joint and tendon limits if available"
| |-FieldDecl 0x2ad01670 <line:411:3, col:10> col:10 accel 'mjtNum':'double'
| | `-FullComment 0x2ad3fd10 <col:37, col:78>
| |   `-ParagraphComment 0x2ad3fce0 <col:37, col:78>
| |     `-TextComment 0x2ad3fcb0 <col:37, col:78> Text=" target acceleration used to compute force"
| |-FieldDecl 0x2ad016f8 <line:412:3, col:10> col:10 maxforce 'mjtNum':'double'
| | `-FullComment 0x2ad3fde0 <col:37, col:63>
| |   `-ParagraphComment 0x2ad3fdb0 <col:37, col:63>
| |     `-TextComment 0x2ad3fd80 <col:37, col:63> Text=" maximum force; 0: no limit"
| |-FieldDecl 0x2ad01788 <line:413:3, col:10> col:10 timeconst 'mjtNum':'double'
| | `-FullComment 0x2ad3feb0 <col:37, col:83>
| |   `-ParagraphComment 0x2ad3fe80 <col:37, col:83>
| |     `-TextComment 0x2ad3fe50 <col:37, col:83> Text=" time constant for velocity reduction; min 0.01"
| |-FieldDecl 0x2ad01818 <line:414:3, col:10> col:10 timestep 'mjtNum':'double'
| | `-FullComment 0x2ad3ff80 <col:37, col:82>
| |   `-ParagraphComment 0x2ad3ff50 <col:37, col:82>
| |     `-TextComment 0x2ad3ff20 <col:37, col:82> Text=" simulation timestep; 0: use mjOption.timestep"
| |-FieldDecl 0x2ad018a8 <line:415:3, col:10> col:10 inttotal 'mjtNum':'double'
| | `-FullComment 0x2ad40050 <col:37, col:67>
| |   `-ParagraphComment 0x2ad40020 <col:37, col:67>
| |     `-TextComment 0x2ad3fff0 <col:37, col:67> Text=" total simulation time interval"
| |-FieldDecl 0x2ad01938 <line:416:3, col:10> col:10 interval 'mjtNum':'double'
| | `-FullComment 0x2ad40120 <col:37, col:74>
| |   `-ParagraphComment 0x2ad400f0 <col:37, col:74>
| |     `-TextComment 0x2ad400c0 <col:37, col:74> Text=" evaluation time interval (at the end)"
| `-FieldDecl 0x2ad019c8 <line:417:3, col:10> col:10 tolrange 'mjtNum':'double'
|   `-FullComment 0x2ad401f0 <col:37, col:78>
|     `-ParagraphComment 0x2ad401c0 <col:37, col:78>
|       `-TextComment 0x2ad40190 <col:37, col:78> Text=" convergence tolerance (relative to range)"
|-TypedefDecl 0x2ad01aa0 <line:419:1, col:25> col:25 mjLROpt 'struct mjLROpt_':'struct mjLROpt_'
| `-ElaboratedType 0x2ad01a50 'struct mjLROpt_' sugar
|   `-RecordType 0x2ad013e0 'struct mjLROpt_'
|     `-Record 0x2ad01360 'mjLROpt_'
|-RecordDecl 0x2ad01b28 <line:424:1, line:426:1> line:424:8 struct mjVFS_ definition
| |-FullComment 0x2ad402c0 <line:422:3, col:100>
| | `-ParagraphComment 0x2ad40290 <col:3, col:100>
| |   `-TextComment 0x2ad40260 <col:3, col:100> Text="---------------------------------- mjVFS ---------------------------------------------------------"
| `-FieldDecl 0x2ad01c10 <line:425:3, col:9> col:9 impl_ 'void *'
|   `-FullComment 0x2ad40390 <col:49, col:79>
|     `-ParagraphComment 0x2ad40360 <col:49, col:79>
|       `-TextComment 0x2ad40330 <col:49, col:79> Text=" internal pointer to VFS memory"
|-TypedefDecl 0x2ad01ce0 <line:427:1, col:23> col:23 mjVFS 'struct mjVFS_':'struct mjVFS_'
| `-ElaboratedType 0x2ad01c90 'struct mjVFS_' sugar
|   `-RecordType 0x2ad01bb0 'struct mjVFS_'
|     `-Record 0x2ad01b28 'mjVFS_'
|-RecordDecl 0x2ad01d68 <line:431:1, line:472:1> line:431:8 struct mjOption_ definition
| |-FullComment 0x2ad40460 <line:429:3, col:100>
| | `-ParagraphComment 0x2ad40430 <col:3, col:100>
| |   `-TextComment 0x2ad40400 <col:3, col:100> Text="---------------------------------- mjOption ------------------------------------------------------"
| |-FieldDecl 0x2ad01e78 <line:433:3, col:10> col:10 timestep 'mjtNum':'double'
| | `-FullComment 0x2ad40530 <col:37, col:45>
| |   `-ParagraphComment 0x2ad40500 <col:37, col:45>
| |     `-TextComment 0x2ad404d0 <col:37, col:45> Text=" timestep"
| |-FieldDecl 0x2ad01f08 <line:434:3, col:10> col:10 apirate 'mjtNum':'double'
| | `-FullComment 0x2ad40600 <col:37, col:68>
| |   `-ParagraphComment 0x2ad405d0 <col:37, col:68>
| |     `-TextComment 0x2ad405a0 <col:37, col:68> Text=" update rate for remote API (Hz)"
| |-FieldDecl 0x2ad01fc8 <line:437:3, col:10> col:10 impratio 'mjtNum':'double'
| | `-FullComment 0x2ad406d0 <col:37, col:82>
| |   `-ParagraphComment 0x2ad406a0 <col:37, col:82>
| |     `-TextComment 0x2ad40670 <col:37, col:82> Text=" ratio of friction-to-normal contact impedance"
| |-FieldDecl 0x2ad02088 <line:438:3, col:10> col:10 tolerance 'mjtNum':'double'
| | `-FullComment 0x2ad407a0 <col:37, col:58>
| |   `-ParagraphComment 0x2ad40770 <col:37, col:58>
| |     `-TextComment 0x2ad40740 <col:37, col:58> Text=" main solver tolerance"
| |-FieldDecl 0x2ad02118 <line:439:3, col:10> col:10 ls_tolerance 'mjtNum':'double'
| | `-FullComment 0x2ad40870 <col:37, col:67>
| |   `-ParagraphComment 0x2ad40840 <col:37, col:67>
| |     `-TextComment 0x2ad40810 <col:37, col:67> Text=" CG/Newton linesearch tolerance"
| |-FieldDecl 0x2ad021a8 <line:440:3, col:10> col:10 noslip_tolerance 'mjtNum':'double'
| | `-FullComment 0x2ad40940 <col:37, col:60>
| |   `-ParagraphComment 0x2ad40910 <col:37, col:60>
| |     `-TextComment 0x2ad408e0 <col:37, col:60> Text=" noslip solver tolerance"
| |-FieldDecl 0x2ad02238 <line:441:3, col:10> col:10 ccd_tolerance 'mjtNum':'double'
| | `-FullComment 0x2ad40a20 <col:37, col:70>
| |   `-ParagraphComment 0x2ad409e0 <col:37, col:70>
| |     `-TextComment 0x2ad409b0 <col:37, col:70> Text=" convex collision solver tolerance"
| |-FieldDecl 0x2ad023c8 <line:444:3, col:19> col:10 gravity 'mjtNum[3]'
| | `-FullComment 0x2ad40af0 <col:37, col:63>
| |   `-ParagraphComment 0x2ad40ac0 <col:37, col:63>
| |     `-TextComment 0x2ad40a90 <col:37, col:63> Text=" gravitational acceleration"
| |-FieldDecl 0x2ad024a8 <line:445:3, col:16> col:10 wind 'mjtNum[3]'
| | `-FullComment 0x2ad40bc0 <col:37, col:72>
| |   `-ParagraphComment 0x2ad40b90 <col:37, col:72>
| |     `-TextComment 0x2ad40b60 <col:37, col:72> Text=" wind (for lift, drag and viscosity)"
| |-FieldDecl 0x2ad02588 <line:446:3, col:20> col:10 magnetic 'mjtNum[3]'
| | `-FullComment 0x2ad40c90 <col:37, col:57>
| |   `-ParagraphComment 0x2ad40c60 <col:37, col:57>
| |     `-TextComment 0x2ad40c30 <col:37, col:57> Text=" global magnetic flux"
| |-FieldDecl 0x2ad02618 <line:447:3, col:10> col:10 density 'mjtNum':'double'
| | `-FullComment 0x2ad40d60 <col:37, col:54>
| |   `-ParagraphComment 0x2ad40d30 <col:37, col:54>
| |     `-TextComment 0x2ad40d00 <col:37, col:54> Text=" density of medium"
| |-FieldDecl 0x2ad026a8 <line:448:3, col:10> col:10 viscosity 'mjtNum':'double'
| | `-FullComment 0x2ad40e30 <col:37, col:56>
| |   `-ParagraphComment 0x2ad40e00 <col:37, col:56>
| |     `-TextComment 0x2ad40dd0 <col:37, col:56> Text=" viscosity of medium"
| |-FieldDecl 0x2ad02768 <line:451:3, col:10> col:10 o_margin 'mjtNum':'double'
| | `-FullComment 0x2ad40f00 <col:37, col:43>
| |   `-ParagraphComment 0x2ad40ed0 <col:37, col:43>
| |     `-TextComment 0x2ad40ea0 <col:37, col:43> Text=" margin"
| |-FieldDecl 0x2ad028c8 <line:452:3, col:25> col:10 o_solref 'mjtNum[2]'
| | `-FullComment 0x2ad40fd0 <col:37, col:43>
| |   `-ParagraphComment 0x2ad40fa0 <col:37, col:43>
| |     `-TextComment 0x2ad40f70 <col:37, col:43> Text=" solref"
| |-FieldDecl 0x2ad02a28 <line:453:3, col:25> col:10 o_solimp 'mjtNum[5]'
| | `-FullComment 0x2ad410a0 <col:37, col:43>
| |   `-ParagraphComment 0x2ad41070 <col:37, col:43>
| |     `-TextComment 0x2ad41040 <col:37, col:43> Text=" solimp"
| |-FieldDecl 0x2ad02b08 <line:454:3, col:22> col:10 o_friction 'mjtNum[5]'
| | `-FullComment 0x2ad41170 <col:37, col:45>
| |   `-ParagraphComment 0x2ad41140 <col:37, col:45>
| |     `-TextComment 0x2ad41110 <col:37, col:45> Text=" friction"
| |-FieldDecl 0x2ad02bd0 <line:457:3, col:7> col:7 integrator 'int'
| | `-FullComment 0x2ad41240 <col:37, col:69>
| |   `-ParagraphComment 0x2ad41210 <col:37, col:69>
| |     `-TextComment 0x2ad411e0 <col:37, col:69> Text=" integration mode (mjtIntegrator)"
| |-FieldDecl 0x2ad02c60 <line:458:3, col:7> col:7 cone 'int'
| | `-FullComment 0x2ad41310 <col:37, col:68>
| |   `-ParagraphComment 0x2ad412e0 <col:37, col:68>
| |     `-TextComment 0x2ad412b0 <col:37, col:68> Text=" type of friction cone (mjtCone)"
| |-FieldDecl 0x2ad02cf0 <line:459:3, col:7> col:7 jacobian 'int'
| | `-FullComment 0x2ad413e0 <col:37, col:67>
| |   `-ParagraphComment 0x2ad413b0 <col:37, col:67>
| |     `-TextComment 0x2ad41380 <col:37, col:67> Text=" type of Jacobian (mjtJacobian)"
| |-FieldDecl 0x2ad02d80 <line:460:3, col:7> col:7 solver 'int'
| | `-FullComment 0x2ad414b0 <col:37, col:65>
| |   `-ParagraphComment 0x2ad41480 <col:37, col:65>
| |     `-TextComment 0x2ad41450 <col:37, col:65> Text=" solver algorithm (mjtSolver)"
| |-FieldDecl 0x2ad02e10 <line:461:3, col:7> col:7 iterations 'int'
| | `-FullComment 0x2ad41580 <col:37, col:77>
| |   `-ParagraphComment 0x2ad41550 <col:37, col:77>
| |     `-TextComment 0x2ad41520 <col:37, col:77> Text=" maximum number of main solver iterations"
| |-FieldDecl 0x2ad02ea0 <line:462:3, col:7> col:7 ls_iterations 'int'
| | `-FullComment 0x2ad41650 <col:37, col:86>
| |   `-ParagraphComment 0x2ad41620 <col:37, col:86>
| |     `-TextComment 0x2ad415f0 <col:37, col:86> Text=" maximum number of CG/Newton linesearch iterations"
| |-FieldDecl 0x2ad02f30 <line:463:3, col:7> col:7 noslip_iterations 'int'
| | `-FullComment 0x2ad41720 <col:37, col:79>
| |   `-ParagraphComment 0x2ad416f0 <col:37, col:79>
| |     `-TextComment 0x2ad416c0 <col:37, col:79> Text=" maximum number of noslip solver iterations"
| |-FieldDecl 0x2ad02fc0 <line:464:3, col:7> col:7 ccd_iterations 'int'
| | `-FullComment 0x2ad417f0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad417c0 <col:37, col:89>
| |     `-TextComment 0x2ad41790 <col:37, col:89> Text=" maximum number of convex collision solver iterations"
| |-FieldDecl 0x2ad061c0 <line:465:3, col:7> col:7 disableflags 'int'
| | `-FullComment 0x2ad418c0 <col:37, col:78>
| |   `-ParagraphComment 0x2ad41890 <col:37, col:78>
| |     `-TextComment 0x2ad41860 <col:37, col:78> Text=" bit flags for disabling standard features"
| |-FieldDecl 0x2ad06250 <line:466:3, col:7> col:7 enableflags 'int'
| | `-FullComment 0x2ad41990 <col:37, col:77>
| |   `-ParagraphComment 0x2ad41960 <col:37, col:77>
| |     `-TextComment 0x2ad41930 <col:37, col:77> Text=" bit flags for enabling optional features"
| |-FieldDecl 0x2ad062e0 <line:467:3, col:7> col:7 disableactuator 'int'
| | `-FullComment 0x2ad41a80 <col:37, col:82>
| |   `-ParagraphComment 0x2ad41a50 <col:37, col:82>
| |     `-TextComment 0x2ad41a20 <col:37, col:82> Text=" bit flags for disabling actuators by group id"
| |-FieldDecl 0x2ad063a0 <line:470:3, col:7> col:7 sdf_initpoints 'int'
| | `-FullComment 0x2ad41b50 <col:37, col:83>
| |   `-ParagraphComment 0x2ad41b20 <col:37, col:83>
| |     `-TextComment 0x2ad41af0 <col:37, col:83> Text=" number of starting points for gradient descent"
| `-FieldDecl 0x2ad06430 <line:471:3, col:7> col:7 sdf_iterations 'int'
|   `-FullComment 0x2ad41c20 <col:37, col:82>
|     `-ParagraphComment 0x2ad41bf0 <col:37, col:82>
|       `-TextComment 0x2ad41bc0 <col:37, col:82> Text=" max number of iterations for gradient descent"
|-TypedefDecl 0x2ad06500 <line:473:1, col:26> col:26 referenced mjOption 'struct mjOption_':'struct mjOption_'
| `-ElaboratedType 0x2ad064b0 'struct mjOption_' sugar
|   `-RecordType 0x2ad01df0 'struct mjOption_'
|     `-Record 0x2ad01d68 'mjOption_'
|-RecordDecl 0x2ad06588 <line:478:1, line:572:1> line:478:8 struct mjVisual_ definition
| |-FullComment 0x2ad41cf0 <line:476:3, col:100>
| | `-ParagraphComment 0x2ad41cc0 <col:3, col:100>
| |   `-TextComment 0x2ad41c90 <col:3, col:100> Text="---------------------------------- mjVisual ------------------------------------------------------"
| |-RecordDecl 0x2ad06658 <line:479:3, line:492:3> line:479:3 struct definition
| | |-FieldDecl 0x2ad06740 <line:480:5, col:9> col:9 orthographic 'int'
| | | `-FullComment 0x2ad41dc0 <col:37, col:84>
| | |   `-ParagraphComment 0x2ad41d90 <col:37, col:84>
| | |     `-TextComment 0x2ad41d60 <col:37, col:84> Text=" is the free camera orthographic (0: no, 1: yes)"
| | |-FieldDecl 0x2ad067d0 <line:481:5, col:11> col:11 fovy 'float'
| | | `-FullComment 0x2ad41e90 <col:37, col:100>
| | |   `-ParagraphComment 0x2ad41e60 <col:37, col:100>
| | |     `-TextComment 0x2ad41e30 <col:37, col:100> Text=" y field-of-view of free camera (orthographic ? length : degree)"
| | |-FieldDecl 0x2ad06860 <line:482:5, col:11> col:11 ipd 'float'
| | | `-FullComment 0x2ad41f60 <col:37, col:76>
| | |   `-ParagraphComment 0x2ad41f30 <col:37, col:76>
| | |     `-TextComment 0x2ad41f00 <col:37, col:76> Text=" inter-pupilary distance for free camera"
| | |-FieldDecl 0x2ad068f0 <line:483:5, col:11> col:11 azimuth 'float'
| | | `-FullComment 0x2ad42030 <col:37, col:77>
| | |   `-ParagraphComment 0x2ad42000 <col:37, col:77>
| | |     `-TextComment 0x2ad41fd0 <col:37, col:77> Text=" initial azimuth of free camera (degrees)"
| | |-FieldDecl 0x2ad06980 <line:484:5, col:11> col:11 elevation 'float'
| | | `-FullComment 0x2ad42100 <col:37, col:79>
| | |   `-ParagraphComment 0x2ad420d0 <col:37, col:79>
| | |     `-TextComment 0x2ad420a0 <col:37, col:79> Text=" initial elevation of free camera (degrees)"
| | |-FieldDecl 0x2ad06a10 <line:485:5, col:11> col:11 linewidth 'float'
| | | `-FullComment 0x2ad421d0 <col:37, col:79>
| | |   `-ParagraphComment 0x2ad421a0 <col:37, col:79>
| | |     `-TextComment 0x2ad42170 <col:37, col:79> Text=" line width for wireframe and ray rendering"
| | |-FieldDecl 0x2ad06aa0 <line:486:5, col:11> col:11 glow 'float'
| | | `-FullComment 0x2ad422a0 <col:37, col:71>
| | |   `-ParagraphComment 0x2ad42270 <col:37, col:71>
| | |     `-TextComment 0x2ad42240 <col:37, col:71> Text=" glow coefficient for selected body"
| | |-FieldDecl 0x2ad06b30 <line:487:5, col:11> col:11 realtime 'float'
| | | `-FullComment 0x2ad42370 <col:37, col:76>
| | |   `-ParagraphComment 0x2ad42340 <col:37, col:76>
| | |     `-TextComment 0x2ad42310 <col:37, col:76> Text=" initial real-time factor (1: real time)"
| | |-FieldDecl 0x2ad06bc0 <line:488:5, col:11> col:11 offwidth 'int'
| | | `-FullComment 0x2ad42440 <col:37, col:62>
| | |   `-ParagraphComment 0x2ad42410 <col:37, col:62>
| | |     `-TextComment 0x2ad423e0 <col:37, col:62> Text=" width of offscreen buffer"
| | |-FieldDecl 0x2ad06c50 <line:489:5, col:11> col:11 offheight 'int'
| | | `-FullComment 0x2ad42510 <col:37, col:63>
| | |   `-ParagraphComment 0x2ad424e0 <col:37, col:63>
| | |     `-TextComment 0x2ad424b0 <col:37, col:63> Text=" height of offscreen buffer"
| | |-FieldDecl 0x2ad06ce0 <line:490:5, col:11> col:11 ellipsoidinertia 'int'
| | | `-FullComment 0x2ad425e0 <col:37, col:90>
| | |   `-ParagraphComment 0x2ad425b0 <col:37, col:90>
| | |     `-TextComment 0x2ad42580 <col:37, col:90> Text=" geom for inertia visualization (0: box, 1: ellipsoid)"
| | `-FieldDecl 0x2ad06d70 <line:491:5, col:11> col:11 bvactive 'int'
| |   `-FullComment 0x2ad426b0 <col:37, col:86>
| |     `-ParagraphComment 0x2ad42680 <col:37, col:86>
| |       `-TextComment 0x2ad42650 <col:37, col:86> Text=" visualize active bounding volumes (0: no, 1: yes)"
| |-FieldDecl 0x2ad06e48 <line:479:3, line:492:5> col:5 global 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:479:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:479:3)'
| |-RecordDecl 0x2ad06e98 <line:494:3, line:500:3> line:494:3 struct definition
| | |-FieldDecl 0x2ad06f80 <line:495:5, col:11> col:11 shadowsize 'int'
| | | `-FullComment 0x2ad42780 <col:37, col:62>
| | |   `-ParagraphComment 0x2ad42750 <col:37, col:62>
| | |     `-TextComment 0x2ad42720 <col:37, col:62> Text=" size of shadowmap texture"
| | |-FieldDecl 0x2ad07010 <line:496:5, col:11> col:11 offsamples 'int'
| | | `-FullComment 0x2ad42850 <col:37, col:83>
| | |   `-ParagraphComment 0x2ad42820 <col:37, col:83>
| | |     `-TextComment 0x2ad427f0 <col:37, col:83> Text=" number of multisamples for offscreen rendering"
| | |-FieldDecl 0x2ad070a0 <line:497:5, col:11> col:11 numslices 'int'
| | | `-FullComment 0x2ad42920 <col:37, col:78>
| | |   `-ParagraphComment 0x2ad428f0 <col:37, col:78>
| | |     `-TextComment 0x2ad428c0 <col:37, col:78> Text=" number of slices for builtin geom drawing"
| | |-FieldDecl 0x2ad07130 <line:498:5, col:11> col:11 numstacks 'int'
| | | `-FullComment 0x2ad429f0 <col:37, col:78>
| | |   `-ParagraphComment 0x2ad429c0 <col:37, col:78>
| | |     `-TextComment 0x2ad42990 <col:37, col:78> Text=" number of stacks for builtin geom drawing"
| | `-FieldDecl 0x2ad072d0 <line:499:5, col:11> col:11 numquads 'int'
| |   `-FullComment 0x2ad42ad0 <col:37, col:70>
| |     `-ParagraphComment 0x2ad42aa0 <col:37, col:70>
| |       `-TextComment 0x2ad42a70 <col:37, col:70> Text=" number of quads for box rendering"
| |-FieldDecl 0x2ad073a8 <line:494:3, line:500:5> col:5 quality 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:494:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:494:3)'
| |-RecordDecl 0x2ad073f8 <line:502:3, line:507:3> line:502:3 struct definition
| | |-FieldDecl 0x2ad07570 <line:503:5, col:20> col:11 ambient 'float[3]'
| | | `-FullComment 0x2ad42ba0 <col:37, col:58>
| | |   `-ParagraphComment 0x2ad42b70 <col:37, col:58>
| | |     `-TextComment 0x2ad42b40 <col:37, col:58> Text=" ambient rgb (alpha=1)"
| | |-FieldDecl 0x2ad07650 <line:504:5, col:20> col:11 diffuse 'float[3]'
| | | `-FullComment 0x2ad42c70 <col:37, col:58>
| | |   `-ParagraphComment 0x2ad42c40 <col:37, col:58>
| | |     `-TextComment 0x2ad42c10 <col:37, col:58> Text=" diffuse rgb (alpha=1)"
| | |-FieldDecl 0x2ad07730 <line:505:5, col:21> col:11 specular 'float[3]'
| | | `-FullComment 0x2ad42d40 <col:37, col:59>
| | |   `-ParagraphComment 0x2ad42d10 <col:37, col:59>
| | |     `-TextComment 0x2ad42ce0 <col:37, col:59> Text=" specular rgb (alpha=1)"
| | `-FieldDecl 0x2ad077c0 <line:506:5, col:11> col:11 active 'int'
| |   `-FullComment 0x2ad42e10 <col:37, col:56>
| |     `-ParagraphComment 0x2ad42de0 <col:37, col:56>
| |       `-TextComment 0x2ad42db0 <col:37, col:56> Text=" is headlight active"
| |-FieldDecl 0x2ad07898 <line:502:3, line:507:5> col:5 headlight 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:502:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:502:3)'
| |-RecordDecl 0x2ad078e8 <line:509:3, line:523:3> line:509:3 struct definition
| | |-FieldDecl 0x2ad079d0 <line:510:5, col:11> col:11 stiffness 'float'
| | | `-FullComment 0x2ad42ee0 <col:37, col:80>
| | |   `-ParagraphComment 0x2ad42eb0 <col:37, col:80>
| | |     `-TextComment 0x2ad42e80 <col:37, col:80> Text=" mouse perturbation stiffness (space->force)"
| | |-FieldDecl 0x2ad07a60 <line:511:5, col:11> col:11 stiffnessrot 'float'
| | | `-FullComment 0x2ad42fb0 <col:37, col:81>
| | |   `-ParagraphComment 0x2ad42f80 <col:37, col:81>
| | |     `-TextComment 0x2ad42f50 <col:37, col:81> Text=" mouse perturbation stiffness (space->torque)"
| | |-FieldDecl 0x2ad07af0 <line:512:5, col:11> col:11 force 'float'
| | | `-FullComment 0x2ad43080 <col:37, col:68>
| | |   `-ParagraphComment 0x2ad43050 <col:37, col:68>
| | |     `-TextComment 0x2ad43020 <col:37, col:68> Text=" from force units to space units"
| | |-FieldDecl 0x2ad07b80 <line:513:5, col:11> col:11 torque 'float'
| | | `-FullComment 0x2ad43150 <col:37, col:69>
| | |   `-ParagraphComment 0x2ad43120 <col:37, col:69>
| | |     `-TextComment 0x2ad430f0 <col:37, col:69> Text=" from torque units to space units"
| | |-FieldDecl 0x2ad07c10 <line:514:5, col:11> col:11 alpha 'float'
| | | `-FullComment 0x2ad43220 <col:37, col:83>
| | |   `-ParagraphComment 0x2ad431f0 <col:37, col:83>
| | |     `-TextComment 0x2ad431c0 <col:37, col:83> Text=" scale geom alphas when transparency is enabled"
| | |-FieldDecl 0x2ad07ca0 <line:515:5, col:11> col:11 fogstart 'float'
| | | `-FullComment 0x2ad432f0 <col:37, col:88>
| | |   `-ParagraphComment 0x2ad432c0 <col:37, col:88>
| | |     `-TextComment 0x2ad43290 <col:37, col:88> Text=" OpenGL fog starts at fogstart * mjModel.stat.extent"
| | |-FieldDecl 0x2ad07d30 <line:516:5, col:11> col:11 fogend 'float'
| | | `-FullComment 0x2ad433c0 <col:37, col:84>
| | |   `-ParagraphComment 0x2ad43390 <col:37, col:84>
| | |     `-TextComment 0x2ad43360 <col:37, col:84> Text=" OpenGL fog ends at fogend * mjModel.stat.extent"
| | |-FieldDecl 0x2ad07dc0 <line:517:5, col:11> col:11 znear 'float'
| | | `-FullComment 0x2ad43490 <col:37, col:86>
| | |   `-ParagraphComment 0x2ad43460 <col:37, col:86>
| | |     `-TextComment 0x2ad43430 <col:37, col:86> Text=" near clipping plane = znear * mjModel.stat.extent"
| | |-FieldDecl 0x2ad07e50 <line:518:5, col:11> col:11 zfar 'float'
| | | `-FullComment 0x2ad43560 <col:37, col:84>
| | |   `-ParagraphComment 0x2ad43530 <col:37, col:84>
| | |     `-TextComment 0x2ad43500 <col:37, col:84> Text=" far clipping plane = zfar * mjModel.stat.extent"
| | |-FieldDecl 0x2ad07ee0 <line:519:5, col:11> col:11 haze 'float'
| | | `-FullComment 0x2ad43630 <col:37, col:47>
| | |   `-ParagraphComment 0x2ad43600 <col:37, col:47>
| | |     `-TextComment 0x2ad435d0 <col:37, col:47> Text=" haze ratio"
| | |-FieldDecl 0x2ad07f70 <line:520:5, col:11> col:11 shadowclip 'float'
| | | `-FullComment 0x2ad43700 <col:37, col:88>
| | |   `-ParagraphComment 0x2ad436d0 <col:37, col:88>
| | |     `-TextComment 0x2ad436a0 <col:37, col:88> Text=" directional light: shadowclip * mjModel.stat.extent"
| | |-FieldDecl 0x2ad08000 <line:521:5, col:11> col:11 shadowscale 'float'
| | | `-FullComment 0x2ad437d0 <col:37, col:75>
| | |   `-ParagraphComment 0x2ad437a0 <col:37, col:75>
| | |     `-TextComment 0x2ad43770 <col:37, col:75> Text=" spot light: shadowscale * light.cutoff"
| | `-FieldDecl 0x2ad08090 <line:522:5, col:11> col:11 actuatortendon 'float'
| |   `-FullComment 0x2ad438a0 <col:37, col:55>
| |     `-ParagraphComment 0x2ad43870 <col:37, col:55>
| |       `-TextComment 0x2ad43840 <col:37, col:55> Text=" scale tendon width"
| |-FieldDecl 0x2ad08168 <line:509:3, line:523:5> col:5 map 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:509:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:509:3)'
| |-RecordDecl 0x2ad081b8 <line:525:3, line:543:3> line:525:3 struct definition
| | |-FieldDecl 0x2ad08820 <line:526:5, col:11> col:11 forcewidth 'float'
| | | `-FullComment 0x2ad43970 <col:37, col:57>
| | |   `-ParagraphComment 0x2ad43940 <col:37, col:57>
| | |     `-TextComment 0x2ad43910 <col:37, col:57> Text=" width of force arrow"
| | |-FieldDecl 0x2ad088b0 <line:527:5, col:11> col:11 contactwidth 'float'
| | | `-FullComment 0x2ad43a50 <col:37, col:50>
| | |   `-ParagraphComment 0x2ad43a10 <col:37, col:50>
| | |     `-TextComment 0x2ad439e0 <col:37, col:50> Text=" contact width"
| | |-FieldDecl 0x2ad08940 <line:528:5, col:11> col:11 contactheight 'float'
| | | `-FullComment 0x2ad43b20 <col:37, col:51>
| | |   `-ParagraphComment 0x2ad43af0 <col:37, col:51>
| | |     `-TextComment 0x2ad43ac0 <col:37, col:51> Text=" contact height"
| | |-FieldDecl 0x2ad089d0 <line:529:5, col:11> col:11 connect 'float'
| | | `-FullComment 0x2ad43bf0 <col:37, col:62>
| | |   `-ParagraphComment 0x2ad43bc0 <col:37, col:62>
| | |     `-TextComment 0x2ad43b90 <col:37, col:62> Text=" autoconnect capsule width"
| | |-FieldDecl 0x2ad08a60 <line:530:5, col:11> col:11 com 'float'
| | | `-FullComment 0x2ad43cc0 <col:37, col:47>
| | |   `-ParagraphComment 0x2ad43c90 <col:37, col:47>
| | |     `-TextComment 0x2ad43c60 <col:37, col:47> Text=" com radius"
| | |-FieldDecl 0x2ad08af0 <line:531:5, col:11> col:11 camera 'float'
| | | `-FullComment 0x2ad43d90 <col:37, col:50>
| | |   `-ParagraphComment 0x2ad43d60 <col:37, col:50>
| | |     `-TextComment 0x2ad43d30 <col:37, col:50> Text=" camera object"
| | |-FieldDecl 0x2ad08b80 <line:532:5, col:11> col:11 light 'float'
| | | `-FullComment 0x2ad43e60 <col:37, col:49>
| | |   `-ParagraphComment 0x2ad43e30 <col:37, col:49>
| | |     `-TextComment 0x2ad43e00 <col:37, col:49> Text=" light object"
| | |-FieldDecl 0x2ad08c10 <line:533:5, col:11> col:11 selectpoint 'float'
| | | `-FullComment 0x2ad43f30 <col:37, col:52>
| | |   `-ParagraphComment 0x2ad43f00 <col:37, col:52>
| | |     `-TextComment 0x2ad43ed0 <col:37, col:52> Text=" selection point"
| | |-FieldDecl 0x2ad08ca0 <line:534:5, col:11> col:11 jointlength 'float'
| | | `-FullComment 0x2ad44000 <col:37, col:49>
| | |   `-ParagraphComment 0x2ad43fd0 <col:37, col:49>
| | |     `-TextComment 0x2ad43fa0 <col:37, col:49> Text=" joint length"
| | |-FieldDecl 0x2ad08d30 <line:535:5, col:11> col:11 jointwidth 'float'
| | | `-FullComment 0x2ad440d0 <col:37, col:48>
| | |   `-ParagraphComment 0x2ad440a0 <col:37, col:48>
| | |     `-TextComment 0x2ad44070 <col:37, col:48> Text=" joint width"
| | |-FieldDecl 0x2ad08dc0 <line:536:5, col:11> col:11 actuatorlength 'float'
| | | `-FullComment 0x2ad441a0 <col:37, col:52>
| | |   `-ParagraphComment 0x2ad44170 <col:37, col:52>
| | |     `-TextComment 0x2ad44140 <col:37, col:52> Text=" actuator length"
| | |-FieldDecl 0x2ad08e50 <line:537:5, col:11> col:11 actuatorwidth 'float'
| | | `-FullComment 0x2ad44270 <col:37, col:51>
| | |   `-ParagraphComment 0x2ad44240 <col:37, col:51>
| | |     `-TextComment 0x2ad44210 <col:37, col:51> Text=" actuator width"
| | |-FieldDecl 0x2ad08ee0 <line:538:5, col:11> col:11 framelength 'float'
| | | `-FullComment 0x2ad44340 <col:37, col:58>
| | |   `-ParagraphComment 0x2ad44310 <col:37, col:58>
| | |     `-TextComment 0x2ad442e0 <col:37, col:58> Text=" bodyframe axis length"
| | |-FieldDecl 0x2ad08f70 <line:539:5, col:11> col:11 framewidth 'float'
| | | `-FullComment 0x2ad44410 <col:37, col:57>
| | |   `-ParagraphComment 0x2ad443e0 <col:37, col:57>
| | |     `-TextComment 0x2ad443b0 <col:37, col:57> Text=" bodyframe axis width"
| | |-FieldDecl 0x2ad09000 <line:540:5, col:11> col:11 constraint 'float'
| | | `-FullComment 0x2ad444e0 <col:37, col:53>
| | |   `-ParagraphComment 0x2ad444b0 <col:37, col:53>
| | |     `-TextComment 0x2ad44480 <col:37, col:53> Text=" constraint width"
| | |-FieldDecl 0x2ad09090 <line:541:5, col:11> col:11 slidercrank 'float'
| | | `-FullComment 0x2ad445b0 <col:37, col:54>
| | |   `-ParagraphComment 0x2ad44580 <col:37, col:54>
| | |     `-TextComment 0x2ad44550 <col:37, col:54> Text=" slidercrank width"
| | `-FieldDecl 0x2ad09120 <line:542:5, col:11> col:11 frustum 'float'
| |   `-FullComment 0x2ad44680 <col:37, col:55>
| |     `-ParagraphComment 0x2ad44650 <col:37, col:55>
| |       `-TextComment 0x2ad44620 <col:37, col:55> Text=" frustum zfar plane"
| |-FieldDecl 0x2ad091f8 <line:525:3, line:543:5> col:5 scale 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:525:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:525:3)'
| |-RecordDecl 0x2ad09248 <line:545:3, line:571:3> line:545:3 struct definition
| | |-FieldDecl 0x2ad093c0 <line:546:5, col:16> col:11 fog 'float[4]'
| | | `-FullComment 0x2ad44750 <col:37, col:40>
| | |   `-ParagraphComment 0x2ad44720 <col:37, col:40>
| | |     `-TextComment 0x2ad446f0 <col:37, col:40> Text=" fog"
| | |-FieldDecl 0x2ad094a0 <line:547:5, col:17> col:11 haze 'float[4]'
| | | `-FullComment 0x2ad44820 <col:37, col:41>
| | |   `-ParagraphComment 0x2ad447f0 <col:37, col:41>
| | |     `-TextComment 0x2ad447c0 <col:37, col:41> Text=" haze"
| | |-FieldDecl 0x2ad09580 <line:548:5, col:18> col:11 force 'float[4]'
| | | `-FullComment 0x2ad448f0 <col:37, col:51>
| | |   `-ParagraphComment 0x2ad448c0 <col:37, col:51>
| | |     `-TextComment 0x2ad44890 <col:37, col:51> Text=" external force"
| | |-FieldDecl 0x2ad09660 <line:549:5, col:20> col:11 inertia 'float[4]'
| | | `-FullComment 0x2ad449c0 <col:37, col:48>
| | |   `-ParagraphComment 0x2ad44990 <col:37, col:48>
| | |     `-TextComment 0x2ad44960 <col:37, col:48> Text=" inertia box"
| | |-FieldDecl 0x2ad09740 <line:550:5, col:18> col:11 joint 'float[4]'
| | | `-FullComment 0x2ad44ab0 <col:37, col:42>
| | |   `-ParagraphComment 0x2ad44a80 <col:37, col:42>
| | |     `-TextComment 0x2ad44a50 <col:37, col:42> Text=" joint"
| | |-FieldDecl 0x2ad09df0 <line:551:5, col:21> col:11 actuator 'float[4]'
| | | `-FullComment 0x2ad44b80 <col:37, col:54>
| | |   `-ParagraphComment 0x2ad44b50 <col:37, col:54>
| | |     `-TextComment 0x2ad44b20 <col:37, col:54> Text=" actuator, neutral"
| | |-FieldDecl 0x2ad09ed0 <line:552:5, col:29> col:11 actuatornegative 'float[4]'
| | | `-FullComment 0x2ad44c50 <col:37, col:61>
| | |   `-ParagraphComment 0x2ad44c20 <col:37, col:61>
| | |     `-TextComment 0x2ad44bf0 <col:37, col:61> Text=" actuator, negative limit"
| | |-FieldDecl 0x2ad09fb0 <line:553:5, col:29> col:11 actuatorpositive 'float[4]'
| | | `-FullComment 0x2ad44d20 <col:37, col:61>
| | |   `-ParagraphComment 0x2ad44cf0 <col:37, col:61>
| | |     `-TextComment 0x2ad44cc0 <col:37, col:61> Text=" actuator, positive limit"
| | |-FieldDecl 0x2ad0a090 <line:554:5, col:16> col:11 com 'float[4]'
| | | `-FullComment 0x2ad44df0 <col:37, col:51>
| | |   `-ParagraphComment 0x2ad44dc0 <col:37, col:51>
| | |     `-TextComment 0x2ad44d90 <col:37, col:51> Text=" center of mass"
| | |-FieldDecl 0x2ad0a170 <line:555:5, col:19> col:11 camera 'float[4]'
| | | `-FullComment 0x2ad44ec0 <col:37, col:50>
| | |   `-ParagraphComment 0x2ad44e90 <col:37, col:50>
| | |     `-TextComment 0x2ad44e60 <col:37, col:50> Text=" camera object"
| | |-FieldDecl 0x2ad0a250 <line:556:5, col:18> col:11 light 'float[4]'
| | | `-FullComment 0x2ad44f90 <col:37, col:49>
| | |   `-ParagraphComment 0x2ad44f60 <col:37, col:49>
| | |     `-TextComment 0x2ad44f30 <col:37, col:49> Text=" light object"
| | |-FieldDecl 0x2ad0a330 <line:557:5, col:24> col:11 selectpoint 'float[4]'
| | | `-FullComment 0x2ad45060 <col:37, col:52>
| | |   `-ParagraphComment 0x2ad45030 <col:37, col:52>
| | |     `-TextComment 0x2ad45000 <col:37, col:52> Text=" selection point"
| | |-FieldDecl 0x2ad0a410 <line:558:5, col:20> col:11 connect 'float[4]'
| | | `-FullComment 0x2ad45130 <col:37, col:49>
| | |   `-ParagraphComment 0x2ad45100 <col:37, col:49>
| | |     `-TextComment 0x2ad450d0 <col:37, col:49> Text=" auto connect"
| | |-FieldDecl 0x2ad0a4f0 <line:559:5, col:25> col:11 contactpoint 'float[4]'
| | | `-FullComment 0x2ad45200 <col:37, col:50>
| | |   `-ParagraphComment 0x2ad451d0 <col:37, col:50>
| | |     `-TextComment 0x2ad451a0 <col:37, col:50> Text=" contact point"
| | |-FieldDecl 0x2ad0a5d0 <line:560:5, col:25> col:11 contactforce 'float[4]'
| | | `-FullComment 0x2ad452d0 <col:37, col:50>
| | |   `-ParagraphComment 0x2ad452a0 <col:37, col:50>
| | |     `-TextComment 0x2ad45270 <col:37, col:50> Text=" contact force"
| | |-FieldDecl 0x2ad0a6b0 <line:561:5, col:28> col:11 contactfriction 'float[4]'
| | | `-FullComment 0x2ad453a0 <col:37, col:59>
| | |   `-ParagraphComment 0x2ad45370 <col:37, col:59>
| | |     `-TextComment 0x2ad45340 <col:37, col:59> Text=" contact friction force"
| | |-FieldDecl 0x2ad0a790 <line:562:5, col:26> col:11 contacttorque 'float[4]'
| | | `-FullComment 0x2ad45470 <col:37, col:51>
| | |   `-ParagraphComment 0x2ad45440 <col:37, col:51>
| | |     `-TextComment 0x2ad45410 <col:37, col:51> Text=" contact torque"
| | |-FieldDecl 0x2ad0a870 <line:563:5, col:23> col:11 contactgap 'float[4]'
| | | `-FullComment 0x2ad45540 <col:37, col:57>
| | |   `-ParagraphComment 0x2ad45510 <col:37, col:57>
| | |     `-TextComment 0x2ad454e0 <col:37, col:57> Text=" contact point in gap"
| | |-FieldDecl 0x2ad0a950 <line:564:5, col:24> col:11 rangefinder 'float[4]'
| | | `-FullComment 0x2ad45610 <col:37, col:52>
| | |   `-ParagraphComment 0x2ad455e0 <col:37, col:52>
| | |     `-TextComment 0x2ad455b0 <col:37, col:52> Text=" rangefinder ray"
| | |-FieldDecl 0x2ad0aa30 <line:565:5, col:23> col:11 constraint 'float[4]'
| | | `-FullComment 0x2ad456e0 <col:37, col:47>
| | |   `-ParagraphComment 0x2ad456b0 <col:37, col:47>
| | |     `-TextComment 0x2ad45680 <col:37, col:47> Text=" constraint"
| | |-FieldDecl 0x2ad0ab10 <line:566:5, col:24> col:11 slidercrank 'float[4]'
| | | `-FullComment 0x2ad457b0 <col:37, col:48>
| | |   `-ParagraphComment 0x2ad45780 <col:37, col:48>
| | |     `-TextComment 0x2ad45750 <col:37, col:48> Text=" slidercrank"
| | |-FieldDecl 0x2ad0abf0 <line:567:5, col:24> col:11 crankbroken 'float[4]'
| | | `-FullComment 0x2ad45880 <col:37, col:77>
| | |   `-ParagraphComment 0x2ad45850 <col:37, col:77>
| | |     `-TextComment 0x2ad45820 <col:37, col:77> Text=" used when crank must be stretched/broken"
| | |-FieldDecl 0x2ad0acd0 <line:568:5, col:20> col:11 frustum 'float[4]'
| | | `-FullComment 0x2ad45950 <col:37, col:51>
| | |   `-ParagraphComment 0x2ad45920 <col:37, col:51>
| | |     `-TextComment 0x2ad458f0 <col:37, col:51> Text=" camera frustum"
| | |-FieldDecl 0x2ad0b280 <line:569:5, col:15> col:11 bv 'float[4]'
| | | `-FullComment 0x2ad45a20 <col:37, col:52>
| | |   `-ParagraphComment 0x2ad459f0 <col:37, col:52>
| | |     `-TextComment 0x2ad459c0 <col:37, col:52> Text=" bounding volume"
| | `-FieldDecl 0x2ad0b360 <line:570:5, col:21> col:11 bvactive 'float[4]'
| |   `-FullComment 0x2ad45b00 <col:37, col:59>
| |     `-ParagraphComment 0x2ad45ad0 <col:37, col:59>
| |       `-TextComment 0x2ad45aa0 <col:37, col:59> Text=" active bounding volume"
| `-FieldDecl 0x2ad0b438 <line:545:3, line:571:5> col:5 rgba 'struct (unnamed struct at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:545:3)':'struct mjVisual_::(unnamed at /home/c_binder_mojo_user/c_binder_mojo/tests/integration/test_mujoco/test_mjmodel.h:545:3)'
|-TypedefDecl 0x2ad0b590 <line:573:1, col:26> col:26 referenced mjVisual 'struct mjVisual_':'struct mjVisual_'
| `-ElaboratedType 0x2ad0b540 'struct mjVisual_' sugar
|   `-RecordType 0x2ad06610 'struct mjVisual_'
|     `-Record 0x2ad06588 'mjVisual_'
|-RecordDecl 0x2ad0b618 <line:578:1, line:584:1> line:578:8 struct mjStatistic_ definition
| |-FullComment 0x2ad45bd0 <line:576:3, col:100>
| | `-ParagraphComment 0x2ad45ba0 <col:3, col:100>
| |   `-TextComment 0x2ad45b70 <col:3, col:100> Text="---------------------------------- mjStatistic ---------------------------------------------------"
| |-FieldDecl 0x2ad0b6f8 <line:579:3, col:10> col:10 meaninertia 'mjtNum':'double'
| | `-FullComment 0x2ad45ca0 <col:37, col:58>
| |   `-ParagraphComment 0x2ad45c70 <col:37, col:58>
| |     `-TextComment 0x2ad45c40 <col:37, col:58> Text=" mean diagonal inertia"
| |-FieldDecl 0x2ad0b788 <line:580:3, col:10> col:10 meanmass 'mjtNum':'double'
| | `-FullComment 0x2ad45d70 <col:37, col:51>
| |   `-ParagraphComment 0x2ad45d40 <col:37, col:51>
| |     `-TextComment 0x2ad45d10 <col:37, col:51> Text=" mean body mass"
| |-FieldDecl 0x2ad0b818 <line:581:3, col:10> col:10 meansize 'mjtNum':'double'
| | `-FullComment 0x2ad45e40 <col:37, col:51>
| |   `-ParagraphComment 0x2ad45e10 <col:37, col:51>
| |     `-TextComment 0x2ad45de0 <col:37, col:51> Text=" mean body size"
| |-FieldDecl 0x2ad0b8a8 <line:582:3, col:10> col:10 extent 'mjtNum':'double'
| | `-FullComment 0x2ad45f10 <col:37, col:51>
| |   `-ParagraphComment 0x2ad45ee0 <col:37, col:51>
| |     `-TextComment 0x2ad45eb0 <col:37, col:51> Text=" spatial extent"
| `-FieldDecl 0x2ad0b988 <line:583:3, col:18> col:10 center 'mjtNum[3]'
|   `-FullComment 0x2ad45fe0 <col:37, col:52>
|     `-ParagraphComment 0x2ad45fb0 <col:37, col:52>
|       `-TextComment 0x2ad45f80 <col:37, col:52> Text=" center of model"
|-TypedefDecl 0x2ad0ba60 <line:585:1, col:29> col:29 referenced mjStatistic 'struct mjStatistic_':'struct mjStatistic_'
| `-ElaboratedType 0x2ad0ba10 'struct mjStatistic_' sugar
|   `-RecordType 0x2ad0b6a0 'struct mjStatistic_'
|     `-Record 0x2ad0b618 'mjStatistic_'
|-RecordDecl 0x2ad0bae8 <line:590:1, line:1131:1> line:590:8 struct mjModel_ definition
| |-FullComment 0x2ad460b0 <line:588:3, col:100>
| | `-ParagraphComment 0x2ad46080 <col:3, col:100>
| |   `-TextComment 0x2ad46050 <col:3, col:100> Text="---------------------------------- mjModel -------------------------------------------------------"
| |-FieldDecl 0x2ad0bc00 <line:594:3, col:7> col:7 nq 'int'
| | `-FullComment 0x2ad46180 <col:37, col:82>
| |   `-ParagraphComment 0x2ad46150 <col:37, col:82>
| |     `-TextComment 0x2ad46120 <col:37, col:82> Text=" number of generalized coordinates = dim(qpos)"
| |-FieldDecl 0x2ad0bc90 <line:595:3, col:7> col:7 nv 'int'
| | `-FullComment 0x2ad46250 <col:37, col:77>
| |   `-ParagraphComment 0x2ad46220 <col:37, col:77>
| |     `-TextComment 0x2ad461f0 <col:37, col:77> Text=" number of degrees of freedom = dim(qvel)"
| |-FieldDecl 0x2ad0bd20 <line:596:3, col:7> col:7 nu 'int'
| | `-FullComment 0x2ad46320 <col:37, col:77>
| |   `-ParagraphComment 0x2ad462f0 <col:37, col:77>
| |     `-TextComment 0x2ad462c0 <col:37, col:77> Text=" number of actuators/controls = dim(ctrl)"
| |-FieldDecl 0x2ad0bdb0 <line:597:3, col:7> col:7 na 'int'
| | `-FullComment 0x2ad463f0 <col:37, col:75>
| |   `-ParagraphComment 0x2ad463c0 <col:37, col:75>
| |     `-TextComment 0x2ad46390 <col:37, col:75> Text=" number of activation states = dim(act)"
| |-FieldDecl 0x2ad0be40 <line:598:3, col:7> col:7 nbody 'int'
| | `-FullComment 0x2ad464c0 <col:37, col:53>
| |   `-ParagraphComment 0x2ad46490 <col:37, col:53>
| |     `-TextComment 0x2ad46460 <col:37, col:53> Text=" number of bodies"
| |-FieldDecl 0x2ad0bed0 <line:599:3, col:7> col:7 nbvh 'int'
| | `-FullComment 0x2ad46590 <col:37, col:83>
| |   `-ParagraphComment 0x2ad46560 <col:37, col:83>
| |     `-TextComment 0x2ad46530 <col:37, col:83> Text=" number of total bounding volumes in all bodies"
| |-FieldDecl 0x2ad0bf60 <line:600:3, col:7> col:7 nbvhstatic 'int'
| | `-FullComment 0x2ad46660 <col:37, col:95>
| |   `-ParagraphComment 0x2ad46630 <col:37, col:95>
| |     `-TextComment 0x2ad46600 <col:37, col:95> Text=" number of static bounding volumes (aabb stored in mjModel)"
| |-FieldDecl 0x2ad0bff0 <line:601:3, col:7> col:7 nbvhdynamic 'int'
| | `-FullComment 0x2ad46730 <col:37, col:95>
| |   `-ParagraphComment 0x2ad46700 <col:37, col:95>
| |     `-TextComment 0x2ad466d0 <col:37, col:95> Text=" number of dynamic bounding volumes (aabb stored in mjData)"
| |-FieldDecl 0x2ad0c080 <line:602:3, col:7> col:7 njnt 'int'
| | `-FullComment 0x2ad46800 <col:37, col:53>
| |   `-ParagraphComment 0x2ad467d0 <col:37, col:53>
| |     `-TextComment 0x2ad467a0 <col:37, col:53> Text=" number of joints"
| |-FieldDecl 0x2ad0c110 <line:603:3, col:7> col:7 ngeom 'int'
| | `-FullComment 0x2ad468d0 <col:37, col:52>
| |   `-ParagraphComment 0x2ad468a0 <col:37, col:52>
| |     `-TextComment 0x2ad46870 <col:37, col:52> Text=" number of geoms"
| |-FieldDecl 0x2ad0c1a0 <line:604:3, col:7> col:7 nsite 'int'
| | `-FullComment 0x2ad469a0 <col:37, col:52>
| |   `-ParagraphComment 0x2ad46970 <col:37, col:52>
| |     `-TextComment 0x2ad46940 <col:37, col:52> Text=" number of sites"
| |-FieldDecl 0x2ad0c230 <line:605:3, col:7> col:7 ncam 'int'
| | `-FullComment 0x2ad46a80 <col:37, col:54>
| |   `-ParagraphComment 0x2ad46a40 <col:37, col:54>
| |     `-TextComment 0x2ad46a10 <col:37, col:54> Text=" number of cameras"
| |-FieldDecl 0x2ad0e8a0 <line:606:3, col:7> col:7 nlight 'int'
| | `-FullComment 0x2ad46b50 <col:37, col:53>
| |   `-ParagraphComment 0x2ad46b20 <col:37, col:53>
| |     `-TextComment 0x2ad46af0 <col:37, col:53> Text=" number of lights"
| |-FieldDecl 0x2ad0e930 <line:607:3, col:7> col:7 nflex 'int'
| | `-FullComment 0x2ad46c20 <col:37, col:53>
| |   `-ParagraphComment 0x2ad46bf0 <col:37, col:53>
| |     `-TextComment 0x2ad46bc0 <col:37, col:53> Text=" number of flexes"
| |-FieldDecl 0x2ad0e9c0 <line:608:3, col:7> col:7 nflexvert 'int'
| | `-FullComment 0x2ad46cf0 <col:37, col:69>
| |   `-ParagraphComment 0x2ad46cc0 <col:37, col:69>
| |     `-TextComment 0x2ad46c90 <col:37, col:69> Text=" number of vertices in all flexes"
| |-FieldDecl 0x2ad0ea50 <line:609:3, col:7> col:7 nflexedge 'int'
| | `-FullComment 0x2ad46dc0 <col:37, col:66>
| |   `-ParagraphComment 0x2ad46d90 <col:37, col:66>
| |     `-TextComment 0x2ad46d60 <col:37, col:66> Text=" number of edges in all flexes"
| |-FieldDecl 0x2ad0eae0 <line:610:3, col:7> col:7 nflexelem 'int'
| | `-FullComment 0x2ad46e90 <col:37, col:69>
| |   `-ParagraphComment 0x2ad46e60 <col:37, col:69>
| |     `-TextComment 0x2ad46e30 <col:37, col:69> Text=" number of elements in all flexes"
| |-FieldDecl 0x2ad0eb70 <line:611:3, col:7> col:7 nflexelemdata 'int'
| | `-FullComment 0x2ad46f60 <col:37, col:79>
| |   `-ParagraphComment 0x2ad46f30 <col:37, col:79>
| |     `-TextComment 0x2ad46f00 <col:37, col:79> Text=" number of element vertex ids in all flexes"
| |-FieldDecl 0x2ad0ec00 <line:612:3, col:7> col:7 nflexelemedge 'int'
| | `-FullComment 0x2ad47030 <col:37, col:77>
| |   `-ParagraphComment 0x2ad47000 <col:37, col:77>
| |     `-TextComment 0x2ad46fd0 <col:37, col:77> Text=" number of element edge ids in all flexes"
| |-FieldDecl 0x2ad0ec90 <line:613:3, col:7> col:7 nflexshelldata 'int'
| | `-FullComment 0x2ad47100 <col:37, col:86>
| |   `-ParagraphComment 0x2ad470d0 <col:37, col:86>
| |     `-TextComment 0x2ad470a0 <col:37, col:86> Text=" number of shell fragment vertex ids in all flexes"
| |-FieldDecl 0x2ad0ed20 <line:614:3, col:7> col:7 nflexevpair 'int'
| | `-FullComment 0x2ad471d0 <col:37, col:81>
| |   `-ParagraphComment 0x2ad471a0 <col:37, col:81>
| |     `-TextComment 0x2ad47170 <col:37, col:81> Text=" number of element-vertex pairs in all flexes"
| |-FieldDecl 0x2ad0edb0 <line:615:3, col:7> col:7 nflextexcoord 'int'
| | `-FullComment 0x2ad472a0 <col:37, col:80>
| |   `-ParagraphComment 0x2ad47270 <col:37, col:80>
| |     `-TextComment 0x2ad47240 <col:37, col:80> Text=" number of vertices with texture coordinates"
| |-FieldDecl 0x2ad0ee40 <line:616:3, col:7> col:7 nmesh 'int'
| | `-FullComment 0x2ad47370 <col:37, col:53>
| |   `-ParagraphComment 0x2ad47340 <col:37, col:53>
| |     `-TextComment 0x2ad47310 <col:37, col:53> Text=" number of meshes"
| |-FieldDecl 0x2ad0eed0 <line:617:3, col:7> col:7 nmeshvert 'int'
| | `-FullComment 0x2ad47440 <col:37, col:69>
| |   `-ParagraphComment 0x2ad47410 <col:37, col:69>
| |     `-TextComment 0x2ad473e0 <col:37, col:69> Text=" number of vertices in all meshes"
| |-FieldDecl 0x2ad0ef60 <line:618:3, col:7> col:7 nmeshnormal 'int'
| | `-FullComment 0x2ad47510 <col:37, col:68>
| |   `-ParagraphComment 0x2ad474e0 <col:37, col:68>
| |     `-TextComment 0x2ad474b0 <col:37, col:68> Text=" number of normals in all meshes"
| |-FieldDecl 0x2ad0eff0 <line:619:3, col:7> col:7 nmeshtexcoord 'int'
| | `-FullComment 0x2ad475e0 <col:37, col:70>
| |   `-ParagraphComment 0x2ad475b0 <col:37, col:70>
| |     `-TextComment 0x2ad47580 <col:37, col:70> Text=" number of texcoords in all meshes"
| |-FieldDecl 0x2ad0f080 <line:620:3, col:7> col:7 nmeshface 'int'
| | `-FullComment 0x2ad476b0 <col:37, col:77>
| |   `-ParagraphComment 0x2ad47680 <col:37, col:77>
| |     `-TextComment 0x2ad47650 <col:37, col:77> Text=" number of triangular faces in all meshes"
| |-FieldDecl 0x2ad0f110 <line:621:3, col:7> col:7 nmeshgraph 'int'
| | `-FullComment 0x2ad47780 <col:37, col:74>
| |   `-ParagraphComment 0x2ad47750 <col:37, col:74>
| |     `-TextComment 0x2ad47720 <col:37, col:74> Text=" number of ints in mesh auxiliary data"
| |-FieldDecl 0x2ad0f1a0 <line:622:3, col:7> col:7 nskin 'int'
| | `-FullComment 0x2ad47850 <col:37, col:52>
| |   `-ParagraphComment 0x2ad47820 <col:37, col:52>
| |     `-TextComment 0x2ad477f0 <col:37, col:52> Text=" number of skins"
| |-FieldDecl 0x2ad0f230 <line:623:3, col:7> col:7 nskinvert 'int'
| | `-FullComment 0x2ad47920 <col:37, col:68>
| |   `-ParagraphComment 0x2ad478f0 <col:37, col:68>
| |     `-TextComment 0x2ad478c0 <col:37, col:68> Text=" number of vertices in all skins"
| |-FieldDecl 0x2ad0f2c0 <line:624:3, col:7> col:7 nskintexvert 'int'
| | `-FullComment 0x2ad479f0 <col:37, col:82>
| |   `-ParagraphComment 0x2ad479c0 <col:37, col:82>
| |     `-TextComment 0x2ad47990 <col:37, col:82> Text=" number of vertiex with texcoords in all skins"
| |-FieldDecl 0x2ad0f350 <line:625:3, col:7> col:7 nskinface 'int'
| | `-FullComment 0x2ad47ae0 <col:37, col:76>
| |   `-ParagraphComment 0x2ad47ab0 <col:37, col:76>
| |     `-TextComment 0x2ad47a80 <col:37, col:76> Text=" number of triangular faces in all skins"
| |-FieldDecl 0x2ad0f3e0 <line:626:3, col:7> col:7 nskinbone 'int'
| | `-FullComment 0x2ad47bb0 <col:37, col:65>
| |   `-ParagraphComment 0x2ad47b80 <col:37, col:65>
| |     `-TextComment 0x2ad47b50 <col:37, col:65> Text=" number of bones in all skins"
| |-FieldDecl 0x2ad0f470 <line:627:3, col:7> col:7 nskinbonevert 'int'
| | `-FullComment 0x2ad47c80 <col:37, col:73>
| |   `-ParagraphComment 0x2ad47c50 <col:37, col:73>
| |     `-TextComment 0x2ad47c20 <col:37, col:73> Text=" number of vertices in all skin bones"
| |-FieldDecl 0x2ad0f500 <line:628:3, col:7> col:7 nhfield 'int'
| | `-FullComment 0x2ad47d50 <col:37, col:59>
| |   `-ParagraphComment 0x2ad47d20 <col:37, col:59>
| |     `-TextComment 0x2ad47cf0 <col:37, col:59> Text=" number of heightfields"
| |-FieldDecl 0x2ad0f590 <line:629:3, col:7> col:7 nhfielddata 'int'
| | `-FullComment 0x2ad47e20 <col:37, col:78>
| |   `-ParagraphComment 0x2ad47df0 <col:37, col:78>
| |     `-TextComment 0x2ad47dc0 <col:37, col:78> Text=" number of data points in all heightfields"
| |-FieldDecl 0x2ad0f620 <line:630:3, col:7> col:7 ntex 'int'
| | `-FullComment 0x2ad47ef0 <col:37, col:55>
| |   `-ParagraphComment 0x2ad47ec0 <col:37, col:55>
| |     `-TextComment 0x2ad47e90 <col:37, col:55> Text=" number of textures"
| |-FieldDecl 0x2ad0f6b0 <line:631:3, col:7> col:7 ntexdata 'int'
| | `-FullComment 0x2ad47fc0 <col:37, col:72>
| |   `-ParagraphComment 0x2ad47f90 <col:37, col:72>
| |     `-TextComment 0x2ad47f60 <col:37, col:72> Text=" number of bytes in texture rgb data"
| |-FieldDecl 0x2ad0f740 <line:632:3, col:7> col:7 nmat 'int'
| | `-FullComment 0x2ad48090 <col:37, col:56>
| |   `-ParagraphComment 0x2ad48060 <col:37, col:56>
| |     `-TextComment 0x2ad48030 <col:37, col:56> Text=" number of materials"
| |-FieldDecl 0x2ad0f7d0 <line:633:3, col:7> col:7 npair 'int'
| | `-FullComment 0x2ad48160 <col:37, col:68>
| |   `-ParagraphComment 0x2ad48130 <col:37, col:68>
| |     `-TextComment 0x2ad48100 <col:37, col:68> Text=" number of predefined geom pairs"
| |-FieldDecl 0x2ad103c0 <line:634:3, col:7> col:7 nexclude 'int'
| | `-FullComment 0x2ad48230 <col:37, col:66>
| |   `-ParagraphComment 0x2ad48200 <col:37, col:66>
| |     `-TextComment 0x2ad481d0 <col:37, col:66> Text=" number of excluded geom pairs"
| |-FieldDecl 0x2ad10450 <line:635:3, col:7> col:7 neq 'int'
| | `-FullComment 0x2ad48300 <col:37, col:67>
| |   `-ParagraphComment 0x2ad482d0 <col:37, col:67>
| |     `-TextComment 0x2ad482a0 <col:37, col:67> Text=" number of equality constraints"
| |-FieldDecl 0x2ad104e0 <line:636:3, col:7> col:7 ntendon 'int'
| | `-FullComment 0x2ad483d0 <col:37, col:54>
| |   `-ParagraphComment 0x2ad483a0 <col:37, col:54>
| |     `-TextComment 0x2ad48370 <col:37, col:54> Text=" number of tendons"
| |-FieldDecl 0x2ad10570 <line:637:3, col:7> col:7 nwrap 'int'
| | `-FullComment 0x2ad484a0 <col:37, col:79>
| |   `-ParagraphComment 0x2ad48470 <col:37, col:79>
| |     `-TextComment 0x2ad48440 <col:37, col:79> Text=" number of wrap objects in all tendon paths"
| |-FieldDecl 0x2ad10600 <line:638:3, col:7> col:7 nsensor 'int'
| | `-FullComment 0x2ad48570 <col:37, col:54>
| |   `-ParagraphComment 0x2ad48540 <col:37, col:54>
| |     `-TextComment 0x2ad48510 <col:37, col:54> Text=" number of sensors"
| |-FieldDecl 0x2ad10690 <line:639:3, col:7> col:7 nnumeric 'int'
| | `-FullComment 0x2ad48640 <col:37, col:68>
| |   `-ParagraphComment 0x2ad48610 <col:37, col:68>
| |     `-TextComment 0x2ad485e0 <col:37, col:68> Text=" number of numeric custom fields"
| |-FieldDecl 0x2ad10720 <line:640:3, col:7> col:7 nnumericdata 'int'
| | `-FullComment 0x2ad48710 <col:37, col:76>
| |   `-ParagraphComment 0x2ad486e0 <col:37, col:76>
| |     `-TextComment 0x2ad486b0 <col:37, col:76> Text=" number of mjtNums in all numeric fields"
| |-FieldDecl 0x2ad107b0 <line:641:3, col:7> col:7 ntext 'int'
| | `-FullComment 0x2ad487e0 <col:37, col:65>
| |   `-ParagraphComment 0x2ad487b0 <col:37, col:65>
| |     `-TextComment 0x2ad48780 <col:37, col:65> Text=" number of text custom fields"
| |-FieldDecl 0x2ad10840 <line:642:3, col:7> col:7 ntextdata 'int'
| | `-FullComment 0x2ad488b0 <col:37, col:74>
| |   `-ParagraphComment 0x2ad48880 <col:37, col:74>
| |     `-TextComment 0x2ad48850 <col:37, col:74> Text=" number of mjtBytes in all text fields"
| |-FieldDecl 0x2ad108d0 <line:643:3, col:7> col:7 ntuple 'int'
| | `-FullComment 0x2ad48980 <col:37, col:66>
| |   `-ParagraphComment 0x2ad48950 <col:37, col:66>
| |     `-TextComment 0x2ad48920 <col:37, col:66> Text=" number of tuple custom fields"
| |-FieldDecl 0x2ad10960 <line:644:3, col:7> col:7 ntupledata 'int'
| | `-FullComment 0x2ad48a50 <col:37, col:74>
| |   `-ParagraphComment 0x2ad48a20 <col:37, col:74>
| |     `-TextComment 0x2ad489f0 <col:37, col:74> Text=" number of objects in all tuple fields"
| |-FieldDecl 0x2ad109f0 <line:645:3, col:7> col:7 nkey 'int'
| | `-FullComment 0x2ad3da90 <col:37, col:56>
| |   `-ParagraphComment 0x2ad3da60 <col:37, col:56>
| |     `-TextComment 0x2ad3da30 <col:37, col:56> Text=" number of keyframes"
| |-FieldDecl 0x2ad10a80 <line:646:3, col:7> col:7 nmocap 'int'
| | `-FullComment 0x2ad3db60 <col:37, col:59>
| |   `-ParagraphComment 0x2ad3db30 <col:37, col:59>
| |     `-TextComment 0x2ad3db00 <col:37, col:59> Text=" number of mocap bodies"
| |-FieldDecl 0x2ad10b10 <line:647:3, col:7> col:7 nplugin 'int'
| | `-FullComment 0x2ad3dc30 <col:37, col:63>
| |   `-ParagraphComment 0x2ad3dc00 <col:37, col:63>
| |     `-TextComment 0x2ad3dbd0 <col:37, col:63> Text=" number of plugin instances"
| |-FieldDecl 0x2ad10ba0 <line:648:3, col:7> col:7 npluginattr 'int'
| | `-FullComment 0x2ad3dd00 <col:37, col:84>
| |   `-ParagraphComment 0x2ad3dcd0 <col:37, col:84>
| |     `-TextComment 0x2ad3dca0 <col:37, col:84> Text=" number of chars in all plugin config attributes"
| |-FieldDecl 0x2ad10c30 <line:649:3, col:7> col:7 nuser_body 'int'
| | `-FullComment 0x2ad3ddd0 <col:37, col:67>
| |   `-ParagraphComment 0x2ad3dda0 <col:37, col:67>
| |     `-TextComment 0x2ad3dd70 <col:37, col:67> Text=" number of mjtNums in body_user"
| |-FieldDecl 0x2ad10cc0 <line:650:3, col:7> col:7 nuser_jnt 'int'
| | `-FullComment 0x2ad3dea0 <col:37, col:66>
| |   `-ParagraphComment 0x2ad3de70 <col:37, col:66>
| |     `-TextComment 0x2ad3de40 <col:37, col:66> Text=" number of mjtNums in jnt_user"
| |-FieldDecl 0x2ad10d50 <line:651:3, col:7> col:7 nuser_geom 'int'
| | `-FullComment 0x2ad3df70 <col:37, col:67>
| |   `-ParagraphComment 0x2ad3df40 <col:37, col:67>
| |     `-TextComment 0x2ad3df10 <col:37, col:67> Text=" number of mjtNums in geom_user"
| |-FieldDecl 0x2ad10de0 <line:652:3, col:7> col:7 nuser_site 'int'
| | `-FullComment 0x2ad3e040 <col:37, col:67>
| |   `-ParagraphComment 0x2ad3e010 <col:37, col:67>
| |     `-TextComment 0x2ad3dfe0 <col:37, col:67> Text=" number of mjtNums in site_user"
| |-FieldDecl 0x2ad10e70 <line:653:3, col:7> col:7 nuser_cam 'int'
| | `-FullComment 0x2ad3e110 <col:37, col:66>
| |   `-ParagraphComment 0x2ad3e0e0 <col:37, col:66>
| |     `-TextComment 0x2ad3e0b0 <col:37, col:66> Text=" number of mjtNums in cam_user"
| |-FieldDecl 0x2ad10f00 <line:654:3, col:7> col:7 nuser_tendon 'int'
| | `-FullComment 0x2ad3e1e0 <col:37, col:69>
| |   `-ParagraphComment 0x2ad3e1b0 <col:37, col:69>
| |     `-TextComment 0x2ad3e180 <col:37, col:69> Text=" number of mjtNums in tendon_user"
| |-FieldDecl 0x2ad10f90 <line:655:3, col:7> col:7 nuser_actuator 'int'
| | `-FullComment 0x2ad3e2b0 <col:37, col:71>
| |   `-ParagraphComment 0x2ad3e280 <col:37, col:71>
| |     `-TextComment 0x2ad3e250 <col:37, col:71> Text=" number of mjtNums in actuator_user"
| |-FieldDecl 0x2ad11020 <line:656:3, col:7> col:7 nuser_sensor 'int'
| | `-FullComment 0x2ad3e380 <col:37, col:69>
| |   `-ParagraphComment 0x2ad3e350 <col:37, col:69>
| |     `-TextComment 0x2ad3e320 <col:37, col:69> Text=" number of mjtNums in sensor_user"
| |-FieldDecl 0x2ad110b0 <line:657:3, col:7> col:7 nnames 'int'
| | `-FullComment 0x2ad3e450 <col:37, col:65>
| |   `-ParagraphComment 0x2ad3e420 <col:37, col:65>
| |     `-TextComment 0x2ad3e3f0 <col:37, col:65> Text=" number of chars in all names"
| |-FieldDecl 0x2ad11140 <line:658:3, col:7> col:7 nnames_map 'int'
| | `-FullComment 0x2ad3e520 <col:37, col:74>
| |   `-ParagraphComment 0x2ad3e4f0 <col:37, col:74>
| |     `-TextComment 0x2ad3e4c0 <col:37, col:74> Text=" number of slots in the names hash map"
| |-FieldDecl 0x2ad111d0 <line:659:3, col:7> col:7 npaths 'int'
| | `-FullComment 0x2ad3e5f0 <col:37, col:65>
| |   `-ParagraphComment 0x2ad3e5c0 <col:37, col:65>
| |     `-TextComment 0x2ad3e590 <col:37, col:65> Text=" number of chars in all paths"
| |-FieldDecl 0x2ad11290 <line:662:3, col:7> col:7 nM 'int'
| | `-FullComment 0x2ad3e6c0 <col:37, col:81>
| |   `-ParagraphComment 0x2ad3e690 <col:37, col:81>
| |     `-TextComment 0x2ad3e660 <col:37, col:81> Text=" number of non-zeros in sparse inertia matrix"
| |-FieldDecl 0x2ad11320 <line:663:3, col:7> col:7 nB 'int'
| | `-FullComment 0x2ad3e790 <col:37, col:82>
| |   `-ParagraphComment 0x2ad3e760 <col:37, col:82>
| |     `-TextComment 0x2ad3e730 <col:37, col:82> Text=" number of non-zeros in sparse body-dof matrix"
| |-FieldDecl 0x2ad11b10 <line:664:3, col:7> col:7 nC 'int'
| | `-FullComment 0x2ad3e860 <col:37, col:89>
| |   `-ParagraphComment 0x2ad3e830 <col:37, col:89>
| |     `-TextComment 0x2ad3e800 <col:37, col:89> Text=" number of non-zeros in sparse reduced dof-dof matrix"
| |-FieldDecl 0x2ad11ba0 <line:665:3, col:7> col:7 nD 'int'
| | `-FullComment 0x2ad3e930 <col:37, col:81>
| |   `-ParagraphComment 0x2ad3e900 <col:37, col:81>
| |     `-TextComment 0x2ad3e8d0 <col:37, col:81> Text=" number of non-zeros in sparse dof-dof matrix"
| |-FieldDecl 0x2ad11c30 <line:666:3, col:7> col:7 ntree 'int'
| | `-FullComment 0x2ad4cab0 <col:37, col:79>
| |   `-ParagraphComment 0x2ad3e9d0 <col:37, col:79>
| |     `-TextComment 0x2ad3e9a0 <col:37, col:79> Text=" number of kinematic trees under world body"
| |-FieldDecl 0x2ad11cc0 <line:667:3, col:7> col:7 ngravcomp 'int'
| | `-FullComment 0x2ad4cb80 <col:37, col:75>
| |   `-ParagraphComment 0x2ad4cb50 <col:37, col:75>
| |     `-TextComment 0x2ad4cb20 <col:37, col:75> Text=" number of bodies with nonzero gravcomp"
| |-FieldDecl 0x2ad11d50 <line:668:3, col:7> col:7 nemax 'int'
| | `-FullComment 0x2ad4cc50 <col:37, col:81>
| |   `-ParagraphComment 0x2ad4cc20 <col:37, col:81>
| |     `-TextComment 0x2ad4cbf0 <col:37, col:81> Text=" number of potential equality-constraint rows"
| |-FieldDecl 0x2ad11de0 <line:669:3, col:7> col:7 njmax 'int'
| | `-FullComment 0x2ad4cd20 <col:37, col:84>
| |   `-ParagraphComment 0x2ad4ccf0 <col:37, col:84>
| |     `-TextComment 0x2ad4ccc0 <col:37, col:84> Text=" number of available rows in constraint Jacobian"
| |-FieldDecl 0x2ad11e70 <line:670:3, col:7> col:7 nconmax 'int'
| | `-FullComment 0x2ad4cdf0 <col:37, col:81>
| |   `-ParagraphComment 0x2ad4cdc0 <col:37, col:81>
| |     `-TextComment 0x2ad4cd90 <col:37, col:81> Text=" number of potential contacts in contact list"
| |-FieldDecl 0x2ad11f00 <line:671:3, col:7> col:7 nuserdata 'int'
| | `-FullComment 0x2ad4cec0 <col:37, col:76>
| |   `-ParagraphComment 0x2ad4ce90 <col:37, col:76>
| |     `-TextComment 0x2ad4ce60 <col:37, col:76> Text=" number of mjtNums reserved for the user"
| |-FieldDecl 0x2ad11f90 <line:672:3, col:7> col:7 nsensordata 'int'
| | `-FullComment 0x2ad4cf90 <col:37, col:76>
| |   `-ParagraphComment 0x2ad4cf60 <col:37, col:76>
| |     `-TextComment 0x2ad4cf30 <col:37, col:76> Text=" number of mjtNums in sensor data vector"
| |-FieldDecl 0x2ad12020 <line:673:3, col:7> col:7 npluginstate 'int'
| | `-FullComment 0x2ad4d060 <col:37, col:77>
| |   `-ParagraphComment 0x2ad4d030 <col:37, col:77>
| |     `-TextComment 0x2ad4d000 <col:37, col:77> Text=" number of mjtNums in plugin state vector"
| |-FieldDecl 0x2ad120d0 <line:675:3, col:10> col:10 narena 'size_t':'unsigned long'
| | `-FullComment 0x2ad4d130 <col:37, col:93>
| |   `-ParagraphComment 0x2ad4d100 <col:37, col:93>
| |     `-TextComment 0x2ad4d0d0 <col:37, col:93> Text=" number of bytes in the mjData arena (inclusive of stack)"
| |-FieldDecl 0x2ad12158 <line:676:3, col:10> col:10 nbuffer 'size_t':'unsigned long'
| | `-FullComment 0x2ad4d200 <col:37, col:62>
| |   `-ParagraphComment 0x2ad4d1d0 <col:37, col:62>
| |     `-TextComment 0x2ad4d1a0 <col:37, col:62> Text=" number of bytes in buffer"
| |-FieldDecl 0x2ad12240 <line:680:3, col:12> col:12 opt 'mjOption':'struct mjOption_'
| | `-FullComment 0x2ad4d2d0 <col:37, col:52>
| |   `-ParagraphComment 0x2ad4d2a0 <col:37, col:52>
| |     `-TextComment 0x2ad4d270 <col:37, col:52> Text=" physics options"
| |-FieldDecl 0x2ad122f0 <line:681:3, col:12> col:12 vis 'mjVisual':'struct mjVisual_'
| | `-FullComment 0x2ad4d3a0 <col:37, col:58>
| |   `-ParagraphComment 0x2ad4d370 <col:37, col:58>
| |     `-TextComment 0x2ad4d340 <col:37, col:58> Text=" visualization options"
| |-FieldDecl 0x2ad123a0 <line:682:3, col:15> col:15 stat 'mjStatistic':'struct mjStatistic_'
| | `-FullComment 0x2ad4d470 <col:37, col:53>
| |   `-ParagraphComment 0x2ad4d440 <col:37, col:53>
| |     `-TextComment 0x2ad4d410 <col:37, col:53> Text=" model statistics"
| |-FieldDecl 0x2ad12490 <line:687:3, col:13> col:13 buffer 'void *'
| | `-FullComment 0x2ad4d540 <col:37, col:87>
| |   `-ParagraphComment 0x2ad4d510 <col:37, col:87>
| |     `-TextComment 0x2ad4d4e0 <col:37, col:87> Text=" main buffer; all pointers point in it    (nbuffer)"
| |-FieldDecl 0x2ad125a8 <line:690:3, col:13> col:13 qpos0 'mjtNum *'
| | `-FullComment 0x2ad4d610 <col:37, col:86>
| |   `-ParagraphComment 0x2ad4d5e0 <col:37, col:86>
| |     `-TextComment 0x2ad4d5b0 <col:37, col:86> Text=" qpos values at default pose              (nq x 1)"
| |-FieldDecl 0x2ad12638 <line:691:3, col:13> col:13 qpos_spring 'mjtNum *'
| | `-FullComment 0x2ad4d6e0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad4d6b0 <col:37, col:86>
| |     `-TextComment 0x2ad4d680 <col:37, col:86> Text=" reference pose for springs               (nq x 1)"
| |-FieldDecl 0x2ad12730 <line:694:3, col:13> col:13 body_parentid 'int *'
| | `-FullComment 0x2ad4d7b0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4d780 <col:37, col:89>
| |     `-TextComment 0x2ad4d750 <col:37, col:89> Text=" id of body's parent                      (nbody x 1)"
| |-FieldDecl 0x2ad127c0 <line:695:3, col:13> col:13 body_rootid 'int *'
| | `-FullComment 0x2ad4d880 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4d850 <col:37, col:89>
| |     `-TextComment 0x2ad4d820 <col:37, col:89> Text=" id of root above body                    (nbody x 1)"
| |-FieldDecl 0x2ad12850 <line:696:3, col:13> col:13 body_weldid 'int *'
| | `-FullComment 0x2ad4d950 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4d920 <col:37, col:89>
| |     `-TextComment 0x2ad4d8f0 <col:37, col:89> Text=" id of body that this body is welded to   (nbody x 1)"
| |-FieldDecl 0x2ad128e0 <line:697:3, col:13> col:13 body_mocapid 'int *'
| | `-FullComment 0x2ad4da20 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4d9f0 <col:37, col:89>
| |     `-TextComment 0x2ad4d9c0 <col:37, col:89> Text=" id of mocap data; -1: none               (nbody x 1)"
| |-FieldDecl 0x2ad12970 <line:698:3, col:13> col:13 body_jntnum 'int *'
| | `-FullComment 0x2ad4db10 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4dae0 <col:37, col:89>
| |     `-TextComment 0x2ad4dab0 <col:37, col:89> Text=" number of joints for this body           (nbody x 1)"
| |-FieldDecl 0x2ad12a00 <line:699:3, col:13> col:13 body_jntadr 'int *'
| | `-FullComment 0x2ad4dbe0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4dbb0 <col:37, col:89>
| |     `-TextComment 0x2ad4db80 <col:37, col:89> Text=" start addr of joints; -1: no joints      (nbody x 1)"
| |-FieldDecl 0x2ad12a90 <line:700:3, col:13> col:13 body_dofnum 'int *'
| | `-FullComment 0x2ad4dcb0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4dc80 <col:37, col:89>
| |     `-TextComment 0x2ad4dc50 <col:37, col:89> Text=" number of motion degrees of freedom      (nbody x 1)"
| |-FieldDecl 0x2ad132b8 <line:701:3, col:13> col:13 body_dofadr 'int *'
| | `-FullComment 0x2ad4dd80 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4dd50 <col:37, col:89>
| |     `-TextComment 0x2ad4dd20 <col:37, col:89> Text=" start addr of dofs; -1: no dofs          (nbody x 1)"
| |-FieldDecl 0x2ad13350 <line:702:3, col:13> col:13 body_treeid 'int *'
| | `-FullComment 0x2ad4de50 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4de20 <col:37, col:89>
| |     `-TextComment 0x2ad4ddf0 <col:37, col:89> Text=" id of body's kinematic tree; -1: static  (nbody x 1)"
| |-FieldDecl 0x2ad133e0 <line:703:3, col:13> col:13 body_geomnum 'int *'
| | `-FullComment 0x2ad4df20 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4def0 <col:37, col:89>
| |     `-TextComment 0x2ad4dec0 <col:37, col:89> Text=" number of geoms                          (nbody x 1)"
| |-FieldDecl 0x2ad13470 <line:704:3, col:13> col:13 body_geomadr 'int *'
| | `-FullComment 0x2ad4dff0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4dfc0 <col:37, col:89>
| |     `-TextComment 0x2ad4df90 <col:37, col:89> Text=" start addr of geoms; -1: no geoms        (nbody x 1)"
| |-FieldDecl 0x2ad13578 <line:705:3, col:13> col:13 body_simple 'mjtByte *'
| | `-FullComment 0x2ad4e0c0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e090 <col:37, col:89>
| |     `-TextComment 0x2ad4e060 <col:37, col:89> Text=" 1: diag M; 2: diag M, sliders only       (nbody x 1)"
| |-FieldDecl 0x2ad13608 <line:706:3, col:13> col:13 body_sameframe 'mjtByte *'
| | `-FullComment 0x2ad4e190 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e160 <col:37, col:89>
| |     `-TextComment 0x2ad4e130 <col:37, col:89> Text=" same frame as inertia (mjtSameframe)     (nbody x 1)"
| |-FieldDecl 0x2ad13698 <line:707:3, col:13> col:13 body_pos 'mjtNum *'
| | `-FullComment 0x2ad4e260 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e230 <col:37, col:89>
| |     `-TextComment 0x2ad4e200 <col:37, col:89> Text=" position offset rel. to parent body      (nbody x 3)"
| |-FieldDecl 0x2ad13728 <line:708:3, col:13> col:13 body_quat 'mjtNum *'
| | `-FullComment 0x2ad4e330 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e300 <col:37, col:89>
| |     `-TextComment 0x2ad4e2d0 <col:37, col:89> Text=" orientation offset rel. to parent body   (nbody x 4)"
| |-FieldDecl 0x2ad137b8 <line:709:3, col:13> col:13 body_ipos 'mjtNum *'
| | `-FullComment 0x2ad4e400 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e3d0 <col:37, col:89>
| |     `-TextComment 0x2ad4e3a0 <col:37, col:89> Text=" local position of center of mass         (nbody x 3)"
| |-FieldDecl 0x2ad13848 <line:710:3, col:13> col:13 body_iquat 'mjtNum *'
| | `-FullComment 0x2ad4e4d0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e4a0 <col:37, col:89>
| |     `-TextComment 0x2ad4e470 <col:37, col:89> Text=" local orientation of inertia ellipsoid   (nbody x 4)"
| |-FieldDecl 0x2ad138d8 <line:711:3, col:13> col:13 body_mass 'mjtNum *'
| | `-FullComment 0x2ad4e5a0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e570 <col:37, col:89>
| |     `-TextComment 0x2ad4e540 <col:37, col:89> Text=" mass                                     (nbody x 1)"
| |-FieldDecl 0x2ad13968 <line:712:3, col:13> col:13 body_subtreemass 'mjtNum *'
| | `-FullComment 0x2ad4e670 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e640 <col:37, col:89>
| |     `-TextComment 0x2ad4e610 <col:37, col:89> Text=" mass of subtree starting at this body    (nbody x 1)"
| |-FieldDecl 0x2ad139f8 <line:713:3, col:13> col:13 body_inertia 'mjtNum *'
| | `-FullComment 0x2ad4e740 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e710 <col:37, col:89>
| |     `-TextComment 0x2ad4e6e0 <col:37, col:89> Text=" diagonal inertia in ipos/iquat frame     (nbody x 3)"
| |-FieldDecl 0x2ad13a88 <line:714:3, col:13> col:13 body_invweight0 'mjtNum *'
| | `-FullComment 0x2ad4e810 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e7e0 <col:37, col:89>
| |     `-TextComment 0x2ad4e7b0 <col:37, col:89> Text=" mean inv inert in qpos0 (trn, rot)       (nbody x 2)"
| |-FieldDecl 0x2ad13b18 <line:715:3, col:13> col:13 body_gravcomp 'mjtNum *'
| | `-FullComment 0x2ad4e8e0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e8b0 <col:37, col:89>
| |     `-TextComment 0x2ad4e880 <col:37, col:89> Text=" antigravity force, units of body weight  (nbody x 1)"
| |-FieldDecl 0x2ad13ba8 <line:716:3, col:13> col:13 body_margin 'mjtNum *'
| | `-FullComment 0x2ad4e9b0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4e980 <col:37, col:89>
| |     `-TextComment 0x2ad4e950 <col:37, col:89> Text=" MAX over all geom margins                (nbody x 1)"
| |-FieldDecl 0x2ad13c38 <line:717:3, col:13> col:13 body_user 'mjtNum *'
| | `-FullComment 0x2ad4ea80 <col:37, col:98>
| |   `-ParagraphComment 0x2ad4ea50 <col:37, col:98>
| |     `-TextComment 0x2ad4ea20 <col:37, col:98> Text=" user data                                (nbody x nuser_body)"
| |-FieldDecl 0x2ad13cd0 <line:718:3, col:13> col:13 body_plugin 'int *'
| | `-FullComment 0x2ad4eb60 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4eb30 <col:37, col:89>
| |     `-TextComment 0x2ad4eb00 <col:37, col:89> Text=" plugin instance id; -1: not in use       (nbody x 1)"
| |-FieldDecl 0x2ad13d60 <line:719:3, col:13> col:13 body_contype 'int *'
| | `-FullComment 0x2ad4ec30 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4ec00 <col:37, col:89>
| |     `-TextComment 0x2ad4ebd0 <col:37, col:89> Text=" OR over all geom contypes                (nbody x 1)"
| |-FieldDecl 0x2ad13df0 <line:720:3, col:13> col:13 body_conaffinity 'int *'
| | `-FullComment 0x2ad4ed00 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4ecd0 <col:37, col:89>
| |     `-TextComment 0x2ad4eca0 <col:37, col:89> Text=" OR over all geom conaffinities           (nbody x 1)"
| |-FieldDecl 0x2ad13e80 <line:721:3, col:13> col:13 body_bvhadr 'int *'
| | `-FullComment 0x2ad4edd0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4eda0 <col:37, col:89>
| |     `-TextComment 0x2ad4ed70 <col:37, col:89> Text=" address of bvh root                      (nbody x 1)"
| |-FieldDecl 0x2ad13f10 <line:722:3, col:13> col:13 body_bvhnum 'int *'
| | `-FullComment 0x2ad4eea0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad4ee70 <col:37, col:89>
| |     `-TextComment 0x2ad4ee40 <col:37, col:89> Text=" number of bounding volumes               (nbody x 1)"
| |-FieldDecl 0x2ad13fd0 <line:725:3, col:13> col:13 bvh_depth 'int *'
| | `-FullComment 0x2ad4ef70 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4ef40 <col:37, col:88>
| |     `-TextComment 0x2ad4ef10 <col:37, col:88> Text=" depth in the bounding volume hierarchy   (nbvh x 1)"
| |-FieldDecl 0x2ad14060 <line:726:3, col:13> col:13 bvh_child 'int *'
| | `-FullComment 0x2ad4f040 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f010 <col:37, col:88>
| |     `-TextComment 0x2ad4efe0 <col:37, col:88> Text=" left and right children in tree          (nbvh x 2)"
| |-FieldDecl 0x2ad140f0 <line:727:3, col:13> col:13 bvh_nodeid 'int *'
| | `-FullComment 0x2ad4f110 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f0e0 <col:37, col:88>
| |     `-TextComment 0x2ad4f0b0 <col:37, col:88> Text=" geom or elem id of node; -1: non-leaf    (nbvh x 1)"
| |-FieldDecl 0x2ad14178 <line:728:3, col:13> col:13 bvh_aabb 'mjtNum *'
| | `-FullComment 0x2ad4f1e0 <col:37, col:94>
| |   `-ParagraphComment 0x2ad4f1b0 <col:37, col:94>
| |     `-TextComment 0x2ad4f180 <col:37, col:94> Text=" local bounding box (center, size)        (nbvhstatic x 6)"
| |-FieldDecl 0x2ad14240 <line:731:3, col:13> col:13 jnt_type 'int *'
| | `-FullComment 0x2ad4f2b0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f280 <col:37, col:88>
| |     `-TextComment 0x2ad4f250 <col:37, col:88> Text=" type of joint (mjtJoint)                 (njnt x 1)"
| |-FieldDecl 0x2ad15200 <line:732:3, col:13> col:13 jnt_qposadr 'int *'
| | `-FullComment 0x2ad4f380 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f350 <col:37, col:88>
| |     `-TextComment 0x2ad4f320 <col:37, col:88> Text=" start addr in 'qpos' for joint's data    (njnt x 1)"
| |-FieldDecl 0x2ad15290 <line:733:3, col:13> col:13 jnt_dofadr 'int *'
| | `-FullComment 0x2ad4f450 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f420 <col:37, col:88>
| |     `-TextComment 0x2ad4f3f0 <col:37, col:88> Text=" start addr in 'qvel' for joint's data    (njnt x 1)"
| |-FieldDecl 0x2ad15320 <line:734:3, col:13> col:13 jnt_bodyid 'int *'
| | `-FullComment 0x2ad4f520 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f4f0 <col:37, col:88>
| |     `-TextComment 0x2ad4f4c0 <col:37, col:88> Text=" id of joint's body                       (njnt x 1)"
| |-FieldDecl 0x2ad153b0 <line:735:3, col:13> col:13 jnt_group 'int *'
| | `-FullComment 0x2ad4f5f0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f5c0 <col:37, col:88>
| |     `-TextComment 0x2ad4f590 <col:37, col:88> Text=" group for visibility                     (njnt x 1)"
| |-FieldDecl 0x2ad15438 <line:736:3, col:13> col:13 jnt_limited 'mjtByte *'
| | `-FullComment 0x2ad4f6c0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f690 <col:37, col:88>
| |     `-TextComment 0x2ad4f660 <col:37, col:88> Text=" does joint have limits                   (njnt x 1)"
| |-FieldDecl 0x2ad154c8 <line:737:3, col:13> col:13 jnt_actfrclimited 'mjtByte *'
| | `-FullComment 0x2ad4f790 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f760 <col:37, col:88>
| |     `-TextComment 0x2ad4f730 <col:37, col:88> Text=" does joint have actuator force limits    (njnt x 1)"
| |-FieldDecl 0x2ad15558 <line:738:3, col:13> col:13 jnt_actgravcomp 'mjtByte *'
| | `-FullComment 0x2ad4f860 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4f830 <col:37, col:88>
| |     `-TextComment 0x2ad4f800 <col:37, col:88> Text=" is gravcomp force applied via actuators  (njnt x 1)"
| |-FieldDecl 0x2ad155e8 <line:739:3, col:13> col:13 jnt_solref 'mjtNum *'
| | `-FullComment 0x2ad4f930 <col:37, col:93>
| |   `-ParagraphComment 0x2ad4f900 <col:37, col:93>
| |     `-TextComment 0x2ad4f8d0 <col:37, col:93> Text=" constraint solver reference: limit       (njnt x mjNREF)"
| |-FieldDecl 0x2ad15678 <line:740:3, col:13> col:13 jnt_solimp 'mjtNum *'
| | `-FullComment 0x2ad4fa00 <col:37, col:93>
| |   `-ParagraphComment 0x2ad4f9d0 <col:37, col:93>
| |     `-TextComment 0x2ad4f9a0 <col:37, col:93> Text=" constraint solver impedance: limit       (njnt x mjNIMP)"
| |-FieldDecl 0x2ad15708 <line:741:3, col:13> col:13 jnt_pos 'mjtNum *'
| | `-FullComment 0x2ad4fae0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4faa0 <col:37, col:88>
| |     `-TextComment 0x2ad4fa70 <col:37, col:88> Text=" local anchor position                    (njnt x 3)"
| |-FieldDecl 0x2ad15798 <line:742:3, col:13> col:13 jnt_axis 'mjtNum *'
| | `-FullComment 0x2ad4fbb0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4fb80 <col:37, col:88>
| |     `-TextComment 0x2ad4fb50 <col:37, col:88> Text=" local joint axis                         (njnt x 3)"
| |-FieldDecl 0x2ad15828 <line:743:3, col:13> col:13 jnt_stiffness 'mjtNum *'
| | `-FullComment 0x2ad4fc80 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4fc50 <col:37, col:88>
| |     `-TextComment 0x2ad4fc20 <col:37, col:88> Text=" stiffness coefficient                    (njnt x 1)"
| |-FieldDecl 0x2ad158b8 <line:744:3, col:13> col:13 jnt_range 'mjtNum *'
| | `-FullComment 0x2ad4fd50 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4fd20 <col:37, col:88>
| |     `-TextComment 0x2ad4fcf0 <col:37, col:88> Text=" joint limits                             (njnt x 2)"
| |-FieldDecl 0x2ad15948 <line:745:3, col:13> col:13 jnt_actfrcrange 'mjtNum *'
| | `-FullComment 0x2ad4fe20 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4fdf0 <col:37, col:88>
| |     `-TextComment 0x2ad4fdc0 <col:37, col:88> Text=" range of total actuator force            (njnt x 2)"
| |-FieldDecl 0x2ad159d8 <line:746:3, col:13> col:13 jnt_margin 'mjtNum *'
| | `-FullComment 0x2ad4fef0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad4fec0 <col:37, col:88>
| |     `-TextComment 0x2ad4fe90 <col:37, col:88> Text=" min distance for limit detection         (njnt x 1)"
| |-FieldDecl 0x2ad15a68 <line:747:3, col:13> col:13 jnt_user 'mjtNum *'
| | `-FullComment 0x2ad4ffc0 <col:37, col:96>
| |   `-ParagraphComment 0x2ad4ff90 <col:37, col:96>
| |     `-TextComment 0x2ad4ff60 <col:37, col:96> Text=" user data                                (njnt x nuser_jnt)"
| |-FieldDecl 0x2ad15b30 <line:750:3, col:13> col:13 dof_bodyid 'int *'
| | `-FullComment 0x2ad50090 <col:37, col:86>
| |   `-ParagraphComment 0x2ad50060 <col:37, col:86>
| |     `-TextComment 0x2ad50030 <col:37, col:86> Text=" id of dof's body                         (nv x 1)"
| |-FieldDecl 0x2ad15bc0 <line:751:3, col:13> col:13 dof_jntid 'int *'
| | `-FullComment 0x2ad50160 <col:37, col:86>
| |   `-ParagraphComment 0x2ad50130 <col:37, col:86>
| |     `-TextComment 0x2ad50100 <col:37, col:86> Text=" id of dof's joint                        (nv x 1)"
| |-FieldDecl 0x2ad15c50 <line:752:3, col:13> col:13 dof_parentid 'int *'
| | `-FullComment 0x2ad50230 <col:37, col:86>
| |   `-ParagraphComment 0x2ad50200 <col:37, col:86>
| |     `-TextComment 0x2ad501d0 <col:37, col:86> Text=" id of dof's parent; -1: none             (nv x 1)"
| |-FieldDecl 0x2ad15ce0 <line:753:3, col:13> col:13 dof_treeid 'int *'
| | `-FullComment 0x2ad50300 <col:37, col:86>
| |   `-ParagraphComment 0x2ad502d0 <col:37, col:86>
| |     `-TextComment 0x2ad502a0 <col:37, col:86> Text=" id of dof's kinematic tree               (nv x 1)"
| |-FieldDecl 0x2ad15d70 <line:754:3, col:13> col:13 dof_Madr 'int *'
| | `-FullComment 0x2ad503d0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad503a0 <col:37, col:86>
| |     `-TextComment 0x2ad50370 <col:37, col:86> Text=" dof address in M-diagonal                (nv x 1)"
| |-FieldDecl 0x2ad15e00 <line:755:3, col:13> col:13 dof_simplenum 'int *'
| | `-FullComment 0x2ad504a0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad50470 <col:37, col:86>
| |     `-TextComment 0x2ad50440 <col:37, col:86> Text=" number of consecutive simple dofs        (nv x 1)"
| |-FieldDecl 0x2ad15e88 <line:756:3, col:13> col:13 dof_solref 'mjtNum *'
| | `-FullComment 0x2ad50570 <col:37, col:91>
| |   `-ParagraphComment 0x2ad50540 <col:37, col:91>
| |     `-TextComment 0x2ad50510 <col:37, col:91> Text=" constraint solver reference:frictionloss (nv x mjNREF)"
| |-FieldDecl 0x2ad15f18 <line:757:3, col:13> col:13 dof_solimp 'mjtNum *'
| | `-FullComment 0x2ad50640 <col:37, col:91>
| |   `-ParagraphComment 0x2ad50610 <col:37, col:91>
| |     `-TextComment 0x2ad505e0 <col:37, col:91> Text=" constraint solver impedance:frictionloss (nv x mjNIMP)"
| |-FieldDecl 0x2ad15fa8 <line:758:3, col:13> col:13 dof_frictionloss 'mjtNum *'
| | `-FullComment 0x2ad50710 <col:37, col:86>
| |   `-ParagraphComment 0x2ad506e0 <col:37, col:86>
| |     `-TextComment 0x2ad506b0 <col:37, col:86> Text=" dof friction loss                        (nv x 1)"
| |-FieldDecl 0x2ad16038 <line:759:3, col:13> col:13 dof_armature 'mjtNum *'
| | `-FullComment 0x2ad507e0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad507b0 <col:37, col:86>
| |     `-TextComment 0x2ad50780 <col:37, col:86> Text=" dof armature inertia/mass                (nv x 1)"
| |-FieldDecl 0x2ad160c8 <line:760:3, col:13> col:13 dof_damping 'mjtNum *'
| | `-FullComment 0x2ad508b0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad50880 <col:37, col:86>
| |     `-TextComment 0x2ad50850 <col:37, col:86> Text=" damping coefficient                      (nv x 1)"
| |-FieldDecl 0x2ad16158 <line:761:3, col:13> col:13 dof_invweight0 'mjtNum *'
| | `-FullComment 0x2ad50980 <col:37, col:86>
| |   `-ParagraphComment 0x2ad50950 <col:37, col:86>
| |     `-TextComment 0x2ad50920 <col:37, col:86> Text=" diag. inverse inertia in qpos0           (nv x 1)"
| |-FieldDecl 0x2ad16948 <line:762:3, col:13> col:13 dof_M0 'mjtNum *'
| | `-FullComment 0x2ad50a50 <col:37, col:86>
| |   `-ParagraphComment 0x2ad50a20 <col:37, col:86>
| |     `-TextComment 0x2ad509f0 <col:37, col:86> Text=" diag. inertia in qpos0                   (nv x 1)"
| |-FieldDecl 0x2ad16a10 <line:765:3, col:13> col:13 geom_type 'int *'
| | `-FullComment 0x2ad50b40 <col:37, col:89>
| |   `-ParagraphComment 0x2ad50b10 <col:37, col:89>
| |     `-TextComment 0x2ad50ae0 <col:37, col:89> Text=" geometric type (mjtGeom)                 (ngeom x 1)"
| |-FieldDecl 0x2ad16aa0 <line:766:3, col:13> col:13 geom_contype 'int *'
| | `-FullComment 0x2ad50c10 <col:37, col:89>
| |   `-ParagraphComment 0x2ad50be0 <col:37, col:89>
| |     `-TextComment 0x2ad50bb0 <col:37, col:89> Text=" geom contact type                        (ngeom x 1)"
| |-FieldDecl 0x2ad16b30 <line:767:3, col:13> col:13 geom_conaffinity 'int *'
| | `-FullComment 0x2ad50ce0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad50cb0 <col:37, col:89>
| |     `-TextComment 0x2ad50c80 <col:37, col:89> Text=" geom contact affinity                    (ngeom x 1)"
| |-FieldDecl 0x2ad16bc0 <line:768:3, col:13> col:13 geom_condim 'int *'
| | `-FullComment 0x2ad50db0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad50d80 <col:37, col:89>
| |     `-TextComment 0x2ad50d50 <col:37, col:89> Text=" contact dimensionality (1, 3, 4, 6)      (ngeom x 1)"
| |-FieldDecl 0x2ad16c50 <line:769:3, col:13> col:13 geom_bodyid 'int *'
| | `-FullComment 0x2ad50e80 <col:37, col:89>
| |   `-ParagraphComment 0x2ad50e50 <col:37, col:89>
| |     `-TextComment 0x2ad50e20 <col:37, col:89> Text=" id of geom's body                        (ngeom x 1)"
| |-FieldDecl 0x2ad16ce0 <line:770:3, col:13> col:13 geom_dataid 'int *'
| | `-FullComment 0x2ad50f50 <col:37, col:89>
| |   `-ParagraphComment 0x2ad50f20 <col:37, col:89>
| |     `-TextComment 0x2ad50ef0 <col:37, col:89> Text=" id of geom's mesh/hfield; -1: none       (ngeom x 1)"
| |-FieldDecl 0x2ad16d70 <line:771:3, col:13> col:13 geom_matid 'int *'
| | `-FullComment 0x2ad51020 <col:37, col:89>
| |   `-ParagraphComment 0x2ad50ff0 <col:37, col:89>
| |     `-TextComment 0x2ad50fc0 <col:37, col:89> Text=" material id for rendering; -1: none      (ngeom x 1)"
| |-FieldDecl 0x2ad16e00 <line:772:3, col:13> col:13 geom_group 'int *'
| | `-FullComment 0x2ad510f0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad510c0 <col:37, col:89>
| |     `-TextComment 0x2ad51090 <col:37, col:89> Text=" group for visibility                     (ngeom x 1)"
| |-FieldDecl 0x2ad16e90 <line:773:3, col:13> col:13 geom_priority 'int *'
| | `-FullComment 0x2ad511c0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51190 <col:37, col:89>
| |     `-TextComment 0x2ad51160 <col:37, col:89> Text=" geom contact priority                    (ngeom x 1)"
| |-FieldDecl 0x2ad16f20 <line:774:3, col:13> col:13 geom_plugin 'int *'
| | `-FullComment 0x2ad51290 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51260 <col:37, col:89>
| |     `-TextComment 0x2ad51230 <col:37, col:89> Text=" plugin instance id; -1: not in use       (ngeom x 1)"
| |-FieldDecl 0x2ad16fa8 <line:775:3, col:13> col:13 geom_sameframe 'mjtByte *'
| | `-FullComment 0x2ad51360 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51330 <col:37, col:89>
| |     `-TextComment 0x2ad51300 <col:37, col:89> Text=" same frame as body (mjtSameframe)        (ngeom x 1)"
| |-FieldDecl 0x2ad17038 <line:776:3, col:13> col:13 geom_solmix 'mjtNum *'
| | `-FullComment 0x2ad51430 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51400 <col:37, col:89>
| |     `-TextComment 0x2ad513d0 <col:37, col:89> Text=" mixing coef for solref/imp in geom pair  (ngeom x 1)"
| |-FieldDecl 0x2ad170c8 <line:777:3, col:13> col:13 geom_solref 'mjtNum *'
| | `-FullComment 0x2ad51500 <col:37, col:94>
| |   `-ParagraphComment 0x2ad514d0 <col:37, col:94>
| |     `-TextComment 0x2ad514a0 <col:37, col:94> Text=" constraint solver reference: contact     (ngeom x mjNREF)"
| |-FieldDecl 0x2ad17158 <line:778:3, col:13> col:13 geom_solimp 'mjtNum *'
| | `-FullComment 0x2ad515d0 <col:37, col:94>
| |   `-ParagraphComment 0x2ad515a0 <col:37, col:94>
| |     `-TextComment 0x2ad51570 <col:37, col:94> Text=" constraint solver impedance: contact     (ngeom x mjNIMP)"
| |-FieldDecl 0x2ad171e8 <line:779:3, col:13> col:13 geom_size 'mjtNum *'
| | `-FullComment 0x2ad516a0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51670 <col:37, col:89>
| |     `-TextComment 0x2ad51640 <col:37, col:89> Text=" geom-specific size parameters            (ngeom x 3)"
| |-FieldDecl 0x2ad17278 <line:780:3, col:13> col:13 geom_aabb 'mjtNum *'
| | `-FullComment 0x2ad51770 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51740 <col:37, col:89>
| |     `-TextComment 0x2ad51710 <col:37, col:89> Text=" bounding box, (center, size)             (ngeom x 6)"
| |-FieldDecl 0x2ad17308 <line:781:3, col:13> col:13 geom_rbound 'mjtNum *'
| | `-FullComment 0x2ad51840 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51810 <col:37, col:89>
| |     `-TextComment 0x2ad517e0 <col:37, col:89> Text=" radius of bounding sphere                (ngeom x 1)"
| |-FieldDecl 0x2ad17398 <line:782:3, col:13> col:13 geom_pos 'mjtNum *'
| | `-FullComment 0x2ad51910 <col:37, col:89>
| |   `-ParagraphComment 0x2ad518e0 <col:37, col:89>
| |     `-TextComment 0x2ad518b0 <col:37, col:89> Text=" local position offset rel. to body       (ngeom x 3)"
| |-FieldDecl 0x2ad17428 <line:783:3, col:13> col:13 geom_quat 'mjtNum *'
| | `-FullComment 0x2ad519e0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad519b0 <col:37, col:89>
| |     `-TextComment 0x2ad51980 <col:37, col:89> Text=" local orientation offset rel. to body    (ngeom x 4)"
| |-FieldDecl 0x2ad174b8 <line:784:3, col:13> col:13 geom_friction 'mjtNum *'
| | `-FullComment 0x2ad51ab0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51a80 <col:37, col:89>
| |     `-TextComment 0x2ad51a50 <col:37, col:89> Text=" friction for (slide, spin, roll)         (ngeom x 3)"
| |-FieldDecl 0x2ad17548 <line:785:3, col:13> col:13 geom_margin 'mjtNum *'
| | `-FullComment 0x2ad51be0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51bb0 <col:37, col:89>
| |     |-TextComment 0x2ad51b30 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x2ad51b50 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x2ad51b70 <col:67, col:89> Text="            (ngeom x 1)"
| |-FieldDecl 0x2ad175d8 <line:786:3, col:13> col:13 geom_gap 'mjtNum *'
| | `-FullComment 0x2ad51d00 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51cd0 <col:37, col:89>
| |     |-TextComment 0x2ad51c50 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x2ad51c70 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x2ad51c90 <col:70, col:89> Text="-gap     (ngeom x 1)"
| |-FieldDecl 0x2ad17668 <line:787:3, col:13> col:13 geom_fluid 'mjtNum *'
| | `-FullComment 0x2ad51dd0 <col:37, col:96>
| |   `-ParagraphComment 0x2ad51da0 <col:37, col:96>
| |     `-TextComment 0x2ad51d70 <col:37, col:96> Text=" fluid interaction parameters             (ngeom x mjNFLUID)"
| |-FieldDecl 0x2ad176f8 <line:788:3, col:13> col:13 geom_user 'mjtNum *'
| | `-FullComment 0x2ad51ea0 <col:37, col:98>
| |   `-ParagraphComment 0x2ad51e70 <col:37, col:98>
| |     `-TextComment 0x2ad51e40 <col:37, col:98> Text=" user data                                (ngeom x nuser_geom)"
| |-FieldDecl 0x2ad177c0 <line:789:3, col:13> col:13 geom_rgba 'float *'
| | `-FullComment 0x2ad51f70 <col:37, col:89>
| |   `-ParagraphComment 0x2ad51f40 <col:37, col:89>
| |     `-TextComment 0x2ad51f10 <col:37, col:89> Text=" rgba when material is omitted            (ngeom x 4)"
| |-FieldDecl 0x2ad17880 <line:792:3, col:13> col:13 site_type 'int *'
| | `-FullComment 0x2ad52040 <col:37, col:89>
| |   `-ParagraphComment 0x2ad52010 <col:37, col:89>
| |     `-TextComment 0x2ad51fe0 <col:37, col:89> Text=" geom type for rendering (mjtGeom)        (nsite x 1)"
| |-FieldDecl 0x2ad1a0b0 <line:793:3, col:13> col:13 site_bodyid 'int *'
| | `-FullComment 0x2ad52110 <col:37, col:89>
| |   `-ParagraphComment 0x2ad520e0 <col:37, col:89>
| |     `-TextComment 0x2ad520b0 <col:37, col:89> Text=" id of site's body                        (nsite x 1)"
| |-FieldDecl 0x2ad1a140 <line:794:3, col:13> col:13 site_matid 'int *'
| | `-FullComment 0x2ad521e0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad521b0 <col:37, col:89>
| |     `-TextComment 0x2ad52180 <col:37, col:89> Text=" material id for rendering; -1: none      (nsite x 1)"
| |-FieldDecl 0x2ad1a1d0 <line:795:3, col:13> col:13 site_group 'int *'
| | `-FullComment 0x2ad522b0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad52280 <col:37, col:89>
| |     `-TextComment 0x2ad52250 <col:37, col:89> Text=" group for visibility                     (nsite x 1)"
| |-FieldDecl 0x2ad1a258 <line:796:3, col:13> col:13 site_sameframe 'mjtByte *'
| | `-FullComment 0x2ad52380 <col:37, col:89>
| |   `-ParagraphComment 0x2ad52350 <col:37, col:89>
| |     `-TextComment 0x2ad52320 <col:37, col:89> Text=" same frame as body (mjtSameframe)        (nsite x 1)"
| |-FieldDecl 0x2ad1a2e8 <line:797:3, col:13> col:13 site_size 'mjtNum *'
| | `-FullComment 0x2ad52450 <col:37, col:89>
| |   `-ParagraphComment 0x2ad52420 <col:37, col:89>
| |     `-TextComment 0x2ad523f0 <col:37, col:89> Text=" geom size for rendering                  (nsite x 3)"
| |-FieldDecl 0x2ad1a378 <line:798:3, col:13> col:13 site_pos 'mjtNum *'
| | `-FullComment 0x2ad52520 <col:37, col:89>
| |   `-ParagraphComment 0x2ad524f0 <col:37, col:89>
| |     `-TextComment 0x2ad524c0 <col:37, col:89> Text=" local position offset rel. to body       (nsite x 3)"
| |-FieldDecl 0x2ad1a408 <line:799:3, col:13> col:13 site_quat 'mjtNum *'
| | `-FullComment 0x2ad525f0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad525c0 <col:37, col:89>
| |     `-TextComment 0x2ad52590 <col:37, col:89> Text=" local orientation offset rel. to body    (nsite x 4)"
| |-FieldDecl 0x2ad1a498 <line:800:3, col:13> col:13 site_user 'mjtNum *'
| | `-FullComment 0x2ad526c0 <col:37, col:98>
| |   `-ParagraphComment 0x2ad52690 <col:37, col:98>
| |     `-TextComment 0x2ad52660 <col:37, col:98> Text=" user data                                (nsite x nuser_site)"
| |-FieldDecl 0x2ad1a530 <line:801:3, col:13> col:13 site_rgba 'float *'
| | `-FullComment 0x2ad52790 <col:37, col:89>
| |   `-ParagraphComment 0x2ad52760 <col:37, col:89>
| |     `-TextComment 0x2ad52730 <col:37, col:89> Text=" rgba when material is omitted            (nsite x 4)"
| |-FieldDecl 0x2ad1a5f0 <line:804:3, col:13> col:13 cam_mode 'int *'
| | `-FullComment 0x2ad52860 <col:37, col:88>
| |   `-ParagraphComment 0x2ad52830 <col:37, col:88>
| |     `-TextComment 0x2ad52800 <col:37, col:88> Text=" camera tracking mode (mjtCamLight)       (ncam x 1)"
| |-FieldDecl 0x2ad1a680 <line:805:3, col:13> col:13 cam_bodyid 'int *'
| | `-FullComment 0x2ad52930 <col:37, col:88>
| |   `-ParagraphComment 0x2ad52900 <col:37, col:88>
| |     `-TextComment 0x2ad528d0 <col:37, col:88> Text=" id of camera's body                      (ncam x 1)"
| |-FieldDecl 0x2ad1a710 <line:806:3, col:13> col:13 cam_targetbodyid 'int *'
| | `-FullComment 0x2ad52a00 <col:37, col:88>
| |   `-ParagraphComment 0x2ad529d0 <col:37, col:88>
| |     `-TextComment 0x2ad529a0 <col:37, col:88> Text=" id of targeted body; -1: none            (ncam x 1)"
| |-FieldDecl 0x2ad1a798 <line:807:3, col:13> col:13 cam_pos 'mjtNum *'
| | `-FullComment 0x2ad52b00 <col:37, col:88>
| |   `-ParagraphComment 0x2ad52aa0 <col:37, col:88>
| |     `-TextComment 0x2ad52a70 <col:37, col:88> Text=" position rel. to body frame              (ncam x 3)"
| |-FieldDecl 0x2ad1a828 <line:808:3, col:13> col:13 cam_quat 'mjtNum *'
| | `-FullComment 0x2ad52bd0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad52ba0 <col:37, col:88>
| |     `-TextComment 0x2ad52b70 <col:37, col:88> Text=" orientation rel. to body frame           (ncam x 4)"
| |-FieldDecl 0x2ad1a8b8 <line:809:3, col:13> col:13 cam_poscom0 'mjtNum *'
| | `-FullComment 0x2ad52ca0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad52c70 <col:37, col:88>
| |     `-TextComment 0x2ad52c40 <col:37, col:88> Text=" global position rel. to sub-com in qpos0 (ncam x 3)"
| |-FieldDecl 0x2ad1a948 <line:810:3, col:13> col:13 cam_pos0 'mjtNum *'
| | `-FullComment 0x2ad52d70 <col:37, col:88>
| |   `-ParagraphComment 0x2ad52d40 <col:37, col:88>
| |     `-TextComment 0x2ad52d10 <col:37, col:88> Text=" global position rel. to body in qpos0    (ncam x 3)"
| |-FieldDecl 0x2ad1a9d8 <line:811:3, col:13> col:13 cam_mat0 'mjtNum *'
| | `-FullComment 0x2ad52e40 <col:37, col:88>
| |   `-ParagraphComment 0x2ad52e10 <col:37, col:88>
| |     `-TextComment 0x2ad52de0 <col:37, col:88> Text=" global orientation in qpos0              (ncam x 9)"
| |-FieldDecl 0x2ad1aa70 <line:812:3, col:13> col:13 cam_orthographic 'int *'
| | `-FullComment 0x2ad52f10 <col:37, col:88>
| |   `-ParagraphComment 0x2ad52ee0 <col:37, col:88>
| |     `-TextComment 0x2ad52eb0 <col:37, col:88> Text=" orthographic camera; 0: no, 1: yes       (ncam x 1)"
| |-FieldDecl 0x2ad1aaf8 <line:813:3, col:13> col:13 cam_fovy 'mjtNum *'
| | `-FullComment 0x2ad52fe0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad52fb0 <col:37, col:88>
| |     `-TextComment 0x2ad52f80 <col:37, col:88> Text=" y field-of-view (ortho ? len : deg)      (ncam x 1)"
| |-FieldDecl 0x2ad1ab88 <line:814:3, col:13> col:13 cam_ipd 'mjtNum *'
| | `-FullComment 0x2ad530b0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad53080 <col:37, col:88>
| |     `-TextComment 0x2ad53050 <col:37, col:88> Text=" inter-pupilary distance                  (ncam x 1)"
| |-FieldDecl 0x2ad1ac20 <line:815:3, col:13> col:13 cam_resolution 'int *'
| | `-FullComment 0x2ad53180 <col:37, col:88>
| |   `-ParagraphComment 0x2ad53150 <col:37, col:88>
| |     `-TextComment 0x2ad53120 <col:37, col:88> Text=" resolution: pixels [width, height]       (ncam x 2)"
| |-FieldDecl 0x2ad1acb0 <line:816:3, col:13> col:13 cam_sensorsize 'float *'
| | `-FullComment 0x2ad53250 <col:37, col:88>
| |   `-ParagraphComment 0x2ad53220 <col:37, col:88>
| |     `-TextComment 0x2ad531f0 <col:37, col:88> Text=" sensor size: length [width, height]      (ncam x 2)"
| |-FieldDecl 0x2ad1ad40 <line:817:3, col:13> col:13 cam_intrinsic 'float *'
| | `-FullComment 0x2ad53320 <col:37, col:88>
| |   `-ParagraphComment 0x2ad532f0 <col:37, col:88>
| |     `-TextComment 0x2ad532c0 <col:37, col:88> Text=" [focal length; principal point]          (ncam x 4)"
| |-FieldDecl 0x2ad1adc8 <line:818:3, col:13> col:13 cam_user 'mjtNum *'
| | `-FullComment 0x2ad533f0 <col:37, col:96>
| |   `-ParagraphComment 0x2ad533c0 <col:37, col:96>
| |     `-TextComment 0x2ad53390 <col:37, col:96> Text=" user data                                (ncam x nuser_cam)"
| |-FieldDecl 0x2ad1ae90 <line:821:3, col:13> col:13 light_mode 'int *'
| | `-FullComment 0x2ad534c0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53490 <col:37, col:90>
| |     `-TextComment 0x2ad53460 <col:37, col:90> Text=" light tracking mode (mjtCamLight)        (nlight x 1)"
| |-FieldDecl 0x2ad1af20 <line:822:3, col:13> col:13 light_bodyid 'int *'
| | `-FullComment 0x2ad53590 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53560 <col:37, col:90>
| |     `-TextComment 0x2ad53530 <col:37, col:90> Text=" id of light's body                       (nlight x 1)"
| |-FieldDecl 0x2ad1afb0 <line:823:3, col:13> col:13 light_targetbodyid 'int *'
| | `-FullComment 0x2ad53660 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53630 <col:37, col:90>
| |     `-TextComment 0x2ad53600 <col:37, col:90> Text=" id of targeted body; -1: none            (nlight x 1)"
| |-FieldDecl 0x2ad1b038 <line:824:3, col:13> col:13 light_directional 'mjtByte *'
| | `-FullComment 0x2ad53730 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53700 <col:37, col:90>
| |     `-TextComment 0x2ad536d0 <col:37, col:90> Text=" directional light                        (nlight x 1)"
| |-FieldDecl 0x2ad1c588 <line:825:3, col:13> col:13 light_castshadow 'mjtByte *'
| | `-FullComment 0x2ad53800 <col:37, col:90>
| |   `-ParagraphComment 0x2ad537d0 <col:37, col:90>
| |     `-TextComment 0x2ad537a0 <col:37, col:90> Text=" does light cast shadows                  (nlight x 1)"
| |-FieldDecl 0x2ad1c620 <line:826:3, col:13> col:13 light_bulbradius 'float *'
| | `-FullComment 0x2ad538d0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad538a0 <col:37, col:90>
| |     `-TextComment 0x2ad53870 <col:37, col:90> Text=" light radius for soft shadows            (nlight x 1)"
| |-FieldDecl 0x2ad1c6a8 <line:827:3, col:13> col:13 light_active 'mjtByte *'
| | `-FullComment 0x2ad539a0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53970 <col:37, col:90>
| |     `-TextComment 0x2ad53940 <col:37, col:90> Text=" is light on                              (nlight x 1)"
| |-FieldDecl 0x2ad1c738 <line:828:3, col:13> col:13 light_pos 'mjtNum *'
| | `-FullComment 0x2ad53a70 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53a40 <col:37, col:90>
| |     `-TextComment 0x2ad53a10 <col:37, col:90> Text=" position rel. to body frame              (nlight x 3)"
| |-FieldDecl 0x2ad1c7c8 <line:829:3, col:13> col:13 light_dir 'mjtNum *'
| | `-FullComment 0x2ad53b50 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53b20 <col:37, col:90>
| |     `-TextComment 0x2ad53ae0 <col:37, col:90> Text=" direction rel. to body frame             (nlight x 3)"
| |-FieldDecl 0x2ad1c858 <line:830:3, col:13> col:13 light_poscom0 'mjtNum *'
| | `-FullComment 0x2ad53c20 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53bf0 <col:37, col:90>
| |     `-TextComment 0x2ad53bc0 <col:37, col:90> Text=" global position rel. to sub-com in qpos0 (nlight x 3)"
| |-FieldDecl 0x2ad1c8e8 <line:831:3, col:13> col:13 light_pos0 'mjtNum *'
| | `-FullComment 0x2ad53cf0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53cc0 <col:37, col:90>
| |     `-TextComment 0x2ad53c90 <col:37, col:90> Text=" global position rel. to body in qpos0    (nlight x 3)"
| |-FieldDecl 0x2ad1c978 <line:832:3, col:13> col:13 light_dir0 'mjtNum *'
| | `-FullComment 0x2ad53dc0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53d90 <col:37, col:90>
| |     `-TextComment 0x2ad53d60 <col:37, col:90> Text=" global direction in qpos0                (nlight x 3)"
| |-FieldDecl 0x2ad1ca10 <line:833:3, col:13> col:13 light_attenuation 'float *'
| | `-FullComment 0x2ad53e90 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53e60 <col:37, col:90>
| |     `-TextComment 0x2ad53e30 <col:37, col:90> Text=" OpenGL attenuation (quadratic model)     (nlight x 3)"
| |-FieldDecl 0x2ad1caa0 <line:834:3, col:13> col:13 light_cutoff 'float *'
| | `-FullComment 0x2ad53f60 <col:37, col:90>
| |   `-ParagraphComment 0x2ad53f30 <col:37, col:90>
| |     `-TextComment 0x2ad53f00 <col:37, col:90> Text=" OpenGL cutoff                            (nlight x 1)"
| |-FieldDecl 0x2ad1cb30 <line:835:3, col:13> col:13 light_exponent 'float *'
| | `-FullComment 0x2ad54030 <col:37, col:90>
| |   `-ParagraphComment 0x2ad54000 <col:37, col:90>
| |     `-TextComment 0x2ad53fd0 <col:37, col:90> Text=" OpenGL exponent                          (nlight x 1)"
| |-FieldDecl 0x2ad1cbc0 <line:836:3, col:13> col:13 light_ambient 'float *'
| | `-FullComment 0x2ad54100 <col:37, col:90>
| |   `-ParagraphComment 0x2ad540d0 <col:37, col:90>
| |     `-TextComment 0x2ad540a0 <col:37, col:90> Text=" ambient rgb (alpha=1)                    (nlight x 3)"
| |-FieldDecl 0x2ad1cc50 <line:837:3, col:13> col:13 light_diffuse 'float *'
| | `-FullComment 0x2ad541d0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad541a0 <col:37, col:90>
| |     `-TextComment 0x2ad54170 <col:37, col:90> Text=" diffuse rgb (alpha=1)                    (nlight x 3)"
| |-FieldDecl 0x2ad1cce0 <line:838:3, col:13> col:13 light_specular 'float *'
| | `-FullComment 0x2ad542a0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad54270 <col:37, col:90>
| |     `-TextComment 0x2ad54240 <col:37, col:90> Text=" specular rgb (alpha=1)                   (nlight x 3)"
| |-FieldDecl 0x2ad1cda0 <line:841:3, col:13> col:13 flex_contype 'int *'
| | `-FullComment 0x2ad54370 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54340 <col:37, col:89>
| |     `-TextComment 0x2ad54310 <col:37, col:89> Text=" flex contact type                        (nflex x 1)"
| |-FieldDecl 0x2ad1ce30 <line:842:3, col:13> col:13 flex_conaffinity 'int *'
| | `-FullComment 0x2ad54440 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54410 <col:37, col:89>
| |     `-TextComment 0x2ad543e0 <col:37, col:89> Text=" flex contact affinity                    (nflex x 1)"
| |-FieldDecl 0x2ad1cec0 <line:843:3, col:13> col:13 flex_condim 'int *'
| | `-FullComment 0x2ad54510 <col:37, col:89>
| |   `-ParagraphComment 0x2ad544e0 <col:37, col:89>
| |     `-TextComment 0x2ad544b0 <col:37, col:89> Text=" contact dimensionality (1, 3, 4, 6)      (nflex x 1)"
| |-FieldDecl 0x2ad1cf50 <line:844:3, col:13> col:13 flex_priority 'int *'
| | `-FullComment 0x2ad545e0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad545b0 <col:37, col:89>
| |     `-TextComment 0x2ad54580 <col:37, col:89> Text=" flex contact priority                    (nflex x 1)"
| |-FieldDecl 0x2ad1cfd8 <line:845:3, col:13> col:13 flex_solmix 'mjtNum *'
| | `-FullComment 0x2ad546b0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54680 <col:37, col:89>
| |     `-TextComment 0x2ad54650 <col:37, col:89> Text=" mix coef for solref/imp in contact pair  (nflex x 1)"
| |-FieldDecl 0x2ad1d068 <line:846:3, col:13> col:13 flex_solref 'mjtNum *'
| | `-FullComment 0x2ad54780 <col:37, col:94>
| |   `-ParagraphComment 0x2ad54750 <col:37, col:94>
| |     `-TextComment 0x2ad54720 <col:37, col:94> Text=" constraint solver reference: contact     (nflex x mjNREF)"
| |-FieldDecl 0x2ad1d0f8 <line:847:3, col:13> col:13 flex_solimp 'mjtNum *'
| | `-FullComment 0x2ad54850 <col:37, col:94>
| |   `-ParagraphComment 0x2ad54820 <col:37, col:94>
| |     `-TextComment 0x2ad547f0 <col:37, col:94> Text=" constraint solver impedance: contact     (nflex x mjNIMP)"
| |-FieldDecl 0x2ad1d188 <line:848:3, col:13> col:13 flex_friction 'mjtNum *'
| | `-FullComment 0x2ad54920 <col:37, col:89>
| |   `-ParagraphComment 0x2ad548f0 <col:37, col:89>
| |     `-TextComment 0x2ad548c0 <col:37, col:89> Text=" friction for (slide, spin, roll)         (nflex x 3)"
| |-FieldDecl 0x2ad1d218 <line:849:3, col:13> col:13 flex_margin 'mjtNum *'
| | `-FullComment 0x2ad54a40 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54a10 <col:37, col:89>
| |     |-TextComment 0x2ad54990 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x2ad549b0 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x2ad549d0 <col:67, col:89> Text="            (nflex x 1)"
| |-FieldDecl 0x2ad1d2a8 <line:850:3, col:13> col:13 flex_gap 'mjtNum *'
| | `-FullComment 0x2ad54b70 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54b40 <col:37, col:89>
| |     |-TextComment 0x2ad54ab0 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x2ad54ad0 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x2ad54af0 <col:70, col:89> Text="-gap     (nflex x 1)"
| |-FieldDecl 0x2ad1d338 <line:851:3, col:13> col:13 flex_internal 'mjtByte *'
| | `-FullComment 0x2ad54c40 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54c10 <col:37, col:89>
| |     `-TextComment 0x2ad54be0 <col:37, col:89> Text=" internal flex collision enabled          (nflex x 1)"
| |-FieldDecl 0x2ad1d3d0 <line:852:3, col:13> col:13 flex_selfcollide 'int *'
| | `-FullComment 0x2ad54d10 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54ce0 <col:37, col:89>
| |     `-TextComment 0x2ad54cb0 <col:37, col:89> Text=" self collision mode (mjtFlexSelf)        (nflex x 1)"
| |-FieldDecl 0x2ad1d460 <line:853:3, col:13> col:13 flex_activelayers 'int *'
| | `-FullComment 0x2ad54de0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54db0 <col:37, col:89>
| |     `-TextComment 0x2ad54d80 <col:37, col:89> Text=" number of active element layers, 3D only (nflex x 1)"
| |-FieldDecl 0x2ad1d7a0 <line:856:3, col:13> col:13 flex_dim 'int *'
| | `-FullComment 0x2ad54eb0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54e80 <col:37, col:89>
| |     `-TextComment 0x2ad54e50 <col:37, col:89> Text=" 1: lines, 2: triangles, 3: tetrahedra    (nflex x 1)"
| |-FieldDecl 0x2ad1d830 <line:857:3, col:13> col:13 flex_matid 'int *'
| | `-FullComment 0x2ad54f80 <col:37, col:89>
| |   `-ParagraphComment 0x2ad54f50 <col:37, col:89>
| |     `-TextComment 0x2ad54f20 <col:37, col:89> Text=" material id for rendering                (nflex x 1)"
| |-FieldDecl 0x2ad1d8c0 <line:858:3, col:13> col:13 flex_group 'int *'
| | `-FullComment 0x2ad55050 <col:37, col:89>
| |   `-ParagraphComment 0x2ad55020 <col:37, col:89>
| |     `-TextComment 0x2ad54ff0 <col:37, col:89> Text=" group for visibility                     (nflex x 1)"
| |-FieldDecl 0x2ad1d950 <line:859:3, col:13> col:13 flex_vertadr 'int *'
| | `-FullComment 0x2ad55120 <col:37, col:89>
| |   `-ParagraphComment 0x2ad550f0 <col:37, col:89>
| |     `-TextComment 0x2ad550c0 <col:37, col:89> Text=" first vertex address                     (nflex x 1)"
| |-FieldDecl 0x2ad1d9e0 <line:860:3, col:13> col:13 flex_vertnum 'int *'
| | `-FullComment 0x2ad551f0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad551c0 <col:37, col:89>
| |     `-TextComment 0x2ad55190 <col:37, col:89> Text=" number of vertices                       (nflex x 1)"
| |-FieldDecl 0x2ad1da70 <line:861:3, col:13> col:13 flex_edgeadr 'int *'
| | `-FullComment 0x2ad552c0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad55290 <col:37, col:89>
| |     `-TextComment 0x2ad55260 <col:37, col:89> Text=" first edge address                       (nflex x 1)"
| |-FieldDecl 0x2ad1db00 <line:862:3, col:13> col:13 flex_edgenum 'int *'
| | `-FullComment 0x2ad55390 <col:37, col:89>
| |   `-ParagraphComment 0x2ad55360 <col:37, col:89>
| |     `-TextComment 0x2ad55330 <col:37, col:89> Text=" number of edges                          (nflex x 1)"
| |-FieldDecl 0x2ad1db90 <line:863:3, col:13> col:13 flex_elemadr 'int *'
| | `-FullComment 0x2ad55460 <col:37, col:89>
| |   `-ParagraphComment 0x2ad55430 <col:37, col:89>
| |     `-TextComment 0x2ad55400 <col:37, col:89> Text=" first element address                    (nflex x 1)"
| |-FieldDecl 0x2ad1dc20 <line:864:3, col:13> col:13 flex_elemnum 'int *'
| | `-FullComment 0x2ad55530 <col:37, col:89>
| |   `-ParagraphComment 0x2ad55500 <col:37, col:89>
| |     `-TextComment 0x2ad554d0 <col:37, col:89> Text=" number of elements                       (nflex x 1)"
| |-FieldDecl 0x2ad1dcb0 <line:865:3, col:13> col:13 flex_elemdataadr 'int *'
| | `-FullComment 0x2ad55600 <col:37, col:89>
| |   `-ParagraphComment 0x2ad555d0 <col:37, col:89>
| |     `-TextComment 0x2ad555a0 <col:37, col:89> Text=" first element vertex id address          (nflex x 1)"
| |-FieldDecl 0x2ad1dd40 <line:866:3, col:13> col:13 flex_elemedgeadr 'int *'
| | `-FullComment 0x2ad556d0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad556a0 <col:37, col:89>
| |     `-TextComment 0x2ad55670 <col:37, col:89> Text=" first element edge id address            (nflex x 1)"
| |-FieldDecl 0x2ad1ddd0 <line:867:3, col:13> col:13 flex_shellnum 'int *'
| | `-FullComment 0x2ad557a0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad55770 <col:37, col:89>
| |     `-TextComment 0x2ad55740 <col:37, col:89> Text=" number of shells                         (nflex x 1)"
| |-FieldDecl 0x2ad1de60 <line:868:3, col:13> col:13 flex_shelldataadr 'int *'
| | `-FullComment 0x2ad55870 <col:37, col:89>
| |   `-ParagraphComment 0x2ad55840 <col:37, col:89>
| |     `-TextComment 0x2ad55810 <col:37, col:89> Text=" first shell data address                 (nflex x 1)"
| |-FieldDecl 0x2ad1def0 <line:869:3, col:13> col:13 flex_evpairadr 'int *'
| | `-FullComment 0x2ad55940 <col:37, col:89>
| |   `-ParagraphComment 0x2ad55910 <col:37, col:89>
| |     `-TextComment 0x2ad558e0 <col:37, col:89> Text=" first evpair address                     (nflex x 1)"
| |-FieldDecl 0x2ad1df80 <line:870:3, col:13> col:13 flex_evpairnum 'int *'
| | `-FullComment 0x2ad55a10 <col:37, col:89>
| |   `-ParagraphComment 0x2ad559e0 <col:37, col:89>
| |     `-TextComment 0x2ad559b0 <col:37, col:89> Text=" number of evpairs                        (nflex x 1)"
| |-FieldDecl 0x2ad1e010 <line:871:3, col:13> col:13 flex_texcoordadr 'int *'
| | `-FullComment 0x2ad55ae0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad55ab0 <col:37, col:89>
| |     `-TextComment 0x2ad55a80 <col:37, col:89> Text=" address in flex_texcoord; -1: none       (nflex x 1)"
| |-FieldDecl 0x2ad1e0a0 <line:872:3, col:13> col:13 flex_vertbodyid 'int *'
| | `-FullComment 0x2ad55bd0 <col:37, col:93>
| |   `-ParagraphComment 0x2ad55ba0 <col:37, col:93>
| |     `-TextComment 0x2ad55b70 <col:37, col:93> Text=" vertex body ids                          (nflexvert x 1)"
| |-FieldDecl 0x2ad1e130 <line:873:3, col:13> col:13 flex_edge 'int *'
| | `-FullComment 0x2ad55ca0 <col:37, col:93>
| |   `-ParagraphComment 0x2ad55c70 <col:37, col:93>
| |     `-TextComment 0x2ad55c40 <col:37, col:93> Text=" edge vertex ids (2 per edge)             (nflexedge x 2)"
| |-FieldDecl 0x2ad1e1c0 <line:874:3, col:13> col:13 flex_elem 'int *'
| | `-FullComment 0x2ad55d70 <col:37, col:97>
| |   `-ParagraphComment 0x2ad55d40 <col:37, col:97>
| |     `-TextComment 0x2ad55d10 <col:37, col:97> Text=" element vertex ids (dim+1 per elem)      (nflexelemdata x 1)"
| |-FieldDecl 0x2ad1e250 <line:875:3, col:13> col:13 flex_elemedge 'int *'
| | `-FullComment 0x2ad55e40 <col:37, col:97>
| |   `-ParagraphComment 0x2ad55e10 <col:37, col:97>
| |     `-TextComment 0x2ad55de0 <col:37, col:97> Text=" element edge ids                         (nflexelemedge x 1)"
| |-FieldDecl 0x2ad1e2e0 <line:876:3, col:13> col:13 flex_elemlayer 'int *'
| | `-FullComment 0x2ad55f10 <col:37, col:93>
| |   `-ParagraphComment 0x2ad55ee0 <col:37, col:93>
| |     `-TextComment 0x2ad55eb0 <col:37, col:93> Text=" element distance from surface, 3D only   (nflexelem x 1)"
| |-FieldDecl 0x2ad1e370 <line:877:3, col:13> col:13 flex_shell 'int *'
| | `-FullComment 0x2ad55fe0 <col:37, col:98>
| |   `-ParagraphComment 0x2ad55fb0 <col:37, col:98>
| |     `-TextComment 0x2ad55f80 <col:37, col:98> Text=" shell fragment vertex ids (dim per frag) (nflexshelldata x 1)"
| |-FieldDecl 0x2ad1e400 <line:878:3, col:13> col:13 flex_evpair 'int *'
| | `-FullComment 0x2ad560b0 <col:37, col:95>
| |   `-ParagraphComment 0x2ad56080 <col:37, col:95>
| |     `-TextComment 0x2ad56050 <col:37, col:95> Text=" (element, vertex) collision pairs        (nflexevpair x 2)"
| |-FieldDecl 0x2ad1e488 <line:879:3, col:13> col:13 flex_vert 'mjtNum *'
| | `-FullComment 0x2ad56180 <col:37, col:93>
| |   `-ParagraphComment 0x2ad56150 <col:37, col:93>
| |     `-TextComment 0x2ad56120 <col:37, col:93> Text=" vertex positions in local body frames    (nflexvert x 3)"
| |-FieldDecl 0x2ad1e518 <line:880:3, col:13> col:13 flex_xvert0 'mjtNum *'
| | `-FullComment 0x2ad56250 <col:37, col:93>
| |   `-ParagraphComment 0x2ad56220 <col:37, col:93>
| |     `-TextComment 0x2ad561f0 <col:37, col:93> Text=" Cartesian vertex positions in qpos0      (nflexvert x 3)"
| |-FieldDecl 0x2ad1e5a8 <line:881:3, col:13> col:13 flexedge_length0 'mjtNum *'
| | `-FullComment 0x2ad56320 <col:37, col:93>
| |   `-ParagraphComment 0x2ad562f0 <col:37, col:93>
| |     `-TextComment 0x2ad562c0 <col:37, col:93> Text=" edge lengths in qpos0                    (nflexedge x 1)"
| |-FieldDecl 0x2ad1e638 <line:882:3, col:13> col:13 flexedge_invweight0 'mjtNum *'
| | `-FullComment 0x2ad563f0 <col:37, col:93>
| |   `-ParagraphComment 0x2ad563c0 <col:37, col:93>
| |     `-TextComment 0x2ad56390 <col:37, col:93> Text=" edge inv. weight in qpos0                (nflexedge x 1)"
| |-FieldDecl 0x2ad1e6c8 <line:883:3, col:13> col:13 flex_radius 'mjtNum *'
| | `-FullComment 0x2ad564c0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad56490 <col:37, col:89>
| |     `-TextComment 0x2ad56460 <col:37, col:89> Text=" radius around primitive element          (nflex x 1)"
| |-FieldDecl 0x2ad1eeb0 <line:884:3, col:13> col:13 flex_stiffness 'mjtNum *'
| | `-FullComment 0x2ad56590 <col:37, col:94>
| |   `-ParagraphComment 0x2ad56560 <col:37, col:94>
| |     `-TextComment 0x2ad56530 <col:37, col:94> Text=" finite element stiffness matrix          (nflexelem x 21)"
| |-FieldDecl 0x2ad1ef38 <line:885:3, col:13> col:13 flex_damping 'mjtNum *'
| | `-FullComment 0x2ad56660 <col:37, col:89>
| |   `-ParagraphComment 0x2ad56630 <col:37, col:89>
| |     `-TextComment 0x2ad56600 <col:37, col:89> Text=" Rayleigh's damping coefficient           (nflex x 1)"
| |-FieldDecl 0x2ad1efc8 <line:886:3, col:13> col:13 flex_edgestiffness 'mjtNum *'
| | `-FullComment 0x2ad56730 <col:37, col:89>
| |   `-ParagraphComment 0x2ad56700 <col:37, col:89>
| |     `-TextComment 0x2ad566d0 <col:37, col:89> Text=" edge stiffness                           (nflex x 1)"
| |-FieldDecl 0x2ad1f058 <line:887:3, col:13> col:13 flex_edgedamping 'mjtNum *'
| | `-FullComment 0x2ad56800 <col:37, col:89>
| |   `-ParagraphComment 0x2ad567d0 <col:37, col:89>
| |     `-TextComment 0x2ad567a0 <col:37, col:89> Text=" edge damping                             (nflex x 1)"
| |-FieldDecl 0x2ad1f0e8 <line:888:3, col:13> col:13 flex_edgeequality 'mjtByte *'
| | `-FullComment 0x2ad568d0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad568a0 <col:37, col:89>
| |     `-TextComment 0x2ad56870 <col:37, col:89> Text=" is edge equality constraint defined      (nflex x 1)"
| |-FieldDecl 0x2ad1f178 <line:889:3, col:13> col:13 flex_rigid 'mjtByte *'
| | `-FullComment 0x2ad569a0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad56970 <col:37, col:89>
| |     `-TextComment 0x2ad56940 <col:37, col:89> Text=" are all verices in the same body         (nflex x 1)"
| |-FieldDecl 0x2ad1f208 <line:890:3, col:13> col:13 flexedge_rigid 'mjtByte *'
| | `-FullComment 0x2ad56a70 <col:37, col:93>
| |   `-ParagraphComment 0x2ad56a40 <col:37, col:93>
| |     `-TextComment 0x2ad56a10 <col:37, col:93> Text=" are both edge vertices in same body      (nflexedge x 1)"
| |-FieldDecl 0x2ad1f298 <line:891:3, col:13> col:13 flex_centered 'mjtByte *'
| | `-FullComment 0x2ad56b50 <col:37, col:89>
| |   `-ParagraphComment 0x2ad56b10 <col:37, col:89>
| |     `-TextComment 0x2ad56ae0 <col:37, col:89> Text=" are all vertex coordinates (0,0,0)       (nflex x 1)"
| |-FieldDecl 0x2ad1f328 <line:892:3, col:13> col:13 flex_flatskin 'mjtByte *'
| | `-FullComment 0x2ad56c20 <col:37, col:89>
| |   `-ParagraphComment 0x2ad56bf0 <col:37, col:89>
| |     `-TextComment 0x2ad56bc0 <col:37, col:89> Text=" render flex skin with flat shading       (nflex x 1)"
| |-FieldDecl 0x2ad1f3c0 <line:893:3, col:13> col:13 flex_bvhadr 'int *'
| | `-FullComment 0x2ad56cf0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad56cc0 <col:37, col:89>
| |     `-TextComment 0x2ad56c90 <col:37, col:89> Text=" address of bvh root; -1: no bvh          (nflex x 1)"
| |-FieldDecl 0x2ad1f450 <line:894:3, col:13> col:13 flex_bvhnum 'int *'
| | `-FullComment 0x2ad56dc0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad56d90 <col:37, col:89>
| |     `-TextComment 0x2ad56d60 <col:37, col:89> Text=" number of bounding volumes               (nflex x 1)"
| |-FieldDecl 0x2ad1f4e0 <line:895:3, col:13> col:13 flex_rgba 'float *'
| | `-FullComment 0x2ad56e90 <col:37, col:89>
| |   `-ParagraphComment 0x2ad56e60 <col:37, col:89>
| |     `-TextComment 0x2ad56e30 <col:37, col:89> Text=" rgba when material is omitted            (nflex x 4)"
| |-FieldDecl 0x2ad1f570 <line:896:3, col:13> col:13 flex_texcoord 'float *'
| | `-FullComment 0x2ad56f60 <col:37, col:97>
| |   `-ParagraphComment 0x2ad56f30 <col:37, col:97>
| |     `-TextComment 0x2ad56f00 <col:37, col:97> Text=" vertex texture coordinates               (nflextexcoord x 2)"
| |-FieldDecl 0x2ad1f630 <line:899:3, col:13> col:13 mesh_vertadr 'int *'
| | `-FullComment 0x2ad57030 <col:37, col:89>
| |   `-ParagraphComment 0x2ad57000 <col:37, col:89>
| |     `-TextComment 0x2ad56fd0 <col:37, col:89> Text=" first vertex address                     (nmesh x 1)"
| |-FieldDecl 0x2ad1f6c0 <line:900:3, col:13> col:13 mesh_vertnum 'int *'
| | `-FullComment 0x2ad57100 <col:37, col:89>
| |   `-ParagraphComment 0x2ad570d0 <col:37, col:89>
| |     `-TextComment 0x2ad570a0 <col:37, col:89> Text=" number of vertices                       (nmesh x 1)"
| |-FieldDecl 0x2ad1f750 <line:901:3, col:13> col:13 mesh_faceadr 'int *'
| | `-FullComment 0x2ad571d0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad571a0 <col:37, col:89>
| |     `-TextComment 0x2ad57170 <col:37, col:89> Text=" first face address                       (nmesh x 1)"
| |-FieldDecl 0x2ad1f7e0 <line:902:3, col:13> col:13 mesh_facenum 'int *'
| | `-FullComment 0x2ad572a0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad57270 <col:37, col:89>
| |     `-TextComment 0x2ad57240 <col:37, col:89> Text=" number of faces                          (nmesh x 1)"
| |-FieldDecl 0x2ad1f870 <line:903:3, col:13> col:13 mesh_bvhadr 'int *'
| | `-FullComment 0x2ad57370 <col:37, col:89>
| |   `-ParagraphComment 0x2ad57340 <col:37, col:89>
| |     `-TextComment 0x2ad57310 <col:37, col:89> Text=" address of bvh root                      (nmesh x 1)"
| |-FieldDecl 0x2ad1f900 <line:904:3, col:13> col:13 mesh_bvhnum 'int *'
| | `-FullComment 0x2ad57440 <col:37, col:89>
| |   `-ParagraphComment 0x2ad57410 <col:37, col:89>
| |     `-TextComment 0x2ad573e0 <col:37, col:89> Text=" number of bvh                            (nmesh x 1)"
| |-FieldDecl 0x2ad1f990 <line:905:3, col:13> col:13 mesh_normaladr 'int *'
| | `-FullComment 0x2ad57510 <col:37, col:89>
| |   `-ParagraphComment 0x2ad574e0 <col:37, col:89>
| |     `-TextComment 0x2ad574b0 <col:37, col:89> Text=" first normal address                     (nmesh x 1)"
| |-FieldDecl 0x2ad1fa20 <line:906:3, col:13> col:13 mesh_normalnum 'int *'
| | `-FullComment 0x2ad575e0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad575b0 <col:37, col:89>
| |     `-TextComment 0x2ad57580 <col:37, col:89> Text=" number of normals                        (nmesh x 1)"
| |-FieldDecl 0x2ad1fab0 <line:907:3, col:13> col:13 mesh_texcoordadr 'int *'
| | `-FullComment 0x2ad576b0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad57680 <col:37, col:89>
| |     `-TextComment 0x2ad57650 <col:37, col:89> Text=" texcoord data address; -1: no texcoord   (nmesh x 1)"
| |-FieldDecl 0x2ad1fb40 <line:908:3, col:13> col:13 mesh_texcoordnum 'int *'
| | `-FullComment 0x2ad57780 <col:37, col:89>
| |   `-ParagraphComment 0x2ad57750 <col:37, col:89>
| |     `-TextComment 0x2ad57720 <col:37, col:89> Text=" number of texcoord                       (nmesh x 1)"
| |-FieldDecl 0x2ad1fbd0 <line:909:3, col:13> col:13 mesh_graphadr 'int *'
| | `-FullComment 0x2ad57850 <col:37, col:89>
| |   `-ParagraphComment 0x2ad57820 <col:37, col:89>
| |     `-TextComment 0x2ad577f0 <col:37, col:89> Text=" graph data address; -1: no graph         (nmesh x 1)"
| |-FieldDecl 0x2ad1fc60 <line:910:3, col:13> col:13 mesh_vert 'float *'
| | `-FullComment 0x2ad57920 <col:37, col:93>
| |   `-ParagraphComment 0x2ad578f0 <col:37, col:93>
| |     `-TextComment 0x2ad578c0 <col:37, col:93> Text=" vertex positions for all meshes          (nmeshvert x 3)"
| |-FieldDecl 0x2ad1fcf0 <line:911:3, col:13> col:13 mesh_normal 'float *'
| | `-FullComment 0x2ad579f0 <col:37, col:95>
| |   `-ParagraphComment 0x2ad579c0 <col:37, col:95>
| |     `-TextComment 0x2ad57990 <col:37, col:95> Text=" normals for all meshes                   (nmeshnormal x 3)"
| |-FieldDecl 0x2ad1fd80 <line:912:3, col:13> col:13 mesh_texcoord 'float *'
| | `-FullComment 0x2ad57ac0 <col:37, col:97>
| |   `-ParagraphComment 0x2ad57a90 <col:37, col:97>
| |     `-TextComment 0x2ad57a60 <col:37, col:97> Text=" vertex texcoords for all meshes          (nmeshtexcoord x 2)"
| |-FieldDecl 0x2ad1fe10 <line:913:3, col:13> col:13 mesh_face 'int *'
| | `-FullComment 0x2ad57bb0 <col:37, col:93>
| |   `-ParagraphComment 0x2ad57b80 <col:37, col:93>
| |     `-TextComment 0x2ad57b50 <col:37, col:93> Text=" vertex face data                         (nmeshface x 3)"
| |-FieldDecl 0x2ad20600 <line:914:3, col:13> col:13 mesh_facenormal 'int *'
| | `-FullComment 0x2ad57c80 <col:37, col:93>
| |   `-ParagraphComment 0x2ad57c50 <col:37, col:93>
| |     `-TextComment 0x2ad57c20 <col:37, col:93> Text=" normal face data                         (nmeshface x 3)"
| |-FieldDecl 0x2ad20690 <line:915:3, col:13> col:13 mesh_facetexcoord 'int *'
| | `-FullComment 0x2ad57d50 <col:37, col:93>
| |   `-ParagraphComment 0x2ad57d20 <col:37, col:93>
| |     `-TextComment 0x2ad57cf0 <col:37, col:93> Text=" texture face data                        (nmeshface x 3)"
| |-FieldDecl 0x2ad20720 <line:916:3, col:13> col:13 mesh_graph 'int *'
| | `-FullComment 0x2ad57e20 <col:37, col:94>
| |   `-ParagraphComment 0x2ad57df0 <col:37, col:94>
| |     `-TextComment 0x2ad57dc0 <col:37, col:94> Text=" convex graph data                        (nmeshgraph x 1)"
| |-FieldDecl 0x2ad207a8 <line:917:3, col:13> col:13 mesh_scale 'mjtNum *'
| | `-FullComment 0x2ad57ef0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad57ec0 <col:37, col:89>
| |     `-TextComment 0x2ad57e90 <col:37, col:89> Text=" scaling applied to asset vertices        (nmesh x 3)"
| |-FieldDecl 0x2ad20838 <line:918:3, col:13> col:13 mesh_pos 'mjtNum *'
| | `-FullComment 0x2ad57fc0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad57f90 <col:37, col:89>
| |     `-TextComment 0x2ad57f60 <col:37, col:89> Text=" translation applied to asset vertices    (nmesh x 3)"
| |-FieldDecl 0x2ad208c8 <line:919:3, col:13> col:13 mesh_quat 'mjtNum *'
| | `-FullComment 0x2ad58090 <col:37, col:89>
| |   `-ParagraphComment 0x2ad58060 <col:37, col:89>
| |     `-TextComment 0x2ad58030 <col:37, col:89> Text=" rotation applied to asset vertices       (nmesh x 4)"
| |-FieldDecl 0x2ad20960 <line:920:3, col:13> col:13 mesh_pathadr 'int *'
| | `-FullComment 0x2ad58160 <col:37, col:89>
| |   `-ParagraphComment 0x2ad58130 <col:37, col:89>
| |     `-TextComment 0x2ad58100 <col:37, col:89> Text=" address of asset path for mesh; -1: none (nmesh x 1)"
| |-FieldDecl 0x2ad20a20 <line:923:3, col:13> col:13 skin_matid 'int *'
| | `-FullComment 0x2ad58230 <col:37, col:89>
| |   `-ParagraphComment 0x2ad58200 <col:37, col:89>
| |     `-TextComment 0x2ad581d0 <col:37, col:89> Text=" skin material id; -1: none               (nskin x 1)"
| |-FieldDecl 0x2ad20ab0 <line:924:3, col:13> col:13 skin_group 'int *'
| | `-FullComment 0x2ad58300 <col:37, col:89>
| |   `-ParagraphComment 0x2ad582d0 <col:37, col:89>
| |     `-TextComment 0x2ad582a0 <col:37, col:89> Text=" group for visibility                     (nskin x 1)"
| |-FieldDecl 0x2ad20b40 <line:925:3, col:13> col:13 skin_rgba 'float *'
| | `-FullComment 0x2ad583d0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad583a0 <col:37, col:89>
| |     `-TextComment 0x2ad58370 <col:37, col:89> Text=" skin rgba                                (nskin x 4)"
| |-FieldDecl 0x2ad20bd0 <line:926:3, col:13> col:13 skin_inflate 'float *'
| | `-FullComment 0x2ad584a0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad58470 <col:37, col:89>
| |     `-TextComment 0x2ad58440 <col:37, col:89> Text=" inflate skin in normal direction         (nskin x 1)"
| |-FieldDecl 0x2ad20c60 <line:927:3, col:13> col:13 skin_vertadr 'int *'
| | `-FullComment 0x2ad58570 <col:37, col:89>
| |   `-ParagraphComment 0x2ad58540 <col:37, col:89>
| |     `-TextComment 0x2ad58510 <col:37, col:89> Text=" first vertex address                     (nskin x 1)"
| |-FieldDecl 0x2ad20cf0 <line:928:3, col:13> col:13 skin_vertnum 'int *'
| | `-FullComment 0x2ad58640 <col:37, col:89>
| |   `-ParagraphComment 0x2ad58610 <col:37, col:89>
| |     `-TextComment 0x2ad585e0 <col:37, col:89> Text=" number of vertices                       (nskin x 1)"
| |-FieldDecl 0x2ad20d80 <line:929:3, col:13> col:13 skin_texcoordadr 'int *'
| | `-FullComment 0x2ad58710 <col:37, col:89>
| |   `-ParagraphComment 0x2ad586e0 <col:37, col:89>
| |     `-TextComment 0x2ad586b0 <col:37, col:89> Text=" texcoord data address; -1: no texcoord   (nskin x 1)"
| |-FieldDecl 0x2ad20e10 <line:930:3, col:13> col:13 skin_faceadr 'int *'
| | `-FullComment 0x2ad587e0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad587b0 <col:37, col:89>
| |     `-TextComment 0x2ad58780 <col:37, col:89> Text=" first face address                       (nskin x 1)"
| |-FieldDecl 0x2ad20ea0 <line:931:3, col:13> col:13 skin_facenum 'int *'
| | `-FullComment 0x2ad588b0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad58880 <col:37, col:89>
| |     `-TextComment 0x2ad58850 <col:37, col:89> Text=" number of faces                          (nskin x 1)"
| |-FieldDecl 0x2ad20f30 <line:932:3, col:13> col:13 skin_boneadr 'int *'
| | `-FullComment 0x2ad58980 <col:37, col:89>
| |   `-ParagraphComment 0x2ad58950 <col:37, col:89>
| |     `-TextComment 0x2ad58920 <col:37, col:89> Text=" first bone in skin                       (nskin x 1)"
| |-FieldDecl 0x2ad20fc0 <line:933:3, col:13> col:13 skin_bonenum 'int *'
| | `-FullComment 0x2ad58a50 <col:37, col:89>
| |   `-ParagraphComment 0x2ad58a20 <col:37, col:89>
| |     `-TextComment 0x2ad589f0 <col:37, col:89> Text=" number of bones in skin                  (nskin x 1)"
| |-FieldDecl 0x2ad21050 <line:934:3, col:13> col:13 skin_vert 'float *'
| | `-FullComment 0x2ad58b20 <col:37, col:93>
| |   `-ParagraphComment 0x2ad58af0 <col:37, col:93>
| |     `-TextComment 0x2ad58ac0 <col:37, col:93> Text=" vertex positions for all skin meshes     (nskinvert x 3)"
| |-FieldDecl 0x2ad210e0 <line:935:3, col:13> col:13 skin_texcoord 'float *'
| | `-FullComment 0x2ad58c00 <col:37, col:96>
| |   `-ParagraphComment 0x2ad58bd0 <col:37, col:96>
| |     `-TextComment 0x2ad58ba0 <col:37, col:96> Text=" vertex texcoords for all skin meshes     (nskintexvert x 2)"
| |-FieldDecl 0x2ad21170 <line:936:3, col:13> col:13 skin_face 'int *'
| | `-FullComment 0x2ad58cd0 <col:37, col:93>
| |   `-ParagraphComment 0x2ad58ca0 <col:37, col:93>
| |     `-TextComment 0x2ad58c70 <col:37, col:93> Text=" triangle faces for all skin meshes       (nskinface x 3)"
| |-FieldDecl 0x2ad21200 <line:937:3, col:13> col:13 skin_bonevertadr 'int *'
| | `-FullComment 0x2ad58da0 <col:37, col:93>
| |   `-ParagraphComment 0x2ad58d70 <col:37, col:93>
| |     `-TextComment 0x2ad58d40 <col:37, col:93> Text=" first vertex in each bone                (nskinbone x 1)"
| |-FieldDecl 0x2ad21290 <line:938:3, col:13> col:13 skin_bonevertnum 'int *'
| | `-FullComment 0x2ad58e70 <col:37, col:93>
| |   `-ParagraphComment 0x2ad58e40 <col:37, col:93>
| |     `-TextComment 0x2ad58e10 <col:37, col:93> Text=" number of vertices in each bone          (nskinbone x 1)"
| |-FieldDecl 0x2ad21320 <line:939:3, col:13> col:13 skin_bonebindpos 'float *'
| | `-FullComment 0x2ad58f40 <col:37, col:93>
| |   `-ParagraphComment 0x2ad58f10 <col:37, col:93>
| |     `-TextComment 0x2ad58ee0 <col:37, col:93> Text=" bind pos of each bone                    (nskinbone x 3)"
| |-FieldDecl 0x2ad213b0 <line:940:3, col:13> col:13 skin_bonebindquat 'float *'
| | `-FullComment 0x2ad59010 <col:37, col:93>
| |   `-ParagraphComment 0x2ad58fe0 <col:37, col:93>
| |     `-TextComment 0x2ad58fb0 <col:37, col:93> Text=" bind quat of each bone                   (nskinbone x 4)"
| |-FieldDecl 0x2ad21440 <line:941:3, col:13> col:13 skin_bonebodyid 'int *'
| | `-FullComment 0x2ad590e0 <col:37, col:93>
| |   `-ParagraphComment 0x2ad590b0 <col:37, col:93>
| |     `-TextComment 0x2ad59080 <col:37, col:93> Text=" body id of each bone                     (nskinbone x 1)"
| |-FieldDecl 0x2ad214d0 <line:942:3, col:13> col:13 skin_bonevertid 'int *'
| | `-FullComment 0x2ad591b0 <col:37, col:97>
| |   `-ParagraphComment 0x2ad59180 <col:37, col:97>
| |     `-TextComment 0x2ad59150 <col:37, col:97> Text=" mesh ids of vertices in each bone        (nskinbonevert x 1)"
| |-FieldDecl 0x2ad21560 <line:943:3, col:13> col:13 skin_bonevertweight 'float *'
| | `-FullComment 0x2ad59280 <col:37, col:97>
| |   `-ParagraphComment 0x2ad59250 <col:37, col:97>
| |     `-TextComment 0x2ad59220 <col:37, col:97> Text=" weights of vertices in each bone         (nskinbonevert x 1)"
| |-FieldDecl 0x2ad23d60 <line:944:3, col:13> col:13 skin_pathadr 'int *'
| | `-FullComment 0x2ad59350 <col:37, col:89>
| |   `-ParagraphComment 0x2ad59320 <col:37, col:89>
| |     `-TextComment 0x2ad592f0 <col:37, col:89> Text=" address of asset path for skin; -1: none (nskin x 1)"
| |-FieldDecl 0x2ad23e18 <line:947:3, col:13> col:13 hfield_size 'mjtNum *'
| | `-FullComment 0x2ad59420 <col:37, col:91>
| |   `-ParagraphComment 0x2ad593f0 <col:37, col:91>
| |     `-TextComment 0x2ad593c0 <col:37, col:91> Text=" (x, y, z_top, z_bottom)                  (nhfield x 4)"
| |-FieldDecl 0x2ad23eb0 <line:948:3, col:13> col:13 hfield_nrow 'int *'
| | `-FullComment 0x2ad594f0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad594c0 <col:37, col:91>
| |     `-TextComment 0x2ad59490 <col:37, col:91> Text=" number of rows in grid                   (nhfield x 1)"
| |-FieldDecl 0x2ad23f40 <line:949:3, col:13> col:13 hfield_ncol 'int *'
| | `-FullComment 0x2ad595c0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad59590 <col:37, col:91>
| |     `-TextComment 0x2ad59560 <col:37, col:91> Text=" number of columns in grid                (nhfield x 1)"
| |-FieldDecl 0x2ad23fd0 <line:950:3, col:13> col:13 hfield_adr 'int *'
| | `-FullComment 0x2ad59690 <col:37, col:91>
| |   `-ParagraphComment 0x2ad59660 <col:37, col:91>
| |     `-TextComment 0x2ad59630 <col:37, col:91> Text=" address in hfield_data                   (nhfield x 1)"
| |-FieldDecl 0x2ad24060 <line:951:3, col:13> col:13 hfield_data 'float *'
| | `-FullComment 0x2ad59760 <col:37, col:95>
| |   `-ParagraphComment 0x2ad59730 <col:37, col:95>
| |     `-TextComment 0x2ad59700 <col:37, col:95> Text=" elevation data                           (nhfielddata x 1)"
| |-FieldDecl 0x2ad240f0 <line:952:3, col:13> col:13 hfield_pathadr 'int *'
| | `-FullComment 0x2ad59830 <col:37, col:91>
| |   `-ParagraphComment 0x2ad59800 <col:37, col:91>
| |     `-TextComment 0x2ad597d0 <col:37, col:91> Text=" address of hfield asset path; -1: none   (nhfield x 1)"
| |-FieldDecl 0x2ad241b0 <line:955:3, col:13> col:13 tex_type 'int *'
| | `-FullComment 0x2ad59900 <col:37, col:88>
| |   `-ParagraphComment 0x2ad598d0 <col:37, col:88>
| |     `-TextComment 0x2ad598a0 <col:37, col:88> Text=" texture type (mjtTexture)                (ntex x 1)"
| |-FieldDecl 0x2ad24240 <line:956:3, col:13> col:13 tex_height 'int *'
| | `-FullComment 0x2ad599d0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad599a0 <col:37, col:88>
| |     `-TextComment 0x2ad59970 <col:37, col:88> Text=" number of rows in texture image          (ntex x 1)"
| |-FieldDecl 0x2ad242d0 <line:957:3, col:13> col:13 tex_width 'int *'
| | `-FullComment 0x2ad59aa0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad59a70 <col:37, col:88>
| |     `-TextComment 0x2ad59a40 <col:37, col:88> Text=" number of columns in texture image       (ntex x 1)"
| |-FieldDecl 0x2ad24360 <line:958:3, col:13> col:13 tex_nchannel 'int *'
| | `-FullComment 0x2ad59b80 <col:37, col:88>
| |   `-ParagraphComment 0x2ad59b40 <col:37, col:88>
| |     `-TextComment 0x2ad59b10 <col:37, col:88> Text=" number of channels in texture image      (ntex x 1)"
| |-FieldDecl 0x2ad243f0 <line:959:3, col:13> col:13 tex_adr 'int *'
| | `-FullComment 0x2ad59c50 <col:37, col:88>
| |   `-ParagraphComment 0x2ad59c20 <col:37, col:88>
| |     `-TextComment 0x2ad59bf0 <col:37, col:88> Text=" start address in tex_data                (ntex x 1)"
| |-FieldDecl 0x2ad24478 <line:960:3, col:13> col:13 tex_data 'mjtByte *'
| | `-FullComment 0x2ad59d20 <col:37, col:92>
| |   `-ParagraphComment 0x2ad59cf0 <col:37, col:92>
| |     `-TextComment 0x2ad59cc0 <col:37, col:92> Text=" pixel values                             (ntexdata x 1)"
| |-FieldDecl 0x2ad24510 <line:961:3, col:13> col:13 tex_pathadr 'int *'
| | `-FullComment 0x2ad59df0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad59dc0 <col:37, col:88>
| |     `-TextComment 0x2ad59d90 <col:37, col:88> Text=" address of texture asset path; -1: none  (ntex x 1)"
| |-FieldDecl 0x2ad245d0 <line:964:3, col:13> col:13 mat_texid 'int *'
| | `-FullComment 0x2ad59ec0 <col:37, col:97>
| |   `-ParagraphComment 0x2ad59e90 <col:37, col:97>
| |     `-TextComment 0x2ad59e60 <col:37, col:97> Text=" indices of textures; -1: none            (nmat x mjNTEXROLE)"
| |-FieldDecl 0x2ad24658 <line:965:3, col:13> col:13 mat_texuniform 'mjtByte *'
| | `-FullComment 0x2ad59f90 <col:37, col:88>
| |   `-ParagraphComment 0x2ad59f60 <col:37, col:88>
| |     `-TextComment 0x2ad59f30 <col:37, col:88> Text=" make texture cube uniform                (nmat x 1)"
| |-FieldDecl 0x2ad246f0 <line:966:3, col:13> col:13 mat_texrepeat 'float *'
| | `-FullComment 0x2ad5a060 <col:37, col:88>
| |   `-ParagraphComment 0x2ad5a030 <col:37, col:88>
| |     `-TextComment 0x2ad5a000 <col:37, col:88> Text=" texture repetition for 2d mapping        (nmat x 2)"
| |-FieldDecl 0x2ad24780 <line:967:3, col:13> col:13 mat_emission 'float *'
| | `-FullComment 0x2ad5a130 <col:37, col:88>
| |   `-ParagraphComment 0x2ad5a100 <col:37, col:88>
| |     `-TextComment 0x2ad5a0d0 <col:37, col:88> Text=" emission (x rgb)                         (nmat x 1)"
| |-FieldDecl 0x2ad24810 <line:968:3, col:13> col:13 mat_specular 'float *'
| | `-FullComment 0x2ad5a200 <col:37, col:88>
| |   `-ParagraphComment 0x2ad5a1d0 <col:37, col:88>
| |     `-TextComment 0x2ad5a1a0 <col:37, col:88> Text=" specular (x white)                       (nmat x 1)"
| |-FieldDecl 0x2ad248a0 <line:969:3, col:13> col:13 mat_shininess 'float *'
| | `-FullComment 0x2ad5a2d0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad5a2a0 <col:37, col:88>
| |     `-TextComment 0x2ad5a270 <col:37, col:88> Text=" shininess coef                           (nmat x 1)"
| |-FieldDecl 0x2ad24930 <line:970:3, col:13> col:13 mat_reflectance 'float *'
| | `-FullComment 0x2ad5a3a0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad5a370 <col:37, col:88>
| |     `-TextComment 0x2ad5a340 <col:37, col:88> Text=" reflectance (0: disable)                 (nmat x 1)"
| |-FieldDecl 0x2ad249c0 <line:971:3, col:13> col:13 mat_metallic 'float *'
| | `-FullComment 0x2ad5a470 <col:37, col:88>
| |   `-ParagraphComment 0x2ad5a440 <col:37, col:88>
| |     `-TextComment 0x2ad5a410 <col:37, col:88> Text=" metallic coef                            (nmat x 1)"
| |-FieldDecl 0x2ad24a50 <line:972:3, col:13> col:13 mat_roughness 'float *'
| | `-FullComment 0x2ad5a540 <col:37, col:88>
| |   `-ParagraphComment 0x2ad5a510 <col:37, col:88>
| |     `-TextComment 0x2ad5a4e0 <col:37, col:88> Text=" roughness coef                           (nmat x 1)"
| |-FieldDecl 0x2ad24ae0 <line:973:3, col:13> col:13 mat_rgba 'float *'
| | `-FullComment 0x2ad5a610 <col:37, col:88>
| |   `-ParagraphComment 0x2ad5a5e0 <col:37, col:88>
| |     `-TextComment 0x2ad5a5b0 <col:37, col:88> Text=" rgba                                     (nmat x 4)"
| |-FieldDecl 0x2ad24ba0 <line:976:3, col:13> col:13 pair_dim 'int *'
| | `-FullComment 0x2ad5a6e0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5a6b0 <col:37, col:89>
| |     `-TextComment 0x2ad5a680 <col:37, col:89> Text=" contact dimensionality                   (npair x 1)"
| |-FieldDecl 0x2ad24c30 <line:977:3, col:13> col:13 pair_geom1 'int *'
| | `-FullComment 0x2ad5a7b0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5a780 <col:37, col:89>
| |     `-TextComment 0x2ad5a750 <col:37, col:89> Text=" id of geom1                              (npair x 1)"
| |-FieldDecl 0x2ad24cc0 <line:978:3, col:13> col:13 pair_geom2 'int *'
| | `-FullComment 0x2ad5a880 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5a850 <col:37, col:89>
| |     `-TextComment 0x2ad5a820 <col:37, col:89> Text=" id of geom2                              (npair x 1)"
| |-FieldDecl 0x2ad25530 <line:979:3, col:13> col:13 pair_signature 'int *'
| | `-FullComment 0x2ad5a9c0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5a990 <col:37, col:89>
| |     |-TextComment 0x2ad5a8f0 <col:37, col:43> Text=" body1 "
| |     |-TextComment 0x2ad5a910 <col:44> Text="<"
| |     |-TextComment 0x2ad5a930 <col:45> Text="<"
| |     `-TextComment 0x2ad5a950 <col:46, col:89> Text=" 16 + body2                      (npair x 1)"
| |-FieldDecl 0x2ad255b8 <line:980:3, col:13> col:13 pair_solref 'mjtNum *'
| | `-FullComment 0x2ad5aa90 <col:37, col:94>
| |   `-ParagraphComment 0x2ad5aa60 <col:37, col:94>
| |     `-TextComment 0x2ad5aa30 <col:37, col:94> Text=" solver reference: contact normal         (npair x mjNREF)"
| |-FieldDecl 0x2ad25648 <line:981:3, col:13> col:13 pair_solreffriction 'mjtNum *'
| | `-FullComment 0x2ad5ab80 <col:37, col:94>
| |   `-ParagraphComment 0x2ad5ab30 <col:37, col:94>
| |     `-TextComment 0x2ad5ab00 <col:37, col:94> Text=" solver reference: contact friction       (npair x mjNREF)"
| |-FieldDecl 0x2ad256d8 <line:982:3, col:13> col:13 pair_solimp 'mjtNum *'
| | `-FullComment 0x2ad5ac50 <col:37, col:94>
| |   `-ParagraphComment 0x2ad5ac20 <col:37, col:94>
| |     `-TextComment 0x2ad5abf0 <col:37, col:94> Text=" solver impedance: contact                (npair x mjNIMP)"
| |-FieldDecl 0x2ad25768 <line:983:3, col:13> col:13 pair_margin 'mjtNum *'
| | `-FullComment 0x2ad5ad70 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5ad40 <col:37, col:89>
| |     |-TextComment 0x2ad5acc0 <col:37, col:59> Text=" detect contact if dist"
| |     |-TextComment 0x2ad5ace0 <col:60, col:66> Text="<margin"
| |     `-TextComment 0x2ad5ad00 <col:67, col:89> Text="            (npair x 1)"
| |-FieldDecl 0x2ad257f8 <line:984:3, col:13> col:13 pair_gap 'mjtNum *'
| | `-FullComment 0x2ad5ae90 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5ae60 <col:37, col:89>
| |     |-TextComment 0x2ad5ade0 <col:37, col:62> Text=" include in solver if dist"
| |     |-TextComment 0x2ad5ae00 <col:63, col:69> Text="<margin"
| |     `-TextComment 0x2ad5ae20 <col:70, col:89> Text="-gap     (npair x 1)"
| |-FieldDecl 0x2ad25888 <line:985:3, col:13> col:13 pair_friction 'mjtNum *'
| | `-FullComment 0x2ad5af60 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5af30 <col:37, col:89>
| |     `-TextComment 0x2ad5af00 <col:37, col:89> Text=" tangent1, 2, spin, roll1, 2              (npair x 5)"
| |-FieldDecl 0x2ad25950 <line:988:3, col:13> col:13 exclude_signature 'int *'
| | `-FullComment 0x2ad5b0a0 <col:37, col:92>
| |   `-ParagraphComment 0x2ad5b070 <col:37, col:92>
| |     |-TextComment 0x2ad5afd0 <col:37, col:43> Text=" body1 "
| |     |-TextComment 0x2ad5aff0 <col:44> Text="<"
| |     |-TextComment 0x2ad5b010 <col:45> Text="<"
| |     `-TextComment 0x2ad5b030 <col:46, col:92> Text=" 16 + body2                      (nexclude x 1)"
| |-FieldDecl 0x2ad25a10 <line:991:3, col:13> col:13 eq_type 'int *'
| | `-FullComment 0x2ad5b170 <col:37, col:87>
| |   `-ParagraphComment 0x2ad5b140 <col:37, col:87>
| |     `-TextComment 0x2ad5b110 <col:37, col:87> Text=" constraint type (mjtEq)                  (neq x 1)"
| |-FieldDecl 0x2ad25aa0 <line:992:3, col:13> col:13 eq_obj1id 'int *'
| | `-FullComment 0x2ad5b240 <col:37, col:87>
| |   `-ParagraphComment 0x2ad5b210 <col:37, col:87>
| |     `-TextComment 0x2ad5b1e0 <col:37, col:87> Text=" id of object 1                           (neq x 1)"
| |-FieldDecl 0x2ad25b30 <line:993:3, col:13> col:13 eq_obj2id 'int *'
| | `-FullComment 0x2ad5b310 <col:37, col:87>
| |   `-ParagraphComment 0x2ad5b2e0 <col:37, col:87>
| |     `-TextComment 0x2ad5b2b0 <col:37, col:87> Text=" id of object 2                           (neq x 1)"
| |-FieldDecl 0x2ad25bc0 <line:994:3, col:13> col:13 eq_objtype 'int *'
| | `-FullComment 0x2ad5b3e0 <col:37, col:87>
| |   `-ParagraphComment 0x2ad5b3b0 <col:37, col:87>
| |     `-TextComment 0x2ad5b380 <col:37, col:87> Text=" type of both objects (mjtObj)            (neq x 1)"
| |-FieldDecl 0x2ad25c48 <line:995:3, col:13> col:13 eq_active0 'mjtByte *'
| | `-FullComment 0x2ad5b4b0 <col:37, col:87>
| |   `-ParagraphComment 0x2ad5b480 <col:37, col:87>
| |     `-TextComment 0x2ad5b450 <col:37, col:87> Text=" initial enable/disable constraint state  (neq x 1)"
| |-FieldDecl 0x2ad25cd8 <line:996:3, col:13> col:13 eq_solref 'mjtNum *'
| | `-FullComment 0x2ad5b580 <col:37, col:92>
| |   `-ParagraphComment 0x2ad5b550 <col:37, col:92>
| |     `-TextComment 0x2ad5b520 <col:37, col:92> Text=" constraint solver reference              (neq x mjNREF)"
| |-FieldDecl 0x2ad25d68 <line:997:3, col:13> col:13 eq_solimp 'mjtNum *'
| | `-FullComment 0x2ad5b650 <col:37, col:92>
| |   `-ParagraphComment 0x2ad5b620 <col:37, col:92>
| |     `-TextComment 0x2ad5b5f0 <col:37, col:92> Text=" constraint solver impedance              (neq x mjNIMP)"
| |-FieldDecl 0x2ad25df8 <line:998:3, col:13> col:13 eq_data 'mjtNum *'
| | `-FullComment 0x2ad5b720 <col:37, col:95>
| |   `-ParagraphComment 0x2ad5b6f0 <col:37, col:95>
| |     `-TextComment 0x2ad5b6c0 <col:37, col:95> Text=" numeric data for constraint              (neq x mjNEQDATA)"
| |-FieldDecl 0x2ad25ec0 <line:1001:3, col:13> col:13 tendon_adr 'int *'
| | `-FullComment 0x2ad5b7f0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5b7c0 <col:37, col:91>
| |     `-TextComment 0x2ad5b790 <col:37, col:91> Text=" address of first object in tendon's path (ntendon x 1)"
| |-FieldDecl 0x2ad25f50 <line:1002:3, col:13> col:13 tendon_num 'int *'
| | `-FullComment 0x2ad5b8c0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5b890 <col:37, col:91>
| |     `-TextComment 0x2ad5b860 <col:37, col:91> Text=" number of objects in tendon's path       (ntendon x 1)"
| |-FieldDecl 0x2ad25fe0 <line:1003:3, col:13> col:13 tendon_matid 'int *'
| | `-FullComment 0x2ad5b990 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5b960 <col:37, col:91>
| |     `-TextComment 0x2ad5b930 <col:37, col:91> Text=" material id for rendering                (ntendon x 1)"
| |-FieldDecl 0x2ad26070 <line:1004:3, col:13> col:13 tendon_group 'int *'
| | `-FullComment 0x2ad5ba60 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5ba30 <col:37, col:91>
| |     `-TextComment 0x2ad5ba00 <col:37, col:91> Text=" group for visibility                     (ntendon x 1)"
| |-FieldDecl 0x2ad260f8 <line:1005:3, col:13> col:13 tendon_limited 'mjtByte *'
| | `-FullComment 0x2ad5bb30 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5bb00 <col:37, col:91>
| |     `-TextComment 0x2ad5bad0 <col:37, col:91> Text=" does tendon have length limits           (ntendon x 1)"
| |-FieldDecl 0x2ad26188 <line:1006:3, col:13> col:13 tendon_width 'mjtNum *'
| | `-FullComment 0x2ad5bc30 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5bc00 <col:37, col:91>
| |     `-TextComment 0x2ad5bbd0 <col:37, col:91> Text=" width for rendering                      (ntendon x 1)"
| |-FieldDecl 0x2ad26218 <line:1007:3, col:13> col:13 tendon_solref_lim 'mjtNum *'
| | `-FullComment 0x2ad5bd00 <col:37, col:96>
| |   `-ParagraphComment 0x2ad5bcd0 <col:37, col:96>
| |     `-TextComment 0x2ad5bca0 <col:37, col:96> Text=" constraint solver reference: limit       (ntendon x mjNREF)"
| |-FieldDecl 0x2ad262a8 <line:1008:3, col:13> col:13 tendon_solimp_lim 'mjtNum *'
| | `-FullComment 0x2ad5bdd0 <col:37, col:96>
| |   `-ParagraphComment 0x2ad5bda0 <col:37, col:96>
| |     `-TextComment 0x2ad5bd70 <col:37, col:96> Text=" constraint solver impedance: limit       (ntendon x mjNIMP)"
| |-FieldDecl 0x2ad26338 <line:1009:3, col:13> col:13 tendon_solref_fri 'mjtNum *'
| | `-FullComment 0x2ad5bea0 <col:37, col:96>
| |   `-ParagraphComment 0x2ad5be70 <col:37, col:96>
| |     `-TextComment 0x2ad5be40 <col:37, col:96> Text=" constraint solver reference: friction    (ntendon x mjNREF)"
| |-FieldDecl 0x2ad263c8 <line:1010:3, col:13> col:13 tendon_solimp_fri 'mjtNum *'
| | `-FullComment 0x2ad5bf70 <col:37, col:96>
| |   `-ParagraphComment 0x2ad5bf40 <col:37, col:96>
| |     `-TextComment 0x2ad5bf10 <col:37, col:96> Text=" constraint solver impedance: friction    (ntendon x mjNIMP)"
| |-FieldDecl 0x2ad26458 <line:1011:3, col:13> col:13 tendon_range 'mjtNum *'
| | `-FullComment 0x2ad5c040 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5c010 <col:37, col:91>
| |     `-TextComment 0x2ad5bfe0 <col:37, col:91> Text=" tendon length limits                     (ntendon x 2)"
| |-FieldDecl 0x2ad26cc0 <line:1012:3, col:13> col:13 tendon_margin 'mjtNum *'
| | `-FullComment 0x2ad5c110 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5c0e0 <col:37, col:91>
| |     `-TextComment 0x2ad5c0b0 <col:37, col:91> Text=" min distance for limit detection         (ntendon x 1)"
| |-FieldDecl 0x2ad26d48 <line:1013:3, col:13> col:13 tendon_stiffness 'mjtNum *'
| | `-FullComment 0x2ad5c1e0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5c1b0 <col:37, col:91>
| |     `-TextComment 0x2ad5c180 <col:37, col:91> Text=" stiffness coefficient                    (ntendon x 1)"
| |-FieldDecl 0x2ad26dd8 <line:1014:3, col:13> col:13 tendon_damping 'mjtNum *'
| | `-FullComment 0x2ad5c2b0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5c280 <col:37, col:91>
| |     `-TextComment 0x2ad5c250 <col:37, col:91> Text=" damping coefficient                      (ntendon x 1)"
| |-FieldDecl 0x2ad26e68 <line:1015:3, col:13> col:13 tendon_frictionloss 'mjtNum *'
| | `-FullComment 0x2ad5c380 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5c350 <col:37, col:91>
| |     `-TextComment 0x2ad5c320 <col:37, col:91> Text=" loss due to friction                     (ntendon x 1)"
| |-FieldDecl 0x2ad26ef8 <line:1016:3, col:13> col:13 tendon_lengthspring 'mjtNum *'
| | `-FullComment 0x2ad5c450 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5c420 <col:37, col:91>
| |     `-TextComment 0x2ad5c3f0 <col:37, col:91> Text=" spring resting length range              (ntendon x 2)"
| |-FieldDecl 0x2ad26f88 <line:1017:3, col:13> col:13 tendon_length0 'mjtNum *'
| | `-FullComment 0x2ad5c520 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5c4f0 <col:37, col:91>
| |     `-TextComment 0x2ad5c4c0 <col:37, col:91> Text=" tendon length in qpos0                   (ntendon x 1)"
| |-FieldDecl 0x2ad27018 <line:1018:3, col:13> col:13 tendon_invweight0 'mjtNum *'
| | `-FullComment 0x2ad5c5f0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5c5c0 <col:37, col:91>
| |     `-TextComment 0x2ad5c590 <col:37, col:91> Text=" inv. weight in qpos0                     (ntendon x 1)"
| |-FieldDecl 0x2ad270a8 <line:1019:3, col:13> col:13 tendon_user 'mjtNum *'
| | `-FullComment 0x2ad5c6c0 <col:37, col:102>
| |   `-ParagraphComment 0x2ad5c690 <col:37, col:102>
| |     `-TextComment 0x2ad5c660 <col:37, col:102> Text=" user data                                (ntendon x nuser_tendon)"
| |-FieldDecl 0x2ad27140 <line:1020:3, col:13> col:13 tendon_rgba 'float *'
| | `-FullComment 0x2ad5c790 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5c760 <col:37, col:91>
| |     `-TextComment 0x2ad5c730 <col:37, col:91> Text=" rgba when material is omitted            (ntendon x 4)"
| |-FieldDecl 0x2ad27200 <line:1023:3, col:13> col:13 wrap_type 'int *'
| | `-FullComment 0x2ad5c860 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5c830 <col:37, col:89>
| |     `-TextComment 0x2ad5c800 <col:37, col:89> Text=" wrap object type (mjtWrap)               (nwrap x 1)"
| |-FieldDecl 0x2ad27290 <line:1024:3, col:13> col:13 wrap_objid 'int *'
| | `-FullComment 0x2ad5c930 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5c900 <col:37, col:89>
| |     `-TextComment 0x2ad5c8d0 <col:37, col:89> Text=" object id: geom, site, joint             (nwrap x 1)"
| |-FieldDecl 0x2ad27318 <line:1025:3, col:13> col:13 wrap_prm 'mjtNum *'
| | `-FullComment 0x2ad5ca00 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5c9d0 <col:37, col:89>
| |     `-TextComment 0x2ad5c9a0 <col:37, col:89> Text=" divisor, joint coef, or site id          (nwrap x 1)"
| |-FieldDecl 0x2ad273e0 <line:1028:3, col:13> col:13 actuator_trntype 'int *'
| | `-FullComment 0x2ad5cad0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5caa0 <col:37, col:86>
| |     `-TextComment 0x2ad5ca70 <col:37, col:86> Text=" transmission type (mjtTrn)               (nu x 1)"
| |-FieldDecl 0x2ad27470 <line:1029:3, col:13> col:13 actuator_dyntype 'int *'
| | `-FullComment 0x2ad5cbb0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5cb70 <col:37, col:86>
| |     `-TextComment 0x2ad5cb40 <col:37, col:86> Text=" dynamics type (mjtDyn)                   (nu x 1)"
| |-FieldDecl 0x2ad27500 <line:1030:3, col:13> col:13 actuator_gaintype 'int *'
| | `-FullComment 0x2ad5cc80 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5cc50 <col:37, col:86>
| |     `-TextComment 0x2ad5cc20 <col:37, col:86> Text=" gain type (mjtGain)                      (nu x 1)"
| |-FieldDecl 0x2ad27590 <line:1031:3, col:13> col:13 actuator_biastype 'int *'
| | `-FullComment 0x2ad5cd50 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5cd20 <col:37, col:86>
| |     `-TextComment 0x2ad5ccf0 <col:37, col:86> Text=" bias type (mjtBias)                      (nu x 1)"
| |-FieldDecl 0x2ad27620 <line:1032:3, col:13> col:13 actuator_trnid 'int *'
| | `-FullComment 0x2ad5ce20 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5cdf0 <col:37, col:86>
| |     `-TextComment 0x2ad5cdc0 <col:37, col:86> Text=" transmission id: joint, tendon, site     (nu x 2)"
| |-FieldDecl 0x2ad276b0 <line:1033:3, col:13> col:13 actuator_actadr 'int *'
| | `-FullComment 0x2ad5cef0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5cec0 <col:37, col:86>
| |     `-TextComment 0x2ad5ce90 <col:37, col:86> Text=" first activation address; -1: stateless  (nu x 1)"
| |-FieldDecl 0x2ad27740 <line:1034:3, col:13> col:13 actuator_actnum 'int *'
| | `-FullComment 0x2ad5cfc0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5cf90 <col:37, col:86>
| |     `-TextComment 0x2ad5cf60 <col:37, col:86> Text=" number of activation variables           (nu x 1)"
| |-FieldDecl 0x2ad277d0 <line:1035:3, col:13> col:13 actuator_group 'int *'
| | `-FullComment 0x2ad5d090 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5d060 <col:37, col:86>
| |     `-TextComment 0x2ad5d030 <col:37, col:86> Text=" group for visibility                     (nu x 1)"
| |-FieldDecl 0x2ad27858 <line:1036:3, col:13> col:13 actuator_ctrllimited 'mjtByte *'
| | `-FullComment 0x2ad5d160 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5d130 <col:37, col:86>
| |     `-TextComment 0x2ad5d100 <col:37, col:86> Text=" is control limited                       (nu x 1)"
| |-FieldDecl 0x2ad278e8 <line:1037:3, col:13> col:13 actuator_forcelimited 'mjtByte *'
| | `-FullComment 0x2ad5d230 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5d200 <col:37, col:86>
| |     `-TextComment 0x2ad5d1d0 <col:37, col:86> Text=" is force limited                         (nu x 1)"
| |-FieldDecl 0x2ad27978 <line:1038:3, col:13> col:13 actuator_actlimited 'mjtByte *'
| | `-FullComment 0x2ad5d300 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5d2d0 <col:37, col:86>
| |     `-TextComment 0x2ad5d2a0 <col:37, col:86> Text=" is activation limited                    (nu x 1)"
| |-FieldDecl 0x2ad27a08 <line:1039:3, col:13> col:13 actuator_dynprm 'mjtNum *'
| | `-FullComment 0x2ad5d3d0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5d3a0 <col:37, col:91>
| |     `-TextComment 0x2ad5d370 <col:37, col:91> Text=" dynamics parameters                      (nu x mjNDYN)"
| |-FieldDecl 0x2ad27a98 <line:1040:3, col:13> col:13 actuator_gainprm 'mjtNum *'
| | `-FullComment 0x2ad5d4a0 <col:37, col:92>
| |   `-ParagraphComment 0x2ad5d470 <col:37, col:92>
| |     `-TextComment 0x2ad5d440 <col:37, col:92> Text=" gain parameters                          (nu x mjNGAIN)"
| |-FieldDecl 0x2ad27b28 <line:1041:3, col:13> col:13 actuator_biasprm 'mjtNum *'
| | `-FullComment 0x2ad5d570 <col:37, col:92>
| |   `-ParagraphComment 0x2ad5d540 <col:37, col:92>
| |     `-TextComment 0x2ad5d510 <col:37, col:92> Text=" bias parameters                          (nu x mjNBIAS)"
| |-FieldDecl 0x2ad27bb8 <line:1042:3, col:13> col:13 actuator_actearly 'mjtByte *'
| | `-FullComment 0x2ad5d640 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5d610 <col:37, col:86>
| |     `-TextComment 0x2ad5d5e0 <col:37, col:86> Text=" step activation before force             (nu x 1)"
| |-FieldDecl 0x2ad27c48 <line:1043:3, col:13> col:13 actuator_ctrlrange 'mjtNum *'
| | `-FullComment 0x2ad5d710 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5d6e0 <col:37, col:86>
| |     `-TextComment 0x2ad5d6b0 <col:37, col:86> Text=" range of controls                        (nu x 2)"
| |-FieldDecl 0x2ad2a198 <line:1044:3, col:13> col:13 actuator_forcerange 'mjtNum *'
| | `-FullComment 0x2ad5d7e0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5d7b0 <col:37, col:86>
| |     `-TextComment 0x2ad5d780 <col:37, col:86> Text=" range of forces                          (nu x 2)"
| |-FieldDecl 0x2ad2a228 <line:1045:3, col:13> col:13 actuator_actrange 'mjtNum *'
| | `-FullComment 0x2ad5d8b0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5d880 <col:37, col:86>
| |     `-TextComment 0x2ad5d850 <col:37, col:86> Text=" range of activations                     (nu x 2)"
| |-FieldDecl 0x2ad2a2b8 <line:1046:3, col:13> col:13 actuator_gear 'mjtNum *'
| | `-FullComment 0x2ad5d980 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5d950 <col:37, col:86>
| |     `-TextComment 0x2ad5d920 <col:37, col:86> Text=" scale length and transmitted force       (nu x 6)"
| |-FieldDecl 0x2ad2a348 <line:1047:3, col:13> col:13 actuator_cranklength 'mjtNum *'
| | `-FullComment 0x2ad5da50 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5da20 <col:37, col:86>
| |     `-TextComment 0x2ad5d9f0 <col:37, col:86> Text=" crank length for slider-crank            (nu x 1)"
| |-FieldDecl 0x2ad2a3d8 <line:1048:3, col:13> col:13 actuator_acc0 'mjtNum *'
| | `-FullComment 0x2ad5db20 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5daf0 <col:37, col:86>
| |     `-TextComment 0x2ad5dac0 <col:37, col:86> Text=" acceleration from unit force in qpos0    (nu x 1)"
| |-FieldDecl 0x2ad2a468 <line:1049:3, col:13> col:13 actuator_length0 'mjtNum *'
| | `-FullComment 0x2ad5dc10 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5dbe0 <col:37, col:86>
| |     `-TextComment 0x2ad5dbb0 <col:37, col:86> Text=" actuator length in qpos0                 (nu x 1)"
| |-FieldDecl 0x2ad2a4f8 <line:1050:3, col:13> col:13 actuator_lengthrange 'mjtNum *'
| | `-FullComment 0x2ad5dce0 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5dcb0 <col:37, col:86>
| |     `-TextComment 0x2ad5dc80 <col:37, col:86> Text=" feasible actuator length range           (nu x 2)"
| |-FieldDecl 0x2ad2a588 <line:1051:3, col:13> col:13 actuator_user 'mjtNum *'
| | `-FullComment 0x2ad5ddb0 <col:37, col:99>
| |   `-ParagraphComment 0x2ad5dd80 <col:37, col:99>
| |     `-TextComment 0x2ad5dd50 <col:37, col:99> Text=" user data                                (nu x nuser_actuator)"
| |-FieldDecl 0x2ad2a620 <line:1052:3, col:13> col:13 actuator_plugin 'int *'
| | `-FullComment 0x2ad5de80 <col:37, col:86>
| |   `-ParagraphComment 0x2ad5de50 <col:37, col:86>
| |     `-TextComment 0x2ad5de20 <col:37, col:86> Text=" plugin instance id; -1: not a plugin     (nu x 1)"
| |-FieldDecl 0x2ad2a6e0 <line:1055:3, col:13> col:13 sensor_type 'int *'
| | `-FullComment 0x2ad5df50 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5df20 <col:37, col:91>
| |     `-TextComment 0x2ad5def0 <col:37, col:91> Text=" sensor type (mjtSensor)                  (nsensor x 1)"
| |-FieldDecl 0x2ad2a770 <line:1056:3, col:13> col:13 sensor_datatype 'int *'
| | `-FullComment 0x2ad5e020 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5dff0 <col:37, col:91>
| |     `-TextComment 0x2ad5dfc0 <col:37, col:91> Text=" numeric data type (mjtDataType)          (nsensor x 1)"
| |-FieldDecl 0x2ad2a800 <line:1057:3, col:13> col:13 sensor_needstage 'int *'
| | `-FullComment 0x2ad5e0f0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e0c0 <col:37, col:91>
| |     `-TextComment 0x2ad5e090 <col:37, col:91> Text=" required compute stage (mjtStage)        (nsensor x 1)"
| |-FieldDecl 0x2ad2a890 <line:1058:3, col:13> col:13 sensor_objtype 'int *'
| | `-FullComment 0x2ad5e1c0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e190 <col:37, col:91>
| |     `-TextComment 0x2ad5e160 <col:37, col:91> Text=" type of sensorized object (mjtObj)       (nsensor x 1)"
| |-FieldDecl 0x2ad2a920 <line:1059:3, col:13> col:13 sensor_objid 'int *'
| | `-FullComment 0x2ad5e290 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e260 <col:37, col:91>
| |     `-TextComment 0x2ad5e230 <col:37, col:91> Text=" id of sensorized object                  (nsensor x 1)"
| |-FieldDecl 0x2ad2a9b0 <line:1060:3, col:13> col:13 sensor_reftype 'int *'
| | `-FullComment 0x2ad5e360 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e330 <col:37, col:91>
| |     `-TextComment 0x2ad5e300 <col:37, col:91> Text=" type of reference frame (mjtObj)         (nsensor x 1)"
| |-FieldDecl 0x2ad2aa40 <line:1061:3, col:13> col:13 sensor_refid 'int *'
| | `-FullComment 0x2ad5e430 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e400 <col:37, col:91>
| |     `-TextComment 0x2ad5e3d0 <col:37, col:91> Text=" id of reference frame; -1: global frame  (nsensor x 1)"
| |-FieldDecl 0x2ad2aad0 <line:1062:3, col:13> col:13 sensor_dim 'int *'
| | `-FullComment 0x2ad5e500 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e4d0 <col:37, col:91>
| |     `-TextComment 0x2ad5e4a0 <col:37, col:91> Text=" number of scalar outputs                 (nsensor x 1)"
| |-FieldDecl 0x2ad2ab60 <line:1063:3, col:13> col:13 sensor_adr 'int *'
| | `-FullComment 0x2ad5e5d0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e5a0 <col:37, col:91>
| |     `-TextComment 0x2ad5e570 <col:37, col:91> Text=" address in sensor array                  (nsensor x 1)"
| |-FieldDecl 0x2ad2abe8 <line:1064:3, col:13> col:13 sensor_cutoff 'mjtNum *'
| | `-FullComment 0x2ad5e6a0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e670 <col:37, col:91>
| |     `-TextComment 0x2ad5e640 <col:37, col:91> Text=" cutoff for real and positive; 0: ignore  (nsensor x 1)"
| |-FieldDecl 0x2ad2ac78 <line:1065:3, col:13> col:13 sensor_noise 'mjtNum *'
| | `-FullComment 0x2ad5e770 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e740 <col:37, col:91>
| |     `-TextComment 0x2ad5e710 <col:37, col:91> Text=" noise standard deviation                 (nsensor x 1)"
| |-FieldDecl 0x2ad2ad08 <line:1066:3, col:13> col:13 sensor_user 'mjtNum *'
| | `-FullComment 0x2ad5e840 <col:37, col:102>
| |   `-ParagraphComment 0x2ad5e810 <col:37, col:102>
| |     `-TextComment 0x2ad5e7e0 <col:37, col:102> Text=" user data                                (nsensor x nuser_sensor)"
| |-FieldDecl 0x2ad2ada0 <line:1067:3, col:13> col:13 sensor_plugin 'int *'
| | `-FullComment 0x2ad5e910 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e8e0 <col:37, col:91>
| |     `-TextComment 0x2ad5e8b0 <col:37, col:91> Text=" plugin instance id; -1: not a plugin     (nsensor x 1)"
| |-FieldDecl 0x2ad2ae60 <line:1070:3, col:13> col:13 plugin 'int *'
| | `-FullComment 0x2ad5e9e0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5e9b0 <col:37, col:91>
| |     `-TextComment 0x2ad5e980 <col:37, col:91> Text=" globally registered plugin slot number   (nplugin x 1)"
| |-FieldDecl 0x2ad2aef0 <line:1071:3, col:13> col:13 plugin_stateadr 'int *'
| | `-FullComment 0x2ad5eab0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5ea80 <col:37, col:91>
| |     `-TextComment 0x2ad5ea50 <col:37, col:91> Text=" address in the plugin state array        (nplugin x 1)"
| |-FieldDecl 0x2ad2af80 <line:1072:3, col:13> col:13 plugin_statenum 'int *'
| | `-FullComment 0x2ad5eb80 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5eb50 <col:37, col:91>
| |     `-TextComment 0x2ad5eb20 <col:37, col:91> Text=" number of states in the plugin instance  (nplugin x 1)"
| |-FieldDecl 0x2ad2b010 <line:1073:3, col:13> col:13 plugin_attr 'char *'
| | `-FullComment 0x2ad5ec60 <col:37, col:95>
| |   `-ParagraphComment 0x2ad5ec30 <col:37, col:95>
| |     `-TextComment 0x2ad5ec00 <col:37, col:95> Text=" config attributes of plugin instances    (npluginattr x 1)"
| |-FieldDecl 0x2ad2b0a0 <line:1074:3, col:13> col:13 plugin_attradr 'int *'
| | `-FullComment 0x2ad5ed30 <col:37, col:91>
| |   `-ParagraphComment 0x2ad5ed00 <col:37, col:91>
| |     `-TextComment 0x2ad5ecd0 <col:37, col:91> Text=" address to each instance's config attrib (nplugin x 1)"
| |-FieldDecl 0x2ad2b170 <line:1077:3, col:13> col:13 numeric_adr 'int *'
| | `-FullComment 0x2ad5ee00 <col:37, col:92>
| |   `-ParagraphComment 0x2ad5edd0 <col:37, col:92>
| |     `-TextComment 0x2ad5eda0 <col:37, col:92> Text=" address of field in numeric_data         (nnumeric x 1)"
| |-FieldDecl 0x2ad2b200 <line:1078:3, col:13> col:13 numeric_size 'int *'
| | `-FullComment 0x2ad5eed0 <col:37, col:92>
| |   `-ParagraphComment 0x2ad5eea0 <col:37, col:92>
| |     `-TextComment 0x2ad5ee70 <col:37, col:92> Text=" size of numeric field                    (nnumeric x 1)"
| |-FieldDecl 0x2ad2b288 <line:1079:3, col:13> col:13 numeric_data 'mjtNum *'
| | `-FullComment 0x2ad5efa0 <col:37, col:96>
| |   `-ParagraphComment 0x2ad5ef70 <col:37, col:96>
| |     `-TextComment 0x2ad5ef40 <col:37, col:96> Text=" array of all numeric fields              (nnumericdata x 1)"
| |-FieldDecl 0x2ad2b350 <line:1082:3, col:13> col:13 text_adr 'int *'
| | `-FullComment 0x2ad5f070 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5f040 <col:37, col:89>
| |     `-TextComment 0x2ad5f010 <col:37, col:89> Text=" address of text in text_data             (ntext x 1)"
| |-FieldDecl 0x2ad2b3e0 <line:1083:3, col:13> col:13 text_size 'int *'
| | `-FullComment 0x2ad5f140 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5f110 <col:37, col:89>
| |     `-TextComment 0x2ad5f0e0 <col:37, col:89> Text=" size of text field (strlen+1)            (ntext x 1)"
| |-FieldDecl 0x2ad2b470 <line:1084:3, col:13> col:13 text_data 'char *'
| | `-FullComment 0x2ad5f210 <col:37, col:93>
| |   `-ParagraphComment 0x2ad5f1e0 <col:37, col:93>
| |     `-TextComment 0x2ad5f1b0 <col:37, col:93> Text=" array of all text fields (0-terminated)  (ntextdata x 1)"
| |-FieldDecl 0x2ad2b530 <line:1087:3, col:13> col:13 tuple_adr 'int *'
| | `-FullComment 0x2ad5f2e0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad5f2b0 <col:37, col:90>
| |     `-TextComment 0x2ad5f280 <col:37, col:90> Text=" address of text in text_data             (ntuple x 1)"
| |-FieldDecl 0x2ad2b5c0 <line:1088:3, col:13> col:13 tuple_size 'int *'
| | `-FullComment 0x2ad5f3b0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad5f380 <col:37, col:90>
| |     `-TextComment 0x2ad5f350 <col:37, col:90> Text=" number of objects in tuple               (ntuple x 1)"
| |-FieldDecl 0x2ad2b650 <line:1089:3, col:13> col:13 tuple_objtype 'int *'
| | `-FullComment 0x2ad5f480 <col:37, col:94>
| |   `-ParagraphComment 0x2ad5f450 <col:37, col:94>
| |     `-TextComment 0x2ad5f420 <col:37, col:94> Text=" array of object types in all tuples      (ntupledata x 1)"
| |-FieldDecl 0x2ad2b6e0 <line:1090:3, col:13> col:13 tuple_objid 'int *'
| | `-FullComment 0x2ad5f550 <col:37, col:94>
| |   `-ParagraphComment 0x2ad5f520 <col:37, col:94>
| |     `-TextComment 0x2ad5f4f0 <col:37, col:94> Text=" array of object ids in all tuples        (ntupledata x 1)"
| |-FieldDecl 0x2ad2b768 <line:1091:3, col:13> col:13 tuple_objprm 'mjtNum *'
| | `-FullComment 0x2ad5f620 <col:37, col:94>
| |   `-ParagraphComment 0x2ad5f5f0 <col:37, col:94>
| |     `-TextComment 0x2ad5f5c0 <col:37, col:94> Text=" array of object params in all tuples     (ntupledata x 1)"
| |-FieldDecl 0x2ad2b828 <line:1094:3, col:13> col:13 key_time 'mjtNum *'
| | `-FullComment 0x2ad5f6f0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad5f6c0 <col:37, col:88>
| |     `-TextComment 0x2ad5f690 <col:37, col:88> Text=" key time                                 (nkey x 1)"
| |-FieldDecl 0x2ad2b8b8 <line:1095:3, col:13> col:13 key_qpos 'mjtNum *'
| | `-FullComment 0x2ad5f7c0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5f790 <col:37, col:89>
| |     `-TextComment 0x2ad5f760 <col:37, col:89> Text=" key position                             (nkey x nq)"
| |-FieldDecl 0x2ad2b948 <line:1096:3, col:13> col:13 key_qvel 'mjtNum *'
| | `-FullComment 0x2ad5f890 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5f860 <col:37, col:89>
| |     `-TextComment 0x2ad5f830 <col:37, col:89> Text=" key velocity                             (nkey x nv)"
| |-FieldDecl 0x2ad2b9d8 <line:1097:3, col:13> col:13 key_act 'mjtNum *'
| | `-FullComment 0x2ad5f960 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5f930 <col:37, col:89>
| |     `-TextComment 0x2ad5f900 <col:37, col:89> Text=" key activation                           (nkey x na)"
| |-FieldDecl 0x2ad2ba68 <line:1098:3, col:13> col:13 key_mpos 'mjtNum *'
| | `-FullComment 0x2ad5fa30 <col:37, col:95>
| |   `-ParagraphComment 0x2ad5fa00 <col:37, col:95>
| |     `-TextComment 0x2ad5f9d0 <col:37, col:95> Text=" key mocap position                       (nkey x nmocap*3)"
| |-FieldDecl 0x2ad2baf8 <line:1099:3, col:13> col:13 key_mquat 'mjtNum *'
| | `-FullComment 0x2ad5fb00 <col:37, col:95>
| |   `-ParagraphComment 0x2ad5fad0 <col:37, col:95>
| |     `-TextComment 0x2ad5faa0 <col:37, col:95> Text=" key mocap quaternion                     (nkey x nmocap*4)"
| |-FieldDecl 0x2ad2bb88 <line:1100:3, col:13> col:13 key_ctrl 'mjtNum *'
| | `-FullComment 0x2ad48aa0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad5fba0 <col:37, col:89>
| |     `-TextComment 0x2ad5fb70 <col:37, col:89> Text=" key control                              (nkey x nu)"
| |-FieldDecl 0x2ad2bc50 <line:1103:3, col:13> col:13 name_bodyadr 'int *'
| | `-FullComment 0x2ad48b70 <col:37, col:89>
| |   `-ParagraphComment 0x2ad48b40 <col:37, col:89>
| |     `-TextComment 0x2ad48b10 <col:37, col:89> Text=" body name pointers                       (nbody x 1)"
| |-FieldDecl 0x2ad2bce0 <line:1104:3, col:13> col:13 name_jntadr 'int *'
| | `-FullComment 0x2ad48c40 <col:37, col:88>
| |   `-ParagraphComment 0x2ad48c10 <col:37, col:88>
| |     `-TextComment 0x2ad48be0 <col:37, col:88> Text=" joint name pointers                      (njnt x 1)"
| |-FieldDecl 0x2ad2bd70 <line:1105:3, col:13> col:13 name_geomadr 'int *'
| | `-FullComment 0x2ad48d10 <col:37, col:89>
| |   `-ParagraphComment 0x2ad48ce0 <col:37, col:89>
| |     `-TextComment 0x2ad48cb0 <col:37, col:89> Text=" geom name pointers                       (ngeom x 1)"
| |-FieldDecl 0x2ad2be00 <line:1106:3, col:13> col:13 name_siteadr 'int *'
| | `-FullComment 0x2ad48de0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad48db0 <col:37, col:89>
| |     `-TextComment 0x2ad48d80 <col:37, col:89> Text=" site name pointers                       (nsite x 1)"
| |-FieldDecl 0x2ad2be90 <line:1107:3, col:13> col:13 name_camadr 'int *'
| | `-FullComment 0x2ad48eb0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad48e80 <col:37, col:88>
| |     `-TextComment 0x2ad48e50 <col:37, col:88> Text=" camera name pointers                     (ncam x 1)"
| |-FieldDecl 0x2ad2bf20 <line:1108:3, col:13> col:13 name_lightadr 'int *'
| | `-FullComment 0x2ad48f80 <col:37, col:90>
| |   `-ParagraphComment 0x2ad48f50 <col:37, col:90>
| |     `-TextComment 0x2ad48f20 <col:37, col:90> Text=" light name pointers                      (nlight x 1)"
| |-FieldDecl 0x2ad2bfb0 <line:1109:3, col:13> col:13 name_flexadr 'int *'
| | `-FullComment 0x2ad49050 <col:37, col:89>
| |   `-ParagraphComment 0x2ad49020 <col:37, col:89>
| |     `-TextComment 0x2ad48ff0 <col:37, col:89> Text=" flex name pointers                       (nflex x 1)"
| |-FieldDecl 0x2ad2c040 <line:1110:3, col:13> col:13 name_meshadr 'int *'
| | `-FullComment 0x2ad49120 <col:37, col:89>
| |   `-ParagraphComment 0x2ad490f0 <col:37, col:89>
| |     `-TextComment 0x2ad490c0 <col:37, col:89> Text=" mesh name pointers                       (nmesh x 1)"
| |-FieldDecl 0x2ad2c0d0 <line:1111:3, col:13> col:13 name_skinadr 'int *'
| | `-FullComment 0x2ad491f0 <col:37, col:89>
| |   `-ParagraphComment 0x2ad491c0 <col:37, col:89>
| |     `-TextComment 0x2ad49190 <col:37, col:89> Text=" skin name pointers                       (nskin x 1)"
| |-FieldDecl 0x2ad2e650 <line:1112:3, col:13> col:13 name_hfieldadr 'int *'
| | `-FullComment 0x2ad492c0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad49290 <col:37, col:91>
| |     `-TextComment 0x2ad49260 <col:37, col:91> Text=" hfield name pointers                     (nhfield x 1)"
| |-FieldDecl 0x2ad2e6e0 <line:1113:3, col:13> col:13 name_texadr 'int *'
| | `-FullComment 0x2ad49390 <col:37, col:88>
| |   `-ParagraphComment 0x2ad49360 <col:37, col:88>
| |     `-TextComment 0x2ad49330 <col:37, col:88> Text=" texture name pointers                    (ntex x 1)"
| |-FieldDecl 0x2ad2e770 <line:1114:3, col:13> col:13 name_matadr 'int *'
| | `-FullComment 0x2ad49460 <col:37, col:88>
| |   `-ParagraphComment 0x2ad49430 <col:37, col:88>
| |     `-TextComment 0x2ad49400 <col:37, col:88> Text=" material name pointers                   (nmat x 1)"
| |-FieldDecl 0x2ad2e800 <line:1115:3, col:13> col:13 name_pairadr 'int *'
| | `-FullComment 0x2ad49530 <col:37, col:89>
| |   `-ParagraphComment 0x2ad49500 <col:37, col:89>
| |     `-TextComment 0x2ad494d0 <col:37, col:89> Text=" geom pair name pointers                  (npair x 1)"
| |-FieldDecl 0x2ad2e890 <line:1116:3, col:13> col:13 name_excludeadr 'int *'
| | `-FullComment 0x2ad49600 <col:37, col:92>
| |   `-ParagraphComment 0x2ad495d0 <col:37, col:92>
| |     `-TextComment 0x2ad495a0 <col:37, col:92> Text=" exclude name pointers                    (nexclude x 1)"
| |-FieldDecl 0x2ad2e920 <line:1117:3, col:13> col:13 name_eqadr 'int *'
| | `-FullComment 0x2ad496d0 <col:37, col:87>
| |   `-ParagraphComment 0x2ad496a0 <col:37, col:87>
| |     `-TextComment 0x2ad49670 <col:37, col:87> Text=" equality constraint name pointers        (neq x 1)"
| |-FieldDecl 0x2ad2e9b0 <line:1118:3, col:13> col:13 name_tendonadr 'int *'
| | `-FullComment 0x2ad497a0 <col:37, col:91>
| |   `-ParagraphComment 0x2ad49770 <col:37, col:91>
| |     `-TextComment 0x2ad49740 <col:37, col:91> Text=" tendon name pointers                     (ntendon x 1)"
| |-FieldDecl 0x2ad2ea40 <line:1119:3, col:13> col:13 name_actuatoradr 'int *'
| | `-FullComment 0x2ad49870 <col:37, col:86>
| |   `-ParagraphComment 0x2ad49840 <col:37, col:86>
| |     `-TextComment 0x2ad49810 <col:37, col:86> Text=" actuator name pointers                   (nu x 1)"
| |-FieldDecl 0x2ad2ead0 <line:1120:3, col:13> col:13 name_sensoradr 'int *'
| | `-FullComment 0x2ad49940 <col:37, col:91>
| |   `-ParagraphComment 0x2ad49910 <col:37, col:91>
| |     `-TextComment 0x2ad498e0 <col:37, col:91> Text=" sensor name pointers                     (nsensor x 1)"
| |-FieldDecl 0x2ad2eb60 <line:1121:3, col:13> col:13 name_numericadr 'int *'
| | `-FullComment 0x2ad49a10 <col:37, col:92>
| |   `-ParagraphComment 0x2ad499e0 <col:37, col:92>
| |     `-TextComment 0x2ad499b0 <col:37, col:92> Text=" numeric name pointers                    (nnumeric x 1)"
| |-FieldDecl 0x2ad2ebf0 <line:1122:3, col:13> col:13 name_textadr 'int *'
| | `-FullComment 0x2ad49b00 <col:37, col:89>
| |   `-ParagraphComment 0x2ad49ad0 <col:37, col:89>
| |     `-TextComment 0x2ad49aa0 <col:37, col:89> Text=" text name pointers                       (ntext x 1)"
| |-FieldDecl 0x2ad2ec80 <line:1123:3, col:13> col:13 name_tupleadr 'int *'
| | `-FullComment 0x2ad49bd0 <col:37, col:90>
| |   `-ParagraphComment 0x2ad49ba0 <col:37, col:90>
| |     `-TextComment 0x2ad49b70 <col:37, col:90> Text=" tuple name pointers                      (ntuple x 1)"
| |-FieldDecl 0x2ad2ed10 <line:1124:3, col:13> col:13 name_keyadr 'int *'
| | `-FullComment 0x2ad49ca0 <col:37, col:88>
| |   `-ParagraphComment 0x2ad49c70 <col:37, col:88>
| |     `-TextComment 0x2ad49c40 <col:37, col:88> Text=" keyframe name pointers                   (nkey x 1)"
| |-FieldDecl 0x2ad2eda0 <line:1125:3, col:13> col:13 name_pluginadr 'int *'
| | `-FullComment 0x2ad49d70 <col:37, col:91>
| |   `-ParagraphComment 0x2ad49d40 <col:37, col:91>
| |     `-TextComment 0x2ad49d10 <col:37, col:91> Text=" plugin instance name pointers            (nplugin x 1)"
| |-FieldDecl 0x2ad2ee30 <line:1126:3, col:13> col:13 names 'char *'
| | `-FullComment 0x2ad49e40 <col:37, col:90>
| |   `-ParagraphComment 0x2ad49e10 <col:37, col:90>
| |     `-TextComment 0x2ad49de0 <col:37, col:90> Text=" names of all objects, 0-terminated       (nnames x 1)"
| |-FieldDecl 0x2ad2eec0 <line:1127:3, col:13> col:13 names_map 'int *'
| | `-FullComment 0x2ad49f10 <col:37, col:94>
| |   `-ParagraphComment 0x2ad49ee0 <col:37, col:94>
| |     `-TextComment 0x2ad49eb0 <col:37, col:94> Text=" internal hash map of names               (nnames_map x 1)"
| `-FieldDecl 0x2ad2ef80 <line:1130:3, col:13> col:13 paths 'char *'
|   `-FullComment 0x2ad49fe0 <col:37, col:90>
|     `-ParagraphComment 0x2ad49fb0 <col:37, col:90>
|       `-TextComment 0x2ad49f80 <col:37, col:90> Text=" paths to assets, 0-terminated            (npaths x 1)"
`-TypedefDecl 0x2ad2f050 <line:1132:1, col:25> col:25 mjModel 'struct mjModel_':'struct mjModel_'
  `-ElaboratedType 0x2ad2f000 'struct mjModel_' sugar
    `-RecordType 0x2ad0bb70 'struct mjModel_'
      `-Record 0x2ad0bae8 'mjModel_'
C_BINDER_MOJO_END_FILE