// Basic header guards 
#ifndef 
// 

	TEST_IFNDEF_NODE_H 
	#define 
	TEST_IFNDEF_NODE_H 
	 
	// Simple define inside an ifndef 
	#ifndef 
	#endif 
	
		SIMPLE_DEFINE 
		#define 
		SIMPLE_DEFINE 
		1 
	#endif 
	 
	// Nested ifndefs 
	#ifndef 
	#endif 
	
		OUTER_GUARD 
		#define 
		OUTER_GUARD 
		 
		    
		#ifndef 
		#endif 
		
			INNER_GUARD 
			    
			#define 
			INNER_GUARD 
			        
			int 
			inner_guard_variable 
			= 
			42 
			; 
			 
			    
		#endif 
		// INNER_GUARD 
		 
		    
		int 
		outer_guard_variable 
		= 
		100 
		; 
		 
		 
	#endif 
// OUTER_GUARD 
 
// Ifdef with code blocks 
#ifndef 
#endif 

	CODE_BLOCK_TEST 
	#define 
	CODE_BLOCK_TEST 
	    
	void 
	test_function() 
	 
	{ 
	 
	        
	int 
	x 
	= 
	10 
	; 
	 
	        
	if 
	(x 
	> 
	5) 
	 
	{ 
	 
	            
	x 
	= 
	5 
	; 
	 
	         
	} 
	 
	     
	} 
	 
#endif 
// CODE_BLOCK_TEST 
 
// Complex guards with comments 
#ifndef 
#endif 

	COMPLEX_GUARD 
	// This is a comment after ifndef 
	#define 
	COMPLEX_GUARD 
	/* This is a comment after define */ 
	 
	    
	// A single line comment inside the guard 
	    
	/* A multi-line comment  
	       inside the guard */ 
	    
	int 
	complex_variable 
	= 
	200 
	; 
	 
	 
#endif 
/* End of complex guard */ 
 
// Conditional compilation 
#ifndef 
#endif 

	PLATFORM_SPECIFIC 
	    
	#ifdef 
	_WIN32 
	        
	#define 
	PLATFORM_SPECIFIC 
	"Windows" 
	    
	#elif 
	defined(__APPLE__) 
	        
	#define 
	PLATFORM_SPECIFIC 
	"MacOS" 
	    
	#else 
	        
	#define 
	PLATFORM_SPECIFIC 
	"Linux" 
	    
	#endif 
#endif 
 
// Include with ifndef guard 
#ifndef 
#endif 

	INCLUDED_STDIO 
	#define 
	INCLUDED_STDIO 
	#include 
	<stdio.h> 
#endif 
 
// Empty ifndef (edge case) 
#ifndef 
#endif 

	EMPTY_GUARD 
	#define 
	EMPTY_GUARD 
#endif 
 
// Typedef inside ifndef 
#ifndef 
#endif 

	MY_TYPE_GUARD 
	#define 
	MY_TYPE_GUARD 
	typedef 
	unsigned 
	int 
	uint_t 
	; 
	 
#endif 
 
#endif 
// TEST_IFNDEF_NODE_H  