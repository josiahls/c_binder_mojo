TokenBundle(row_num=0, col_num=0) // TokenBundle(row_num=0, col_num=2) Basic TokenBundle(row_num=0, col_num=7) type TokenBundle(row_num=0, col_num=11) typedefs 
TokenBundle(row_num=1, col_num=0) typedef TokenBundle(row_num=1, col_num=7) unsigned TokenBundle(row_num=1, col_num=15) int TokenBundle(row_num=1, col_num=18) uint_t TokenBundle(row_num=1, col_num=24) ; TokenBundle(row_num=1, col_num=25)  
TokenBundle(row_num=2, col_num=0) typedef TokenBundle(row_num=2, col_num=7) long TokenBundle(row_num=2, col_num=11) long TokenBundle(row_num=2, col_num=15) int64_t TokenBundle(row_num=2, col_num=22) ; TokenBundle(row_num=2, col_num=23)  
TokenBundle(row_num=3, col_num=0) typedef TokenBundle(row_num=3, col_num=7) unsigned TokenBundle(row_num=3, col_num=15) char TokenBundle(row_num=3, col_num=19) byte_t TokenBundle(row_num=3, col_num=25) ; TokenBundle(row_num=3, col_num=26)  
TokenBundle(row_num=4, col_num=0)  
TokenBundle(row_num=5, col_num=0) // TokenBundle(row_num=5, col_num=2) Enum TokenBundle(row_num=5, col_num=6) typedef 
TokenBundle(row_num=6, col_num=0) typedef TokenBundle(row_num=6, col_num=7) enum TokenBundle(row_num=6, col_num=11) NodeState_ TokenBundle(row_num=6, col_num=21)  TokenBundle(row_num=6, col_num=21) { TokenBundle(row_num=6, col_num=22)  
TokenBundle(row_num=7, col_num=0)  TokenBundle(row_num=7, col_num=0)  TokenBundle(row_num=7, col_num=0)  TokenBundle(row_num=7, col_num=0)  TokenBundle(row_num=7, col_num=0) STATE_NONE TokenBundle(row_num=7, col_num=10) = TokenBundle(row_num=7, col_num=11) 0 TokenBundle(row_num=7, col_num=12) , TokenBundle(row_num=7, col_num=13)  TokenBundle(row_num=7, col_num=13)  TokenBundle(row_num=7, col_num=13)  TokenBundle(row_num=7, col_num=13)  TokenBundle(row_num=7, col_num=13)  TokenBundle(row_num=7, col_num=13)  TokenBundle(row_num=7, col_num=13) // TokenBundle(row_num=7, col_num=15) Initial TokenBundle(row_num=7, col_num=22) state 
TokenBundle(row_num=8, col_num=0)  TokenBundle(row_num=8, col_num=0)  TokenBundle(row_num=8, col_num=0)  TokenBundle(row_num=8, col_num=0)  TokenBundle(row_num=8, col_num=0) STATE_COLLECTING TokenBundle(row_num=8, col_num=16) , TokenBundle(row_num=8, col_num=17)  TokenBundle(row_num=8, col_num=17)  TokenBundle(row_num=8, col_num=17)  TokenBundle(row_num=8, col_num=17)  TokenBundle(row_num=8, col_num=17) // TokenBundle(row_num=8, col_num=19) Collecting TokenBundle(row_num=8, col_num=29) tokens 
TokenBundle(row_num=9, col_num=0)  TokenBundle(row_num=9, col_num=0)  TokenBundle(row_num=9, col_num=0)  TokenBundle(row_num=9, col_num=0)  TokenBundle(row_num=9, col_num=0) STATE_BUILDING TokenBundle(row_num=9, col_num=14) , TokenBundle(row_num=9, col_num=15)  TokenBundle(row_num=9, col_num=15)  TokenBundle(row_num=9, col_num=15)  TokenBundle(row_num=9, col_num=15)  TokenBundle(row_num=9, col_num=15)  TokenBundle(row_num=9, col_num=15)  TokenBundle(row_num=9, col_num=15) // TokenBundle(row_num=9, col_num=17) Building TokenBundle(row_num=9, col_num=25) children 
TokenBundle(row_num=10, col_num=0)  TokenBundle(row_num=10, col_num=0)  TokenBundle(row_num=10, col_num=0)  TokenBundle(row_num=10, col_num=0)  TokenBundle(row_num=10, col_num=0) STATE_COMPLETE TokenBundle(row_num=10, col_num=14)  TokenBundle(row_num=10, col_num=14)  TokenBundle(row_num=10, col_num=14)  TokenBundle(row_num=10, col_num=14)  TokenBundle(row_num=10, col_num=14)  TokenBundle(row_num=10, col_num=14)  TokenBundle(row_num=10, col_num=14) // TokenBundle(row_num=10, col_num=16) Node TokenBundle(row_num=10, col_num=20) is TokenBundle(row_num=10, col_num=22) complete 
TokenBundle(row_num=11, col_num=0)  TokenBundle(row_num=11, col_num=0) } TokenBundle(row_num=11, col_num=1)  TokenBundle(row_num=11, col_num=1) NodeState TokenBundle(row_num=11, col_num=10) ; TokenBundle(row_num=11, col_num=11)  
TokenBundle(row_num=12, col_num=0)  
TokenBundle(row_num=13, col_num=0) // TokenBundle(row_num=13, col_num=2) Struct TokenBundle(row_num=13, col_num=8) typedefs 
TokenBundle(row_num=14, col_num=0) typedef TokenBundle(row_num=14, col_num=7) struct TokenBundle(row_num=14, col_num=13)  TokenBundle(row_num=14, col_num=13) { TokenBundle(row_num=14, col_num=14)  
TokenBundle(row_num=15, col_num=0)  TokenBundle(row_num=15, col_num=0)  TokenBundle(row_num=15, col_num=0)  TokenBundle(row_num=15, col_num=0)  TokenBundle(row_num=15, col_num=0) int TokenBundle(row_num=15, col_num=3) x TokenBundle(row_num=15, col_num=4) ; TokenBundle(row_num=15, col_num=5)  
TokenBundle(row_num=16, col_num=0)  TokenBundle(row_num=16, col_num=0)  TokenBundle(row_num=16, col_num=0)  TokenBundle(row_num=16, col_num=0)  TokenBundle(row_num=16, col_num=0) int TokenBundle(row_num=16, col_num=3) y TokenBundle(row_num=16, col_num=4) ; TokenBundle(row_num=16, col_num=5)  
TokenBundle(row_num=17, col_num=0)  TokenBundle(row_num=17, col_num=0) } TokenBundle(row_num=17, col_num=1)  TokenBundle(row_num=17, col_num=1) Point2D TokenBundle(row_num=17, col_num=8) ; TokenBundle(row_num=17, col_num=9)  
TokenBundle(row_num=18, col_num=0)  
TokenBundle(row_num=19, col_num=0) // TokenBundle(row_num=19, col_num=2) Separate TokenBundle(row_num=19, col_num=10) struct TokenBundle(row_num=19, col_num=16) definition TokenBundle(row_num=19, col_num=26) and TokenBundle(row_num=19, col_num=29) typedef 
TokenBundle(row_num=20, col_num=0) struct TokenBundle(row_num=20, col_num=6) Rectangle_ TokenBundle(row_num=20, col_num=16)  TokenBundle(row_num=20, col_num=16) { TokenBundle(row_num=20, col_num=17)  
TokenBundle(row_num=21, col_num=0)  TokenBundle(row_num=21, col_num=0)  TokenBundle(row_num=21, col_num=0)  TokenBundle(row_num=21, col_num=0)  TokenBundle(row_num=21, col_num=0) Point2D TokenBundle(row_num=21, col_num=7) top_left TokenBundle(row_num=21, col_num=15) ; TokenBundle(row_num=21, col_num=16)  
TokenBundle(row_num=22, col_num=0)  TokenBundle(row_num=22, col_num=0)  TokenBundle(row_num=22, col_num=0)  TokenBundle(row_num=22, col_num=0)  TokenBundle(row_num=22, col_num=0) Point2D TokenBundle(row_num=22, col_num=7) bottom_right TokenBundle(row_num=22, col_num=19) ; TokenBundle(row_num=22, col_num=20)  
TokenBundle(row_num=23, col_num=0)  TokenBundle(row_num=23, col_num=0)  TokenBundle(row_num=23, col_num=0)  TokenBundle(row_num=23, col_num=0)  TokenBundle(row_num=23, col_num=0) int TokenBundle(row_num=23, col_num=3) width TokenBundle(row_num=23, col_num=8) ; TokenBundle(row_num=23, col_num=9)  
TokenBundle(row_num=24, col_num=0)  TokenBundle(row_num=24, col_num=0)  TokenBundle(row_num=24, col_num=0)  TokenBundle(row_num=24, col_num=0)  TokenBundle(row_num=24, col_num=0) int TokenBundle(row_num=24, col_num=3) height TokenBundle(row_num=24, col_num=9) ; TokenBundle(row_num=24, col_num=10)  
TokenBundle(row_num=25, col_num=0)  TokenBundle(row_num=25, col_num=0) } TokenBundle(row_num=25, col_num=1)  TokenBundle(row_num=25, col_num=1) ; TokenBundle(row_num=25, col_num=2)  
TokenBundle(row_num=26, col_num=0) typedef TokenBundle(row_num=26, col_num=7) struct TokenBundle(row_num=26, col_num=13) Rectangle_ TokenBundle(row_num=26, col_num=23) Rectangle TokenBundle(row_num=26, col_num=32) ; TokenBundle(row_num=26, col_num=33)  TokenBundle(row_num=26, col_num=33)  