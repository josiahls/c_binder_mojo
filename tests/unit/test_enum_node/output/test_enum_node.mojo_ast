RootNode(c_current_idx=0, mojo_current_idx=0, c_child_idxs=(1, 2, 10, 11, 29, ...) len=12, mojo_child_idxs=(1, 2, 3, 11, 12, ...) len=13)
PlaceHolderNode(c_current_idx=0, mojo_parent_idx=0, mojo_current_idx=1, c_child_idxs=(1, 2, 10, 11, 29, ...) len=12)
SingleLineCommentNode(c_parent_idx=0, c_current_idx=1, mojo_parent_idx=0, mojo_current_idx=2)
# Basic enum with values 
EnumNode(c_parent_idx=0, c_current_idx=2, mojo_parent_idx=0, mojo_current_idx=3, c_child_idxs=(3), mojo_child_idxs=(4), enum_name=Color)
struct 
Color  : 
ScopeNode(c_parent_idx=2, c_current_idx=3, mojo_parent_idx=3, mojo_current_idx=4, c_child_idxs=(4, 5, 6, 7, 8, 9), mojo_child_idxs=(5, 6, 7, 8, 9, 10))
 
WhitespaceNode(c_parent_idx=3, c_current_idx=4, mojo_parent_idx=4, mojo_current_idx=5, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=3, c_current_idx=5, mojo_parent_idx=4, mojo_current_idx=6)
	alias RED = 0 
WhitespaceNode(c_parent_idx=3, c_current_idx=6, mojo_parent_idx=4, mojo_current_idx=7, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=3, c_current_idx=7, mojo_parent_idx=4, mojo_current_idx=8)
	alias GREEN = 1 
WhitespaceNode(c_parent_idx=3, c_current_idx=8, mojo_parent_idx=4, mojo_current_idx=9, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=3, c_current_idx=9, mojo_parent_idx=4, mojo_current_idx=10)
	alias BLUE = 2 


SingleLineCommentNode(c_parent_idx=0, c_current_idx=10, mojo_parent_idx=0, mojo_current_idx=11)
# Enum with auto-incrementing values 
EnumNode(c_parent_idx=0, c_current_idx=11, mojo_parent_idx=0, mojo_current_idx=12, c_child_idxs=(12), mojo_child_idxs=(13), enum_name=Direction)
struct 
Direction  : 
ScopeNode(c_parent_idx=11, c_current_idx=12, mojo_parent_idx=12, mojo_current_idx=13, c_child_idxs=(13, 14, 15, 16, 17, ...) len=16, mojo_child_idxs=(14, 15, 16, 17, 18, ...) len=16)
 
WhitespaceNode(c_parent_idx=12, c_current_idx=13, mojo_parent_idx=13, mojo_current_idx=14, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=12, c_current_idx=14, mojo_parent_idx=13, mojo_current_idx=15)
	alias NORTH 
WhitespaceNode(c_parent_idx=12, c_current_idx=15, mojo_parent_idx=13, mojo_current_idx=16, n_tokens=2)
  
	SingleLineCommentNode(c_parent_idx=12, c_current_idx=16, mojo_parent_idx=13, mojo_current_idx=17)
	# 0 
WhitespaceNode(c_parent_idx=12, c_current_idx=17, mojo_parent_idx=13, mojo_current_idx=18, n_tokens=4)
    
	EnumFieldNode(c_parent_idx=12, c_current_idx=18, mojo_parent_idx=13, mojo_current_idx=19)
	alias SOUTH 
WhitespaceNode(c_parent_idx=12, c_current_idx=19, mojo_parent_idx=13, mojo_current_idx=20, n_tokens=2)
  
	SingleLineCommentNode(c_parent_idx=12, c_current_idx=20, mojo_parent_idx=13, mojo_current_idx=21)
	# 1 
WhitespaceNode(c_parent_idx=12, c_current_idx=21, mojo_parent_idx=13, mojo_current_idx=22, n_tokens=4)
    
	EnumFieldNode(c_parent_idx=12, c_current_idx=22, mojo_parent_idx=13, mojo_current_idx=23)
	alias EAST 
WhitespaceNode(c_parent_idx=12, c_current_idx=23, mojo_parent_idx=13, mojo_current_idx=24, n_tokens=3)
   
	SingleLineCommentNode(c_parent_idx=12, c_current_idx=24, mojo_parent_idx=13, mojo_current_idx=25)
	# 2 
WhitespaceNode(c_parent_idx=12, c_current_idx=25, mojo_parent_idx=13, mojo_current_idx=26, n_tokens=4)
    
	EnumFieldNode(c_parent_idx=12, c_current_idx=26, mojo_parent_idx=13, mojo_current_idx=27)
	alias WEST 
	SingleLineCommentNode(c_parent_idx=12, c_current_idx=27, mojo_parent_idx=13, mojo_current_idx=28)
	# 3 
WhitespaceNode(c_parent_idx=12, c_current_idx=28, mojo_parent_idx=13, mojo_current_idx=29, n_tokens=1)
 


SingleLineCommentNode(c_parent_idx=0, c_current_idx=29, mojo_parent_idx=0, mojo_current_idx=30)
# Enum with mixed explicit and implicit values 
EnumNode(c_parent_idx=0, c_current_idx=30, mojo_parent_idx=0, mojo_current_idx=31, c_child_idxs=(31), mojo_child_idxs=(32), enum_name=Status)
struct 
Status  : 
ScopeNode(c_parent_idx=30, c_current_idx=31, mojo_parent_idx=31, mojo_current_idx=32, c_child_idxs=(32, 33, 34, 35, 36, ...) len=14, mojo_child_idxs=(33, 34, 35, 36, 37, ...) len=14)
 
WhitespaceNode(c_parent_idx=31, c_current_idx=32, mojo_parent_idx=32, mojo_current_idx=33, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=31, c_current_idx=33, mojo_parent_idx=32, mojo_current_idx=34)
	alias OK = 200 
WhitespaceNode(c_parent_idx=31, c_current_idx=34, mojo_parent_idx=32, mojo_current_idx=35, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=31, c_current_idx=35, mojo_parent_idx=32, mojo_current_idx=36)
	alias NOT_FOUND = 404 
WhitespaceNode(c_parent_idx=31, c_current_idx=36, mojo_parent_idx=32, mojo_current_idx=37, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=31, c_current_idx=37, mojo_parent_idx=32, mojo_current_idx=38)
	alias SERVER_ERROR = 500 
WhitespaceNode(c_parent_idx=31, c_current_idx=38, mojo_parent_idx=32, mojo_current_idx=39, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=31, c_current_idx=39, mojo_parent_idx=32, mojo_current_idx=40)
	alias UNAVAILABLE 
WhitespaceNode(c_parent_idx=31, c_current_idx=40, mojo_parent_idx=32, mojo_current_idx=41, n_tokens=2)
  
	SingleLineCommentNode(c_parent_idx=31, c_current_idx=41, mojo_parent_idx=32, mojo_current_idx=42)
	# 501 
WhitespaceNode(c_parent_idx=31, c_current_idx=42, mojo_parent_idx=32, mojo_current_idx=43, n_tokens=4)
    
	EnumFieldNode(c_parent_idx=31, c_current_idx=43, mojo_parent_idx=32, mojo_current_idx=44)
	alias TIMEOUT 
	SingleLineCommentNode(c_parent_idx=31, c_current_idx=44, mojo_parent_idx=32, mojo_current_idx=45)
	# 502 
WhitespaceNode(c_parent_idx=31, c_current_idx=45, mojo_parent_idx=32, mojo_current_idx=46, n_tokens=1)
 


SingleLineCommentNode(c_parent_idx=0, c_current_idx=46, mojo_parent_idx=0, mojo_current_idx=47)
# Enum with name but no values  ( empty enum )  
EnumNode(c_parent_idx=0, c_current_idx=47, mojo_parent_idx=0, mojo_current_idx=48, c_child_idxs=(48), mojo_child_idxs=(49), enum_name=Empty)
struct 
Empty  : 
ScopeNode(c_parent_idx=47, c_current_idx=48, mojo_parent_idx=48, mojo_current_idx=49, c_child_idxs=(49), mojo_child_idxs=(50))
 
WhitespaceNode(c_parent_idx=48, c_current_idx=49, mojo_parent_idx=49, mojo_current_idx=50, n_tokens=2)
 
 


SingleLineCommentNode(c_parent_idx=0, c_current_idx=50, mojo_parent_idx=0, mojo_current_idx=51)
# Enum with hex values and comments 
EnumNode(c_parent_idx=0, c_current_idx=51, mojo_parent_idx=0, mojo_current_idx=52, c_child_idxs=(52), mojo_child_idxs=(53), enum_name=Flags)
struct 
Flags  : 
ScopeNode(c_parent_idx=51, c_current_idx=52, mojo_parent_idx=52, mojo_current_idx=53, c_child_idxs=(53, 54, 55, 56, 57, ...) len=12, mojo_child_idxs=(54, 55, 56, 57, 58, ...) len=12)
 
WhitespaceNode(c_parent_idx=52, c_current_idx=53, mojo_parent_idx=53, mojo_current_idx=54, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=52, c_current_idx=54, mojo_parent_idx=53, mojo_current_idx=55)
	alias READ = 0x01 
WhitespaceNode(c_parent_idx=52, c_current_idx=55, mojo_parent_idx=53, mojo_current_idx=56, n_tokens=2)
  
	SingleLineCommentNode(c_parent_idx=52, c_current_idx=56, mojo_parent_idx=53, mojo_current_idx=57)
	# Read permission 
WhitespaceNode(c_parent_idx=52, c_current_idx=57, mojo_parent_idx=53, mojo_current_idx=58, n_tokens=4)
    
	EnumFieldNode(c_parent_idx=52, c_current_idx=58, mojo_parent_idx=53, mojo_current_idx=59)
	alias WRITE = 0x02 
WhitespaceNode(c_parent_idx=52, c_current_idx=59, mojo_parent_idx=53, mojo_current_idx=60, n_tokens=2)
  
	SingleLineCommentNode(c_parent_idx=52, c_current_idx=60, mojo_parent_idx=53, mojo_current_idx=61)
	# Write permission 
WhitespaceNode(c_parent_idx=52, c_current_idx=61, mojo_parent_idx=53, mojo_current_idx=62, n_tokens=4)
    
	EnumFieldNode(c_parent_idx=52, c_current_idx=62, mojo_parent_idx=53, mojo_current_idx=63)
	alias EXECUTE = 0x04 
	SingleLineCommentNode(c_parent_idx=52, c_current_idx=63, mojo_parent_idx=53, mojo_current_idx=64)
	# Execute permission 
WhitespaceNode(c_parent_idx=52, c_current_idx=64, mojo_parent_idx=53, mojo_current_idx=65, n_tokens=1)
 


SingleLineCommentNode(c_parent_idx=0, c_current_idx=65, mojo_parent_idx=0, mojo_current_idx=66)
# Enum with byte values 
EnumNode(c_parent_idx=0, c_current_idx=66, mojo_parent_idx=0, mojo_current_idx=67, c_child_idxs=(67), mojo_child_idxs=(68), enum_name=ByteValues)ScopeNode(c_parent_idx=66, c_current_idx=67, mojo_parent_idx=67, mojo_current_idx=68, c_child_idxs=(68, 69, 70, 71, 72, ...) len=8, mojo_child_idxs=(69, 70, 71, 72, 73, ...) len=8)WhitespaceNode(c_parent_idx=67, c_current_idx=68, mojo_parent_idx=68, mojo_current_idx=69, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=67, c_current_idx=69, mojo_parent_idx=68, mojo_current_idx=70)
	alias BYTE_0 = 0 << 0 
WhitespaceNode(c_parent_idx=67, c_current_idx=70, mojo_parent_idx=68, mojo_current_idx=71, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=67, c_current_idx=71, mojo_parent_idx=68, mojo_current_idx=72)
	alias BYTE_1 = 0 << 1 
WhitespaceNode(c_parent_idx=67, c_current_idx=72, mojo_parent_idx=68, mojo_current_idx=73, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=67, c_current_idx=73, mojo_parent_idx=68, mojo_current_idx=74)
	alias BYTE_2 = 0 << 2 
WhitespaceNode(c_parent_idx=67, c_current_idx=74, mojo_parent_idx=68, mojo_current_idx=75, n_tokens=5)
 
    
	EnumFieldNode(c_parent_idx=67, c_current_idx=75, mojo_parent_idx=68, mojo_current_idx=76)


