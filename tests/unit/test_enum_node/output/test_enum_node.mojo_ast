RootNode(c_current_idx=0, mojo_current_idx=0, c_child_idxs=(1, 2, 3, 8, 9, ...) len=19, mojo_child_idxs=(1, 2, 3, 4, 9, ...) len=19)
PlaceHolderNode(c_current_idx=0, mojo_parent_idx=0, mojo_current_idx=1, c_child_idxs=(1, 2, 3, 8, 9, ...) len=19, node_state=4 (COMPLETED))
SingleLineCommentNode(c_parent_idx=0, c_current_idx=1, mojo_parent_idx=0, mojo_current_idx=2)
# Basic enum with values 
WhitespaceNode(c_parent_idx=0, c_current_idx=2, mojo_parent_idx=0, mojo_current_idx=3, n_tokens=1)
C_BINDER_MOJO_NEWLINE 
EnumNode(c_parent_idx=0, c_current_idx=3, mojo_parent_idx=0, mojo_current_idx=4, c_child_idxs=(4), mojo_child_idxs=(5), enum_name=Color)
struct Color : 
ScopeNode(c_parent_idx=3, c_current_idx=4, mojo_parent_idx=4, mojo_current_idx=5, c_child_idxs=(5, 6, 7), mojo_child_idxs=(6, 7, 8))
 
EnumFieldNode(c_parent_idx=4, c_current_idx=5, mojo_parent_idx=5, mojo_current_idx=6, RED)
alias RED = 0 
EnumFieldNode(c_parent_idx=4, c_current_idx=6, mojo_parent_idx=5, mojo_current_idx=7, GREEN)
alias GREEN = 1 
EnumFieldNode(c_parent_idx=4, c_current_idx=7, mojo_parent_idx=5, mojo_current_idx=8, BLUE)
alias BLUE = -1 


SingleLineCommentNode(c_parent_idx=0, c_current_idx=8, mojo_parent_idx=0, mojo_current_idx=9)
# Enum with auto-incrementing values 
WhitespaceNode(c_parent_idx=0, c_current_idx=9, mojo_parent_idx=0, mojo_current_idx=10, n_tokens=1)
C_BINDER_MOJO_NEWLINE 
EnumNode(c_parent_idx=0, c_current_idx=10, mojo_parent_idx=0, mojo_current_idx=11, c_child_idxs=(11), mojo_child_idxs=(12), enum_name=Direction)
struct Direction : 
ScopeNode(c_parent_idx=10, c_current_idx=11, mojo_parent_idx=11, mojo_current_idx=12, c_child_idxs=(12, 13, 14, 15, 16, ...) len=8, mojo_child_idxs=(13, 14, 15, 16, 17, ...) len=8)
 
EnumFieldNode(c_parent_idx=11, c_current_idx=12, mojo_parent_idx=12, mojo_current_idx=13, NORTH)
alias NORTH = 0 
SingleLineCommentNode(c_parent_idx=11, c_current_idx=13, mojo_parent_idx=12, mojo_current_idx=14)
# 0 
EnumFieldNode(c_parent_idx=11, c_current_idx=14, mojo_parent_idx=12, mojo_current_idx=15, SOUTH)
alias SOUTH = 1 
SingleLineCommentNode(c_parent_idx=11, c_current_idx=15, mojo_parent_idx=12, mojo_current_idx=16)
# 1 
EnumFieldNode(c_parent_idx=11, c_current_idx=16, mojo_parent_idx=12, mojo_current_idx=17, EAST)
alias EAST = 2 
SingleLineCommentNode(c_parent_idx=11, c_current_idx=17, mojo_parent_idx=12, mojo_current_idx=18)
# 2 
EnumFieldNode(c_parent_idx=11, c_current_idx=18, mojo_parent_idx=12, mojo_current_idx=19, WEST)
alias WEST = 3 
SingleLineCommentNode(c_parent_idx=11, c_current_idx=19, mojo_parent_idx=12, mojo_current_idx=20)
# 3 


SingleLineCommentNode(c_parent_idx=0, c_current_idx=20, mojo_parent_idx=0, mojo_current_idx=21)
# Enum with mixed explicit and implicit values 
WhitespaceNode(c_parent_idx=0, c_current_idx=21, mojo_parent_idx=0, mojo_current_idx=22, n_tokens=1)
C_BINDER_MOJO_NEWLINE 
EnumNode(c_parent_idx=0, c_current_idx=22, mojo_parent_idx=0, mojo_current_idx=23, c_child_idxs=(23), mojo_child_idxs=(24), enum_name=Status)
struct Status : 
ScopeNode(c_parent_idx=22, c_current_idx=23, mojo_parent_idx=23, mojo_current_idx=24, c_child_idxs=(24, 25, 26, 27, 28, ...) len=7, mojo_child_idxs=(25, 26, 27, 28, 29, ...) len=7)
 
EnumFieldNode(c_parent_idx=23, c_current_idx=24, mojo_parent_idx=24, mojo_current_idx=25, OK)
alias OK = 200 
EnumFieldNode(c_parent_idx=23, c_current_idx=25, mojo_parent_idx=24, mojo_current_idx=26, NOT_FOUND)
alias NOT_FOUND = 404 
EnumFieldNode(c_parent_idx=23, c_current_idx=26, mojo_parent_idx=24, mojo_current_idx=27, SERVER_ERROR)
alias SERVER_ERROR = 500 
EnumFieldNode(c_parent_idx=23, c_current_idx=27, mojo_parent_idx=24, mojo_current_idx=28, UNAVAILABLE)
alias UNAVAILABLE = 501 
SingleLineCommentNode(c_parent_idx=23, c_current_idx=28, mojo_parent_idx=24, mojo_current_idx=29)
# 501 
EnumFieldNode(c_parent_idx=23, c_current_idx=29, mojo_parent_idx=24, mojo_current_idx=30, TIMEOUT)
alias TIMEOUT = 502 
SingleLineCommentNode(c_parent_idx=23, c_current_idx=30, mojo_parent_idx=24, mojo_current_idx=31)
# 502 


SingleLineCommentNode(c_parent_idx=0, c_current_idx=31, mojo_parent_idx=0, mojo_current_idx=32)
# Enum with name but no values  ( empty enum )  
WhitespaceNode(c_parent_idx=0, c_current_idx=32, mojo_parent_idx=0, mojo_current_idx=33, n_tokens=1)
C_BINDER_MOJO_NEWLINE 
EnumNode(c_parent_idx=0, c_current_idx=33, mojo_parent_idx=0, mojo_current_idx=34, c_child_idxs=(34), mojo_child_idxs=(35), enum_name=Empty)
struct Empty : pass 
ScopeNode(c_parent_idx=33, c_current_idx=34, mojo_parent_idx=34, mojo_current_idx=35)
 
pass 

SingleLineCommentNode(c_parent_idx=0, c_current_idx=35, mojo_parent_idx=0, mojo_current_idx=36)
# Enum with hex values and comments 
WhitespaceNode(c_parent_idx=0, c_current_idx=36, mojo_parent_idx=0, mojo_current_idx=37, n_tokens=1)
C_BINDER_MOJO_NEWLINE 
EnumNode(c_parent_idx=0, c_current_idx=37, mojo_parent_idx=0, mojo_current_idx=38, c_child_idxs=(38), mojo_child_idxs=(39), enum_name=Flags)
struct Flags : 
ScopeNode(c_parent_idx=37, c_current_idx=38, mojo_parent_idx=38, mojo_current_idx=39, c_child_idxs=(39, 40, 41, 42, 43, 44), mojo_child_idxs=(40, 41, 42, 43, 44, 45))
 
EnumFieldNode(c_parent_idx=38, c_current_idx=39, mojo_parent_idx=39, mojo_current_idx=40, READ)
alias READ = 1 
SingleLineCommentNode(c_parent_idx=38, c_current_idx=40, mojo_parent_idx=39, mojo_current_idx=41)
# Read permission 
EnumFieldNode(c_parent_idx=38, c_current_idx=41, mojo_parent_idx=39, mojo_current_idx=42, WRITE)
alias WRITE = 2 
SingleLineCommentNode(c_parent_idx=38, c_current_idx=42, mojo_parent_idx=39, mojo_current_idx=43)
# Write permission 
EnumFieldNode(c_parent_idx=38, c_current_idx=43, mojo_parent_idx=39, mojo_current_idx=44, EXECUTE)
alias EXECUTE = 4 
SingleLineCommentNode(c_parent_idx=38, c_current_idx=44, mojo_parent_idx=39, mojo_current_idx=45)
# Execute permission 


SingleLineCommentNode(c_parent_idx=0, c_current_idx=45, mojo_parent_idx=0, mojo_current_idx=46)
# Enum with byte values 
WhitespaceNode(c_parent_idx=0, c_current_idx=46, mojo_parent_idx=0, mojo_current_idx=47, n_tokens=1)
C_BINDER_MOJO_NEWLINE 
EnumNode(c_parent_idx=0, c_current_idx=47, mojo_parent_idx=0, mojo_current_idx=48, c_child_idxs=(48), mojo_child_idxs=(49), enum_name=ByteValues)
struct ByteValues : 
ScopeNode(c_parent_idx=47, c_current_idx=48, mojo_parent_idx=48, mojo_current_idx=49, c_child_idxs=(49, 50, 51, 52), mojo_child_idxs=(50, 51, 52, 53))
 
EnumFieldNode(c_parent_idx=48, c_current_idx=49, mojo_parent_idx=49, mojo_current_idx=50, BYTE_0)
alias BYTE_0 = 1 
EnumFieldNode(c_parent_idx=48, c_current_idx=50, mojo_parent_idx=49, mojo_current_idx=51, BYTE_1)
alias BYTE_1 = 2 
EnumFieldNode(c_parent_idx=48, c_current_idx=51, mojo_parent_idx=49, mojo_current_idx=52, BYTE_2)
alias BYTE_2 = 4 
EnumFieldNode(c_parent_idx=48, c_current_idx=52, mojo_parent_idx=49, mojo_current_idx=53, BYTE_3)
alias BYTE_3 = -1 


