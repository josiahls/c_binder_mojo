RootNode(c_current_idx=0, c_child_idxs=(1, 2, 3, 4, 5, ...) len=36)
	SingleLineCommentNode(c_parent_idx=0, c_current_idx=1)
	// Basic type typedefs

	TypedefNode(c_parent_idx=0, c_current_idx=3, node_state=4 (COMPLETED))
	typedef unsigned int uint_t
	TypedefNode(c_parent_idx=0, c_current_idx=5, node_state=4 (COMPLETED))
	typedef long long int64_t
	TypedefNode(c_parent_idx=0, c_current_idx=7, node_state=4 (COMPLETED))
	typedef unsigned char byte_t
	SingleLineCommentNode(c_parent_idx=0, c_current_idx=9)
	// Enum typedef

	TypedefNode(c_parent_idx=0, c_current_idx=11, c_child_idxs=(12), node_state=4 (COMPLETED), type='NodeState')
	typedef
	EnumNode(c_parent_idx=11, c_current_idx=12, c_child_idxs=(13), node_state=4 (COMPLETED), name='NodeState_')
	enum NodeState_
	ScopeNode(c_parent_idx=12, c_current_idx=13, c_child_idxs=(14, 15, 16, 17, 18, ...) len=8, node_state=4 (COMPLETED), n_tokens=1, n_tokens_tail=1, parent_type='EnumNode')
	{
	
		EnumFieldNode(c_parent_idx=13, c_current_idx=14, node_state=4 (COMPLETED), field_name='STATE_NONE', value='0')
		STATE_NONE  =  0 ,

		SingleLineCommentNode(c_parent_idx=13, c_current_idx=15)
		// Initial state

		EnumFieldNode(c_parent_idx=13, c_current_idx=16, node_state=4 (COMPLETED), field_name='STATE_COLLECTING')
		STATE_COLLECTING ,

		SingleLineCommentNode(c_parent_idx=13, c_current_idx=17)
		// Collecting tokens

		EnumFieldNode(c_parent_idx=13, c_current_idx=18, node_state=4 (COMPLETED), field_name='STATE_BUILDING')
		STATE_BUILDING ,

		SingleLineCommentNode(c_parent_idx=13, c_current_idx=19)
		// Building children

		EnumFieldNode(c_parent_idx=13, c_current_idx=20, node_state=4 (COMPLETED), field_name='STATE_COMPLETE')
		STATE_COMPLETE      

		SingleLineCommentNode(c_parent_idx=13, c_current_idx=21)
		// Node is complete

	}
NodeState
	SingleLineCommentNode(c_parent_idx=0, c_current_idx=23)
	// Test preprocessor scoping with typedef

	MacroIfNDefNode(c_parent_idx=0, c_current_idx=25, c_child_idxs=(26, 27, 28, 29, 30, ...) len=14, node_state=4 (COMPLETED))
	#ifndef MY_TYPEDEF_TEST
	MacroDefineNode(c_parent_idx=25, c_current_idx=27, node_state=4 (COMPLETED), macro='MY_TYPEDEF_TEST')
	#define MY_TYPEDEF_TEST
	SingleLineCommentNode(c_parent_idx=25, c_current_idx=29)
	// This struct should not collect the typedefs that follow

	StructNode(c_parent_idx=25, c_current_idx=31, c_child_idxs=(32), node_state=4 (COMPLETED), name='TestStruct')
	struct TestStruct
	ScopeNode(c_parent_idx=31, c_current_idx=32, c_child_idxs=(33), node_state=4 (COMPLETED), n_tokens=1, n_tokens_tail=1, parent_type='StructNode')
	{
	
		StructFieldNode(c_parent_idx=32, c_current_idx=33, node_state=4 (COMPLETED), field_type='int', field_name='value')
		int value ;<C_BINDER_MOJO_NEWLINE>		
	}; <C_BINDER_MOJO_NEWLINE>	
	TypedefNode(c_parent_idx=25, c_current_idx=34, node_state=4 (COMPLETED))
	typedef int integer_t
	SingleLineCommentNode(c_parent_idx=25, c_current_idx=36)
	// Should be independent node

	TypedefNode(c_parent_idx=25, c_current_idx=38, node_state=4 (COMPLETED))
	typedef float float_t
	SingleLineCommentNode(c_parent_idx=25, c_current_idx=40)
	// Should be independent node
#endif
	SingleLineCommentNode(c_parent_idx=0, c_current_idx=43)
	// MY_TYPEDEF_TEST

	SingleLineCommentNode(c_parent_idx=0, c_current_idx=45)
	// Struct typedefs - testing nested typedef handling

	TypedefNode(c_parent_idx=0, c_current_idx=47, c_child_idxs=(48), node_state=4 (COMPLETED), type='Point2D')
	typedef
	StructNode(c_parent_idx=47, c_current_idx=48, c_child_idxs=(49), node_state=4 (COMPLETED))
	struct
	ScopeNode(c_parent_idx=48, c_current_idx=49, c_child_idxs=(50, 51), node_state=4 (COMPLETED), n_tokens=1, n_tokens_tail=1, parent_type='StructNode')
	{
	
		StructFieldNode(c_parent_idx=49, c_current_idx=50, node_state=4 (COMPLETED), field_type='int', field_name='x')
		int x ;<C_BINDER_MOJO_NEWLINE>		
		StructFieldNode(c_parent_idx=49, c_current_idx=51, node_state=4 (COMPLETED), field_type='int', field_name='y')
		int y ;<C_BINDER_MOJO_NEWLINE>		
	}Point2D
	SingleLineCommentNode(c_parent_idx=0, c_current_idx=53)
	// Test typedef and struct interaction

	StructNode(c_parent_idx=0, c_current_idx=55, c_child_idxs=(56), node_state=4 (COMPLETED), name='Rectangle_')
	struct Rectangle_
	ScopeNode(c_parent_idx=55, c_current_idx=56, c_child_idxs=(57, 58, 59, 60), node_state=4 (COMPLETED), n_tokens=1, n_tokens_tail=1, parent_type='StructNode')
	{
	
		StructFieldNode(c_parent_idx=56, c_current_idx=57, node_state=4 (COMPLETED), field_type='Point2D', field_name='top_left')
		Point2D top_left ;<C_BINDER_MOJO_NEWLINE>		
		StructFieldNode(c_parent_idx=56, c_current_idx=58, node_state=4 (COMPLETED), field_type='Point2D', field_name='bottom_right')
		Point2D bottom_right ;<C_BINDER_MOJO_NEWLINE>		
		StructFieldNode(c_parent_idx=56, c_current_idx=59, node_state=4 (COMPLETED), field_type='int', field_name='width')
		int width ;<C_BINDER_MOJO_NEWLINE>		
		StructFieldNode(c_parent_idx=56, c_current_idx=60, node_state=4 (COMPLETED), field_type='int', field_name='height')
		int height ;<C_BINDER_MOJO_NEWLINE>		
	}; <C_BINDER_MOJO_NEWLINE>	
	SingleLineCommentNode(c_parent_idx=0, c_current_idx=61)
	// This typedef should be independent of the struct above

	TypedefNode(c_parent_idx=0, c_current_idx=63, c_child_idxs=(64), node_state=4 (COMPLETED), type='Rectangle')
	typedef
	StructNode(c_parent_idx=63, c_current_idx=64, node_state=4 (COMPLETED), name='Rectangle_')
	struct Rectangle_Rectangle
	SingleLineCommentNode(c_parent_idx=0, c_current_idx=66)
	// Test preprocessor and typedef interaction

	MacroIfNDefNode(c_parent_idx=0, c_current_idx=68, c_child_idxs=(69, 70, 71, 72, 76, ...) len=11, node_state=4 (COMPLETED))
	#ifndef NESTED_TEST
	MacroDefineNode(c_parent_idx=68, c_current_idx=70, node_state=4 (COMPLETED), macro='NESTED_TEST')
	#define NESTED_TEST
	TypedefNode(c_parent_idx=68, c_current_idx=72, c_child_idxs=(73), node_state=4 (COMPLETED), type='NestedStruct')
	typedef
	StructNode(c_parent_idx=72, c_current_idx=73, c_child_idxs=(74), node_state=4 (COMPLETED))
	struct
	ScopeNode(c_parent_idx=73, c_current_idx=74, c_child_idxs=(75), node_state=4 (COMPLETED), n_tokens=1, n_tokens_tail=1, parent_type='StructNode')
	{
	
		StructFieldNode(c_parent_idx=74, c_current_idx=75, node_state=4 (COMPLETED), field_type='int', field_name='data')
		int data ;<C_BINDER_MOJO_NEWLINE>		
	}NestedStruct
	SingleLineCommentNode(c_parent_idx=68, c_current_idx=77)
	// This typedef should not be affected by the ifdef

	TypedefNode(c_parent_idx=68, c_current_idx=79, node_state=4 (COMPLETED))
	typedef NestedStruct* NestedPtr
	SingleLineCommentNode(c_parent_idx=68, c_current_idx=81)
	// This should be an independent typedef
#endif
	SingleLineCommentNode(c_parent_idx=0, c_current_idx=84)
	// NESTED_TEST 

	EndFileNode(c_parent_idx=0, c_current_idx=86)
	C_BINDER_MOJO_END_FILE